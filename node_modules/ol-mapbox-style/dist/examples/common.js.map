{"version":3,"file":"common.js","mappings":"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","sources":["webpack://ol-mapbox-style/webpack/runtime/chunk loaded","webpack://ol-mapbox-style/./node_modules/@mapbox/point-geometry/index.js","webpack://ol-mapbox-style/./node_modules/@mapbox/unitbezier/index.js","webpack://ol-mapbox-style/./node_modules/csscolorparser/csscolorparser.js","webpack://ol-mapbox-style/./node_modules/ieee754/index.js","webpack://ol-mapbox-style/./node_modules/mapbox-to-css-font/index.js","webpack://ol-mapbox-style/./node_modules/nanoassert/index.js","webpack://ol-mapbox-style/./node_modules/pbf/index.js","webpack://ol-mapbox-style/./node_modules/rbush/rbush.min.js","webpack://ol-mapbox-style/./node_modules/ol/AssertionError.js","webpack://ol-mapbox-style/./node_modules/ol/Collection.js","webpack://ol-mapbox-style/./node_modules/ol/CollectionEventType.js","webpack://ol-mapbox-style/./node_modules/ol/Disposable.js","webpack://ol-mapbox-style/./node_modules/ol/Image.js","webpack://ol-mapbox-style/./node_modules/ol/ImageBase.js","webpack://ol-mapbox-style/./node_modules/ol/ImageState.js","webpack://ol-mapbox-style/./node_modules/ol/ImageTile.js","webpack://ol-mapbox-style/./node_modules/ol/renderer/Map.js","webpack://ol-mapbox-style/./node_modules/ol/renderer/Composite.js","webpack://ol-mapbox-style/./node_modules/ol/MapEvent.js","webpack://ol-mapbox-style/./node_modules/ol/MapBrowserEvent.js","webpack://ol-mapbox-style/./node_modules/ol/MapBrowserEventType.js","webpack://ol-mapbox-style/./node_modules/ol/pointer/EventType.js","webpack://ol-mapbox-style/./node_modules/ol/MapBrowserEventHandler.js","webpack://ol-mapbox-style/./node_modules/ol/MapEventType.js","webpack://ol-mapbox-style/./node_modules/ol/MapProperty.js","webpack://ol-mapbox-style/./node_modules/ol/control/Control.js","webpack://ol-mapbox-style/./node_modules/ol/control/Attribution.js","webpack://ol-mapbox-style/./node_modules/ol/control/Rotate.js","webpack://ol-mapbox-style/./node_modules/ol/control/Zoom.js","webpack://ol-mapbox-style/./node_modules/ol/interaction/Property.js","webpack://ol-mapbox-style/./node_modules/ol/interaction/Interaction.js","webpack://ol-mapbox-style/./node_modules/ol/interaction/DoubleClickZoom.js","webpack://ol-mapbox-style/./node_modules/ol/interaction/Pointer.js","webpack://ol-mapbox-style/./node_modules/ol/events/condition.js","webpack://ol-mapbox-style/./node_modules/ol/interaction/DragPan.js","webpack://ol-mapbox-style/./node_modules/ol/interaction/DragRotate.js","webpack://ol-mapbox-style/./node_modules/ol/render/Box.js","webpack://ol-mapbox-style/./node_modules/ol/interaction/DragBox.js","webpack://ol-mapbox-style/./node_modules/ol/interaction/DragZoom.js","webpack://ol-mapbox-style/./node_modules/ol/interaction/KeyboardPan.js","webpack://ol-mapbox-style/./node_modules/ol/events/KeyCode.js","webpack://ol-mapbox-style/./node_modules/ol/interaction/KeyboardZoom.js","webpack://ol-mapbox-style/./node_modules/ol/Kinetic.js","webpack://ol-mapbox-style/./node_modules/ol/interaction/MouseWheelZoom.js","webpack://ol-mapbox-style/./node_modules/ol/interaction/PinchRotate.js","webpack://ol-mapbox-style/./node_modules/ol/interaction/PinchZoom.js","webpack://ol-mapbox-style/./node_modules/ol/Map.js","webpack://ol-mapbox-style/./node_modules/ol/control/defaults.js","webpack://ol-mapbox-style/./node_modules/ol/interaction/defaults.js","webpack://ol-mapbox-style/./node_modules/ol/Object.js","webpack://ol-mapbox-style/./node_modules/ol/ObjectEventType.js","webpack://ol-mapbox-style/./node_modules/ol/Observable.js","webpack://ol-mapbox-style/./node_modules/ol/Tile.js","webpack://ol-mapbox-style/./node_modules/ol/structs/PriorityQueue.js","webpack://ol-mapbox-style/./node_modules/ol/TileQueue.js","webpack://ol-mapbox-style/./node_modules/ol/TileRange.js","webpack://ol-mapbox-style/./node_modules/ol/TileState.js","webpack://ol-mapbox-style/./node_modules/ol/ViewProperty.js","webpack://ol-mapbox-style/./node_modules/ol/centerconstraint.js","webpack://ol-mapbox-style/./node_modules/ol/resolutionconstraint.js","webpack://ol-mapbox-style/./node_modules/ol/View.js","webpack://ol-mapbox-style/./node_modules/ol/ViewHint.js","webpack://ol-mapbox-style/./node_modules/ol/array.js","webpack://ol-mapbox-style/./node_modules/ol/asserts.js","webpack://ol-mapbox-style/./node_modules/ol/color.js","webpack://ol-mapbox-style/./node_modules/ol/colorlike.js","webpack://ol-mapbox-style/./node_modules/ol/console.js","webpack://ol-mapbox-style/./node_modules/ol/coordinate.js","webpack://ol-mapbox-style/./node_modules/ol/css.js","webpack://ol-mapbox-style/./node_modules/ol/dom.js","webpack://ol-mapbox-style/./node_modules/ol/easing.js","webpack://ol-mapbox-style/./node_modules/ol/events.js","webpack://ol-mapbox-style/./node_modules/ol/events/Event.js","webpack://ol-mapbox-style/./node_modules/ol/events/EventType.js","webpack://ol-mapbox-style/./node_modules/ol/events/Target.js","webpack://ol-mapbox-style/./node_modules/ol/extent.js","webpack://ol-mapbox-style/./node_modules/ol/extent/Relationship.js","webpack://ol-mapbox-style/./node_modules/ol/featureloader.js","webpack://ol-mapbox-style/./node_modules/ol/format/Feature.js","webpack://ol-mapbox-style/./node_modules/ol/Feature.js","webpack://ol-mapbox-style/./node_modules/ol/geom/GeometryCollection.js","webpack://ol-mapbox-style/./node_modules/ol/format/JSONFeature.js","webpack://ol-mapbox-style/./node_modules/ol/format/GeoJSON.js","webpack://ol-mapbox-style/./node_modules/ol/functions.js","webpack://ol-mapbox-style/./node_modules/ol/geom/Geometry.js","webpack://ol-mapbox-style/./node_modules/ol/geom/LineString.js","webpack://ol-mapbox-style/./node_modules/ol/geom/MultiLineString.js","webpack://ol-mapbox-style/./node_modules/ol/geom/MultiPoint.js","webpack://ol-mapbox-style/./node_modules/ol/geom/MultiPolygon.js","webpack://ol-mapbox-style/./node_modules/ol/geom/Point.js","webpack://ol-mapbox-style/./node_modules/ol/geom/LinearRing.js","webpack://ol-mapbox-style/./node_modules/ol/geom/Polygon.js","webpack://ol-mapbox-style/./node_modules/ol/geom/SimpleGeometry.js","webpack://ol-mapbox-style/./node_modules/ol/geom/flat/area.js","webpack://ol-mapbox-style/./node_modules/ol/geom/flat/center.js","webpack://ol-mapbox-style/./node_modules/ol/geom/flat/closest.js","webpack://ol-mapbox-style/./node_modules/ol/geom/flat/contains.js","webpack://ol-mapbox-style/./node_modules/ol/geom/flat/deflate.js","webpack://ol-mapbox-style/./node_modules/ol/geom/flat/inflate.js","webpack://ol-mapbox-style/./node_modules/ol/geom/flat/interiorpoint.js","webpack://ol-mapbox-style/./node_modules/ol/geom/flat/interpolate.js","webpack://ol-mapbox-style/./node_modules/ol/geom/flat/intersectsextent.js","webpack://ol-mapbox-style/./node_modules/ol/geom/flat/length.js","webpack://ol-mapbox-style/./node_modules/ol/geom/flat/reverse.js","webpack://ol-mapbox-style/./node_modules/ol/geom/flat/orient.js","webpack://ol-mapbox-style/./node_modules/ol/geom/flat/segments.js","webpack://ol-mapbox-style/./node_modules/ol/geom/flat/simplify.js","webpack://ol-mapbox-style/./node_modules/ol/geom/flat/transform.js","webpack://ol-mapbox-style/./node_modules/ol/has.js","webpack://ol-mapbox-style/./node_modules/ol/layer/Base.js","webpack://ol-mapbox-style/./node_modules/ol/style/flat.js","webpack://ol-mapbox-style/./node_modules/ol/layer/BaseVector.js","webpack://ol-mapbox-style/./node_modules/ol/layer/Group.js","webpack://ol-mapbox-style/./node_modules/ol/layer/Layer.js","webpack://ol-mapbox-style/./node_modules/ol/layer/Property.js","webpack://ol-mapbox-style/./node_modules/ol/layer/TileProperty.js","webpack://ol-mapbox-style/./node_modules/ol/renderer/canvas/VectorLayer.js","webpack://ol-mapbox-style/./node_modules/ol/layer/Vector.js","webpack://ol-mapbox-style/./node_modules/ol/renderer/canvas/VectorTileLayer.js","webpack://ol-mapbox-style/./node_modules/ol/layer/VectorTile.js","webpack://ol-mapbox-style/./node_modules/ol/loadingstrategy.js","webpack://ol-mapbox-style/./node_modules/ol/math.js","webpack://ol-mapbox-style/./node_modules/ol/obj.js","webpack://ol-mapbox-style/./node_modules/ol/proj/epsg3857.js","webpack://ol-mapbox-style/./node_modules/ol/proj/epsg4326.js","webpack://ol-mapbox-style/./node_modules/ol/proj/projections.js","webpack://ol-mapbox-style/./node_modules/ol/proj/transforms.js","webpack://ol-mapbox-style/./node_modules/ol/sphere.js","webpack://ol-mapbox-style/./node_modules/ol/proj.js","webpack://ol-mapbox-style/./node_modules/ol/proj/Projection.js","webpack://ol-mapbox-style/./node_modules/ol/proj/Units.js","webpack://ol-mapbox-style/./node_modules/ol/render/Event.js","webpack://ol-mapbox-style/./node_modules/ol/render/EventType.js","webpack://ol-mapbox-style/./node_modules/ol/render/VectorContext.js","webpack://ol-mapbox-style/./node_modules/ol/render/canvas.js","webpack://ol-mapbox-style/./node_modules/ol/render/canvas/Builder.js","webpack://ol-mapbox-style/./node_modules/ol/render/canvas/ImageBuilder.js","webpack://ol-mapbox-style/./node_modules/ol/render/canvas/LineStringBuilder.js","webpack://ol-mapbox-style/./node_modules/ol/render/canvas/PolygonBuilder.js","webpack://ol-mapbox-style/./node_modules/ol/render/canvas/BuilderGroup.js","webpack://ol-mapbox-style/./node_modules/ol/geom/flat/textpath.js","webpack://ol-mapbox-style/./node_modules/ol/render/canvas/Executor.js","webpack://ol-mapbox-style/./node_modules/ol/render/canvas/ExecutorGroup.js","webpack://ol-mapbox-style/./node_modules/ol/render/canvas/Instruction.js","webpack://ol-mapbox-style/./node_modules/ol/geom/flat/linechunk.js","webpack://ol-mapbox-style/./node_modules/ol/geom/flat/straightchunk.js","webpack://ol-mapbox-style/./node_modules/ol/render/canvas/TextBuilder.js","webpack://ol-mapbox-style/./node_modules/ol/render/canvas/Immediate.js","webpack://ol-mapbox-style/./node_modules/ol/render/canvas/hitdetect.js","webpack://ol-mapbox-style/./node_modules/ol/renderer/Layer.js","webpack://ol-mapbox-style/./node_modules/ol/renderer/canvas/Layer.js","webpack://ol-mapbox-style/./node_modules/ol/renderer/canvas/TileLayer.js","webpack://ol-mapbox-style/./node_modules/ol/renderer/vector.js","webpack://ol-mapbox-style/./node_modules/ol/reproj.js","webpack://ol-mapbox-style/./node_modules/ol/reproj/Tile.js","webpack://ol-mapbox-style/./node_modules/ol/reproj/Triangulation.js","webpack://ol-mapbox-style/./node_modules/ol/reproj/common.js","webpack://ol-mapbox-style/./node_modules/ol/rotationconstraint.js","webpack://ol-mapbox-style/./node_modules/ol/size.js","webpack://ol-mapbox-style/./node_modules/ol/source/Source.js","webpack://ol-mapbox-style/./node_modules/ol/structs/RBush.js","webpack://ol-mapbox-style/./node_modules/ol/source/VectorEventType.js","webpack://ol-mapbox-style/./node_modules/ol/source/Vector.js","webpack://ol-mapbox-style/./node_modules/ol/style/Circle.js","webpack://ol-mapbox-style/./node_modules/ol/style/Fill.js","webpack://ol-mapbox-style/./node_modules/ol/style/IconImage.js","webpack://ol-mapbox-style/./node_modules/ol/style/Icon.js","webpack://ol-mapbox-style/./node_modules/ol/style/IconImageCache.js","webpack://ol-mapbox-style/./node_modules/ol/style/Image.js","webpack://ol-mapbox-style/./node_modules/ol/style/RegularShape.js","webpack://ol-mapbox-style/./node_modules/ol/style/Stroke.js","webpack://ol-mapbox-style/./node_modules/ol/style/Style.js","webpack://ol-mapbox-style/./node_modules/ol/style/Text.js","webpack://ol-mapbox-style/./node_modules/ol/tilegrid/common.js","webpack://ol-mapbox-style/./node_modules/ol/transform.js","webpack://ol-mapbox-style/./node_modules/ol/util.js","webpack://ol-mapbox-style/./node_modules/ol/render/Feature.js","webpack://ol-mapbox-style/./node_modules/@mapbox/mapbox-gl-style-spec/util/color.js","webpack://ol-mapbox-style/./node_modules/@mapbox/mapbox-gl-style-spec/function/convert.js","webpack://ol-mapbox-style/./node_modules/@mapbox/mapbox-gl-style-spec/util/extend.js","webpack://ol-mapbox-style/./node_modules/@mapbox/mapbox-gl-style-spec/expression/parsing_error.js","webpack://ol-mapbox-style/./node_modules/@mapbox/mapbox-gl-style-spec/expression/scope.js","webpack://ol-mapbox-style/./node_modules/@mapbox/mapbox-gl-style-spec/expression/types.js","webpack://ol-mapbox-style/./node_modules/@mapbox/mapbox-gl-style-spec/expression/types/collator.js","webpack://ol-mapbox-style/./node_modules/@mapbox/mapbox-gl-style-spec/expression/types/formatted.js","webpack://ol-mapbox-style/./node_modules/@mapbox/mapbox-gl-style-spec/expression/types/resolved_image.js","webpack://ol-mapbox-style/./node_modules/@mapbox/mapbox-gl-style-spec/expression/values.js","webpack://ol-mapbox-style/./node_modules/@mapbox/mapbox-gl-style-spec/expression/definitions/literal.js","webpack://ol-mapbox-style/./node_modules/@mapbox/mapbox-gl-style-spec/expression/runtime_error.js","webpack://ol-mapbox-style/./node_modules/@mapbox/mapbox-gl-style-spec/expression/definitions/assertion.js","webpack://ol-mapbox-style/./node_modules/@mapbox/mapbox-gl-style-spec/expression/definitions/format.js","webpack://ol-mapbox-style/./node_modules/@mapbox/mapbox-gl-style-spec/expression/definitions/image.js","webpack://ol-mapbox-style/./node_modules/@mapbox/mapbox-gl-style-spec/expression/definitions/coercion.js","webpack://ol-mapbox-style/./node_modules/@mapbox/mapbox-gl-style-spec/expression/evaluation_context.js","webpack://ol-mapbox-style/./node_modules/@mapbox/mapbox-gl-style-spec/expression/compound_expression.js","webpack://ol-mapbox-style/./node_modules/@mapbox/mapbox-gl-style-spec/expression/definitions/collator.js","webpack://ol-mapbox-style/./node_modules/@mapbox/mapbox-gl-style-spec/expression/definitions/within.js","webpack://ol-mapbox-style/./node_modules/@mapbox/mapbox-gl-style-spec/expression/is_constant.js","webpack://ol-mapbox-style/./node_modules/@mapbox/mapbox-gl-style-spec/expression/definitions/var.js","webpack://ol-mapbox-style/./node_modules/@mapbox/mapbox-gl-style-spec/expression/parsing_context.js","webpack://ol-mapbox-style/./node_modules/@mapbox/mapbox-gl-style-spec/expression/stops.js","webpack://ol-mapbox-style/./node_modules/@mapbox/mapbox-gl-style-spec/expression/definitions/step.js","webpack://ol-mapbox-style/./node_modules/@mapbox/mapbox-gl-style-spec/util/interpolate.js","webpack://ol-mapbox-style/./node_modules/@mapbox/mapbox-gl-style-spec/util/color_spaces.js","webpack://ol-mapbox-style/./node_modules/@mapbox/mapbox-gl-style-spec/expression/definitions/interpolate.js","webpack://ol-mapbox-style/./node_modules/@mapbox/mapbox-gl-style-spec/expression/definitions/coalesce.js","webpack://ol-mapbox-style/./node_modules/@mapbox/mapbox-gl-style-spec/expression/definitions/let.js","webpack://ol-mapbox-style/./node_modules/@mapbox/mapbox-gl-style-spec/expression/definitions/at.js","webpack://ol-mapbox-style/./node_modules/@mapbox/mapbox-gl-style-spec/expression/definitions/in.js","webpack://ol-mapbox-style/./node_modules/@mapbox/mapbox-gl-style-spec/expression/definitions/index_of.js","webpack://ol-mapbox-style/./node_modules/@mapbox/mapbox-gl-style-spec/expression/definitions/match.js","webpack://ol-mapbox-style/./node_modules/@mapbox/mapbox-gl-style-spec/expression/definitions/case.js","webpack://ol-mapbox-style/./node_modules/@mapbox/mapbox-gl-style-spec/expression/definitions/slice.js","webpack://ol-mapbox-style/./node_modules/@mapbox/mapbox-gl-style-spec/expression/definitions/comparison.js","webpack://ol-mapbox-style/./node_modules/@mapbox/mapbox-gl-style-spec/expression/definitions/number_format.js","webpack://ol-mapbox-style/./node_modules/@mapbox/mapbox-gl-style-spec/expression/definitions/length.js","webpack://ol-mapbox-style/./node_modules/@mapbox/mapbox-gl-style-spec/expression/definitions/index.js","webpack://ol-mapbox-style/./node_modules/@mapbox/mapbox-gl-style-spec/util/result.js","webpack://ol-mapbox-style/./node_modules/@mapbox/mapbox-gl-style-spec/util/properties.js","webpack://ol-mapbox-style/./node_modules/@mapbox/mapbox-gl-style-spec/util/get_type.js","webpack://ol-mapbox-style/./node_modules/@mapbox/mapbox-gl-style-spec/function/index.js","webpack://ol-mapbox-style/./node_modules/@mapbox/mapbox-gl-style-spec/expression/index.js","webpack://ol-mapbox-style/./node_modules/@mapbox/mapbox-gl-style-spec/util/unbundle_jsonlint.js","webpack://ol-mapbox-style/./node_modules/@mapbox/mapbox-gl-style-spec/reference/latest.js","webpack://ol-mapbox-style/./node_modules/@mapbox/mapbox-gl-style-spec/feature_filter/index.js","webpack://ol-mapbox-style/./node_modules/@mapbox/mapbox-gl-style-spec/util/ref_properties.js","webpack://ol-mapbox-style/./node_modules/@mapbox/mapbox-gl-style-spec/deref.js","webpack://ol-mapbox-style/./node_modules/ol/tilecoord.js","webpack://ol-mapbox-style/./node_modules/ol/tileurlfunction.js","webpack://ol-mapbox-style/./src/mapbox.js","webpack://ol-mapbox-style/./src/util.js","webpack://ol-mapbox-style/./src/text.js","webpack://ol-mapbox-style/./src/stylefunction.js","webpack://ol-mapbox-style/./node_modules/ol/layer/BaseImage.js","webpack://ol-mapbox-style/./node_modules/ol/renderer/canvas/ImageLayer.js","webpack://ol-mapbox-style/./node_modules/ol/layer/Image.js","webpack://ol-mapbox-style/./node_modules/ol/format/MVT.js","webpack://ol-mapbox-style/./node_modules/ol/ImageCanvas.js","webpack://ol-mapbox-style/./node_modules/ol/reproj/Image.js","webpack://ol-mapbox-style/./node_modules/ol/source/Image.js","webpack://ol-mapbox-style/./node_modules/ol/layer/BaseTile.js","webpack://ol-mapbox-style/./node_modules/ol/layer/Tile.js","webpack://ol-mapbox-style/./node_modules/ol/structs/LRUCache.js","webpack://ol-mapbox-style/./node_modules/ol/TileCache.js","webpack://ol-mapbox-style/./node_modules/ol/tilegrid/TileGrid.js","webpack://ol-mapbox-style/./node_modules/ol/tilegrid.js","webpack://ol-mapbox-style/./node_modules/ol/source/Tile.js","webpack://ol-mapbox-style/./node_modules/ol/source/Raster.js","webpack://ol-mapbox-style/./node_modules/ol/source/UrlTile.js","webpack://ol-mapbox-style/./node_modules/ol/source/TileEventType.js","webpack://ol-mapbox-style/./node_modules/ol/source/TileImage.js","webpack://ol-mapbox-style/./node_modules/ol/net.js","webpack://ol-mapbox-style/./node_modules/ol/source/TileJSON.js","webpack://ol-mapbox-style/./node_modules/ol/VectorTile.js","webpack://ol-mapbox-style/./node_modules/ol/VectorRenderTile.js","webpack://ol-mapbox-style/./node_modules/ol/source/VectorTile.js","webpack://ol-mapbox-style/./src/shaders.js","webpack://ol-mapbox-style/./src/apply.js","webpack://ol-mapbox-style/webpack/bootstrap","webpack://ol-mapbox-style/webpack/runtime/define property getters","webpack://ol-mapbox-style/webpack/runtime/hasOwnProperty shorthand","webpack://ol-mapbox-style/webpack/runtime/make namespace object","webpack://ol-mapbox-style/webpack/runtime/jsonp chunk loading"],"sourcesContent":["var deferred = [];\n__webpack_require__.O = (result, chunkIds, fn, priority) => {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar [chunkIds, fn, priority] = deferred[i];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every((key) => (__webpack_require__.O[key](chunkIds[j])))) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","'use strict';\n\nmodule.exports = Point;\n\n/**\n * A standalone point geometry with useful accessor, comparison, and\n * modification methods.\n *\n * @class Point\n * @param {Number} x the x-coordinate. this could be longitude or screen\n * pixels, or any other sort of unit.\n * @param {Number} y the y-coordinate. this could be latitude or screen\n * pixels, or any other sort of unit.\n * @example\n * var point = new Point(-77, 38);\n */\nfunction Point(x, y) {\n    this.x = x;\n    this.y = y;\n}\n\nPoint.prototype = {\n\n    /**\n     * Clone this point, returning a new point that can be modified\n     * without affecting the old one.\n     * @return {Point} the clone\n     */\n    clone: function() { return new Point(this.x, this.y); },\n\n    /**\n     * Add this point's x & y coordinates to another point,\n     * yielding a new point.\n     * @param {Point} p the other point\n     * @return {Point} output point\n     */\n    add:     function(p) { return this.clone()._add(p); },\n\n    /**\n     * Subtract this point's x & y coordinates to from point,\n     * yielding a new point.\n     * @param {Point} p the other point\n     * @return {Point} output point\n     */\n    sub:     function(p) { return this.clone()._sub(p); },\n\n    /**\n     * Multiply this point's x & y coordinates by point,\n     * yielding a new point.\n     * @param {Point} p the other point\n     * @return {Point} output point\n     */\n    multByPoint:    function(p) { return this.clone()._multByPoint(p); },\n\n    /**\n     * Divide this point's x & y coordinates by point,\n     * yielding a new point.\n     * @param {Point} p the other point\n     * @return {Point} output point\n     */\n    divByPoint:     function(p) { return this.clone()._divByPoint(p); },\n\n    /**\n     * Multiply this point's x & y coordinates by a factor,\n     * yielding a new point.\n     * @param {Point} k factor\n     * @return {Point} output point\n     */\n    mult:    function(k) { return this.clone()._mult(k); },\n\n    /**\n     * Divide this point's x & y coordinates by a factor,\n     * yielding a new point.\n     * @param {Point} k factor\n     * @return {Point} output point\n     */\n    div:     function(k) { return this.clone()._div(k); },\n\n    /**\n     * Rotate this point around the 0, 0 origin by an angle a,\n     * given in radians\n     * @param {Number} a angle to rotate around, in radians\n     * @return {Point} output point\n     */\n    rotate:  function(a) { return this.clone()._rotate(a); },\n\n    /**\n     * Rotate this point around p point by an angle a,\n     * given in radians\n     * @param {Number} a angle to rotate around, in radians\n     * @param {Point} p Point to rotate around\n     * @return {Point} output point\n     */\n    rotateAround:  function(a,p) { return this.clone()._rotateAround(a,p); },\n\n    /**\n     * Multiply this point by a 4x1 transformation matrix\n     * @param {Array<Number>} m transformation matrix\n     * @return {Point} output point\n     */\n    matMult: function(m) { return this.clone()._matMult(m); },\n\n    /**\n     * Calculate this point but as a unit vector from 0, 0, meaning\n     * that the distance from the resulting point to the 0, 0\n     * coordinate will be equal to 1 and the angle from the resulting\n     * point to the 0, 0 coordinate will be the same as before.\n     * @return {Point} unit vector point\n     */\n    unit:    function() { return this.clone()._unit(); },\n\n    /**\n     * Compute a perpendicular point, where the new y coordinate\n     * is the old x coordinate and the new x coordinate is the old y\n     * coordinate multiplied by -1\n     * @return {Point} perpendicular point\n     */\n    perp:    function() { return this.clone()._perp(); },\n\n    /**\n     * Return a version of this point with the x & y coordinates\n     * rounded to integers.\n     * @return {Point} rounded point\n     */\n    round:   function() { return this.clone()._round(); },\n\n    /**\n     * Return the magitude of this point: this is the Euclidean\n     * distance from the 0, 0 coordinate to this point's x and y\n     * coordinates.\n     * @return {Number} magnitude\n     */\n    mag: function() {\n        return Math.sqrt(this.x * this.x + this.y * this.y);\n    },\n\n    /**\n     * Judge whether this point is equal to another point, returning\n     * true or false.\n     * @param {Point} other the other point\n     * @return {boolean} whether the points are equal\n     */\n    equals: function(other) {\n        return this.x === other.x &&\n               this.y === other.y;\n    },\n\n    /**\n     * Calculate the distance from this point to another point\n     * @param {Point} p the other point\n     * @return {Number} distance\n     */\n    dist: function(p) {\n        return Math.sqrt(this.distSqr(p));\n    },\n\n    /**\n     * Calculate the distance from this point to another point,\n     * without the square root step. Useful if you're comparing\n     * relative distances.\n     * @param {Point} p the other point\n     * @return {Number} distance\n     */\n    distSqr: function(p) {\n        var dx = p.x - this.x,\n            dy = p.y - this.y;\n        return dx * dx + dy * dy;\n    },\n\n    /**\n     * Get the angle from the 0, 0 coordinate to this point, in radians\n     * coordinates.\n     * @return {Number} angle\n     */\n    angle: function() {\n        return Math.atan2(this.y, this.x);\n    },\n\n    /**\n     * Get the angle from this point to another point, in radians\n     * @param {Point} b the other point\n     * @return {Number} angle\n     */\n    angleTo: function(b) {\n        return Math.atan2(this.y - b.y, this.x - b.x);\n    },\n\n    /**\n     * Get the angle between this point and another point, in radians\n     * @param {Point} b the other point\n     * @return {Number} angle\n     */\n    angleWith: function(b) {\n        return this.angleWithSep(b.x, b.y);\n    },\n\n    /*\n     * Find the angle of the two vectors, solving the formula for\n     * the cross product a x b = |a||b|sin(θ) for θ.\n     * @param {Number} x the x-coordinate\n     * @param {Number} y the y-coordinate\n     * @return {Number} the angle in radians\n     */\n    angleWithSep: function(x, y) {\n        return Math.atan2(\n            this.x * y - this.y * x,\n            this.x * x + this.y * y);\n    },\n\n    _matMult: function(m) {\n        var x = m[0] * this.x + m[1] * this.y,\n            y = m[2] * this.x + m[3] * this.y;\n        this.x = x;\n        this.y = y;\n        return this;\n    },\n\n    _add: function(p) {\n        this.x += p.x;\n        this.y += p.y;\n        return this;\n    },\n\n    _sub: function(p) {\n        this.x -= p.x;\n        this.y -= p.y;\n        return this;\n    },\n\n    _mult: function(k) {\n        this.x *= k;\n        this.y *= k;\n        return this;\n    },\n\n    _div: function(k) {\n        this.x /= k;\n        this.y /= k;\n        return this;\n    },\n\n    _multByPoint: function(p) {\n        this.x *= p.x;\n        this.y *= p.y;\n        return this;\n    },\n\n    _divByPoint: function(p) {\n        this.x /= p.x;\n        this.y /= p.y;\n        return this;\n    },\n\n    _unit: function() {\n        this._div(this.mag());\n        return this;\n    },\n\n    _perp: function() {\n        var y = this.y;\n        this.y = this.x;\n        this.x = -y;\n        return this;\n    },\n\n    _rotate: function(angle) {\n        var cos = Math.cos(angle),\n            sin = Math.sin(angle),\n            x = cos * this.x - sin * this.y,\n            y = sin * this.x + cos * this.y;\n        this.x = x;\n        this.y = y;\n        return this;\n    },\n\n    _rotateAround: function(angle, p) {\n        var cos = Math.cos(angle),\n            sin = Math.sin(angle),\n            x = p.x + cos * (this.x - p.x) - sin * (this.y - p.y),\n            y = p.y + sin * (this.x - p.x) + cos * (this.y - p.y);\n        this.x = x;\n        this.y = y;\n        return this;\n    },\n\n    _round: function() {\n        this.x = Math.round(this.x);\n        this.y = Math.round(this.y);\n        return this;\n    }\n};\n\n/**\n * Construct a point from an array if necessary, otherwise if the input\n * is already a Point, or an unknown type, return it unchanged\n * @param {Array<Number>|Point|*} a any kind of input value\n * @return {Point} constructed point, or passed-through value.\n * @example\n * // this\n * var point = Point.convert([0, 1]);\n * // is equivalent to\n * var point = new Point(0, 1);\n */\nPoint.convert = function (a) {\n    if (a instanceof Point) {\n        return a;\n    }\n    if (Array.isArray(a)) {\n        return new Point(a[0], a[1]);\n    }\n    return a;\n};\n","/*\n * Copyright (C) 2008 Apple Inc. All Rights Reserved.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions\n * are met:\n * 1. Redistributions of source code must retain the above copyright\n *    notice, this list of conditions and the following disclaimer.\n * 2. Redistributions in binary form must reproduce the above copyright\n *    notice, this list of conditions and the following disclaimer in the\n *    documentation and/or other materials provided with the distribution.\n *\n * THIS SOFTWARE IS PROVIDED BY APPLE INC. ``AS IS'' AND ANY\n * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR\n * PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL APPLE INC. OR\n * CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,\n * EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,\n * PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n * PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY\n * OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n *\n * Ported from Webkit\n * http://svn.webkit.org/repository/webkit/trunk/Source/WebCore/platform/graphics/UnitBezier.h\n */\n\nmodule.exports = UnitBezier;\n\nfunction UnitBezier(p1x, p1y, p2x, p2y) {\n    // Calculate the polynomial coefficients, implicit first and last control points are (0,0) and (1,1).\n    this.cx = 3.0 * p1x;\n    this.bx = 3.0 * (p2x - p1x) - this.cx;\n    this.ax = 1.0 - this.cx - this.bx;\n\n    this.cy = 3.0 * p1y;\n    this.by = 3.0 * (p2y - p1y) - this.cy;\n    this.ay = 1.0 - this.cy - this.by;\n\n    this.p1x = p1x;\n    this.p1y = p2y;\n    this.p2x = p2x;\n    this.p2y = p2y;\n}\n\nUnitBezier.prototype.sampleCurveX = function(t) {\n    // `ax t^3 + bx t^2 + cx t' expanded using Horner's rule.\n    return ((this.ax * t + this.bx) * t + this.cx) * t;\n};\n\nUnitBezier.prototype.sampleCurveY = function(t) {\n    return ((this.ay * t + this.by) * t + this.cy) * t;\n};\n\nUnitBezier.prototype.sampleCurveDerivativeX = function(t) {\n    return (3.0 * this.ax * t + 2.0 * this.bx) * t + this.cx;\n};\n\nUnitBezier.prototype.solveCurveX = function(x, epsilon) {\n    if (typeof epsilon === 'undefined') epsilon = 1e-6;\n\n    var t0, t1, t2, x2, i;\n\n    // First try a few iterations of Newton's method -- normally very fast.\n    for (t2 = x, i = 0; i < 8; i++) {\n\n        x2 = this.sampleCurveX(t2) - x;\n        if (Math.abs(x2) < epsilon) return t2;\n\n        var d2 = this.sampleCurveDerivativeX(t2);\n        if (Math.abs(d2) < 1e-6) break;\n\n        t2 = t2 - x2 / d2;\n    }\n\n    // Fall back to the bisection method for reliability.\n    t0 = 0.0;\n    t1 = 1.0;\n    t2 = x;\n\n    if (t2 < t0) return t0;\n    if (t2 > t1) return t1;\n\n    while (t0 < t1) {\n\n        x2 = this.sampleCurveX(t2);\n        if (Math.abs(x2 - x) < epsilon) return t2;\n\n        if (x > x2) {\n            t0 = t2;\n        } else {\n            t1 = t2;\n        }\n\n        t2 = (t1 - t0) * 0.5 + t0;\n    }\n\n    // Failure.\n    return t2;\n};\n\nUnitBezier.prototype.solve = function(x, epsilon) {\n    return this.sampleCurveY(this.solveCurveX(x, epsilon));\n};\n","// (c) Dean McNamee <dean@gmail.com>, 2012.\n//\n// https://github.com/deanm/css-color-parser-js\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to\n// deal in the Software without restriction, including without limitation the\n// rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n// sell copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n// FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS\n// IN THE SOFTWARE.\n\n// http://www.w3.org/TR/css3-color/\nvar kCSSColorTable = {\n  \"transparent\": [0,0,0,0], \"aliceblue\": [240,248,255,1],\n  \"antiquewhite\": [250,235,215,1], \"aqua\": [0,255,255,1],\n  \"aquamarine\": [127,255,212,1], \"azure\": [240,255,255,1],\n  \"beige\": [245,245,220,1], \"bisque\": [255,228,196,1],\n  \"black\": [0,0,0,1], \"blanchedalmond\": [255,235,205,1],\n  \"blue\": [0,0,255,1], \"blueviolet\": [138,43,226,1],\n  \"brown\": [165,42,42,1], \"burlywood\": [222,184,135,1],\n  \"cadetblue\": [95,158,160,1], \"chartreuse\": [127,255,0,1],\n  \"chocolate\": [210,105,30,1], \"coral\": [255,127,80,1],\n  \"cornflowerblue\": [100,149,237,1], \"cornsilk\": [255,248,220,1],\n  \"crimson\": [220,20,60,1], \"cyan\": [0,255,255,1],\n  \"darkblue\": [0,0,139,1], \"darkcyan\": [0,139,139,1],\n  \"darkgoldenrod\": [184,134,11,1], \"darkgray\": [169,169,169,1],\n  \"darkgreen\": [0,100,0,1], \"darkgrey\": [169,169,169,1],\n  \"darkkhaki\": [189,183,107,1], \"darkmagenta\": [139,0,139,1],\n  \"darkolivegreen\": [85,107,47,1], \"darkorange\": [255,140,0,1],\n  \"darkorchid\": [153,50,204,1], \"darkred\": [139,0,0,1],\n  \"darksalmon\": [233,150,122,1], \"darkseagreen\": [143,188,143,1],\n  \"darkslateblue\": [72,61,139,1], \"darkslategray\": [47,79,79,1],\n  \"darkslategrey\": [47,79,79,1], \"darkturquoise\": [0,206,209,1],\n  \"darkviolet\": [148,0,211,1], \"deeppink\": [255,20,147,1],\n  \"deepskyblue\": [0,191,255,1], \"dimgray\": [105,105,105,1],\n  \"dimgrey\": [105,105,105,1], \"dodgerblue\": [30,144,255,1],\n  \"firebrick\": [178,34,34,1], \"floralwhite\": [255,250,240,1],\n  \"forestgreen\": [34,139,34,1], \"fuchsia\": [255,0,255,1],\n  \"gainsboro\": [220,220,220,1], \"ghostwhite\": [248,248,255,1],\n  \"gold\": [255,215,0,1], \"goldenrod\": [218,165,32,1],\n  \"gray\": [128,128,128,1], \"green\": [0,128,0,1],\n  \"greenyellow\": [173,255,47,1], \"grey\": [128,128,128,1],\n  \"honeydew\": [240,255,240,1], \"hotpink\": [255,105,180,1],\n  \"indianred\": [205,92,92,1], \"indigo\": [75,0,130,1],\n  \"ivory\": [255,255,240,1], \"khaki\": [240,230,140,1],\n  \"lavender\": [230,230,250,1], \"lavenderblush\": [255,240,245,1],\n  \"lawngreen\": [124,252,0,1], \"lemonchiffon\": [255,250,205,1],\n  \"lightblue\": [173,216,230,1], \"lightcoral\": [240,128,128,1],\n  \"lightcyan\": [224,255,255,1], \"lightgoldenrodyellow\": [250,250,210,1],\n  \"lightgray\": [211,211,211,1], \"lightgreen\": [144,238,144,1],\n  \"lightgrey\": [211,211,211,1], \"lightpink\": [255,182,193,1],\n  \"lightsalmon\": [255,160,122,1], \"lightseagreen\": [32,178,170,1],\n  \"lightskyblue\": [135,206,250,1], \"lightslategray\": [119,136,153,1],\n  \"lightslategrey\": [119,136,153,1], \"lightsteelblue\": [176,196,222,1],\n  \"lightyellow\": [255,255,224,1], \"lime\": [0,255,0,1],\n  \"limegreen\": [50,205,50,1], \"linen\": [250,240,230,1],\n  \"magenta\": [255,0,255,1], \"maroon\": [128,0,0,1],\n  \"mediumaquamarine\": [102,205,170,1], \"mediumblue\": [0,0,205,1],\n  \"mediumorchid\": [186,85,211,1], \"mediumpurple\": [147,112,219,1],\n  \"mediumseagreen\": [60,179,113,1], \"mediumslateblue\": [123,104,238,1],\n  \"mediumspringgreen\": [0,250,154,1], \"mediumturquoise\": [72,209,204,1],\n  \"mediumvioletred\": [199,21,133,1], \"midnightblue\": [25,25,112,1],\n  \"mintcream\": [245,255,250,1], \"mistyrose\": [255,228,225,1],\n  \"moccasin\": [255,228,181,1], \"navajowhite\": [255,222,173,1],\n  \"navy\": [0,0,128,1], \"oldlace\": [253,245,230,1],\n  \"olive\": [128,128,0,1], \"olivedrab\": [107,142,35,1],\n  \"orange\": [255,165,0,1], \"orangered\": [255,69,0,1],\n  \"orchid\": [218,112,214,1], \"palegoldenrod\": [238,232,170,1],\n  \"palegreen\": [152,251,152,1], \"paleturquoise\": [175,238,238,1],\n  \"palevioletred\": [219,112,147,1], \"papayawhip\": [255,239,213,1],\n  \"peachpuff\": [255,218,185,1], \"peru\": [205,133,63,1],\n  \"pink\": [255,192,203,1], \"plum\": [221,160,221,1],\n  \"powderblue\": [176,224,230,1], \"purple\": [128,0,128,1],\n  \"rebeccapurple\": [102,51,153,1],\n  \"red\": [255,0,0,1], \"rosybrown\": [188,143,143,1],\n  \"royalblue\": [65,105,225,1], \"saddlebrown\": [139,69,19,1],\n  \"salmon\": [250,128,114,1], \"sandybrown\": [244,164,96,1],\n  \"seagreen\": [46,139,87,1], \"seashell\": [255,245,238,1],\n  \"sienna\": [160,82,45,1], \"silver\": [192,192,192,1],\n  \"skyblue\": [135,206,235,1], \"slateblue\": [106,90,205,1],\n  \"slategray\": [112,128,144,1], \"slategrey\": [112,128,144,1],\n  \"snow\": [255,250,250,1], \"springgreen\": [0,255,127,1],\n  \"steelblue\": [70,130,180,1], \"tan\": [210,180,140,1],\n  \"teal\": [0,128,128,1], \"thistle\": [216,191,216,1],\n  \"tomato\": [255,99,71,1], \"turquoise\": [64,224,208,1],\n  \"violet\": [238,130,238,1], \"wheat\": [245,222,179,1],\n  \"white\": [255,255,255,1], \"whitesmoke\": [245,245,245,1],\n  \"yellow\": [255,255,0,1], \"yellowgreen\": [154,205,50,1]}\n\nfunction clamp_css_byte(i) {  // Clamp to integer 0 .. 255.\n  i = Math.round(i);  // Seems to be what Chrome does (vs truncation).\n  return i < 0 ? 0 : i > 255 ? 255 : i;\n}\n\nfunction clamp_css_float(f) {  // Clamp to float 0.0 .. 1.0.\n  return f < 0 ? 0 : f > 1 ? 1 : f;\n}\n\nfunction parse_css_int(str) {  // int or percentage.\n  if (str[str.length - 1] === '%')\n    return clamp_css_byte(parseFloat(str) / 100 * 255);\n  return clamp_css_byte(parseInt(str));\n}\n\nfunction parse_css_float(str) {  // float or percentage.\n  if (str[str.length - 1] === '%')\n    return clamp_css_float(parseFloat(str) / 100);\n  return clamp_css_float(parseFloat(str));\n}\n\nfunction css_hue_to_rgb(m1, m2, h) {\n  if (h < 0) h += 1;\n  else if (h > 1) h -= 1;\n\n  if (h * 6 < 1) return m1 + (m2 - m1) * h * 6;\n  if (h * 2 < 1) return m2;\n  if (h * 3 < 2) return m1 + (m2 - m1) * (2/3 - h) * 6;\n  return m1;\n}\n\nfunction parseCSSColor(css_str) {\n  // Remove all whitespace, not compliant, but should just be more accepting.\n  var str = css_str.replace(/ /g, '').toLowerCase();\n\n  // Color keywords (and transparent) lookup.\n  if (str in kCSSColorTable) return kCSSColorTable[str].slice();  // dup.\n\n  // #abc and #abc123 syntax.\n  if (str[0] === '#') {\n    if (str.length === 4) {\n      var iv = parseInt(str.substr(1), 16);  // TODO(deanm): Stricter parsing.\n      if (!(iv >= 0 && iv <= 0xfff)) return null;  // Covers NaN.\n      return [((iv & 0xf00) >> 4) | ((iv & 0xf00) >> 8),\n              (iv & 0xf0) | ((iv & 0xf0) >> 4),\n              (iv & 0xf) | ((iv & 0xf) << 4),\n              1];\n    } else if (str.length === 7) {\n      var iv = parseInt(str.substr(1), 16);  // TODO(deanm): Stricter parsing.\n      if (!(iv >= 0 && iv <= 0xffffff)) return null;  // Covers NaN.\n      return [(iv & 0xff0000) >> 16,\n              (iv & 0xff00) >> 8,\n              iv & 0xff,\n              1];\n    }\n\n    return null;\n  }\n\n  var op = str.indexOf('('), ep = str.indexOf(')');\n  if (op !== -1 && ep + 1 === str.length) {\n    var fname = str.substr(0, op);\n    var params = str.substr(op+1, ep-(op+1)).split(',');\n    var alpha = 1;  // To allow case fallthrough.\n    switch (fname) {\n      case 'rgba':\n        if (params.length !== 4) return null;\n        alpha = parse_css_float(params.pop());\n        // Fall through.\n      case 'rgb':\n        if (params.length !== 3) return null;\n        return [parse_css_int(params[0]),\n                parse_css_int(params[1]),\n                parse_css_int(params[2]),\n                alpha];\n      case 'hsla':\n        if (params.length !== 4) return null;\n        alpha = parse_css_float(params.pop());\n        // Fall through.\n      case 'hsl':\n        if (params.length !== 3) return null;\n        var h = (((parseFloat(params[0]) % 360) + 360) % 360) / 360;  // 0 .. 1\n        // NOTE(deanm): According to the CSS spec s/l should only be\n        // percentages, but we don't bother and let float or percentage.\n        var s = parse_css_float(params[1]);\n        var l = parse_css_float(params[2]);\n        var m2 = l <= 0.5 ? l * (s + 1) : l + s - l * s;\n        var m1 = l * 2 - m2;\n        return [clamp_css_byte(css_hue_to_rgb(m1, m2, h+1/3) * 255),\n                clamp_css_byte(css_hue_to_rgb(m1, m2, h) * 255),\n                clamp_css_byte(css_hue_to_rgb(m1, m2, h-1/3) * 255),\n                alpha];\n      default:\n        return null;\n    }\n  }\n\n  return null;\n}\n\ntry { exports.parseCSSColor = parseCSSColor } catch(e) { }\n","/*! ieee754. BSD-3-Clause License. Feross Aboukhadijeh <https://feross.org/opensource> */\nexports.read = function (buffer, offset, isLE, mLen, nBytes) {\n  var e, m\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var nBits = -7\n  var i = isLE ? (nBytes - 1) : 0\n  var d = isLE ? -1 : 1\n  var s = buffer[offset + i]\n\n  i += d\n\n  e = s & ((1 << (-nBits)) - 1)\n  s >>= (-nBits)\n  nBits += eLen\n  for (; nBits > 0; e = (e * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  m = e & ((1 << (-nBits)) - 1)\n  e >>= (-nBits)\n  nBits += mLen\n  for (; nBits > 0; m = (m * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  if (e === 0) {\n    e = 1 - eBias\n  } else if (e === eMax) {\n    return m ? NaN : ((s ? -1 : 1) * Infinity)\n  } else {\n    m = m + Math.pow(2, mLen)\n    e = e - eBias\n  }\n  return (s ? -1 : 1) * m * Math.pow(2, e - mLen)\n}\n\nexports.write = function (buffer, value, offset, isLE, mLen, nBytes) {\n  var e, m, c\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var rt = (mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0)\n  var i = isLE ? 0 : (nBytes - 1)\n  var d = isLE ? 1 : -1\n  var s = value < 0 || (value === 0 && 1 / value < 0) ? 1 : 0\n\n  value = Math.abs(value)\n\n  if (isNaN(value) || value === Infinity) {\n    m = isNaN(value) ? 1 : 0\n    e = eMax\n  } else {\n    e = Math.floor(Math.log(value) / Math.LN2)\n    if (value * (c = Math.pow(2, -e)) < 1) {\n      e--\n      c *= 2\n    }\n    if (e + eBias >= 1) {\n      value += rt / c\n    } else {\n      value += rt * Math.pow(2, 1 - eBias)\n    }\n    if (value * c >= 2) {\n      e++\n      c /= 2\n    }\n\n    if (e + eBias >= eMax) {\n      m = 0\n      e = eMax\n    } else if (e + eBias >= 1) {\n      m = ((value * c) - 1) * Math.pow(2, mLen)\n      e = e + eBias\n    } else {\n      m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen)\n      e = 0\n    }\n  }\n\n  for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8) {}\n\n  e = (e << mLen) | m\n  eLen += mLen\n  for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8) {}\n\n  buffer[offset + i - d] |= s * 128\n}\n","var fontWeights = {\n  thin: 100,\n  hairline: 100,\n  'ultra-light': 100,\n  'extra-light': 100,\n  light: 200,\n  book: 300,\n  regular: 400,\n  normal: 400,\n  plain: 400,\n  roman: 400,\n  standard: 400,\n  medium: 500,\n  'semi-bold': 600,\n  'demi-bold': 600,\n  bold: 700,\n  heavy: 800,\n  black: 800,\n  'extra-bold': 800,\n  'ultra-black': 900,\n  'extra-black': 900,\n  'ultra-bold': 900,\n  'heavy-black': 900,\n  fat: 900,\n  poster: 900\n};\nvar sp = ' ';\nvar italicRE = /(italic|oblique)$/i;\n\nvar fontCache = {};\n\nmodule.exports = function(fonts, size, lineHeight) {\n  var cssData = fontCache[fonts];\n  if (!cssData) {\n    if (!Array.isArray(fonts)) {\n      fonts = [fonts];\n    }\n    var weight = 400;\n    var style = 'normal';\n    var fontFamilies = [];\n    var haveWeight, haveStyle;\n    for (var i = 0, ii = fonts.length; i < ii; ++i) {\n      var font = fonts[i];\n      var parts = font.split(' ');\n      var maybeWeight = parts[parts.length - 1].toLowerCase();\n      if (maybeWeight == 'normal' || maybeWeight == 'italic' || maybeWeight == 'oblique') {\n        style = haveStyle ? style : maybeWeight;\n        parts.pop();\n        maybeWeight = parts[parts.length - 1].toLowerCase();\n      } else if (italicRE.test(maybeWeight)) {\n        maybeWeight = maybeWeight.replace(italicRE, '');\n        style = haveStyle ? style : parts[parts.length - 1].replace(maybeWeight, '');\n      }\n      for (var w in fontWeights) {\n        var previousPart = parts.length > 1 ? parts[parts.length - 2].toLowerCase() : '';\n        if (maybeWeight == w || maybeWeight == w.replace('-', '') || previousPart + '-' + maybeWeight == w) {\n          weight = haveWeight ? weight : fontWeights[w];\n          parts.pop();\n          if (previousPart && w.startsWith(previousPart)) {\n            parts.pop();\n          }\n          break;\n        }\n      }\n      if (!haveWeight && typeof maybeWeight == 'number') {\n        weight = maybeWeight;\n      }\n      var fontFamily = parts.join(sp)\n        .replace('Klokantech Noto Sans', 'Noto Sans');\n      if (fontFamily.indexOf(sp) !== -1) {\n        fontFamily = '\"' + fontFamily + '\"';\n      }\n      fontFamilies.push(fontFamily);\n    }\n    // CSS font property: font-style font-weight font-size/line-height font-family\n    cssData = fontCache[fonts] = [style, weight, fontFamilies];\n  }\n  return cssData[0] + sp + cssData[1] + sp + size + 'px' + (lineHeight ? '/' + lineHeight : '') + sp + cssData[2];\n};\n","module.exports = assert\n\nclass AssertionError extends Error {}\nAssertionError.prototype.name = 'AssertionError'\n\n/**\n * Minimal assert function\n * @param  {any} t Value to check if falsy\n * @param  {string=} m Optional assertion error message\n * @throws {AssertionError}\n */\nfunction assert (t, m) {\n  if (!t) {\n    var err = new AssertionError(m)\n    if (Error.captureStackTrace) Error.captureStackTrace(err, assert)\n    throw err\n  }\n}\n","'use strict';\n\nmodule.exports = Pbf;\n\nvar ieee754 = require('ieee754');\n\nfunction Pbf(buf) {\n    this.buf = ArrayBuffer.isView && ArrayBuffer.isView(buf) ? buf : new Uint8Array(buf || 0);\n    this.pos = 0;\n    this.type = 0;\n    this.length = this.buf.length;\n}\n\nPbf.Varint  = 0; // varint: int32, int64, uint32, uint64, sint32, sint64, bool, enum\nPbf.Fixed64 = 1; // 64-bit: double, fixed64, sfixed64\nPbf.Bytes   = 2; // length-delimited: string, bytes, embedded messages, packed repeated fields\nPbf.Fixed32 = 5; // 32-bit: float, fixed32, sfixed32\n\nvar SHIFT_LEFT_32 = (1 << 16) * (1 << 16),\n    SHIFT_RIGHT_32 = 1 / SHIFT_LEFT_32;\n\n// Threshold chosen based on both benchmarking and knowledge about browser string\n// data structures (which currently switch structure types at 12 bytes or more)\nvar TEXT_DECODER_MIN_LENGTH = 12;\nvar utf8TextDecoder = typeof TextDecoder === 'undefined' ? null : new TextDecoder('utf8');\n\nPbf.prototype = {\n\n    destroy: function() {\n        this.buf = null;\n    },\n\n    // === READING =================================================================\n\n    readFields: function(readField, result, end) {\n        end = end || this.length;\n\n        while (this.pos < end) {\n            var val = this.readVarint(),\n                tag = val >> 3,\n                startPos = this.pos;\n\n            this.type = val & 0x7;\n            readField(tag, result, this);\n\n            if (this.pos === startPos) this.skip(val);\n        }\n        return result;\n    },\n\n    readMessage: function(readField, result) {\n        return this.readFields(readField, result, this.readVarint() + this.pos);\n    },\n\n    readFixed32: function() {\n        var val = readUInt32(this.buf, this.pos);\n        this.pos += 4;\n        return val;\n    },\n\n    readSFixed32: function() {\n        var val = readInt32(this.buf, this.pos);\n        this.pos += 4;\n        return val;\n    },\n\n    // 64-bit int handling is based on github.com/dpw/node-buffer-more-ints (MIT-licensed)\n\n    readFixed64: function() {\n        var val = readUInt32(this.buf, this.pos) + readUInt32(this.buf, this.pos + 4) * SHIFT_LEFT_32;\n        this.pos += 8;\n        return val;\n    },\n\n    readSFixed64: function() {\n        var val = readUInt32(this.buf, this.pos) + readInt32(this.buf, this.pos + 4) * SHIFT_LEFT_32;\n        this.pos += 8;\n        return val;\n    },\n\n    readFloat: function() {\n        var val = ieee754.read(this.buf, this.pos, true, 23, 4);\n        this.pos += 4;\n        return val;\n    },\n\n    readDouble: function() {\n        var val = ieee754.read(this.buf, this.pos, true, 52, 8);\n        this.pos += 8;\n        return val;\n    },\n\n    readVarint: function(isSigned) {\n        var buf = this.buf,\n            val, b;\n\n        b = buf[this.pos++]; val  =  b & 0x7f;        if (b < 0x80) return val;\n        b = buf[this.pos++]; val |= (b & 0x7f) << 7;  if (b < 0x80) return val;\n        b = buf[this.pos++]; val |= (b & 0x7f) << 14; if (b < 0x80) return val;\n        b = buf[this.pos++]; val |= (b & 0x7f) << 21; if (b < 0x80) return val;\n        b = buf[this.pos];   val |= (b & 0x0f) << 28;\n\n        return readVarintRemainder(val, isSigned, this);\n    },\n\n    readVarint64: function() { // for compatibility with v2.0.1\n        return this.readVarint(true);\n    },\n\n    readSVarint: function() {\n        var num = this.readVarint();\n        return num % 2 === 1 ? (num + 1) / -2 : num / 2; // zigzag encoding\n    },\n\n    readBoolean: function() {\n        return Boolean(this.readVarint());\n    },\n\n    readString: function() {\n        var end = this.readVarint() + this.pos;\n        var pos = this.pos;\n        this.pos = end;\n\n        if (end - pos >= TEXT_DECODER_MIN_LENGTH && utf8TextDecoder) {\n            // longer strings are fast with the built-in browser TextDecoder API\n            return readUtf8TextDecoder(this.buf, pos, end);\n        }\n        // short strings are fast with our custom implementation\n        return readUtf8(this.buf, pos, end);\n    },\n\n    readBytes: function() {\n        var end = this.readVarint() + this.pos,\n            buffer = this.buf.subarray(this.pos, end);\n        this.pos = end;\n        return buffer;\n    },\n\n    // verbose for performance reasons; doesn't affect gzipped size\n\n    readPackedVarint: function(arr, isSigned) {\n        if (this.type !== Pbf.Bytes) return arr.push(this.readVarint(isSigned));\n        var end = readPackedEnd(this);\n        arr = arr || [];\n        while (this.pos < end) arr.push(this.readVarint(isSigned));\n        return arr;\n    },\n    readPackedSVarint: function(arr) {\n        if (this.type !== Pbf.Bytes) return arr.push(this.readSVarint());\n        var end = readPackedEnd(this);\n        arr = arr || [];\n        while (this.pos < end) arr.push(this.readSVarint());\n        return arr;\n    },\n    readPackedBoolean: function(arr) {\n        if (this.type !== Pbf.Bytes) return arr.push(this.readBoolean());\n        var end = readPackedEnd(this);\n        arr = arr || [];\n        while (this.pos < end) arr.push(this.readBoolean());\n        return arr;\n    },\n    readPackedFloat: function(arr) {\n        if (this.type !== Pbf.Bytes) return arr.push(this.readFloat());\n        var end = readPackedEnd(this);\n        arr = arr || [];\n        while (this.pos < end) arr.push(this.readFloat());\n        return arr;\n    },\n    readPackedDouble: function(arr) {\n        if (this.type !== Pbf.Bytes) return arr.push(this.readDouble());\n        var end = readPackedEnd(this);\n        arr = arr || [];\n        while (this.pos < end) arr.push(this.readDouble());\n        return arr;\n    },\n    readPackedFixed32: function(arr) {\n        if (this.type !== Pbf.Bytes) return arr.push(this.readFixed32());\n        var end = readPackedEnd(this);\n        arr = arr || [];\n        while (this.pos < end) arr.push(this.readFixed32());\n        return arr;\n    },\n    readPackedSFixed32: function(arr) {\n        if (this.type !== Pbf.Bytes) return arr.push(this.readSFixed32());\n        var end = readPackedEnd(this);\n        arr = arr || [];\n        while (this.pos < end) arr.push(this.readSFixed32());\n        return arr;\n    },\n    readPackedFixed64: function(arr) {\n        if (this.type !== Pbf.Bytes) return arr.push(this.readFixed64());\n        var end = readPackedEnd(this);\n        arr = arr || [];\n        while (this.pos < end) arr.push(this.readFixed64());\n        return arr;\n    },\n    readPackedSFixed64: function(arr) {\n        if (this.type !== Pbf.Bytes) return arr.push(this.readSFixed64());\n        var end = readPackedEnd(this);\n        arr = arr || [];\n        while (this.pos < end) arr.push(this.readSFixed64());\n        return arr;\n    },\n\n    skip: function(val) {\n        var type = val & 0x7;\n        if (type === Pbf.Varint) while (this.buf[this.pos++] > 0x7f) {}\n        else if (type === Pbf.Bytes) this.pos = this.readVarint() + this.pos;\n        else if (type === Pbf.Fixed32) this.pos += 4;\n        else if (type === Pbf.Fixed64) this.pos += 8;\n        else throw new Error('Unimplemented type: ' + type);\n    },\n\n    // === WRITING =================================================================\n\n    writeTag: function(tag, type) {\n        this.writeVarint((tag << 3) | type);\n    },\n\n    realloc: function(min) {\n        var length = this.length || 16;\n\n        while (length < this.pos + min) length *= 2;\n\n        if (length !== this.length) {\n            var buf = new Uint8Array(length);\n            buf.set(this.buf);\n            this.buf = buf;\n            this.length = length;\n        }\n    },\n\n    finish: function() {\n        this.length = this.pos;\n        this.pos = 0;\n        return this.buf.subarray(0, this.length);\n    },\n\n    writeFixed32: function(val) {\n        this.realloc(4);\n        writeInt32(this.buf, val, this.pos);\n        this.pos += 4;\n    },\n\n    writeSFixed32: function(val) {\n        this.realloc(4);\n        writeInt32(this.buf, val, this.pos);\n        this.pos += 4;\n    },\n\n    writeFixed64: function(val) {\n        this.realloc(8);\n        writeInt32(this.buf, val & -1, this.pos);\n        writeInt32(this.buf, Math.floor(val * SHIFT_RIGHT_32), this.pos + 4);\n        this.pos += 8;\n    },\n\n    writeSFixed64: function(val) {\n        this.realloc(8);\n        writeInt32(this.buf, val & -1, this.pos);\n        writeInt32(this.buf, Math.floor(val * SHIFT_RIGHT_32), this.pos + 4);\n        this.pos += 8;\n    },\n\n    writeVarint: function(val) {\n        val = +val || 0;\n\n        if (val > 0xfffffff || val < 0) {\n            writeBigVarint(val, this);\n            return;\n        }\n\n        this.realloc(4);\n\n        this.buf[this.pos++] =           val & 0x7f  | (val > 0x7f ? 0x80 : 0); if (val <= 0x7f) return;\n        this.buf[this.pos++] = ((val >>>= 7) & 0x7f) | (val > 0x7f ? 0x80 : 0); if (val <= 0x7f) return;\n        this.buf[this.pos++] = ((val >>>= 7) & 0x7f) | (val > 0x7f ? 0x80 : 0); if (val <= 0x7f) return;\n        this.buf[this.pos++] =   (val >>> 7) & 0x7f;\n    },\n\n    writeSVarint: function(val) {\n        this.writeVarint(val < 0 ? -val * 2 - 1 : val * 2);\n    },\n\n    writeBoolean: function(val) {\n        this.writeVarint(Boolean(val));\n    },\n\n    writeString: function(str) {\n        str = String(str);\n        this.realloc(str.length * 4);\n\n        this.pos++; // reserve 1 byte for short string length\n\n        var startPos = this.pos;\n        // write the string directly to the buffer and see how much was written\n        this.pos = writeUtf8(this.buf, str, this.pos);\n        var len = this.pos - startPos;\n\n        if (len >= 0x80) makeRoomForExtraLength(startPos, len, this);\n\n        // finally, write the message length in the reserved place and restore the position\n        this.pos = startPos - 1;\n        this.writeVarint(len);\n        this.pos += len;\n    },\n\n    writeFloat: function(val) {\n        this.realloc(4);\n        ieee754.write(this.buf, val, this.pos, true, 23, 4);\n        this.pos += 4;\n    },\n\n    writeDouble: function(val) {\n        this.realloc(8);\n        ieee754.write(this.buf, val, this.pos, true, 52, 8);\n        this.pos += 8;\n    },\n\n    writeBytes: function(buffer) {\n        var len = buffer.length;\n        this.writeVarint(len);\n        this.realloc(len);\n        for (var i = 0; i < len; i++) this.buf[this.pos++] = buffer[i];\n    },\n\n    writeRawMessage: function(fn, obj) {\n        this.pos++; // reserve 1 byte for short message length\n\n        // write the message directly to the buffer and see how much was written\n        var startPos = this.pos;\n        fn(obj, this);\n        var len = this.pos - startPos;\n\n        if (len >= 0x80) makeRoomForExtraLength(startPos, len, this);\n\n        // finally, write the message length in the reserved place and restore the position\n        this.pos = startPos - 1;\n        this.writeVarint(len);\n        this.pos += len;\n    },\n\n    writeMessage: function(tag, fn, obj) {\n        this.writeTag(tag, Pbf.Bytes);\n        this.writeRawMessage(fn, obj);\n    },\n\n    writePackedVarint:   function(tag, arr) { if (arr.length) this.writeMessage(tag, writePackedVarint, arr);   },\n    writePackedSVarint:  function(tag, arr) { if (arr.length) this.writeMessage(tag, writePackedSVarint, arr);  },\n    writePackedBoolean:  function(tag, arr) { if (arr.length) this.writeMessage(tag, writePackedBoolean, arr);  },\n    writePackedFloat:    function(tag, arr) { if (arr.length) this.writeMessage(tag, writePackedFloat, arr);    },\n    writePackedDouble:   function(tag, arr) { if (arr.length) this.writeMessage(tag, writePackedDouble, arr);   },\n    writePackedFixed32:  function(tag, arr) { if (arr.length) this.writeMessage(tag, writePackedFixed32, arr);  },\n    writePackedSFixed32: function(tag, arr) { if (arr.length) this.writeMessage(tag, writePackedSFixed32, arr); },\n    writePackedFixed64:  function(tag, arr) { if (arr.length) this.writeMessage(tag, writePackedFixed64, arr);  },\n    writePackedSFixed64: function(tag, arr) { if (arr.length) this.writeMessage(tag, writePackedSFixed64, arr); },\n\n    writeBytesField: function(tag, buffer) {\n        this.writeTag(tag, Pbf.Bytes);\n        this.writeBytes(buffer);\n    },\n    writeFixed32Field: function(tag, val) {\n        this.writeTag(tag, Pbf.Fixed32);\n        this.writeFixed32(val);\n    },\n    writeSFixed32Field: function(tag, val) {\n        this.writeTag(tag, Pbf.Fixed32);\n        this.writeSFixed32(val);\n    },\n    writeFixed64Field: function(tag, val) {\n        this.writeTag(tag, Pbf.Fixed64);\n        this.writeFixed64(val);\n    },\n    writeSFixed64Field: function(tag, val) {\n        this.writeTag(tag, Pbf.Fixed64);\n        this.writeSFixed64(val);\n    },\n    writeVarintField: function(tag, val) {\n        this.writeTag(tag, Pbf.Varint);\n        this.writeVarint(val);\n    },\n    writeSVarintField: function(tag, val) {\n        this.writeTag(tag, Pbf.Varint);\n        this.writeSVarint(val);\n    },\n    writeStringField: function(tag, str) {\n        this.writeTag(tag, Pbf.Bytes);\n        this.writeString(str);\n    },\n    writeFloatField: function(tag, val) {\n        this.writeTag(tag, Pbf.Fixed32);\n        this.writeFloat(val);\n    },\n    writeDoubleField: function(tag, val) {\n        this.writeTag(tag, Pbf.Fixed64);\n        this.writeDouble(val);\n    },\n    writeBooleanField: function(tag, val) {\n        this.writeVarintField(tag, Boolean(val));\n    }\n};\n\nfunction readVarintRemainder(l, s, p) {\n    var buf = p.buf,\n        h, b;\n\n    b = buf[p.pos++]; h  = (b & 0x70) >> 4;  if (b < 0x80) return toNum(l, h, s);\n    b = buf[p.pos++]; h |= (b & 0x7f) << 3;  if (b < 0x80) return toNum(l, h, s);\n    b = buf[p.pos++]; h |= (b & 0x7f) << 10; if (b < 0x80) return toNum(l, h, s);\n    b = buf[p.pos++]; h |= (b & 0x7f) << 17; if (b < 0x80) return toNum(l, h, s);\n    b = buf[p.pos++]; h |= (b & 0x7f) << 24; if (b < 0x80) return toNum(l, h, s);\n    b = buf[p.pos++]; h |= (b & 0x01) << 31; if (b < 0x80) return toNum(l, h, s);\n\n    throw new Error('Expected varint not more than 10 bytes');\n}\n\nfunction readPackedEnd(pbf) {\n    return pbf.type === Pbf.Bytes ?\n        pbf.readVarint() + pbf.pos : pbf.pos + 1;\n}\n\nfunction toNum(low, high, isSigned) {\n    if (isSigned) {\n        return high * 0x100000000 + (low >>> 0);\n    }\n\n    return ((high >>> 0) * 0x100000000) + (low >>> 0);\n}\n\nfunction writeBigVarint(val, pbf) {\n    var low, high;\n\n    if (val >= 0) {\n        low  = (val % 0x100000000) | 0;\n        high = (val / 0x100000000) | 0;\n    } else {\n        low  = ~(-val % 0x100000000);\n        high = ~(-val / 0x100000000);\n\n        if (low ^ 0xffffffff) {\n            low = (low + 1) | 0;\n        } else {\n            low = 0;\n            high = (high + 1) | 0;\n        }\n    }\n\n    if (val >= 0x10000000000000000 || val < -0x10000000000000000) {\n        throw new Error('Given varint doesn\\'t fit into 10 bytes');\n    }\n\n    pbf.realloc(10);\n\n    writeBigVarintLow(low, high, pbf);\n    writeBigVarintHigh(high, pbf);\n}\n\nfunction writeBigVarintLow(low, high, pbf) {\n    pbf.buf[pbf.pos++] = low & 0x7f | 0x80; low >>>= 7;\n    pbf.buf[pbf.pos++] = low & 0x7f | 0x80; low >>>= 7;\n    pbf.buf[pbf.pos++] = low & 0x7f | 0x80; low >>>= 7;\n    pbf.buf[pbf.pos++] = low & 0x7f | 0x80; low >>>= 7;\n    pbf.buf[pbf.pos]   = low & 0x7f;\n}\n\nfunction writeBigVarintHigh(high, pbf) {\n    var lsb = (high & 0x07) << 4;\n\n    pbf.buf[pbf.pos++] |= lsb         | ((high >>>= 3) ? 0x80 : 0); if (!high) return;\n    pbf.buf[pbf.pos++]  = high & 0x7f | ((high >>>= 7) ? 0x80 : 0); if (!high) return;\n    pbf.buf[pbf.pos++]  = high & 0x7f | ((high >>>= 7) ? 0x80 : 0); if (!high) return;\n    pbf.buf[pbf.pos++]  = high & 0x7f | ((high >>>= 7) ? 0x80 : 0); if (!high) return;\n    pbf.buf[pbf.pos++]  = high & 0x7f | ((high >>>= 7) ? 0x80 : 0); if (!high) return;\n    pbf.buf[pbf.pos++]  = high & 0x7f;\n}\n\nfunction makeRoomForExtraLength(startPos, len, pbf) {\n    var extraLen =\n        len <= 0x3fff ? 1 :\n        len <= 0x1fffff ? 2 :\n        len <= 0xfffffff ? 3 : Math.floor(Math.log(len) / (Math.LN2 * 7));\n\n    // if 1 byte isn't enough for encoding message length, shift the data to the right\n    pbf.realloc(extraLen);\n    for (var i = pbf.pos - 1; i >= startPos; i--) pbf.buf[i + extraLen] = pbf.buf[i];\n}\n\nfunction writePackedVarint(arr, pbf)   { for (var i = 0; i < arr.length; i++) pbf.writeVarint(arr[i]);   }\nfunction writePackedSVarint(arr, pbf)  { for (var i = 0; i < arr.length; i++) pbf.writeSVarint(arr[i]);  }\nfunction writePackedFloat(arr, pbf)    { for (var i = 0; i < arr.length; i++) pbf.writeFloat(arr[i]);    }\nfunction writePackedDouble(arr, pbf)   { for (var i = 0; i < arr.length; i++) pbf.writeDouble(arr[i]);   }\nfunction writePackedBoolean(arr, pbf)  { for (var i = 0; i < arr.length; i++) pbf.writeBoolean(arr[i]);  }\nfunction writePackedFixed32(arr, pbf)  { for (var i = 0; i < arr.length; i++) pbf.writeFixed32(arr[i]);  }\nfunction writePackedSFixed32(arr, pbf) { for (var i = 0; i < arr.length; i++) pbf.writeSFixed32(arr[i]); }\nfunction writePackedFixed64(arr, pbf)  { for (var i = 0; i < arr.length; i++) pbf.writeFixed64(arr[i]);  }\nfunction writePackedSFixed64(arr, pbf) { for (var i = 0; i < arr.length; i++) pbf.writeSFixed64(arr[i]); }\n\n// Buffer code below from https://github.com/feross/buffer, MIT-licensed\n\nfunction readUInt32(buf, pos) {\n    return ((buf[pos]) |\n        (buf[pos + 1] << 8) |\n        (buf[pos + 2] << 16)) +\n        (buf[pos + 3] * 0x1000000);\n}\n\nfunction writeInt32(buf, val, pos) {\n    buf[pos] = val;\n    buf[pos + 1] = (val >>> 8);\n    buf[pos + 2] = (val >>> 16);\n    buf[pos + 3] = (val >>> 24);\n}\n\nfunction readInt32(buf, pos) {\n    return ((buf[pos]) |\n        (buf[pos + 1] << 8) |\n        (buf[pos + 2] << 16)) +\n        (buf[pos + 3] << 24);\n}\n\nfunction readUtf8(buf, pos, end) {\n    var str = '';\n    var i = pos;\n\n    while (i < end) {\n        var b0 = buf[i];\n        var c = null; // codepoint\n        var bytesPerSequence =\n            b0 > 0xEF ? 4 :\n            b0 > 0xDF ? 3 :\n            b0 > 0xBF ? 2 : 1;\n\n        if (i + bytesPerSequence > end) break;\n\n        var b1, b2, b3;\n\n        if (bytesPerSequence === 1) {\n            if (b0 < 0x80) {\n                c = b0;\n            }\n        } else if (bytesPerSequence === 2) {\n            b1 = buf[i + 1];\n            if ((b1 & 0xC0) === 0x80) {\n                c = (b0 & 0x1F) << 0x6 | (b1 & 0x3F);\n                if (c <= 0x7F) {\n                    c = null;\n                }\n            }\n        } else if (bytesPerSequence === 3) {\n            b1 = buf[i + 1];\n            b2 = buf[i + 2];\n            if ((b1 & 0xC0) === 0x80 && (b2 & 0xC0) === 0x80) {\n                c = (b0 & 0xF) << 0xC | (b1 & 0x3F) << 0x6 | (b2 & 0x3F);\n                if (c <= 0x7FF || (c >= 0xD800 && c <= 0xDFFF)) {\n                    c = null;\n                }\n            }\n        } else if (bytesPerSequence === 4) {\n            b1 = buf[i + 1];\n            b2 = buf[i + 2];\n            b3 = buf[i + 3];\n            if ((b1 & 0xC0) === 0x80 && (b2 & 0xC0) === 0x80 && (b3 & 0xC0) === 0x80) {\n                c = (b0 & 0xF) << 0x12 | (b1 & 0x3F) << 0xC | (b2 & 0x3F) << 0x6 | (b3 & 0x3F);\n                if (c <= 0xFFFF || c >= 0x110000) {\n                    c = null;\n                }\n            }\n        }\n\n        if (c === null) {\n            c = 0xFFFD;\n            bytesPerSequence = 1;\n\n        } else if (c > 0xFFFF) {\n            c -= 0x10000;\n            str += String.fromCharCode(c >>> 10 & 0x3FF | 0xD800);\n            c = 0xDC00 | c & 0x3FF;\n        }\n\n        str += String.fromCharCode(c);\n        i += bytesPerSequence;\n    }\n\n    return str;\n}\n\nfunction readUtf8TextDecoder(buf, pos, end) {\n    return utf8TextDecoder.decode(buf.subarray(pos, end));\n}\n\nfunction writeUtf8(buf, str, pos) {\n    for (var i = 0, c, lead; i < str.length; i++) {\n        c = str.charCodeAt(i); // code point\n\n        if (c > 0xD7FF && c < 0xE000) {\n            if (lead) {\n                if (c < 0xDC00) {\n                    buf[pos++] = 0xEF;\n                    buf[pos++] = 0xBF;\n                    buf[pos++] = 0xBD;\n                    lead = c;\n                    continue;\n                } else {\n                    c = lead - 0xD800 << 10 | c - 0xDC00 | 0x10000;\n                    lead = null;\n                }\n            } else {\n                if (c > 0xDBFF || (i + 1 === str.length)) {\n                    buf[pos++] = 0xEF;\n                    buf[pos++] = 0xBF;\n                    buf[pos++] = 0xBD;\n                } else {\n                    lead = c;\n                }\n                continue;\n            }\n        } else if (lead) {\n            buf[pos++] = 0xEF;\n            buf[pos++] = 0xBF;\n            buf[pos++] = 0xBD;\n            lead = null;\n        }\n\n        if (c < 0x80) {\n            buf[pos++] = c;\n        } else {\n            if (c < 0x800) {\n                buf[pos++] = c >> 0x6 | 0xC0;\n            } else {\n                if (c < 0x10000) {\n                    buf[pos++] = c >> 0xC | 0xE0;\n                } else {\n                    buf[pos++] = c >> 0x12 | 0xF0;\n                    buf[pos++] = c >> 0xC & 0x3F | 0x80;\n                }\n                buf[pos++] = c >> 0x6 & 0x3F | 0x80;\n            }\n            buf[pos++] = c & 0x3F | 0x80;\n        }\n    }\n    return pos;\n}\n","!function(t,i){\"object\"==typeof exports&&\"undefined\"!=typeof module?module.exports=i():\"function\"==typeof define&&define.amd?define(i):(t=t||self).RBush=i()}(this,function(){\"use strict\";function t(t,r,e,a,h){!function t(n,r,e,a,h){for(;a>e;){if(a-e>600){var o=a-e+1,s=r-e+1,l=Math.log(o),f=.5*Math.exp(2*l/3),u=.5*Math.sqrt(l*f*(o-f)/o)*(s-o/2<0?-1:1),m=Math.max(e,Math.floor(r-s*f/o+u)),c=Math.min(a,Math.floor(r+(o-s)*f/o+u));t(n,r,m,c,h)}var p=n[r],d=e,x=a;for(i(n,e,r),h(n[a],p)>0&&i(n,e,a);d<x;){for(i(n,d,x),d++,x--;h(n[d],p)<0;)d++;for(;h(n[x],p)>0;)x--}0===h(n[e],p)?i(n,e,x):i(n,++x,a),x<=r&&(e=x+1),r<=x&&(a=x-1)}}(t,r,e||0,a||t.length-1,h||n)}function i(t,i,n){var r=t[i];t[i]=t[n],t[n]=r}function n(t,i){return t<i?-1:t>i?1:0}var r=function(t){void 0===t&&(t=9),this._maxEntries=Math.max(4,t),this._minEntries=Math.max(2,Math.ceil(.4*this._maxEntries)),this.clear()};function e(t,i,n){if(!n)return i.indexOf(t);for(var r=0;r<i.length;r++)if(n(t,i[r]))return r;return-1}function a(t,i){h(t,0,t.children.length,i,t)}function h(t,i,n,r,e){e||(e=p(null)),e.minX=1/0,e.minY=1/0,e.maxX=-1/0,e.maxY=-1/0;for(var a=i;a<n;a++){var h=t.children[a];o(e,t.leaf?r(h):h)}return e}function o(t,i){return t.minX=Math.min(t.minX,i.minX),t.minY=Math.min(t.minY,i.minY),t.maxX=Math.max(t.maxX,i.maxX),t.maxY=Math.max(t.maxY,i.maxY),t}function s(t,i){return t.minX-i.minX}function l(t,i){return t.minY-i.minY}function f(t){return(t.maxX-t.minX)*(t.maxY-t.minY)}function u(t){return t.maxX-t.minX+(t.maxY-t.minY)}function m(t,i){return t.minX<=i.minX&&t.minY<=i.minY&&i.maxX<=t.maxX&&i.maxY<=t.maxY}function c(t,i){return i.minX<=t.maxX&&i.minY<=t.maxY&&i.maxX>=t.minX&&i.maxY>=t.minY}function p(t){return{children:t,height:1,leaf:!0,minX:1/0,minY:1/0,maxX:-1/0,maxY:-1/0}}function d(i,n,r,e,a){for(var h=[n,r];h.length;)if(!((r=h.pop())-(n=h.pop())<=e)){var o=n+Math.ceil((r-n)/e/2)*e;t(i,o,n,r,a),h.push(n,o,o,r)}}return r.prototype.all=function(){return this._all(this.data,[])},r.prototype.search=function(t){var i=this.data,n=[];if(!c(t,i))return n;for(var r=this.toBBox,e=[];i;){for(var a=0;a<i.children.length;a++){var h=i.children[a],o=i.leaf?r(h):h;c(t,o)&&(i.leaf?n.push(h):m(t,o)?this._all(h,n):e.push(h))}i=e.pop()}return n},r.prototype.collides=function(t){var i=this.data;if(!c(t,i))return!1;for(var n=[];i;){for(var r=0;r<i.children.length;r++){var e=i.children[r],a=i.leaf?this.toBBox(e):e;if(c(t,a)){if(i.leaf||m(t,a))return!0;n.push(e)}}i=n.pop()}return!1},r.prototype.load=function(t){if(!t||!t.length)return this;if(t.length<this._minEntries){for(var i=0;i<t.length;i++)this.insert(t[i]);return this}var n=this._build(t.slice(),0,t.length-1,0);if(this.data.children.length)if(this.data.height===n.height)this._splitRoot(this.data,n);else{if(this.data.height<n.height){var r=this.data;this.data=n,n=r}this._insert(n,this.data.height-n.height-1,!0)}else this.data=n;return this},r.prototype.insert=function(t){return t&&this._insert(t,this.data.height-1),this},r.prototype.clear=function(){return this.data=p([]),this},r.prototype.remove=function(t,i){if(!t)return this;for(var n,r,a,h=this.data,o=this.toBBox(t),s=[],l=[];h||s.length;){if(h||(h=s.pop(),r=s[s.length-1],n=l.pop(),a=!0),h.leaf){var f=e(t,h.children,i);if(-1!==f)return h.children.splice(f,1),s.push(h),this._condense(s),this}a||h.leaf||!m(h,o)?r?(n++,h=r.children[n],a=!1):h=null:(s.push(h),l.push(n),n=0,r=h,h=h.children[0])}return this},r.prototype.toBBox=function(t){return t},r.prototype.compareMinX=function(t,i){return t.minX-i.minX},r.prototype.compareMinY=function(t,i){return t.minY-i.minY},r.prototype.toJSON=function(){return this.data},r.prototype.fromJSON=function(t){return this.data=t,this},r.prototype._all=function(t,i){for(var n=[];t;)t.leaf?i.push.apply(i,t.children):n.push.apply(n,t.children),t=n.pop();return i},r.prototype._build=function(t,i,n,r){var e,h=n-i+1,o=this._maxEntries;if(h<=o)return a(e=p(t.slice(i,n+1)),this.toBBox),e;r||(r=Math.ceil(Math.log(h)/Math.log(o)),o=Math.ceil(h/Math.pow(o,r-1))),(e=p([])).leaf=!1,e.height=r;var s=Math.ceil(h/o),l=s*Math.ceil(Math.sqrt(o));d(t,i,n,l,this.compareMinX);for(var f=i;f<=n;f+=l){var u=Math.min(f+l-1,n);d(t,f,u,s,this.compareMinY);for(var m=f;m<=u;m+=s){var c=Math.min(m+s-1,u);e.children.push(this._build(t,m,c,r-1))}}return a(e,this.toBBox),e},r.prototype._chooseSubtree=function(t,i,n,r){for(;r.push(i),!i.leaf&&r.length-1!==n;){for(var e=1/0,a=1/0,h=void 0,o=0;o<i.children.length;o++){var s=i.children[o],l=f(s),u=(m=t,c=s,(Math.max(c.maxX,m.maxX)-Math.min(c.minX,m.minX))*(Math.max(c.maxY,m.maxY)-Math.min(c.minY,m.minY))-l);u<a?(a=u,e=l<e?l:e,h=s):u===a&&l<e&&(e=l,h=s)}i=h||i.children[0]}var m,c;return i},r.prototype._insert=function(t,i,n){var r=n?t:this.toBBox(t),e=[],a=this._chooseSubtree(r,this.data,i,e);for(a.children.push(t),o(a,r);i>=0&&e[i].children.length>this._maxEntries;)this._split(e,i),i--;this._adjustParentBBoxes(r,e,i)},r.prototype._split=function(t,i){var n=t[i],r=n.children.length,e=this._minEntries;this._chooseSplitAxis(n,e,r);var h=this._chooseSplitIndex(n,e,r),o=p(n.children.splice(h,n.children.length-h));o.height=n.height,o.leaf=n.leaf,a(n,this.toBBox),a(o,this.toBBox),i?t[i-1].children.push(o):this._splitRoot(n,o)},r.prototype._splitRoot=function(t,i){this.data=p([t,i]),this.data.height=t.height+1,this.data.leaf=!1,a(this.data,this.toBBox)},r.prototype._chooseSplitIndex=function(t,i,n){for(var r,e,a,o,s,l,u,m=1/0,c=1/0,p=i;p<=n-i;p++){var d=h(t,0,p,this.toBBox),x=h(t,p,n,this.toBBox),v=(e=d,a=x,o=void 0,s=void 0,l=void 0,u=void 0,o=Math.max(e.minX,a.minX),s=Math.max(e.minY,a.minY),l=Math.min(e.maxX,a.maxX),u=Math.min(e.maxY,a.maxY),Math.max(0,l-o)*Math.max(0,u-s)),M=f(d)+f(x);v<m?(m=v,r=p,c=M<c?M:c):v===m&&M<c&&(c=M,r=p)}return r||n-i},r.prototype._chooseSplitAxis=function(t,i,n){var r=t.leaf?this.compareMinX:s,e=t.leaf?this.compareMinY:l;this._allDistMargin(t,i,n,r)<this._allDistMargin(t,i,n,e)&&t.children.sort(r)},r.prototype._allDistMargin=function(t,i,n,r){t.children.sort(r);for(var e=this.toBBox,a=h(t,0,i,e),s=h(t,n-i,n,e),l=u(a)+u(s),f=i;f<n-i;f++){var m=t.children[f];o(a,t.leaf?e(m):m),l+=u(a)}for(var c=n-i-1;c>=i;c--){var p=t.children[c];o(s,t.leaf?e(p):p),l+=u(s)}return l},r.prototype._adjustParentBBoxes=function(t,i,n){for(var r=n;r>=0;r--)o(i[r],t)},r.prototype._condense=function(t){for(var i=t.length-1,n=void 0;i>=0;i--)0===t[i].children.length?i>0?(n=t[i-1].children).splice(n.indexOf(t[i]),1):this.clear():a(t[i],this.toBBox)},r});\n","/**\n * @module ol/AssertionError\n */\n\n/** @type {Object<number, string>} */\nconst messages = {\n  1: 'The view center is not defined',\n  2: 'The view resolution is not defined',\n  3: 'The view rotation is not defined',\n  4: '`image` and `src` cannot be provided at the same time',\n  5: '`imgSize` must be set when `image` is provided',\n  7: '`format` must be set when `url` is set',\n  8: 'Unknown `serverType` configured',\n  9: '`url` must be configured or set using `#setUrl()`',\n  10: 'The default `geometryFunction` can only handle `Point` geometries',\n  11: '`options.featureTypes` must be an Array',\n  12: '`options.geometryName` must also be provided when `options.bbox` is set',\n  13: 'Invalid corner',\n  14: 'Invalid color',\n  15: 'Tried to get a value for a key that does not exist in the cache',\n  16: 'Tried to set a value for a key that is used already',\n  17: '`resolutions` must be sorted in descending order',\n  18: 'Either `origin` or `origins` must be configured, never both',\n  19: 'Number of `tileSizes` and `resolutions` must be equal',\n  20: 'Number of `origins` and `resolutions` must be equal',\n  22: 'Either `tileSize` or `tileSizes` must be configured, never both',\n  24: 'Invalid extent or geometry provided as `geometry`',\n  25: 'Cannot fit empty extent provided as `geometry`',\n  26: 'Features must have an id set',\n  27: 'Features must have an id set',\n  28: '`renderMode` must be `\"hybrid\"` or `\"vector\"`',\n  30: 'The passed `feature` was already added to the source',\n  31: 'Tried to enqueue an `element` that was already added to the queue',\n  32: 'Transformation matrix cannot be inverted',\n  33: 'Invalid units',\n  34: 'Invalid geometry layout',\n  36: 'Unknown SRS type',\n  37: 'Unknown geometry type found',\n  38: '`styleMapValue` has an unknown type',\n  39: 'Unknown geometry type',\n  40: 'Expected `feature` to have a geometry',\n  41: 'Expected an `ol/style/Style` or an array of `ol/style/Style.js`',\n  42: 'Question unknown, the answer is 42',\n  43: 'Expected `layers` to be an array or a `Collection`',\n  47: 'Expected `controls` to be an array or an `ol/Collection`',\n  48: 'Expected `interactions` to be an array or an `ol/Collection`',\n  49: 'Expected `overlays` to be an array or an `ol/Collection`',\n  50: '`options.featureTypes` should be an Array',\n  51: 'Either `url` or `tileJSON` options must be provided',\n  52: 'Unknown `serverType` configured',\n  53: 'Unknown `tierSizeCalculation` configured',\n  55: 'The {-y} placeholder requires a tile grid with extent',\n  56: 'mapBrowserEvent must originate from a pointer event',\n  57: 'At least 2 conditions are required',\n  59: 'Invalid command found in the PBF',\n  60: 'Missing or invalid `size`',\n  61: 'Cannot determine IIIF Image API version from provided image information JSON',\n  62: 'A `WebGLArrayBuffer` must either be of type `ELEMENT_ARRAY_BUFFER` or `ARRAY_BUFFER`',\n  64: 'Layer opacity must be a number',\n  66: '`forEachFeatureAtCoordinate` cannot be used on a WebGL layer if the hit detection logic has not been enabled. This is done by providing adequate shaders using the `hitVertexShader` and `hitFragmentShader` properties of `WebGLPointsLayerRenderer`',\n  67: 'A layer can only be added to the map once. Use either `layer.setMap()` or `map.addLayer()`, not both',\n  68: 'A VectorTile source can only be rendered if it has a projection compatible with the view projection',\n  69: '`width` or `height` cannot be provided together with `scale`',\n};\n\n/**\n * Error object thrown when an assertion failed. This is an ECMA-262 Error,\n * extended with a `code` property.\n * See https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Error.\n */\nclass AssertionError extends Error {\n  /**\n   * @param {number} code Error code.\n   */\n  constructor(code) {\n    const message = messages[code];\n\n    super(message);\n\n    /**\n     * Error code. The meaning of the code can be found on\n     * https://openlayers.org/en/latest/doc/errors/ (replace `latest` with\n     * the version found in the OpenLayers script's header comment if a version\n     * other than the latest is used).\n     * @type {number}\n     * @deprecated ol/AssertionError and error codes will be removed in v8.0\n     * @api\n     */\n    this.code = code;\n\n    /**\n     * @type {string}\n     */\n    this.name = 'AssertionError';\n\n    // Re-assign message, see https://github.com/Rich-Harris/buble/issues/40\n    this.message = message;\n  }\n}\n\nexport default AssertionError;\n","/**\n * @module ol/Collection\n */\nimport AssertionError from './AssertionError.js';\nimport BaseObject from './Object.js';\nimport CollectionEventType from './CollectionEventType.js';\nimport Event from './events/Event.js';\n\n/**\n * @enum {string}\n * @private\n */\nconst Property = {\n  LENGTH: 'length',\n};\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/Collection~Collection} instances are instances of this\n * type.\n * @template T\n */\nexport class CollectionEvent extends Event {\n  /**\n   * @param {import(\"./CollectionEventType.js\").default} type Type.\n   * @param {T} element Element.\n   * @param {number} index The index of the added or removed element.\n   */\n  constructor(type, element, index) {\n    super(type);\n\n    /**\n     * The element that is added to or removed from the collection.\n     * @type {T}\n     * @api\n     */\n    this.element = element;\n\n    /**\n     * The index of the added or removed element.\n     * @type {number}\n     * @api\n     */\n    this.index = index;\n  }\n}\n\n/***\n * @template T\n * @template Return\n * @typedef {import(\"./Observable\").OnSignature<import(\"./Observable\").EventTypes, import(\"./events/Event.js\").default, Return> &\n *   import(\"./Observable\").OnSignature<import(\"./ObjectEventType\").Types|'change:length', import(\"./Object\").ObjectEvent, Return> &\n *   import(\"./Observable\").OnSignature<'add'|'remove', CollectionEvent<T>, Return> &\n *   import(\"./Observable\").CombinedOnSignature<import(\"./Observable\").EventTypes|import(\"./ObjectEventType\").Types|\n *     'change:length'|'add'|'remove',Return>} CollectionOnSignature\n */\n\n/**\n * @typedef {Object} Options\n * @property {boolean} [unique=false] Disallow the same item from being added to\n * the collection twice.\n */\n\n/**\n * @classdesc\n * An expanded version of standard JS Array, adding convenience methods for\n * manipulation. Add and remove changes to the Collection trigger a Collection\n * event. Note that this does not cover changes to the objects _within_ the\n * Collection; they trigger events on the appropriate object, not on the\n * Collection as a whole.\n *\n * @fires CollectionEvent\n *\n * @template T\n * @api\n */\nclass Collection extends BaseObject {\n  /**\n   * @param {Array<T>} [array] Array.\n   * @param {Options} [options] Collection options.\n   */\n  constructor(array, options) {\n    super();\n\n    /***\n     * @type {CollectionOnSignature<T, import(\"./events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {CollectionOnSignature<T, import(\"./events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {CollectionOnSignature<T, void>}\n     */\n    this.un;\n\n    options = options || {};\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.unique_ = !!options.unique;\n\n    /**\n     * @private\n     * @type {!Array<T>}\n     */\n    this.array_ = array ? array : [];\n\n    if (this.unique_) {\n      for (let i = 0, ii = this.array_.length; i < ii; ++i) {\n        this.assertUnique_(this.array_[i], i);\n      }\n    }\n\n    this.updateLength_();\n  }\n\n  /**\n   * Remove all elements from the collection.\n   * @api\n   */\n  clear() {\n    while (this.getLength() > 0) {\n      this.pop();\n    }\n  }\n\n  /**\n   * Add elements to the collection.  This pushes each item in the provided array\n   * to the end of the collection.\n   * @param {!Array<T>} arr Array.\n   * @return {Collection<T>} This collection.\n   * @api\n   */\n  extend(arr) {\n    for (let i = 0, ii = arr.length; i < ii; ++i) {\n      this.push(arr[i]);\n    }\n    return this;\n  }\n\n  /**\n   * Iterate over each element, calling the provided callback.\n   * @param {function(T, number, Array<T>): *} f The function to call\n   *     for every element. This function takes 3 arguments (the element, the\n   *     index and the array). The return value is ignored.\n   * @api\n   */\n  forEach(f) {\n    const array = this.array_;\n    for (let i = 0, ii = array.length; i < ii; ++i) {\n      f(array[i], i, array);\n    }\n  }\n\n  /**\n   * Get a reference to the underlying Array object. Warning: if the array\n   * is mutated, no events will be dispatched by the collection, and the\n   * collection's \"length\" property won't be in sync with the actual length\n   * of the array.\n   * @return {!Array<T>} Array.\n   * @api\n   */\n  getArray() {\n    return this.array_;\n  }\n\n  /**\n   * Get the element at the provided index.\n   * @param {number} index Index.\n   * @return {T} Element.\n   * @api\n   */\n  item(index) {\n    return this.array_[index];\n  }\n\n  /**\n   * Get the length of this collection.\n   * @return {number} The length of the array.\n   * @observable\n   * @api\n   */\n  getLength() {\n    return this.get(Property.LENGTH);\n  }\n\n  /**\n   * Insert an element at the provided index.\n   * @param {number} index Index.\n   * @param {T} elem Element.\n   * @api\n   */\n  insertAt(index, elem) {\n    if (index < 0 || index > this.getLength()) {\n      throw new Error('Index out of bounds: ' + index);\n    }\n    if (this.unique_) {\n      this.assertUnique_(elem);\n    }\n    this.array_.splice(index, 0, elem);\n    this.updateLength_();\n    this.dispatchEvent(\n      new CollectionEvent(CollectionEventType.ADD, elem, index)\n    );\n  }\n\n  /**\n   * Remove the last element of the collection and return it.\n   * Return `undefined` if the collection is empty.\n   * @return {T|undefined} Element.\n   * @api\n   */\n  pop() {\n    return this.removeAt(this.getLength() - 1);\n  }\n\n  /**\n   * Insert the provided element at the end of the collection.\n   * @param {T} elem Element.\n   * @return {number} New length of the collection.\n   * @api\n   */\n  push(elem) {\n    if (this.unique_) {\n      this.assertUnique_(elem);\n    }\n    const n = this.getLength();\n    this.insertAt(n, elem);\n    return this.getLength();\n  }\n\n  /**\n   * Remove the first occurrence of an element from the collection.\n   * @param {T} elem Element.\n   * @return {T|undefined} The removed element or undefined if none found.\n   * @api\n   */\n  remove(elem) {\n    const arr = this.array_;\n    for (let i = 0, ii = arr.length; i < ii; ++i) {\n      if (arr[i] === elem) {\n        return this.removeAt(i);\n      }\n    }\n    return undefined;\n  }\n\n  /**\n   * Remove the element at the provided index and return it.\n   * Return `undefined` if the collection does not contain this index.\n   * @param {number} index Index.\n   * @return {T|undefined} Value.\n   * @api\n   */\n  removeAt(index) {\n    if (index < 0 || index >= this.getLength()) {\n      return undefined;\n    }\n    const prev = this.array_[index];\n    this.array_.splice(index, 1);\n    this.updateLength_();\n    this.dispatchEvent(\n      /** @type {CollectionEvent<T>} */ (\n        new CollectionEvent(CollectionEventType.REMOVE, prev, index)\n      )\n    );\n    return prev;\n  }\n\n  /**\n   * Set the element at the provided index.\n   * @param {number} index Index.\n   * @param {T} elem Element.\n   * @api\n   */\n  setAt(index, elem) {\n    const n = this.getLength();\n    if (index >= n) {\n      this.insertAt(index, elem);\n      return;\n    }\n    if (index < 0) {\n      throw new Error('Index out of bounds: ' + index);\n    }\n    if (this.unique_) {\n      this.assertUnique_(elem, index);\n    }\n    const prev = this.array_[index];\n    this.array_[index] = elem;\n    this.dispatchEvent(\n      /** @type {CollectionEvent<T>} */ (\n        new CollectionEvent(CollectionEventType.REMOVE, prev, index)\n      )\n    );\n    this.dispatchEvent(\n      /** @type {CollectionEvent<T>} */ (\n        new CollectionEvent(CollectionEventType.ADD, elem, index)\n      )\n    );\n  }\n\n  /**\n   * @private\n   */\n  updateLength_() {\n    this.set(Property.LENGTH, this.array_.length);\n  }\n\n  /**\n   * @private\n   * @param {T} elem Element.\n   * @param {number} [except] Optional index to ignore.\n   */\n  assertUnique_(elem, except) {\n    for (let i = 0, ii = this.array_.length; i < ii; ++i) {\n      if (this.array_[i] === elem && i !== except) {\n        throw new AssertionError(58);\n      }\n    }\n  }\n}\n\nexport default Collection;\n","/**\n * @module ol/CollectionEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered when an item is added to the collection.\n   * @event module:ol/Collection.CollectionEvent#add\n   * @api\n   */\n  ADD: 'add',\n  /**\n   * Triggered when an item is removed from the collection.\n   * @event module:ol/Collection.CollectionEvent#remove\n   * @api\n   */\n  REMOVE: 'remove',\n};\n","/**\n * @module ol/Disposable\n */\n\n/**\n * @classdesc\n * Objects that need to clean up after themselves.\n */\nclass Disposable {\n  constructor() {\n    /**\n     * The object has already been disposed.\n     * @type {boolean}\n     * @protected\n     */\n    this.disposed = false;\n  }\n\n  /**\n   * Clean up.\n   */\n  dispose() {\n    if (!this.disposed) {\n      this.disposed = true;\n      this.disposeInternal();\n    }\n  }\n\n  /**\n   * Extension point for disposable objects.\n   * @protected\n   */\n  disposeInternal() {}\n}\n\nexport default Disposable;\n","/**\n * @module ol/Image\n */\nimport EventType from './events/EventType.js';\nimport ImageBase from './ImageBase.js';\nimport ImageState from './ImageState.js';\nimport {IMAGE_DECODE} from './has.js';\nimport {getHeight} from './extent.js';\nimport {listenOnce, unlistenByKey} from './events.js';\n\n/**\n * A function that takes an {@link module:ol/Image~ImageWrapper} for the image and a\n * `{string}` for the src as arguments. It is supposed to make it so the\n * underlying image {@link module:ol/Image~ImageWrapper#getImage} is assigned the\n * content specified by the src. If not specified, the default is\n *\n *     function(image, src) {\n *       image.getImage().src = src;\n *     }\n *\n * Providing a custom `imageLoadFunction` can be useful to load images with\n * post requests or - in general - through XHR requests, where the src of the\n * image element would be set to a data URI when the content is loaded.\n *\n * @typedef {function(ImageWrapper, string): void} LoadFunction\n * @api\n */\n\nclass ImageWrapper extends ImageBase {\n  /**\n   * @param {import(\"./extent.js\").Extent} extent Extent.\n   * @param {number|undefined} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {string} src Image source URI.\n   * @param {?string} crossOrigin Cross origin.\n   * @param {LoadFunction} imageLoadFunction Image load function.\n   * @param {CanvasRenderingContext2D} [context] Canvas context. When provided, the image will be\n   *    drawn into the context's canvas, and `getImage()` will return the canvas once the image\n   *    has finished loading.\n   */\n  constructor(\n    extent,\n    resolution,\n    pixelRatio,\n    src,\n    crossOrigin,\n    imageLoadFunction,\n    context\n  ) {\n    super(extent, resolution, pixelRatio, ImageState.IDLE);\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.src_ = src;\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement}\n     */\n    this.image_ = new Image();\n    if (crossOrigin !== null) {\n      this.image_.crossOrigin = crossOrigin;\n    }\n\n    /**\n     * @private\n     * @type {CanvasRenderingContext2D}\n     */\n    this.context_ = context;\n\n    /**\n     * @private\n     * @type {?function():void}\n     */\n    this.unlisten_ = null;\n\n    /**\n     * @protected\n     * @type {import(\"./ImageState.js\").default}\n     */\n    this.state = ImageState.IDLE;\n\n    /**\n     * @private\n     * @type {LoadFunction}\n     */\n    this.imageLoadFunction_ = imageLoadFunction;\n  }\n\n  /**\n   * @return {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} Image.\n   * @api\n   */\n  getImage() {\n    if (\n      this.state == ImageState.LOADED &&\n      this.context_ &&\n      !(this.image_ instanceof HTMLCanvasElement)\n    ) {\n      const canvas = this.context_.canvas;\n      canvas.width = this.image_.width;\n      canvas.height = this.image_.height;\n      this.context_.drawImage(this.image_, 0, 0);\n      this.image_ = this.context_.canvas;\n    }\n    return this.image_;\n  }\n\n  /**\n   * Tracks loading or read errors.\n   *\n   * @private\n   */\n  handleImageError_() {\n    this.state = ImageState.ERROR;\n    this.unlistenImage_();\n    this.changed();\n  }\n\n  /**\n   * Tracks successful image load.\n   *\n   * @private\n   */\n  handleImageLoad_() {\n    if (this.resolution === undefined) {\n      this.resolution = getHeight(this.extent) / this.image_.height;\n    }\n    this.state = ImageState.LOADED;\n    this.unlistenImage_();\n    this.changed();\n  }\n\n  /**\n   * Load the image or retry if loading previously failed.\n   * Loading is taken care of by the tile queue, and calling this method is\n   * only needed for preloading or for reloading in case of an error.\n   * @api\n   */\n  load() {\n    if (this.state == ImageState.IDLE || this.state == ImageState.ERROR) {\n      this.state = ImageState.LOADING;\n      this.changed();\n      this.imageLoadFunction_(this, this.src_);\n      this.unlisten_ = listenImage(\n        this.image_,\n        this.handleImageLoad_.bind(this),\n        this.handleImageError_.bind(this)\n      );\n    }\n  }\n\n  /**\n   * @param {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} image Image.\n   */\n  setImage(image) {\n    this.image_ = image;\n    this.resolution = getHeight(this.extent) / this.image_.height;\n  }\n\n  /**\n   * Discards event handlers which listen for load completion or errors.\n   *\n   * @private\n   */\n  unlistenImage_() {\n    if (this.unlisten_) {\n      this.unlisten_();\n      this.unlisten_ = null;\n    }\n  }\n}\n\n/**\n * @param {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} image Image element.\n * @param {function():any} loadHandler Load callback function.\n * @param {function():any} errorHandler Error callback function.\n * @return {function():void} Callback to stop listening.\n */\nexport function listenImage(image, loadHandler, errorHandler) {\n  const img = /** @type {HTMLImageElement} */ (image);\n  let listening = true;\n  let decoding = false;\n  let loaded = false;\n\n  const listenerKeys = [\n    listenOnce(img, EventType.LOAD, function () {\n      loaded = true;\n      if (!decoding) {\n        loadHandler();\n      }\n    }),\n  ];\n\n  if (img.src && IMAGE_DECODE) {\n    decoding = true;\n    img\n      .decode()\n      .then(function () {\n        if (listening) {\n          loadHandler();\n        }\n      })\n      .catch(function (error) {\n        if (listening) {\n          if (loaded) {\n            loadHandler();\n          } else {\n            errorHandler();\n          }\n        }\n      });\n  } else {\n    listenerKeys.push(listenOnce(img, EventType.ERROR, errorHandler));\n  }\n\n  return function unlisten() {\n    listening = false;\n    listenerKeys.forEach(unlistenByKey);\n  };\n}\n\nexport default ImageWrapper;\n","/**\n * @module ol/ImageBase\n */\nimport EventTarget from './events/Target.js';\nimport EventType from './events/EventType.js';\nimport {abstract} from './util.js';\n\n/**\n * @abstract\n */\nclass ImageBase extends EventTarget {\n  /**\n   * @param {import(\"./extent.js\").Extent} extent Extent.\n   * @param {number|undefined} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"./ImageState.js\").default} state State.\n   */\n  constructor(extent, resolution, pixelRatio, state) {\n    super();\n\n    /**\n     * @protected\n     * @type {import(\"./extent.js\").Extent}\n     */\n    this.extent = extent;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = pixelRatio;\n\n    /**\n     * @protected\n     * @type {number|undefined}\n     */\n    this.resolution = resolution;\n\n    /**\n     * @protected\n     * @type {import(\"./ImageState.js\").default}\n     */\n    this.state = state;\n  }\n\n  /**\n   * @protected\n   */\n  changed() {\n    this.dispatchEvent(EventType.CHANGE);\n  }\n\n  /**\n   * @return {import(\"./extent.js\").Extent} Extent.\n   */\n  getExtent() {\n    return this.extent;\n  }\n\n  /**\n   * @abstract\n   * @return {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} Image.\n   */\n  getImage() {\n    return abstract();\n  }\n\n  /**\n   * @return {number} PixelRatio.\n   */\n  getPixelRatio() {\n    return this.pixelRatio_;\n  }\n\n  /**\n   * @return {number} Resolution.\n   */\n  getResolution() {\n    return /** @type {number} */ (this.resolution);\n  }\n\n  /**\n   * @return {import(\"./ImageState.js\").default} State.\n   */\n  getState() {\n    return this.state;\n  }\n\n  /**\n   * Load not yet loaded URI.\n   * @abstract\n   */\n  load() {\n    abstract();\n  }\n}\n\nexport default ImageBase;\n","/**\n * @module ol/ImageState\n */\n\n/**\n * @enum {number}\n */\nexport default {\n  IDLE: 0,\n  LOADING: 1,\n  LOADED: 2,\n  ERROR: 3,\n  EMPTY: 4,\n};\n","/**\n * @module ol/ImageTile\n */\nimport Tile from './Tile.js';\nimport TileState from './TileState.js';\nimport {createCanvasContext2D} from './dom.js';\nimport {listenImage} from './Image.js';\n\nclass ImageTile extends Tile {\n  /**\n   * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"./TileState.js\").default} state State.\n   * @param {string} src Image source URI.\n   * @param {?string} crossOrigin Cross origin.\n   * @param {import(\"./Tile.js\").LoadFunction} tileLoadFunction Tile load function.\n   * @param {import(\"./Tile.js\").Options} [options] Tile options.\n   */\n  constructor(tileCoord, state, src, crossOrigin, tileLoadFunction, options) {\n    super(tileCoord, state, options);\n\n    /**\n     * @private\n     * @type {?string}\n     */\n    this.crossOrigin_ = crossOrigin;\n\n    /**\n     * Image URI\n     *\n     * @private\n     * @type {string}\n     */\n    this.src_ = src;\n\n    this.key = src;\n\n    /**\n     * @private\n     * @type {HTMLImageElement|HTMLCanvasElement}\n     */\n    this.image_ = new Image();\n    if (crossOrigin !== null) {\n      this.image_.crossOrigin = crossOrigin;\n    }\n\n    /**\n     * @private\n     * @type {?function():void}\n     */\n    this.unlisten_ = null;\n\n    /**\n     * @private\n     * @type {import(\"./Tile.js\").LoadFunction}\n     */\n    this.tileLoadFunction_ = tileLoadFunction;\n  }\n\n  /**\n   * Get the HTML image element for this tile (may be a Canvas, Image, or Video).\n   * @return {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} Image.\n   * @api\n   */\n  getImage() {\n    return this.image_;\n  }\n\n  /**\n   * Sets an HTML image element for this tile (may be a Canvas or preloaded Image).\n   * @param {HTMLCanvasElement|HTMLImageElement} element Element.\n   */\n  setImage(element) {\n    this.image_ = element;\n    this.state = TileState.LOADED;\n    this.unlistenImage_();\n    this.changed();\n  }\n\n  /**\n   * Tracks loading or read errors.\n   *\n   * @private\n   */\n  handleImageError_() {\n    this.state = TileState.ERROR;\n    this.unlistenImage_();\n    this.image_ = getBlankImage();\n    this.changed();\n  }\n\n  /**\n   * Tracks successful image load.\n   *\n   * @private\n   */\n  handleImageLoad_() {\n    const image = /** @type {HTMLImageElement} */ (this.image_);\n    if (image.naturalWidth && image.naturalHeight) {\n      this.state = TileState.LOADED;\n    } else {\n      this.state = TileState.EMPTY;\n    }\n    this.unlistenImage_();\n    this.changed();\n  }\n\n  /**\n   * Load the image or retry if loading previously failed.\n   * Loading is taken care of by the tile queue, and calling this method is\n   * only needed for preloading or for reloading in case of an error.\n   *\n   * To retry loading tiles on failed requests, use a custom `tileLoadFunction`\n   * that checks for error status codes and reloads only when the status code is\n   * 408, 429, 500, 502, 503 and 504, and only when not too many retries have been\n   * made already:\n   *\n   * ```js\n   * const retryCodes = [408, 429, 500, 502, 503, 504];\n   * const retries = {};\n   * source.setTileLoadFunction((tile, src) => {\n   *   const image = tile.getImage();\n   *   fetch(src)\n   *     .then((response) => {\n   *       if (retryCodes.includes(response.status)) {\n   *         retries[src] = (retries[src] || 0) + 1;\n   *         if (retries[src] <= 3) {\n   *           setTimeout(() => tile.load(), retries[src] * 1000);\n   *         }\n   *         return Promise.reject();\n   *       }\n   *       return response.blob();\n   *     })\n   *     .then((blob) => {\n   *       const imageUrl = URL.createObjectURL(blob);\n   *       image.src = imageUrl;\n   *       setTimeout(() => URL.revokeObjectURL(imageUrl), 5000);\n   *     })\n   *     .catch(() => tile.setState(3)); // error\n   * });\n   * ```\n   *\n   * @api\n   */\n  load() {\n    if (this.state == TileState.ERROR) {\n      this.state = TileState.IDLE;\n      this.image_ = new Image();\n      if (this.crossOrigin_ !== null) {\n        this.image_.crossOrigin = this.crossOrigin_;\n      }\n    }\n    if (this.state == TileState.IDLE) {\n      this.state = TileState.LOADING;\n      this.changed();\n      this.tileLoadFunction_(this, this.src_);\n      this.unlisten_ = listenImage(\n        this.image_,\n        this.handleImageLoad_.bind(this),\n        this.handleImageError_.bind(this)\n      );\n    }\n  }\n\n  /**\n   * Discards event handlers which listen for load completion or errors.\n   *\n   * @private\n   */\n  unlistenImage_() {\n    if (this.unlisten_) {\n      this.unlisten_();\n      this.unlisten_ = null;\n    }\n  }\n}\n\n/**\n * Get a 1-pixel blank image.\n * @return {HTMLCanvasElement} Blank image.\n */\nfunction getBlankImage() {\n  const ctx = createCanvasContext2D(1, 1);\n  ctx.fillStyle = 'rgba(0,0,0,0)';\n  ctx.fillRect(0, 0, 1, 1);\n  return ctx.canvas;\n}\n\nexport default ImageTile;\n","/**\n * @module ol/renderer/Map\n */\nimport Disposable from '../Disposable.js';\nimport {TRUE} from '../functions.js';\nimport {abstract} from '../util.js';\nimport {compose as composeTransform, makeInverse} from '../transform.js';\nimport {getWidth} from '../extent.js';\nimport {shared as iconImageCache} from '../style/IconImageCache.js';\nimport {inView} from '../layer/Layer.js';\nimport {wrapX} from '../coordinate.js';\n\n/**\n * @typedef HitMatch\n * @property {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @property {import(\"../layer/Layer.js\").default} layer Layer.\n * @property {import(\"../geom/SimpleGeometry.js\").default} geometry Geometry.\n * @property {number} distanceSq Squared distance.\n * @property {import(\"./vector.js\").FeatureCallback<T>} callback Callback.\n * @template T\n */\n\n/**\n * @abstract\n */\nclass MapRenderer extends Disposable {\n  /**\n   * @param {import(\"../Map.js\").default} map Map.\n   */\n  constructor(map) {\n    super();\n\n    /**\n     * @private\n     * @type {import(\"../Map.js\").default}\n     */\n    this.map_ = map;\n  }\n\n  /**\n   * @abstract\n   * @param {import(\"../render/EventType.js\").default} type Event type.\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   */\n  dispatchRenderEvent(type, frameState) {\n    abstract();\n  }\n\n  /**\n   * @param {import(\"../Map.js\").FrameState} frameState FrameState.\n   * @protected\n   */\n  calculateMatrices2D(frameState) {\n    const viewState = frameState.viewState;\n    const coordinateToPixelTransform = frameState.coordinateToPixelTransform;\n    const pixelToCoordinateTransform = frameState.pixelToCoordinateTransform;\n\n    composeTransform(\n      coordinateToPixelTransform,\n      frameState.size[0] / 2,\n      frameState.size[1] / 2,\n      1 / viewState.resolution,\n      -1 / viewState.resolution,\n      -viewState.rotation,\n      -viewState.center[0],\n      -viewState.center[1]\n    );\n\n    makeInverse(pixelToCoordinateTransform, coordinateToPixelTransform);\n  }\n\n  /**\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"../Map.js\").FrameState} frameState FrameState.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {boolean} checkWrapped Check for wrapped geometries.\n   * @param {import(\"./vector.js\").FeatureCallback<T>} callback Feature callback.\n   * @param {S} thisArg Value to use as `this` when executing `callback`.\n   * @param {function(this: U, import(\"../layer/Layer.js\").default): boolean} layerFilter Layer filter\n   *     function, only layers which are visible and for which this function\n   *     returns `true` will be tested for features.  By default, all visible\n   *     layers will be tested.\n   * @param {U} thisArg2 Value to use as `this` when executing `layerFilter`.\n   * @return {T|undefined} Callback result.\n   * @template S,T,U\n   */\n  forEachFeatureAtCoordinate(\n    coordinate,\n    frameState,\n    hitTolerance,\n    checkWrapped,\n    callback,\n    thisArg,\n    layerFilter,\n    thisArg2\n  ) {\n    let result;\n    const viewState = frameState.viewState;\n\n    /**\n     * @param {boolean} managed Managed layer.\n     * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n     * @param {import(\"../layer/Layer.js\").default} layer Layer.\n     * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n     * @return {T|undefined} Callback result.\n     */\n    function forEachFeatureAtCoordinate(managed, feature, layer, geometry) {\n      return callback.call(thisArg, feature, managed ? layer : null, geometry);\n    }\n\n    const projection = viewState.projection;\n\n    const translatedCoordinate = wrapX(coordinate.slice(), projection);\n    const offsets = [[0, 0]];\n    if (projection.canWrapX() && checkWrapped) {\n      const projectionExtent = projection.getExtent();\n      const worldWidth = getWidth(projectionExtent);\n      offsets.push([-worldWidth, 0], [worldWidth, 0]);\n    }\n\n    const layerStates = frameState.layerStatesArray;\n    const numLayers = layerStates.length;\n\n    const matches = /** @type {Array<HitMatch<T>>} */ ([]);\n    const tmpCoord = [];\n    for (let i = 0; i < offsets.length; i++) {\n      for (let j = numLayers - 1; j >= 0; --j) {\n        const layerState = layerStates[j];\n        const layer = layerState.layer;\n        if (\n          layer.hasRenderer() &&\n          inView(layerState, viewState) &&\n          layerFilter.call(thisArg2, layer)\n        ) {\n          const layerRenderer = layer.getRenderer();\n          const source = layer.getSource();\n          if (layerRenderer && source) {\n            const coordinates = source.getWrapX()\n              ? translatedCoordinate\n              : coordinate;\n            const callback = forEachFeatureAtCoordinate.bind(\n              null,\n              layerState.managed\n            );\n            tmpCoord[0] = coordinates[0] + offsets[i][0];\n            tmpCoord[1] = coordinates[1] + offsets[i][1];\n            result = layerRenderer.forEachFeatureAtCoordinate(\n              tmpCoord,\n              frameState,\n              hitTolerance,\n              callback,\n              matches\n            );\n          }\n          if (result) {\n            return result;\n          }\n        }\n      }\n    }\n    if (matches.length === 0) {\n      return undefined;\n    }\n    const order = 1 / matches.length;\n    matches.forEach((m, i) => (m.distanceSq += i * order));\n    matches.sort((a, b) => a.distanceSq - b.distanceSq);\n    matches.some((m) => {\n      return (result = m.callback(m.feature, m.layer, m.geometry));\n    });\n    return result;\n  }\n\n  /**\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"../Map.js\").FrameState} frameState FrameState.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {boolean} checkWrapped Check for wrapped geometries.\n   * @param {function(this: U, import(\"../layer/Layer.js\").default): boolean} layerFilter Layer filter\n   *     function, only layers which are visible and for which this function\n   *     returns `true` will be tested for features.  By default, all visible\n   *     layers will be tested.\n   * @param {U} thisArg Value to use as `this` when executing `layerFilter`.\n   * @return {boolean} Is there a feature at the given coordinate?\n   * @template U\n   */\n  hasFeatureAtCoordinate(\n    coordinate,\n    frameState,\n    hitTolerance,\n    checkWrapped,\n    layerFilter,\n    thisArg\n  ) {\n    const hasFeature = this.forEachFeatureAtCoordinate(\n      coordinate,\n      frameState,\n      hitTolerance,\n      checkWrapped,\n      TRUE,\n      this,\n      layerFilter,\n      thisArg\n    );\n\n    return hasFeature !== undefined;\n  }\n\n  /**\n   * @return {import(\"../Map.js\").default} Map.\n   */\n  getMap() {\n    return this.map_;\n  }\n\n  /**\n   * Render.\n   * @abstract\n   * @param {?import(\"../Map.js\").FrameState} frameState Frame state.\n   */\n  renderFrame(frameState) {\n    abstract();\n  }\n\n  /**\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   * @protected\n   */\n  scheduleExpireIconCache(frameState) {\n    if (iconImageCache.canExpireCache()) {\n      frameState.postRenderFunctions.push(expireIconCache);\n    }\n  }\n}\n\n/**\n * @param {import(\"../Map.js\").default} map Map.\n * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n */\nfunction expireIconCache(map, frameState) {\n  iconImageCache.expire();\n}\n\nexport default MapRenderer;\n","/**\n * @module ol/renderer/Composite\n */\nimport MapRenderer from './Map.js';\nimport ObjectEventType from '../ObjectEventType.js';\nimport RenderEvent from '../render/Event.js';\nimport RenderEventType from '../render/EventType.js';\nimport {CLASS_UNSELECTABLE} from '../css.js';\nimport {checkedFonts} from '../render/canvas.js';\nimport {inView} from '../layer/Layer.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport {replaceChildren} from '../dom.js';\n\n/**\n * @classdesc\n * Canvas map renderer.\n * @api\n */\nclass CompositeMapRenderer extends MapRenderer {\n  /**\n   * @param {import(\"../Map.js\").default} map Map.\n   */\n  constructor(map) {\n    super(map);\n\n    /**\n     * @type {import(\"../events.js\").EventsKey}\n     */\n    this.fontChangeListenerKey_ = listen(\n      checkedFonts,\n      ObjectEventType.PROPERTYCHANGE,\n      map.redrawText.bind(map)\n    );\n\n    /**\n     * @private\n     * @type {HTMLDivElement}\n     */\n    this.element_ = document.createElement('div');\n    const style = this.element_.style;\n    style.position = 'absolute';\n    style.width = '100%';\n    style.height = '100%';\n    style.zIndex = '0';\n\n    this.element_.className = CLASS_UNSELECTABLE + ' ol-layers';\n\n    const container = map.getViewport();\n    container.insertBefore(this.element_, container.firstChild || null);\n\n    /**\n     * @private\n     * @type {Array<HTMLElement>}\n     */\n    this.children_ = [];\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.renderedVisible_ = true;\n  }\n\n  /**\n   * @param {import(\"../render/EventType.js\").default} type Event type.\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   */\n  dispatchRenderEvent(type, frameState) {\n    const map = this.getMap();\n    if (map.hasListener(type)) {\n      const event = new RenderEvent(type, undefined, frameState);\n      map.dispatchEvent(event);\n    }\n  }\n\n  disposeInternal() {\n    unlistenByKey(this.fontChangeListenerKey_);\n    this.element_.parentNode.removeChild(this.element_);\n    super.disposeInternal();\n  }\n\n  /**\n   * Render.\n   * @param {?import(\"../Map.js\").FrameState} frameState Frame state.\n   */\n  renderFrame(frameState) {\n    if (!frameState) {\n      if (this.renderedVisible_) {\n        this.element_.style.display = 'none';\n        this.renderedVisible_ = false;\n      }\n      return;\n    }\n\n    this.calculateMatrices2D(frameState);\n    this.dispatchRenderEvent(RenderEventType.PRECOMPOSE, frameState);\n\n    const layerStatesArray = frameState.layerStatesArray.sort(function (a, b) {\n      return a.zIndex - b.zIndex;\n    });\n    const viewState = frameState.viewState;\n\n    this.children_.length = 0;\n    /**\n     * @type {Array<import(\"../layer/BaseVector.js\").default>}\n     */\n    const declutterLayers = [];\n    let previousElement = null;\n    for (let i = 0, ii = layerStatesArray.length; i < ii; ++i) {\n      const layerState = layerStatesArray[i];\n      frameState.layerIndex = i;\n\n      const layer = layerState.layer;\n      const sourceState = layer.getSourceState();\n      if (\n        !inView(layerState, viewState) ||\n        (sourceState != 'ready' && sourceState != 'undefined')\n      ) {\n        layer.unrender();\n        continue;\n      }\n\n      const element = layer.render(frameState, previousElement);\n      if (!element) {\n        continue;\n      }\n      if (element !== previousElement) {\n        this.children_.push(element);\n        previousElement = element;\n      }\n      if ('getDeclutter' in layer) {\n        declutterLayers.push(\n          /** @type {import(\"../layer/BaseVector.js\").default} */ (layer)\n        );\n      }\n    }\n    for (let i = declutterLayers.length - 1; i >= 0; --i) {\n      declutterLayers[i].renderDeclutter(frameState);\n    }\n\n    replaceChildren(this.element_, this.children_);\n\n    this.dispatchRenderEvent(RenderEventType.POSTCOMPOSE, frameState);\n\n    if (!this.renderedVisible_) {\n      this.element_.style.display = '';\n      this.renderedVisible_ = true;\n    }\n\n    this.scheduleExpireIconCache(frameState);\n  }\n}\n\nexport default CompositeMapRenderer;\n","/**\n * @module ol/MapEvent\n */\nimport Event from './events/Event.js';\n\n/**\n * @classdesc\n * Events emitted as map events are instances of this type.\n * See {@link module:ol/Map~Map} for which events trigger a map event.\n */\nclass MapEvent extends Event {\n  /**\n   * @param {string} type Event type.\n   * @param {import(\"./Map.js\").default} map Map.\n   * @param {?import(\"./Map.js\").FrameState} [frameState] Frame state.\n   */\n  constructor(type, map, frameState) {\n    super(type);\n\n    /**\n     * The map where the event occurred.\n     * @type {import(\"./Map.js\").default}\n     * @api\n     */\n    this.map = map;\n\n    /**\n     * The frame state at the time of the event.\n     * @type {?import(\"./Map.js\").FrameState}\n     * @api\n     */\n    this.frameState = frameState !== undefined ? frameState : null;\n  }\n}\n\nexport default MapEvent;\n","/**\n * @module ol/MapBrowserEvent\n */\nimport MapEvent from './MapEvent.js';\n\n/**\n * @classdesc\n * Events emitted as map browser events are instances of this type.\n * See {@link module:ol/Map~Map} for which events trigger a map browser event.\n * @template {UIEvent} EVENT\n */\nclass MapBrowserEvent extends MapEvent {\n  /**\n   * @param {string} type Event type.\n   * @param {import(\"./Map.js\").default} map Map.\n   * @param {EVENT} originalEvent Original event.\n   * @param {boolean} [dragging] Is the map currently being dragged?\n   * @param {import(\"./Map.js\").FrameState} [frameState] Frame state.\n   * @param {Array<PointerEvent>} [activePointers] Active pointers.\n   */\n  constructor(type, map, originalEvent, dragging, frameState, activePointers) {\n    super(type, map, frameState);\n\n    /**\n     * The original browser event.\n     * @const\n     * @type {EVENT}\n     * @api\n     */\n    this.originalEvent = originalEvent;\n\n    /**\n     * The map pixel relative to the viewport corresponding to the original browser event.\n     * @type {?import(\"./pixel.js\").Pixel}\n     */\n    this.pixel_ = null;\n\n    /**\n     * The coordinate in the user projection corresponding to the original browser event.\n     * @type {?import(\"./coordinate.js\").Coordinate}\n     */\n    this.coordinate_ = null;\n\n    /**\n     * Indicates if the map is currently being dragged. Only set for\n     * `POINTERDRAG` and `POINTERMOVE` events. Default is `false`.\n     *\n     * @type {boolean}\n     * @api\n     */\n    this.dragging = dragging !== undefined ? dragging : false;\n\n    /**\n     * @type {Array<PointerEvent>|undefined}\n     */\n    this.activePointers = activePointers;\n  }\n\n  /**\n   * The map pixel relative to the viewport corresponding to the original event.\n   * @type {import(\"./pixel.js\").Pixel}\n   * @api\n   */\n  get pixel() {\n    if (!this.pixel_) {\n      this.pixel_ = this.map.getEventPixel(this.originalEvent);\n    }\n    return this.pixel_;\n  }\n  set pixel(pixel) {\n    this.pixel_ = pixel;\n  }\n\n  /**\n   * The coordinate corresponding to the original browser event.  This will be in the user\n   * projection if one is set.  Otherwise it will be in the view projection.\n   * @type {import(\"./coordinate.js\").Coordinate}\n   * @api\n   */\n  get coordinate() {\n    if (!this.coordinate_) {\n      this.coordinate_ = this.map.getCoordinateFromPixel(this.pixel);\n    }\n    return this.coordinate_;\n  }\n  set coordinate(coordinate) {\n    this.coordinate_ = coordinate;\n  }\n\n  /**\n   * Prevents the default browser action.\n   * See https://developer.mozilla.org/en-US/docs/Web/API/event.preventDefault.\n   * @api\n   */\n  preventDefault() {\n    super.preventDefault();\n    if ('preventDefault' in this.originalEvent) {\n      /** @type {UIEvent} */ (this.originalEvent).preventDefault();\n    }\n  }\n\n  /**\n   * Prevents further propagation of the current event.\n   * See https://developer.mozilla.org/en-US/docs/Web/API/event.stopPropagation.\n   * @api\n   */\n  stopPropagation() {\n    super.stopPropagation();\n    if ('stopPropagation' in this.originalEvent) {\n      /** @type {UIEvent} */ (this.originalEvent).stopPropagation();\n    }\n  }\n}\n\nexport default MapBrowserEvent;\n","/**\n * @module ol/MapBrowserEventType\n */\nimport EventType from './events/EventType.js';\n\n/**\n * Constants for event names.\n * @enum {string}\n */\nexport default {\n  /**\n   * A true single click with no dragging and no double click. Note that this\n   * event is delayed by 250 ms to ensure that it is not a double click.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#singleclick\n   * @api\n   */\n  SINGLECLICK: 'singleclick',\n\n  /**\n   * A click with no dragging. A double click will fire two of this.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#click\n   * @api\n   */\n  CLICK: EventType.CLICK,\n\n  /**\n   * A true double click, with no dragging.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#dblclick\n   * @api\n   */\n  DBLCLICK: EventType.DBLCLICK,\n\n  /**\n   * Triggered when a pointer is dragged.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#pointerdrag\n   * @api\n   */\n  POINTERDRAG: 'pointerdrag',\n\n  /**\n   * Triggered when a pointer is moved. Note that on touch devices this is\n   * triggered when the map is panned, so is not the same as mousemove.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#pointermove\n   * @api\n   */\n  POINTERMOVE: 'pointermove',\n\n  POINTERDOWN: 'pointerdown',\n  POINTERUP: 'pointerup',\n  POINTEROVER: 'pointerover',\n  POINTEROUT: 'pointerout',\n  POINTERENTER: 'pointerenter',\n  POINTERLEAVE: 'pointerleave',\n  POINTERCANCEL: 'pointercancel',\n};\n\n/***\n * @typedef {'singleclick'|'click'|'dblclick'|'pointerdrag'|'pointermove'} Types\n */\n","/**\n * @module ol/pointer/EventType\n */\n\n/**\n * Constants for event names.\n * @enum {string}\n */\nexport default {\n  POINTERMOVE: 'pointermove',\n  POINTERDOWN: 'pointerdown',\n  POINTERUP: 'pointerup',\n  POINTEROVER: 'pointerover',\n  POINTEROUT: 'pointerout',\n  POINTERENTER: 'pointerenter',\n  POINTERLEAVE: 'pointerleave',\n  POINTERCANCEL: 'pointercancel',\n};\n","/**\n * @module ol/MapBrowserEventHandler\n */\n\nimport EventType from './events/EventType.js';\nimport MapBrowserEvent from './MapBrowserEvent.js';\nimport MapBrowserEventType from './MapBrowserEventType.js';\nimport PointerEventType from './pointer/EventType.js';\nimport Target from './events/Target.js';\nimport {PASSIVE_EVENT_LISTENERS} from './has.js';\nimport {listen, unlistenByKey} from './events.js';\n\nclass MapBrowserEventHandler extends Target {\n  /**\n   * @param {import(\"./Map.js\").default} map The map with the viewport to listen to events on.\n   * @param {number} [moveTolerance] The minimal distance the pointer must travel to trigger a move.\n   */\n  constructor(map, moveTolerance) {\n    super(map);\n\n    /**\n     * This is the element that we will listen to the real events on.\n     * @type {import(\"./Map.js\").default}\n     * @private\n     */\n    this.map_ = map;\n\n    /**\n     * @type {any}\n     * @private\n     */\n    this.clickTimeoutId_;\n\n    /**\n     * Emulate dblclick and singleclick. Will be true when only one pointer is active.\n     * @type {boolean}\n     */\n    this.emulateClicks_ = false;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.dragging_ = false;\n\n    /**\n     * @type {!Array<import(\"./events.js\").EventsKey>}\n     * @private\n     */\n    this.dragListenerKeys_ = [];\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.moveTolerance_ = moveTolerance === undefined ? 1 : moveTolerance;\n\n    /**\n     * The most recent \"down\" type event (or null if none have occurred).\n     * Set on pointerdown.\n     * @type {PointerEvent|null}\n     * @private\n     */\n    this.down_ = null;\n\n    const element = this.map_.getViewport();\n\n    /**\n     * @type {Array<PointerEvent>}\n     * @private\n     */\n    this.activePointers_ = [];\n\n    /**\n     * @type {!Object<number, Event>}\n     * @private\n     */\n    this.trackedTouches_ = {};\n\n    this.element_ = element;\n\n    /**\n     * @type {?import(\"./events.js\").EventsKey}\n     * @private\n     */\n    this.pointerdownListenerKey_ = listen(\n      element,\n      PointerEventType.POINTERDOWN,\n      this.handlePointerDown_,\n      this\n    );\n\n    /**\n     * @type {PointerEvent}\n     * @private\n     */\n    this.originalPointerMoveEvent_;\n\n    /**\n     * @type {?import(\"./events.js\").EventsKey}\n     * @private\n     */\n    this.relayedListenerKey_ = listen(\n      element,\n      PointerEventType.POINTERMOVE,\n      this.relayMoveEvent_,\n      this\n    );\n\n    /**\n     * @private\n     */\n    this.boundHandleTouchMove_ = this.handleTouchMove_.bind(this);\n\n    this.element_.addEventListener(\n      EventType.TOUCHMOVE,\n      this.boundHandleTouchMove_,\n      PASSIVE_EVENT_LISTENERS ? {passive: false} : false\n    );\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  emulateClick_(pointerEvent) {\n    let newEvent = new MapBrowserEvent(\n      MapBrowserEventType.CLICK,\n      this.map_,\n      pointerEvent\n    );\n    this.dispatchEvent(newEvent);\n    if (this.clickTimeoutId_ !== undefined) {\n      // double-click\n      clearTimeout(this.clickTimeoutId_);\n      this.clickTimeoutId_ = undefined;\n      newEvent = new MapBrowserEvent(\n        MapBrowserEventType.DBLCLICK,\n        this.map_,\n        pointerEvent\n      );\n      this.dispatchEvent(newEvent);\n    } else {\n      // click\n      this.clickTimeoutId_ = setTimeout(() => {\n        this.clickTimeoutId_ = undefined;\n        const newEvent = new MapBrowserEvent(\n          MapBrowserEventType.SINGLECLICK,\n          this.map_,\n          pointerEvent\n        );\n        this.dispatchEvent(newEvent);\n      }, 250);\n    }\n  }\n\n  /**\n   * Keeps track on how many pointers are currently active.\n   *\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  updateActivePointers_(pointerEvent) {\n    const event = pointerEvent;\n    const id = event.pointerId;\n\n    if (\n      event.type == MapBrowserEventType.POINTERUP ||\n      event.type == MapBrowserEventType.POINTERCANCEL\n    ) {\n      delete this.trackedTouches_[id];\n      for (const pointerId in this.trackedTouches_) {\n        if (this.trackedTouches_[pointerId].target !== event.target) {\n          // Some platforms assign a new pointerId when the target changes.\n          // If this happens, delete one tracked pointer. If there is more\n          // than one tracked pointer for the old target, it will be cleared\n          // by subsequent POINTERUP events from other pointers.\n          delete this.trackedTouches_[pointerId];\n          break;\n        }\n      }\n    } else if (\n      event.type == MapBrowserEventType.POINTERDOWN ||\n      event.type == MapBrowserEventType.POINTERMOVE\n    ) {\n      this.trackedTouches_[id] = event;\n    }\n    this.activePointers_ = Object.values(this.trackedTouches_);\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  handlePointerUp_(pointerEvent) {\n    this.updateActivePointers_(pointerEvent);\n    const newEvent = new MapBrowserEvent(\n      MapBrowserEventType.POINTERUP,\n      this.map_,\n      pointerEvent,\n      undefined,\n      undefined,\n      this.activePointers_\n    );\n    this.dispatchEvent(newEvent);\n\n    // We emulate click events on left mouse button click, touch contact, and pen\n    // contact. isMouseActionButton returns true in these cases (evt.button is set\n    // to 0).\n    // See http://www.w3.org/TR/pointerevents/#button-states\n    // We only fire click, singleclick, and doubleclick if nobody has called\n    // event.preventDefault().\n    if (\n      this.emulateClicks_ &&\n      !newEvent.defaultPrevented &&\n      !this.dragging_ &&\n      this.isMouseActionButton_(pointerEvent)\n    ) {\n      this.emulateClick_(this.down_);\n    }\n\n    if (this.activePointers_.length === 0) {\n      this.dragListenerKeys_.forEach(unlistenByKey);\n      this.dragListenerKeys_.length = 0;\n      this.dragging_ = false;\n      this.down_ = null;\n    }\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @return {boolean} If the left mouse button was pressed.\n   * @private\n   */\n  isMouseActionButton_(pointerEvent) {\n    return pointerEvent.button === 0;\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  handlePointerDown_(pointerEvent) {\n    this.emulateClicks_ = this.activePointers_.length === 0;\n    this.updateActivePointers_(pointerEvent);\n    const newEvent = new MapBrowserEvent(\n      MapBrowserEventType.POINTERDOWN,\n      this.map_,\n      pointerEvent,\n      undefined,\n      undefined,\n      this.activePointers_\n    );\n    this.dispatchEvent(newEvent);\n\n    this.down_ = new PointerEvent(pointerEvent.type, pointerEvent);\n    Object.defineProperty(this.down_, 'target', {\n      writable: false,\n      value: pointerEvent.target,\n    });\n\n    if (this.dragListenerKeys_.length === 0) {\n      const doc = this.map_.getOwnerDocument();\n      this.dragListenerKeys_.push(\n        listen(\n          doc,\n          MapBrowserEventType.POINTERMOVE,\n          this.handlePointerMove_,\n          this\n        ),\n        listen(doc, MapBrowserEventType.POINTERUP, this.handlePointerUp_, this),\n        /* Note that the listener for `pointercancel is set up on\n         * `pointerEventHandler_` and not `documentPointerEventHandler_` like\n         * the `pointerup` and `pointermove` listeners.\n         *\n         * The reason for this is the following: `TouchSource.vacuumTouches_()`\n         * issues `pointercancel` events, when there was no `touchend` for a\n         * `touchstart`. Now, let's say a first `touchstart` is registered on\n         * `pointerEventHandler_`. The `documentPointerEventHandler_` is set up.\n         * But `documentPointerEventHandler_` doesn't know about the first\n         * `touchstart`. If there is no `touchend` for the `touchstart`, we can\n         * only receive a `touchcancel` from `pointerEventHandler_`, because it is\n         * only registered there.\n         */\n        listen(\n          this.element_,\n          MapBrowserEventType.POINTERCANCEL,\n          this.handlePointerUp_,\n          this\n        )\n      );\n      if (this.element_.getRootNode && this.element_.getRootNode() !== doc) {\n        this.dragListenerKeys_.push(\n          listen(\n            this.element_.getRootNode(),\n            MapBrowserEventType.POINTERUP,\n            this.handlePointerUp_,\n            this\n          )\n        );\n      }\n    }\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  handlePointerMove_(pointerEvent) {\n    // Between pointerdown and pointerup, pointermove events are triggered.\n    // To avoid a 'false' touchmove event to be dispatched, we test if the pointer\n    // moved a significant distance.\n    if (this.isMoving_(pointerEvent)) {\n      this.updateActivePointers_(pointerEvent);\n      this.dragging_ = true;\n      const newEvent = new MapBrowserEvent(\n        MapBrowserEventType.POINTERDRAG,\n        this.map_,\n        pointerEvent,\n        this.dragging_,\n        undefined,\n        this.activePointers_\n      );\n      this.dispatchEvent(newEvent);\n    }\n  }\n\n  /**\n   * Wrap and relay a pointermove event.\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  relayMoveEvent_(pointerEvent) {\n    this.originalPointerMoveEvent_ = pointerEvent;\n    const dragging = !!(this.down_ && this.isMoving_(pointerEvent));\n    this.dispatchEvent(\n      new MapBrowserEvent(\n        MapBrowserEventType.POINTERMOVE,\n        this.map_,\n        pointerEvent,\n        dragging\n      )\n    );\n  }\n\n  /**\n   * Flexible handling of a `touch-action: none` css equivalent: because calling\n   * `preventDefault()` on a `pointermove` event does not stop native page scrolling\n   * and zooming, we also listen for `touchmove` and call `preventDefault()` on it\n   * when an interaction (currently `DragPan` handles the event.\n   * @param {TouchEvent} event Event.\n   * @private\n   */\n  handleTouchMove_(event) {\n    // Due to https://github.com/mpizenberg/elm-pep/issues/2, `this.originalPointerMoveEvent_`\n    // may not be initialized yet when we get here on a platform without native pointer events.\n    const originalEvent = this.originalPointerMoveEvent_;\n    if (\n      (!originalEvent || originalEvent.defaultPrevented) &&\n      (typeof event.cancelable !== 'boolean' || event.cancelable === true)\n    ) {\n      event.preventDefault();\n    }\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @return {boolean} Is moving.\n   * @private\n   */\n  isMoving_(pointerEvent) {\n    return (\n      this.dragging_ ||\n      Math.abs(pointerEvent.clientX - this.down_.clientX) >\n        this.moveTolerance_ ||\n      Math.abs(pointerEvent.clientY - this.down_.clientY) > this.moveTolerance_\n    );\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    if (this.relayedListenerKey_) {\n      unlistenByKey(this.relayedListenerKey_);\n      this.relayedListenerKey_ = null;\n    }\n    this.element_.removeEventListener(\n      EventType.TOUCHMOVE,\n      this.boundHandleTouchMove_\n    );\n\n    if (this.pointerdownListenerKey_) {\n      unlistenByKey(this.pointerdownListenerKey_);\n      this.pointerdownListenerKey_ = null;\n    }\n\n    this.dragListenerKeys_.forEach(unlistenByKey);\n    this.dragListenerKeys_.length = 0;\n\n    this.element_ = null;\n    super.disposeInternal();\n  }\n}\n\nexport default MapBrowserEventHandler;\n","/**\n * @module ol/MapEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered after a map frame is rendered.\n   * @event module:ol/MapEvent~MapEvent#postrender\n   * @api\n   */\n  POSTRENDER: 'postrender',\n\n  /**\n   * Triggered when the map starts moving.\n   * @event module:ol/MapEvent~MapEvent#movestart\n   * @api\n   */\n  MOVESTART: 'movestart',\n\n  /**\n   * Triggered after the map is moved.\n   * @event module:ol/MapEvent~MapEvent#moveend\n   * @api\n   */\n  MOVEEND: 'moveend',\n\n  /**\n   * Triggered when loading of additional map data (tiles, images, features) starts.\n   * @event module:ol/MapEvent~MapEvent#loadstart\n   * @api\n   */\n  LOADSTART: 'loadstart',\n\n  /**\n   * Triggered when loading of additional map data has completed.\n   * @event module:ol/MapEvent~MapEvent#loadend\n   * @api\n   */\n  LOADEND: 'loadend',\n};\n\n/***\n * @typedef {'postrender'|'movestart'|'moveend'|'loadstart'|'loadend'} Types\n */\n","/**\n * @module ol/MapProperty\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  LAYERGROUP: 'layergroup',\n  SIZE: 'size',\n  TARGET: 'target',\n  VIEW: 'view',\n};\n","/**\n * @module ol/control/Control\n */\nimport BaseObject from '../Object.js';\nimport MapEventType from '../MapEventType.js';\nimport {VOID} from '../functions.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport {removeNode} from '../dom.js';\n\n/**\n * @typedef {Object} Options\n * @property {HTMLElement} [element] The element is the control's\n * container element. This only needs to be specified if you're developing\n * a custom control.\n * @property {function(import(\"../MapEvent.js\").default):void} [render] Function called when\n * the control should be re-rendered. This is called in a `requestAnimationFrame`\n * callback.\n * @property {HTMLElement|string} [target] Specify a target if you want\n * the control to be rendered outside of the map's viewport.\n */\n\n/**\n * @classdesc\n * A control is a visible widget with a DOM element in a fixed position on the\n * screen. They can involve user input (buttons), or be informational only;\n * the position is determined using CSS. By default these are placed in the\n * container with CSS class name `ol-overlaycontainer-stopevent`, but can use\n * any outside DOM element.\n *\n * This is the base class for controls. You can use it for simple custom\n * controls by creating the element with listeners, creating an instance:\n * ```js\n * const myControl = new Control({element: myElement});\n * ```\n * and then adding this to the map.\n *\n * The main advantage of having this as a control rather than a simple separate\n * DOM element is that preventing propagation is handled for you. Controls\n * will also be objects in a {@link module:ol/Collection~Collection}, so you can use their methods.\n *\n * You can also extend this base for your own control class. See\n * examples/custom-controls for an example of how to do this.\n *\n * @api\n */\nclass Control extends BaseObject {\n  /**\n   * @param {Options} options Control options.\n   */\n  constructor(options) {\n    super();\n\n    const element = options.element;\n    if (element && !options.target && !element.style.pointerEvents) {\n      element.style.pointerEvents = 'auto';\n    }\n\n    /**\n     * @protected\n     * @type {HTMLElement}\n     */\n    this.element = element ? element : null;\n\n    /**\n     * @private\n     * @type {HTMLElement}\n     */\n    this.target_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../Map.js\").default|null}\n     */\n    this.map_ = null;\n\n    /**\n     * @protected\n     * @type {!Array<import(\"../events.js\").EventsKey>}\n     */\n    this.listenerKeys = [];\n\n    if (options.render) {\n      this.render = options.render;\n    }\n\n    if (options.target) {\n      this.setTarget(options.target);\n    }\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    removeNode(this.element);\n    super.disposeInternal();\n  }\n\n  /**\n   * Get the map associated with this control.\n   * @return {import(\"../Map.js\").default|null} Map.\n   * @api\n   */\n  getMap() {\n    return this.map_;\n  }\n\n  /**\n   * Remove the control from its current map and attach it to the new map.\n   * Pass `null` to just remove the control from the current map.\n   * Subclasses may set up event handlers to get notified about changes to\n   * the map here.\n   * @param {import(\"../Map.js\").default|null} map Map.\n   * @api\n   */\n  setMap(map) {\n    if (this.map_) {\n      removeNode(this.element);\n    }\n    for (let i = 0, ii = this.listenerKeys.length; i < ii; ++i) {\n      unlistenByKey(this.listenerKeys[i]);\n    }\n    this.listenerKeys.length = 0;\n    this.map_ = map;\n    if (map) {\n      const target = this.target_\n        ? this.target_\n        : map.getOverlayContainerStopEvent();\n      target.appendChild(this.element);\n      if (this.render !== VOID) {\n        this.listenerKeys.push(\n          listen(map, MapEventType.POSTRENDER, this.render, this)\n        );\n      }\n      map.render();\n    }\n  }\n\n  /**\n   * Renders the control.\n   * @param {import(\"../MapEvent.js\").default} mapEvent Map event.\n   * @api\n   */\n  render(mapEvent) {}\n\n  /**\n   * This function is used to set a target element for the control. It has no\n   * effect if it is called after the control has been added to the map (i.e.\n   * after `setMap` is called on the control). If no `target` is set in the\n   * options passed to the control constructor and if `setTarget` is not called\n   * then the control is added to the map's overlay container.\n   * @param {HTMLElement|string} target Target.\n   * @api\n   */\n  setTarget(target) {\n    this.target_ =\n      typeof target === 'string' ? document.getElementById(target) : target;\n  }\n}\n\nexport default Control;\n","/**\n * @module ol/control/Attribution\n */\nimport Control from './Control.js';\nimport EventType from '../events/EventType.js';\nimport {CLASS_COLLAPSED, CLASS_CONTROL, CLASS_UNSELECTABLE} from '../css.js';\nimport {equals} from '../array.js';\nimport {inView} from '../layer/Layer.js';\nimport {removeChildren, replaceNode} from '../dom.js';\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-attribution'] CSS class name.\n * @property {HTMLElement|string} [target] Specify a target if you\n * want the control to be rendered outside of the map's\n * viewport.\n * @property {boolean} [collapsible] Specify if attributions can\n * be collapsed. If not specified, sources control this behavior with their\n * `attributionsCollapsible` setting.\n * @property {boolean} [collapsed=true] Specify if attributions should\n * be collapsed at startup.\n * @property {string} [tipLabel='Attributions'] Text label to use for the button tip.\n * @property {string|HTMLElement} [label='i'] Text label to use for the\n * collapsed attributions button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [expandClassName=className + '-expand'] CSS class name for the\n * collapsed attributions button.\n * @property {string|HTMLElement} [collapseLabel='›'] Text label to use\n * for the expanded attributions button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [collapseClassName=className + '-collapse'] CSS class name for the\n * expanded attributions button.\n * @property {function(import(\"../MapEvent.js\").default):void} [render] Function called when\n * the control should be re-rendered. This is called in a `requestAnimationFrame`\n * callback.\n */\n\n/**\n * @classdesc\n * Control to show all the attributions associated with the layer sources\n * in the map. This control is one of the default controls included in maps.\n * By default it will show in the bottom right portion of the map, but this can\n * be changed by using a css selector for `.ol-attribution`.\n *\n * @api\n */\nclass Attribution extends Control {\n  /**\n   * @param {Options} [options] Attribution options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    super({\n      element: document.createElement('div'),\n      render: options.render,\n      target: options.target,\n    });\n\n    /**\n     * @private\n     * @type {HTMLElement}\n     */\n    this.ulElement_ = document.createElement('ul');\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.collapsed_ =\n      options.collapsed !== undefined ? options.collapsed : true;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.userCollapsed_ = this.collapsed_;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.overrideCollapsible_ = options.collapsible !== undefined;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.collapsible_ =\n      options.collapsible !== undefined ? options.collapsible : true;\n\n    if (!this.collapsible_) {\n      this.collapsed_ = false;\n    }\n\n    const className =\n      options.className !== undefined ? options.className : 'ol-attribution';\n\n    const tipLabel =\n      options.tipLabel !== undefined ? options.tipLabel : 'Attributions';\n\n    const expandClassName =\n      options.expandClassName !== undefined\n        ? options.expandClassName\n        : className + '-expand';\n\n    const collapseLabel =\n      options.collapseLabel !== undefined ? options.collapseLabel : '\\u203A';\n\n    const collapseClassName =\n      options.collapseClassName !== undefined\n        ? options.collapseClassName\n        : className + '-collapse';\n\n    if (typeof collapseLabel === 'string') {\n      /**\n       * @private\n       * @type {HTMLElement}\n       */\n      this.collapseLabel_ = document.createElement('span');\n      this.collapseLabel_.textContent = collapseLabel;\n      this.collapseLabel_.className = collapseClassName;\n    } else {\n      this.collapseLabel_ = collapseLabel;\n    }\n\n    const label = options.label !== undefined ? options.label : 'i';\n\n    if (typeof label === 'string') {\n      /**\n       * @private\n       * @type {HTMLElement}\n       */\n      this.label_ = document.createElement('span');\n      this.label_.textContent = label;\n      this.label_.className = expandClassName;\n    } else {\n      this.label_ = label;\n    }\n\n    const activeLabel =\n      this.collapsible_ && !this.collapsed_ ? this.collapseLabel_ : this.label_;\n\n    /**\n     * @private\n     * @type {HTMLElement}\n     */\n    this.toggleButton_ = document.createElement('button');\n    this.toggleButton_.setAttribute('type', 'button');\n    this.toggleButton_.setAttribute('aria-expanded', String(!this.collapsed_));\n    this.toggleButton_.title = tipLabel;\n    this.toggleButton_.appendChild(activeLabel);\n\n    this.toggleButton_.addEventListener(\n      EventType.CLICK,\n      this.handleClick_.bind(this),\n      false\n    );\n\n    const cssClasses =\n      className +\n      ' ' +\n      CLASS_UNSELECTABLE +\n      ' ' +\n      CLASS_CONTROL +\n      (this.collapsed_ && this.collapsible_ ? ' ' + CLASS_COLLAPSED : '') +\n      (this.collapsible_ ? '' : ' ol-uncollapsible');\n    const element = this.element;\n    element.className = cssClasses;\n    element.appendChild(this.toggleButton_);\n    element.appendChild(this.ulElement_);\n\n    /**\n     * A list of currently rendered resolutions.\n     * @type {Array<string>}\n     * @private\n     */\n    this.renderedAttributions_ = [];\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.renderedVisible_ = true;\n  }\n\n  /**\n   * Collect a list of visible attributions and set the collapsible state.\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   * @return {Array<string>} Attributions.\n   * @private\n   */\n  collectSourceAttributions_(frameState) {\n    /**\n     * Used to determine if an attribution already exists.\n     * @type {!Object<string, boolean>}\n     */\n    const lookup = {};\n\n    /**\n     * A list of visible attributions.\n     * @type {Array<string>}\n     */\n    const visibleAttributions = [];\n\n    let collapsible = true;\n    const layerStatesArray = frameState.layerStatesArray;\n    for (let i = 0, ii = layerStatesArray.length; i < ii; ++i) {\n      const layerState = layerStatesArray[i];\n      if (!inView(layerState, frameState.viewState)) {\n        continue;\n      }\n\n      const source = /** @type {import(\"../layer/Layer.js\").default} */ (\n        layerState.layer\n      ).getSource();\n      if (!source) {\n        continue;\n      }\n\n      const attributionGetter = source.getAttributions();\n      if (!attributionGetter) {\n        continue;\n      }\n\n      const attributions = attributionGetter(frameState);\n      if (!attributions) {\n        continue;\n      }\n\n      collapsible =\n        collapsible && source.getAttributionsCollapsible() !== false;\n\n      if (Array.isArray(attributions)) {\n        for (let j = 0, jj = attributions.length; j < jj; ++j) {\n          if (!(attributions[j] in lookup)) {\n            visibleAttributions.push(attributions[j]);\n            lookup[attributions[j]] = true;\n          }\n        }\n      } else {\n        if (!(attributions in lookup)) {\n          visibleAttributions.push(attributions);\n          lookup[attributions] = true;\n        }\n      }\n    }\n    if (!this.overrideCollapsible_) {\n      this.setCollapsible(collapsible);\n    }\n    return visibleAttributions;\n  }\n\n  /**\n   * @private\n   * @param {?import(\"../Map.js\").FrameState} frameState Frame state.\n   */\n  updateElement_(frameState) {\n    if (!frameState) {\n      if (this.renderedVisible_) {\n        this.element.style.display = 'none';\n        this.renderedVisible_ = false;\n      }\n      return;\n    }\n\n    const attributions = this.collectSourceAttributions_(frameState);\n\n    const visible = attributions.length > 0;\n    if (this.renderedVisible_ != visible) {\n      this.element.style.display = visible ? '' : 'none';\n      this.renderedVisible_ = visible;\n    }\n\n    if (equals(attributions, this.renderedAttributions_)) {\n      return;\n    }\n\n    removeChildren(this.ulElement_);\n\n    // append the attributions\n    for (let i = 0, ii = attributions.length; i < ii; ++i) {\n      const element = document.createElement('li');\n      element.innerHTML = attributions[i];\n      this.ulElement_.appendChild(element);\n    }\n\n    this.renderedAttributions_ = attributions;\n  }\n\n  /**\n   * @param {MouseEvent} event The event to handle\n   * @private\n   */\n  handleClick_(event) {\n    event.preventDefault();\n    this.handleToggle_();\n    this.userCollapsed_ = this.collapsed_;\n  }\n\n  /**\n   * @private\n   */\n  handleToggle_() {\n    this.element.classList.toggle(CLASS_COLLAPSED);\n    if (this.collapsed_) {\n      replaceNode(this.collapseLabel_, this.label_);\n    } else {\n      replaceNode(this.label_, this.collapseLabel_);\n    }\n    this.collapsed_ = !this.collapsed_;\n    this.toggleButton_.setAttribute('aria-expanded', String(!this.collapsed_));\n  }\n\n  /**\n   * Return `true` if the attribution is collapsible, `false` otherwise.\n   * @return {boolean} True if the widget is collapsible.\n   * @api\n   */\n  getCollapsible() {\n    return this.collapsible_;\n  }\n\n  /**\n   * Set whether the attribution should be collapsible.\n   * @param {boolean} collapsible True if the widget is collapsible.\n   * @api\n   */\n  setCollapsible(collapsible) {\n    if (this.collapsible_ === collapsible) {\n      return;\n    }\n    this.collapsible_ = collapsible;\n    this.element.classList.toggle('ol-uncollapsible');\n    if (this.userCollapsed_) {\n      this.handleToggle_();\n    }\n  }\n\n  /**\n   * Collapse or expand the attribution according to the passed parameter. Will\n   * not do anything if the attribution isn't collapsible or if the current\n   * collapsed state is already the one requested.\n   * @param {boolean} collapsed True if the widget is collapsed.\n   * @api\n   */\n  setCollapsed(collapsed) {\n    this.userCollapsed_ = collapsed;\n    if (!this.collapsible_ || this.collapsed_ === collapsed) {\n      return;\n    }\n    this.handleToggle_();\n  }\n\n  /**\n   * Return `true` when the attribution is currently collapsed or `false`\n   * otherwise.\n   * @return {boolean} True if the widget is collapsed.\n   * @api\n   */\n  getCollapsed() {\n    return this.collapsed_;\n  }\n\n  /**\n   * Update the attribution element.\n   * @param {import(\"../MapEvent.js\").default} mapEvent Map event.\n   * @override\n   */\n  render(mapEvent) {\n    this.updateElement_(mapEvent.frameState);\n  }\n}\n\nexport default Attribution;\n","/**\n * @module ol/control/Rotate\n */\nimport Control from './Control.js';\nimport EventType from '../events/EventType.js';\nimport {CLASS_CONTROL, CLASS_HIDDEN, CLASS_UNSELECTABLE} from '../css.js';\nimport {easeOut} from '../easing.js';\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-rotate'] CSS class name.\n * @property {string|HTMLElement} [label='⇧'] Text label to use for the rotate button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [tipLabel='Reset rotation'] Text label to use for the rotate tip.\n * @property {string} [compassClassName='ol-compass'] CSS class name for the compass.\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {boolean} [autoHide=true] Hide the control when rotation is 0.\n * @property {function(import(\"../MapEvent.js\").default):void} [render] Function called when the control should\n * be re-rendered. This is called in a `requestAnimationFrame` callback.\n * @property {function():void} [resetNorth] Function called when the control is clicked.\n * This will override the default `resetNorth`.\n * @property {HTMLElement|string} [target] Specify a target if you want the control to be\n * rendered outside of the map's viewport.\n */\n\n/**\n * @classdesc\n * A button control to reset rotation to 0.\n * To style this control use css selector `.ol-rotate`. A `.ol-hidden` css\n * selector is added to the button when the rotation is 0.\n *\n * @api\n */\nclass Rotate extends Control {\n  /**\n   * @param {Options} [options] Rotate options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    super({\n      element: document.createElement('div'),\n      render: options.render,\n      target: options.target,\n    });\n\n    const className =\n      options.className !== undefined ? options.className : 'ol-rotate';\n\n    const label = options.label !== undefined ? options.label : '\\u21E7';\n\n    const compassClassName =\n      options.compassClassName !== undefined\n        ? options.compassClassName\n        : 'ol-compass';\n\n    /**\n     * @type {HTMLElement}\n     * @private\n     */\n    this.label_ = null;\n\n    if (typeof label === 'string') {\n      this.label_ = document.createElement('span');\n      this.label_.className = compassClassName;\n      this.label_.textContent = label;\n    } else {\n      this.label_ = label;\n      this.label_.classList.add(compassClassName);\n    }\n\n    const tipLabel = options.tipLabel ? options.tipLabel : 'Reset rotation';\n\n    const button = document.createElement('button');\n    button.className = className + '-reset';\n    button.setAttribute('type', 'button');\n    button.title = tipLabel;\n    button.appendChild(this.label_);\n\n    button.addEventListener(\n      EventType.CLICK,\n      this.handleClick_.bind(this),\n      false\n    );\n\n    const cssClasses =\n      className + ' ' + CLASS_UNSELECTABLE + ' ' + CLASS_CONTROL;\n    const element = this.element;\n    element.className = cssClasses;\n    element.appendChild(button);\n\n    this.callResetNorth_ = options.resetNorth ? options.resetNorth : undefined;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.autoHide_ = options.autoHide !== undefined ? options.autoHide : true;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.rotation_ = undefined;\n\n    if (this.autoHide_) {\n      this.element.classList.add(CLASS_HIDDEN);\n    }\n  }\n\n  /**\n   * @param {MouseEvent} event The event to handle\n   * @private\n   */\n  handleClick_(event) {\n    event.preventDefault();\n    if (this.callResetNorth_ !== undefined) {\n      this.callResetNorth_();\n    } else {\n      this.resetNorth_();\n    }\n  }\n\n  /**\n   * @private\n   */\n  resetNorth_() {\n    const map = this.getMap();\n    const view = map.getView();\n    if (!view) {\n      // the map does not have a view, so we can't act\n      // upon it\n      return;\n    }\n    const rotation = view.getRotation();\n    if (rotation !== undefined) {\n      if (this.duration_ > 0 && rotation % (2 * Math.PI) !== 0) {\n        view.animate({\n          rotation: 0,\n          duration: this.duration_,\n          easing: easeOut,\n        });\n      } else {\n        view.setRotation(0);\n      }\n    }\n  }\n\n  /**\n   * Update the rotate control element.\n   * @param {import(\"../MapEvent.js\").default} mapEvent Map event.\n   * @override\n   */\n  render(mapEvent) {\n    const frameState = mapEvent.frameState;\n    if (!frameState) {\n      return;\n    }\n    const rotation = frameState.viewState.rotation;\n    if (rotation != this.rotation_) {\n      const transform = 'rotate(' + rotation + 'rad)';\n      if (this.autoHide_) {\n        const contains = this.element.classList.contains(CLASS_HIDDEN);\n        if (!contains && rotation === 0) {\n          this.element.classList.add(CLASS_HIDDEN);\n        } else if (contains && rotation !== 0) {\n          this.element.classList.remove(CLASS_HIDDEN);\n        }\n      }\n      this.label_.style.transform = transform;\n    }\n    this.rotation_ = rotation;\n  }\n}\n\nexport default Rotate;\n","/**\n * @module ol/control/Zoom\n */\nimport Control from './Control.js';\nimport EventType from '../events/EventType.js';\nimport {CLASS_CONTROL, CLASS_UNSELECTABLE} from '../css.js';\nimport {easeOut} from '../easing.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {string} [className='ol-zoom'] CSS class name.\n * @property {string} [zoomInClassName=className + '-in'] CSS class name for the zoom-in button.\n * @property {string} [zoomOutClassName=className + '-out'] CSS class name for the zoom-out button.\n * @property {string|HTMLElement} [zoomInLabel='+'] Text label to use for the zoom-in\n * button. Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string|HTMLElement} [zoomOutLabel='–'] Text label to use for the zoom-out button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [zoomInTipLabel='Zoom in'] Text label to use for the button tip.\n * @property {string} [zoomOutTipLabel='Zoom out'] Text label to use for the button tip.\n * @property {number} [delta=1] The zoom delta applied on each click.\n * @property {HTMLElement|string} [target] Specify a target if you want the control to be\n * rendered outside of the map's viewport.\n */\n\n/**\n * @classdesc\n * A control with 2 buttons, one for zoom in and one for zoom out.\n * This control is one of the default controls of a map. To style this control\n * use css selectors `.ol-zoom-in` and `.ol-zoom-out`.\n *\n * @api\n */\nclass Zoom extends Control {\n  /**\n   * @param {Options} [options] Zoom options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    super({\n      element: document.createElement('div'),\n      target: options.target,\n    });\n\n    const className =\n      options.className !== undefined ? options.className : 'ol-zoom';\n\n    const delta = options.delta !== undefined ? options.delta : 1;\n\n    const zoomInClassName =\n      options.zoomInClassName !== undefined\n        ? options.zoomInClassName\n        : className + '-in';\n\n    const zoomOutClassName =\n      options.zoomOutClassName !== undefined\n        ? options.zoomOutClassName\n        : className + '-out';\n\n    const zoomInLabel =\n      options.zoomInLabel !== undefined ? options.zoomInLabel : '+';\n    const zoomOutLabel =\n      options.zoomOutLabel !== undefined ? options.zoomOutLabel : '\\u2013';\n\n    const zoomInTipLabel =\n      options.zoomInTipLabel !== undefined ? options.zoomInTipLabel : 'Zoom in';\n    const zoomOutTipLabel =\n      options.zoomOutTipLabel !== undefined\n        ? options.zoomOutTipLabel\n        : 'Zoom out';\n\n    const inElement = document.createElement('button');\n    inElement.className = zoomInClassName;\n    inElement.setAttribute('type', 'button');\n    inElement.title = zoomInTipLabel;\n    inElement.appendChild(\n      typeof zoomInLabel === 'string'\n        ? document.createTextNode(zoomInLabel)\n        : zoomInLabel\n    );\n\n    inElement.addEventListener(\n      EventType.CLICK,\n      this.handleClick_.bind(this, delta),\n      false\n    );\n\n    const outElement = document.createElement('button');\n    outElement.className = zoomOutClassName;\n    outElement.setAttribute('type', 'button');\n    outElement.title = zoomOutTipLabel;\n    outElement.appendChild(\n      typeof zoomOutLabel === 'string'\n        ? document.createTextNode(zoomOutLabel)\n        : zoomOutLabel\n    );\n\n    outElement.addEventListener(\n      EventType.CLICK,\n      this.handleClick_.bind(this, -delta),\n      false\n    );\n\n    const cssClasses =\n      className + ' ' + CLASS_UNSELECTABLE + ' ' + CLASS_CONTROL;\n    const element = this.element;\n    element.className = cssClasses;\n    element.appendChild(inElement);\n    element.appendChild(outElement);\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n  }\n\n  /**\n   * @param {number} delta Zoom delta.\n   * @param {MouseEvent} event The event to handle\n   * @private\n   */\n  handleClick_(delta, event) {\n    event.preventDefault();\n    this.zoomByDelta_(delta);\n  }\n\n  /**\n   * @param {number} delta Zoom delta.\n   * @private\n   */\n  zoomByDelta_(delta) {\n    const map = this.getMap();\n    const view = map.getView();\n    if (!view) {\n      // the map does not have a view, so we can't act\n      // upon it\n      return;\n    }\n    const currentZoom = view.getZoom();\n    if (currentZoom !== undefined) {\n      const newZoom = view.getConstrainedZoom(currentZoom + delta);\n      if (this.duration_ > 0) {\n        if (view.getAnimating()) {\n          view.cancelAnimations();\n        }\n        view.animate({\n          zoom: newZoom,\n          duration: this.duration_,\n          easing: easeOut,\n        });\n      } else {\n        view.setZoom(newZoom);\n      }\n    }\n  }\n}\n\nexport default Zoom;\n","/**\n * @module ol/interaction/Property\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  ACTIVE: 'active',\n};\n","/**\n * @module ol/interaction/Interaction\n */\nimport BaseObject from '../Object.js';\nimport InteractionProperty from './Property.js';\nimport {easeOut, linear} from '../easing.js';\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types|\n *     'change:active', import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"../ObjectEventType\").Types|\n *     'change:active', Return>} InteractionOnSignature\n */\n\n/**\n * Object literal with config options for interactions.\n * @typedef {Object} InteractionOptions\n * @property {function(import(\"../MapBrowserEvent.js\").default):boolean} handleEvent\n * Method called by the map to notify the interaction that a browser event was\n * dispatched to the map. If the function returns a falsy value, propagation of\n * the event to other interactions in the map's interactions chain will be\n * prevented (this includes functions with no explicit return). The interactions\n * are traversed in reverse order of the interactions collection of the map.\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * User actions that change the state of the map. Some are similar to controls,\n * but are not associated with a DOM element.\n * For example, {@link module:ol/interaction/KeyboardZoom~KeyboardZoom} is\n * functionally the same as {@link module:ol/control/Zoom~Zoom}, but triggered\n * by a keyboard event not a button element event.\n * Although interactions do not have a DOM element, some of them do render\n * vectors and so are visible on the screen.\n * @api\n */\nclass Interaction extends BaseObject {\n  /**\n   * @param {InteractionOptions} [options] Options.\n   */\n  constructor(options) {\n    super();\n\n    /***\n     * @type {InteractionOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {InteractionOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {InteractionOnSignature<void>}\n     */\n    this.un;\n\n    if (options && options.handleEvent) {\n      this.handleEvent = options.handleEvent;\n    }\n\n    /**\n     * @private\n     * @type {import(\"../Map.js\").default|null}\n     */\n    this.map_ = null;\n\n    this.setActive(true);\n  }\n\n  /**\n   * Return whether the interaction is currently active.\n   * @return {boolean} `true` if the interaction is active, `false` otherwise.\n   * @observable\n   * @api\n   */\n  getActive() {\n    return /** @type {boolean} */ (this.get(InteractionProperty.ACTIVE));\n  }\n\n  /**\n   * Get the map associated with this interaction.\n   * @return {import(\"../Map.js\").default|null} Map.\n   * @api\n   */\n  getMap() {\n    return this.map_;\n  }\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent~MapBrowserEvent map browser event}.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   * @api\n   */\n  handleEvent(mapBrowserEvent) {\n    return true;\n  }\n\n  /**\n   * Activate or deactivate the interaction.\n   * @param {boolean} active Active.\n   * @observable\n   * @api\n   */\n  setActive(active) {\n    this.set(InteractionProperty.ACTIVE, active);\n  }\n\n  /**\n   * Remove the interaction from its current map and attach it to the new map.\n   * Subclasses may set up event handlers to get notified about changes to\n   * the map here.\n   * @param {import(\"../Map.js\").default|null} map Map.\n   */\n  setMap(map) {\n    this.map_ = map;\n  }\n}\n\n/**\n * @param {import(\"../View.js\").default} view View.\n * @param {import(\"../coordinate.js\").Coordinate} delta Delta.\n * @param {number} [duration] Duration.\n */\nexport function pan(view, delta, duration) {\n  const currentCenter = view.getCenterInternal();\n  if (currentCenter) {\n    const center = [currentCenter[0] + delta[0], currentCenter[1] + delta[1]];\n    view.animateInternal({\n      duration: duration !== undefined ? duration : 250,\n      easing: linear,\n      center: view.getConstrainedCenter(center),\n    });\n  }\n}\n\n/**\n * @param {import(\"../View.js\").default} view View.\n * @param {number} delta Delta from previous zoom level.\n * @param {import(\"../coordinate.js\").Coordinate} [anchor] Anchor coordinate in the user projection.\n * @param {number} [duration] Duration.\n */\nexport function zoomByDelta(view, delta, anchor, duration) {\n  const currentZoom = view.getZoom();\n\n  if (currentZoom === undefined) {\n    return;\n  }\n\n  const newZoom = view.getConstrainedZoom(currentZoom + delta);\n  const newResolution = view.getResolutionForZoom(newZoom);\n\n  if (view.getAnimating()) {\n    view.cancelAnimations();\n  }\n  view.animate({\n    resolution: newResolution,\n    anchor: anchor,\n    duration: duration !== undefined ? duration : 250,\n    easing: easeOut,\n  });\n}\n\nexport default Interaction;\n","/**\n * @module ol/interaction/DoubleClickZoom\n */\nimport Interaction, {zoomByDelta} from './Interaction.js';\nimport MapBrowserEventType from '../MapBrowserEventType.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {number} [delta=1] The zoom delta applied on each double click.\n */\n\n/**\n * @classdesc\n * Allows the user to zoom by double-clicking on the map.\n * @api\n */\nclass DoubleClickZoom extends Interaction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    super();\n\n    options = options ? options : {};\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.delta_ = options.delta ? options.delta : 1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n  }\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent~MapBrowserEvent map browser event} (if it was a\n   * doubleclick) and eventually zooms the map.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   */\n  handleEvent(mapBrowserEvent) {\n    let stopEvent = false;\n    if (mapBrowserEvent.type == MapBrowserEventType.DBLCLICK) {\n      const browserEvent = /** @type {MouseEvent} */ (\n        mapBrowserEvent.originalEvent\n      );\n      const map = mapBrowserEvent.map;\n      const anchor = mapBrowserEvent.coordinate;\n      const delta = browserEvent.shiftKey ? -this.delta_ : this.delta_;\n      const view = map.getView();\n      zoomByDelta(view, delta, anchor, this.duration_);\n      browserEvent.preventDefault();\n      stopEvent = true;\n    }\n    return !stopEvent;\n  }\n}\n\nexport default DoubleClickZoom;\n","/**\n * @module ol/interaction/Pointer\n */\nimport Interaction from './Interaction.js';\nimport MapBrowserEventType from '../MapBrowserEventType.js';\n\n/**\n * @typedef {Object} Options\n * @property {function(import(\"../MapBrowserEvent.js\").default):boolean} [handleDownEvent]\n * Function handling \"down\" events. If the function returns `true` then a drag\n * sequence is started.\n * @property {function(import(\"../MapBrowserEvent.js\").default):void} [handleDragEvent]\n * Function handling \"drag\" events. This function is called on \"move\" events\n * during a drag sequence.\n * @property {function(import(\"../MapBrowserEvent.js\").default):boolean} [handleEvent]\n * Method called by the map to notify the interaction that a browser event was\n * dispatched to the map. The function may return `false` to prevent the\n * propagation of the event to other interactions in the map's interactions\n * chain.\n * @property {function(import(\"../MapBrowserEvent.js\").default):void} [handleMoveEvent]\n * Function handling \"move\" events. This function is called on \"move\" events.\n * This functions is also called during a drag sequence, so during a drag\n * sequence both the `handleDragEvent` function and this function are called.\n * If `handleDownEvent` is defined and it returns true this function will not\n * be called during a drag sequence.\n * @property {function(import(\"../MapBrowserEvent.js\").default):boolean} [handleUpEvent]\n *  Function handling \"up\" events. If the function returns `false` then the\n * current drag sequence is stopped.\n * @property {function(boolean):boolean} [stopDown]\n * Should the down event be propagated to other interactions, or should be\n * stopped?\n */\n\n/**\n * @classdesc\n * Base class that calls user-defined functions on `down`, `move` and `up`\n * events. This class also manages \"drag sequences\".\n *\n * When the `handleDownEvent` user function returns `true` a drag sequence is\n * started. During a drag sequence the `handleDragEvent` user function is\n * called on `move` events. The drag sequence ends when the `handleUpEvent`\n * user function is called and returns `false`.\n * @api\n */\nclass PointerInteraction extends Interaction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    super(\n      /** @type {import(\"./Interaction.js\").InteractionOptions} */ (options)\n    );\n\n    if (options.handleDownEvent) {\n      this.handleDownEvent = options.handleDownEvent;\n    }\n\n    if (options.handleDragEvent) {\n      this.handleDragEvent = options.handleDragEvent;\n    }\n\n    if (options.handleMoveEvent) {\n      this.handleMoveEvent = options.handleMoveEvent;\n    }\n\n    if (options.handleUpEvent) {\n      this.handleUpEvent = options.handleUpEvent;\n    }\n\n    if (options.stopDown) {\n      this.stopDown = options.stopDown;\n    }\n\n    /**\n     * @type {boolean}\n     * @protected\n     */\n    this.handlingDownUpSequence = false;\n\n    /**\n     * @type {Array<PointerEvent>}\n     * @protected\n     */\n    this.targetPointers = [];\n  }\n\n  /**\n   * Returns the current number of pointers involved in the interaction,\n   * e.g. `2` when two fingers are used.\n   * @return {number} The number of pointers.\n   * @api\n   */\n  getPointerCount() {\n    return this.targetPointers.length;\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   * @protected\n   */\n  handleDownEvent(mapBrowserEvent) {\n    return false;\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @protected\n   */\n  handleDragEvent(mapBrowserEvent) {}\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent~MapBrowserEvent map browser event} and may call into\n   * other functions, if event sequences like e.g. 'drag' or 'down-up' etc. are\n   * detected.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   * @api\n   */\n  handleEvent(mapBrowserEvent) {\n    if (!mapBrowserEvent.originalEvent) {\n      return true;\n    }\n\n    let stopEvent = false;\n    this.updateTrackedPointers_(mapBrowserEvent);\n    if (this.handlingDownUpSequence) {\n      if (mapBrowserEvent.type == MapBrowserEventType.POINTERDRAG) {\n        this.handleDragEvent(mapBrowserEvent);\n        // prevent page scrolling during dragging\n        mapBrowserEvent.originalEvent.preventDefault();\n      } else if (mapBrowserEvent.type == MapBrowserEventType.POINTERUP) {\n        const handledUp = this.handleUpEvent(mapBrowserEvent);\n        this.handlingDownUpSequence =\n          handledUp && this.targetPointers.length > 0;\n      }\n    } else {\n      if (mapBrowserEvent.type == MapBrowserEventType.POINTERDOWN) {\n        const handled = this.handleDownEvent(mapBrowserEvent);\n        this.handlingDownUpSequence = handled;\n        stopEvent = this.stopDown(handled);\n      } else if (mapBrowserEvent.type == MapBrowserEventType.POINTERMOVE) {\n        this.handleMoveEvent(mapBrowserEvent);\n      }\n    }\n    return !stopEvent;\n  }\n\n  /**\n   * Handle pointer move events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @protected\n   */\n  handleMoveEvent(mapBrowserEvent) {}\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   * @protected\n   */\n  handleUpEvent(mapBrowserEvent) {\n    return false;\n  }\n\n  /**\n   * This function is used to determine if \"down\" events should be propagated\n   * to other interactions or should be stopped.\n   * @param {boolean} handled Was the event handled by the interaction?\n   * @return {boolean} Should the `down` event be stopped?\n   */\n  stopDown(handled) {\n    return handled;\n  }\n\n  /**\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @private\n   */\n  updateTrackedPointers_(mapBrowserEvent) {\n    if (mapBrowserEvent.activePointers) {\n      this.targetPointers = mapBrowserEvent.activePointers;\n    }\n  }\n}\n\n/**\n * @param {Array<PointerEvent>} pointerEvents List of events.\n * @return {{clientX: number, clientY: number}} Centroid pixel.\n */\nexport function centroid(pointerEvents) {\n  const length = pointerEvents.length;\n  let clientX = 0;\n  let clientY = 0;\n  for (let i = 0; i < length; i++) {\n    clientX += pointerEvents[i].clientX;\n    clientY += pointerEvents[i].clientY;\n  }\n  return {clientX: clientX / length, clientY: clientY / length};\n}\n\nexport default PointerInteraction;\n","/**\n * @module ol/events/condition\n */\nimport MapBrowserEventType from '../MapBrowserEventType.js';\nimport {FALSE, TRUE} from '../functions.js';\nimport {MAC, WEBKIT} from '../has.js';\nimport {assert} from '../asserts.js';\n\n/**\n * A function that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * `{boolean}`. If the condition is met, true should be returned.\n *\n * @typedef {function(this: ?, import(\"../MapBrowserEvent.js\").default): boolean} Condition\n */\n\n/**\n * Creates a condition function that passes when all provided conditions pass.\n * @param {...Condition} var_args Conditions to check.\n * @return {Condition} Condition function.\n */\nexport function all(var_args) {\n  const conditions = arguments;\n  /**\n   * @param {import(\"../MapBrowserEvent.js\").default} event Event.\n   * @return {boolean} All conditions passed.\n   */\n  return function (event) {\n    let pass = true;\n    for (let i = 0, ii = conditions.length; i < ii; ++i) {\n      pass = pass && conditions[i](event);\n      if (!pass) {\n        break;\n      }\n    }\n    return pass;\n  };\n}\n\n/**\n * Return `true` if only the alt-key is pressed, `false` otherwise (e.g. when\n * additionally the shift-key is pressed).\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the alt key is pressed.\n * @api\n */\nexport const altKeyOnly = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  return (\n    originalEvent.altKey &&\n    !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n    !originalEvent.shiftKey\n  );\n};\n\n/**\n * Return `true` if only the alt-key and shift-key is pressed, `false` otherwise\n * (e.g. when additionally the platform-modifier-key is pressed).\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the alt and shift keys are pressed.\n * @api\n */\nexport const altShiftKeysOnly = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  return (\n    originalEvent.altKey &&\n    !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n    originalEvent.shiftKey\n  );\n};\n\n/**\n * Return `true` if the map has the focus. This condition requires a map target\n * element with a `tabindex` attribute, e.g. `<div id=\"map\" tabindex=\"1\">`.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} event Map browser event.\n * @return {boolean} The map has the focus.\n * @api\n */\nexport const focus = function (event) {\n  const targetElement = event.map.getTargetElement();\n  const activeElement = event.map.getOwnerDocument().activeElement;\n  return targetElement.contains(activeElement);\n};\n\n/**\n * Return `true` if the map has the focus or no 'tabindex' attribute set.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} event Map browser event.\n * @return {boolean} The map container has the focus or no 'tabindex' attribute.\n */\nexport const focusWithTabindex = function (event) {\n  return event.map.getTargetElement().hasAttribute('tabindex')\n    ? focus(event)\n    : true;\n};\n\n/**\n * Return always true.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True.\n * @api\n */\nexport const always = TRUE;\n\n/**\n * Return `true` if the event is a `click` event, `false` otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event is a map `click` event.\n * @api\n */\nexport const click = function (mapBrowserEvent) {\n  return mapBrowserEvent.type == MapBrowserEventType.CLICK;\n};\n\n/**\n * Return `true` if the event has an \"action\"-producing mouse button.\n *\n * By definition, this includes left-click on windows/linux, and left-click\n * without the ctrl key on Macs.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} The result.\n */\nexport const mouseActionButton = function (mapBrowserEvent) {\n  const originalEvent = /** @type {MouseEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  return originalEvent.button == 0 && !(WEBKIT && MAC && originalEvent.ctrlKey);\n};\n\n/**\n * Return always false.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} False.\n * @api\n */\nexport const never = FALSE;\n\n/**\n * Return `true` if the browser event is a `pointermove` event, `false`\n * otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the browser event is a `pointermove` event.\n * @api\n */\nexport const pointerMove = function (mapBrowserEvent) {\n  return mapBrowserEvent.type == 'pointermove';\n};\n\n/**\n * Return `true` if the event is a map `singleclick` event, `false` otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event is a map `singleclick` event.\n * @api\n */\nexport const singleClick = function (mapBrowserEvent) {\n  return mapBrowserEvent.type == MapBrowserEventType.SINGLECLICK;\n};\n\n/**\n * Return `true` if the event is a map `dblclick` event, `false` otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event is a map `dblclick` event.\n * @api\n */\nexport const doubleClick = function (mapBrowserEvent) {\n  return mapBrowserEvent.type == MapBrowserEventType.DBLCLICK;\n};\n\n/**\n * Return `true` if no modifier key (alt-, shift- or platform-modifier-key) is\n * pressed.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True only if there no modifier keys are pressed.\n * @api\n */\nexport const noModifierKeys = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  return (\n    !originalEvent.altKey &&\n    !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n    !originalEvent.shiftKey\n  );\n};\n\n/**\n * Return `true` if only the platform-modifier-key (the meta-key on Mac,\n * ctrl-key otherwise) is pressed, `false` otherwise (e.g. when additionally\n * the shift-key is pressed).\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the platform modifier key is pressed.\n * @api\n */\nexport const platformModifierKeyOnly = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  return (\n    !originalEvent.altKey &&\n    (MAC ? originalEvent.metaKey : originalEvent.ctrlKey) &&\n    !originalEvent.shiftKey\n  );\n};\n\n/**\n * Return `true` if only the shift-key is pressed, `false` otherwise (e.g. when\n * additionally the alt-key is pressed).\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the shift key is pressed.\n * @api\n */\nexport const shiftKeyOnly = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  return (\n    !originalEvent.altKey &&\n    !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n    originalEvent.shiftKey\n  );\n};\n\n/**\n * Return `true` if the target element is not editable, i.e. not an `input`,\n * `select`, or `textarea` element and no `contenteditable` attribute is\n * set or inherited, `false` otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True only if the target element is not editable.\n * @api\n */\nexport const targetNotEditable = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  const tagName = /** @type {Element} */ (originalEvent.target).tagName;\n  return (\n    tagName !== 'INPUT' &&\n    tagName !== 'SELECT' &&\n    tagName !== 'TEXTAREA' &&\n    // `isContentEditable` is only available on `HTMLElement`, but it may also be a\n    // different type like `SVGElement`.\n    // @ts-ignore\n    !originalEvent.target.isContentEditable\n  );\n};\n\n/**\n * Return `true` if the event originates from a mouse device.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event originates from a mouse device.\n * @api\n */\nexport const mouseOnly = function (mapBrowserEvent) {\n  const pointerEvent = /** @type {import(\"../MapBrowserEvent\").default} */ (\n    mapBrowserEvent\n  ).originalEvent;\n  assert(pointerEvent !== undefined, 56); // mapBrowserEvent must originate from a pointer event\n  // see https://www.w3.org/TR/pointerevents/#widl-PointerEvent-pointerType\n  return pointerEvent.pointerType == 'mouse';\n};\n\n/**\n * Return `true` if the event originates from a touchable device.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event originates from a touchable device.\n * @api\n */\nexport const touchOnly = function (mapBrowserEvent) {\n  const pointerEvt = /** @type {import(\"../MapBrowserEvent\").default} */ (\n    mapBrowserEvent\n  ).originalEvent;\n  assert(pointerEvt !== undefined, 56); // mapBrowserEvent must originate from a pointer event\n  // see https://www.w3.org/TR/pointerevents/#widl-PointerEvent-pointerType\n  return pointerEvt.pointerType === 'touch';\n};\n\n/**\n * Return `true` if the event originates from a digital pen.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event originates from a digital pen.\n * @api\n */\nexport const penOnly = function (mapBrowserEvent) {\n  const pointerEvt = /** @type {import(\"../MapBrowserEvent\").default} */ (\n    mapBrowserEvent\n  ).originalEvent;\n  assert(pointerEvt !== undefined, 56); // mapBrowserEvent must originate from a pointer event\n  // see https://www.w3.org/TR/pointerevents/#widl-PointerEvent-pointerType\n  return pointerEvt.pointerType === 'pen';\n};\n\n/**\n * Return `true` if the event originates from a primary pointer in\n * contact with the surface or if the left mouse button is pressed.\n * See https://www.w3.org/TR/pointerevents/#button-states.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event originates from a primary pointer.\n * @api\n */\nexport const primaryAction = function (mapBrowserEvent) {\n  const pointerEvent = /** @type {import(\"../MapBrowserEvent\").default} */ (\n    mapBrowserEvent\n  ).originalEvent;\n  assert(pointerEvent !== undefined, 56); // mapBrowserEvent must originate from a pointer event\n  return pointerEvent.isPrimary && pointerEvent.button === 0;\n};\n","/**\n * @module ol/interaction/DragPan\n */\nimport PointerInteraction, {\n  centroid as centroidFromPointers,\n} from './Pointer.js';\nimport {FALSE} from '../functions.js';\nimport {\n  all,\n  focusWithTabindex,\n  noModifierKeys,\n  primaryAction,\n} from '../events/condition.js';\nimport {easeOut} from '../easing.js';\nimport {\n  rotate as rotateCoordinate,\n  scale as scaleCoordinate,\n} from '../coordinate.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a boolean\n * to indicate whether that event should be handled.\n * Default is {@link module:ol/events/condition.noModifierKeys} and {@link module:ol/events/condition.primaryAction}.\n * @property {boolean} [onFocusOnly=false] When the map's target has a `tabindex` attribute set,\n * the interaction will only handle events when the map has the focus.\n * @property {import(\"../Kinetic.js\").default} [kinetic] Kinetic inertia to apply to the pan.\n */\n\n/**\n * @classdesc\n * Allows the user to pan the map by dragging the map.\n * @api\n */\nclass DragPan extends PointerInteraction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    super({\n      stopDown: FALSE,\n    });\n\n    options = options ? options : {};\n\n    /**\n     * @private\n     * @type {import(\"../Kinetic.js\").default|undefined}\n     */\n    this.kinetic_ = options.kinetic;\n\n    /**\n     * @type {import(\"../pixel.js\").Pixel}\n     */\n    this.lastCentroid = null;\n\n    /**\n     * @type {number}\n     */\n    this.lastPointersCount_;\n\n    /**\n     * @type {boolean}\n     */\n    this.panning_ = false;\n\n    const condition = options.condition\n      ? options.condition\n      : all(noModifierKeys, primaryAction);\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.onFocusOnly\n      ? all(focusWithTabindex, condition)\n      : condition;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.noKinetic_ = false;\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   */\n  handleDragEvent(mapBrowserEvent) {\n    const map = mapBrowserEvent.map;\n    if (!this.panning_) {\n      this.panning_ = true;\n      map.getView().beginInteraction();\n    }\n    const targetPointers = this.targetPointers;\n    const centroid = map.getEventPixel(centroidFromPointers(targetPointers));\n    if (targetPointers.length == this.lastPointersCount_) {\n      if (this.kinetic_) {\n        this.kinetic_.update(centroid[0], centroid[1]);\n      }\n      if (this.lastCentroid) {\n        const delta = [\n          this.lastCentroid[0] - centroid[0],\n          centroid[1] - this.lastCentroid[1],\n        ];\n        const map = mapBrowserEvent.map;\n        const view = map.getView();\n        scaleCoordinate(delta, view.getResolution());\n        rotateCoordinate(delta, view.getRotation());\n        view.adjustCenterInternal(delta);\n      }\n    } else if (this.kinetic_) {\n      // reset so we don't overestimate the kinetic energy after\n      // after one finger down, tiny drag, second finger down\n      this.kinetic_.begin();\n    }\n    this.lastCentroid = centroid;\n    this.lastPointersCount_ = targetPointers.length;\n    mapBrowserEvent.originalEvent.preventDefault();\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleUpEvent(mapBrowserEvent) {\n    const map = mapBrowserEvent.map;\n    const view = map.getView();\n    if (this.targetPointers.length === 0) {\n      if (!this.noKinetic_ && this.kinetic_ && this.kinetic_.end()) {\n        const distance = this.kinetic_.getDistance();\n        const angle = this.kinetic_.getAngle();\n        const center = view.getCenterInternal();\n        const centerpx = map.getPixelFromCoordinateInternal(center);\n        const dest = map.getCoordinateFromPixelInternal([\n          centerpx[0] - distance * Math.cos(angle),\n          centerpx[1] - distance * Math.sin(angle),\n        ]);\n        view.animateInternal({\n          center: view.getConstrainedCenter(dest),\n          duration: 500,\n          easing: easeOut,\n        });\n      }\n      if (this.panning_) {\n        this.panning_ = false;\n        view.endInteraction();\n      }\n      return false;\n    }\n    if (this.kinetic_) {\n      // reset so we don't overestimate the kinetic energy after\n      // after one finger up, tiny drag, second finger up\n      this.kinetic_.begin();\n    }\n    this.lastCentroid = null;\n    return true;\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleDownEvent(mapBrowserEvent) {\n    if (this.targetPointers.length > 0 && this.condition_(mapBrowserEvent)) {\n      const map = mapBrowserEvent.map;\n      const view = map.getView();\n      this.lastCentroid = null;\n      // stop any current animation\n      if (view.getAnimating()) {\n        view.cancelAnimations();\n      }\n      if (this.kinetic_) {\n        this.kinetic_.begin();\n      }\n      // No kinetic as soon as more than one pointer on the screen is\n      // detected. This is to prevent nasty pans after pinch.\n      this.noKinetic_ = this.targetPointers.length > 1;\n      return true;\n    }\n    return false;\n  }\n}\n\nexport default DragPan;\n","/**\n * @module ol/interaction/DragRotate\n */\nimport PointerInteraction from './Pointer.js';\nimport {FALSE} from '../functions.js';\nimport {\n  altShiftKeysOnly,\n  mouseActionButton,\n  mouseOnly,\n} from '../events/condition.js';\nimport {disable} from '../rotationconstraint.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that takes an\n * {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a boolean\n * to indicate whether that event should be handled.\n * Default is {@link module:ol/events/condition.altShiftKeysOnly}.\n * @property {number} [duration=250] Animation duration in milliseconds.\n */\n\n/**\n * @classdesc\n * Allows the user to rotate the map by clicking and dragging on the map,\n * normally combined with an {@link module:ol/events/condition} that limits\n * it to when the alt and shift keys are held down.\n *\n * This interaction is only supported for mouse devices.\n * @api\n */\nclass DragRotate extends PointerInteraction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    super({\n      stopDown: FALSE,\n    });\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.condition ? options.condition : altShiftKeysOnly;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.lastAngle_ = undefined;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   */\n  handleDragEvent(mapBrowserEvent) {\n    if (!mouseOnly(mapBrowserEvent)) {\n      return;\n    }\n\n    const map = mapBrowserEvent.map;\n    const view = map.getView();\n    if (view.getConstraints().rotation === disable) {\n      return;\n    }\n    const size = map.getSize();\n    const offset = mapBrowserEvent.pixel;\n    const theta = Math.atan2(size[1] / 2 - offset[1], offset[0] - size[0] / 2);\n    if (this.lastAngle_ !== undefined) {\n      const delta = theta - this.lastAngle_;\n      view.adjustRotationInternal(-delta);\n    }\n    this.lastAngle_ = theta;\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleUpEvent(mapBrowserEvent) {\n    if (!mouseOnly(mapBrowserEvent)) {\n      return true;\n    }\n\n    const map = mapBrowserEvent.map;\n    const view = map.getView();\n    view.endInteraction(this.duration_);\n    return false;\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleDownEvent(mapBrowserEvent) {\n    if (!mouseOnly(mapBrowserEvent)) {\n      return false;\n    }\n\n    if (\n      mouseActionButton(mapBrowserEvent) &&\n      this.condition_(mapBrowserEvent)\n    ) {\n      const map = mapBrowserEvent.map;\n      map.getView().beginInteraction();\n      this.lastAngle_ = undefined;\n      return true;\n    }\n    return false;\n  }\n}\n\nexport default DragRotate;\n","/**\n * @module ol/render/Box\n */\n\nimport Disposable from '../Disposable.js';\nimport Polygon from '../geom/Polygon.js';\n\nclass RenderBox extends Disposable {\n  /**\n   * @param {string} className CSS class name.\n   */\n  constructor(className) {\n    super();\n\n    /**\n     * @type {import(\"../geom/Polygon.js\").default}\n     * @private\n     */\n    this.geometry_ = null;\n\n    /**\n     * @type {HTMLDivElement}\n     * @private\n     */\n    this.element_ = document.createElement('div');\n    this.element_.style.position = 'absolute';\n    this.element_.style.pointerEvents = 'auto';\n    this.element_.className = 'ol-box ' + className;\n\n    /**\n     * @private\n     * @type {import(\"../Map.js\").default|null}\n     */\n    this.map_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../pixel.js\").Pixel}\n     */\n    this.startPixel_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../pixel.js\").Pixel}\n     */\n    this.endPixel_ = null;\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    this.setMap(null);\n  }\n\n  /**\n   * @private\n   */\n  render_() {\n    const startPixel = this.startPixel_;\n    const endPixel = this.endPixel_;\n    const px = 'px';\n    const style = this.element_.style;\n    style.left = Math.min(startPixel[0], endPixel[0]) + px;\n    style.top = Math.min(startPixel[1], endPixel[1]) + px;\n    style.width = Math.abs(endPixel[0] - startPixel[0]) + px;\n    style.height = Math.abs(endPixel[1] - startPixel[1]) + px;\n  }\n\n  /**\n   * @param {import(\"../Map.js\").default|null} map Map.\n   */\n  setMap(map) {\n    if (this.map_) {\n      this.map_.getOverlayContainer().removeChild(this.element_);\n      const style = this.element_.style;\n      style.left = 'inherit';\n      style.top = 'inherit';\n      style.width = 'inherit';\n      style.height = 'inherit';\n    }\n    this.map_ = map;\n    if (this.map_) {\n      this.map_.getOverlayContainer().appendChild(this.element_);\n    }\n  }\n\n  /**\n   * @param {import(\"../pixel.js\").Pixel} startPixel Start pixel.\n   * @param {import(\"../pixel.js\").Pixel} endPixel End pixel.\n   */\n  setPixels(startPixel, endPixel) {\n    this.startPixel_ = startPixel;\n    this.endPixel_ = endPixel;\n    this.createOrUpdateGeometry();\n    this.render_();\n  }\n\n  /**\n   * Creates or updates the cached geometry.\n   */\n  createOrUpdateGeometry() {\n    const startPixel = this.startPixel_;\n    const endPixel = this.endPixel_;\n    const pixels = [\n      startPixel,\n      [startPixel[0], endPixel[1]],\n      endPixel,\n      [endPixel[0], startPixel[1]],\n    ];\n    const coordinates = pixels.map(\n      this.map_.getCoordinateFromPixelInternal,\n      this.map_\n    );\n    // close the polygon\n    coordinates[4] = coordinates[0].slice();\n    if (!this.geometry_) {\n      this.geometry_ = new Polygon([coordinates]);\n    } else {\n      this.geometry_.setCoordinates([coordinates]);\n    }\n  }\n\n  /**\n   * @return {import(\"../geom/Polygon.js\").default} Geometry.\n   */\n  getGeometry() {\n    return this.geometry_;\n  }\n}\n\nexport default RenderBox;\n","/**\n * @module ol/interaction/DragBox\n */\n// FIXME draw drag box\nimport Event from '../events/Event.js';\nimport PointerInteraction from './Pointer.js';\nimport RenderBox from '../render/Box.js';\nimport {mouseActionButton} from '../events/condition.js';\n\n/**\n * A function that takes a {@link module:ol/MapBrowserEvent~MapBrowserEvent} and two\n * {@link module:ol/pixel~Pixel}s and returns a `{boolean}`. If the condition is met,\n * true should be returned.\n * @typedef {function(this: ?, import(\"../MapBrowserEvent.js\").default, import(\"../pixel.js\").Pixel, import(\"../pixel.js\").Pixel):boolean} EndCondition\n */\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-dragbox'] CSS class name for styling the box.\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a boolean\n * to indicate whether that event should be handled.\n * Default is {@link ol/events/condition~mouseActionButton}.\n * @property {number} [minArea=64] The minimum area of the box in pixel, this value is used by the default\n * `boxEndCondition` function.\n * @property {EndCondition} [boxEndCondition] A function that takes a {@link module:ol/MapBrowserEvent~MapBrowserEvent} and two\n * {@link module:ol/pixel~Pixel}s to indicate whether a `boxend` event should be fired.\n * Default is `true` if the area of the box is bigger than the `minArea` option.\n * @property {function(this:DragBox, import(\"../MapBrowserEvent.js\").default):void} [onBoxEnd] Code to execute just\n * before `boxend` is fired.\n */\n\n/**\n * @enum {string}\n */\nconst DragBoxEventType = {\n  /**\n   * Triggered upon drag box start.\n   * @event DragBoxEvent#boxstart\n   * @api\n   */\n  BOXSTART: 'boxstart',\n\n  /**\n   * Triggered on drag when box is active.\n   * @event DragBoxEvent#boxdrag\n   * @api\n   */\n  BOXDRAG: 'boxdrag',\n\n  /**\n   * Triggered upon drag box end.\n   * @event DragBoxEvent#boxend\n   * @api\n   */\n  BOXEND: 'boxend',\n\n  /**\n   * Triggered upon drag box canceled.\n   * @event DragBoxEvent#boxcancel\n   * @api\n   */\n  BOXCANCEL: 'boxcancel',\n};\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/interaction/DragBox~DragBox} instances are instances of\n * this type.\n */\nexport class DragBoxEvent extends Event {\n  /**\n   * @param {string} type The event type.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate The event coordinate.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Originating event.\n   */\n  constructor(type, coordinate, mapBrowserEvent) {\n    super(type);\n\n    /**\n     * The coordinate of the drag event.\n     * @const\n     * @type {import(\"../coordinate.js\").Coordinate}\n     * @api\n     */\n    this.coordinate = coordinate;\n\n    /**\n     * @const\n     * @type {import(\"../MapBrowserEvent.js\").default}\n     * @api\n     */\n    this.mapBrowserEvent = mapBrowserEvent;\n  }\n}\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types|\n *     'change:active', import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<'boxcancel'|'boxdrag'|'boxend'|'boxstart', DragBoxEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"../ObjectEventType\").Types|\n *     'change:active'|'boxcancel'|'boxdrag'|'boxend', Return>} DragBoxOnSignature\n */\n\n/**\n * @classdesc\n * Allows the user to draw a vector box by clicking and dragging on the map,\n * normally combined with an {@link module:ol/events/condition} that limits\n * it to when the shift or other key is held down. This is used, for example,\n * for zooming to a specific area of the map\n * (see {@link module:ol/interaction/DragZoom~DragZoom} and\n * {@link module:ol/interaction/DragRotateAndZoom~DragRotateAndZoom}).\n *\n * @fires DragBoxEvent\n * @api\n */\nclass DragBox extends PointerInteraction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    super();\n\n    /***\n     * @type {DragBoxOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {DragBoxOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {DragBoxOnSignature<void>}\n     */\n    this.un;\n\n    options = options ? options : {};\n\n    /**\n     * @type {import(\"../render/Box.js\").default}\n     * @private\n     */\n    this.box_ = new RenderBox(options.className || 'ol-dragbox');\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.minArea_ = options.minArea !== undefined ? options.minArea : 64;\n\n    if (options.onBoxEnd) {\n      this.onBoxEnd = options.onBoxEnd;\n    }\n\n    /**\n     * @type {import(\"../pixel.js\").Pixel}\n     * @private\n     */\n    this.startPixel_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.condition ? options.condition : mouseActionButton;\n\n    /**\n     * @private\n     * @type {EndCondition}\n     */\n    this.boxEndCondition_ = options.boxEndCondition\n      ? options.boxEndCondition\n      : this.defaultBoxEndCondition;\n  }\n\n  /**\n   * The default condition for determining whether the boxend event\n   * should fire.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent The originating MapBrowserEvent\n   *     leading to the box end.\n   * @param {import(\"../pixel.js\").Pixel} startPixel The starting pixel of the box.\n   * @param {import(\"../pixel.js\").Pixel} endPixel The end pixel of the box.\n   * @return {boolean} Whether or not the boxend condition should be fired.\n   */\n  defaultBoxEndCondition(mapBrowserEvent, startPixel, endPixel) {\n    const width = endPixel[0] - startPixel[0];\n    const height = endPixel[1] - startPixel[1];\n    return width * width + height * height >= this.minArea_;\n  }\n\n  /**\n   * Returns geometry of last drawn box.\n   * @return {import(\"../geom/Polygon.js\").default} Geometry.\n   * @api\n   */\n  getGeometry() {\n    return this.box_.getGeometry();\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   */\n  handleDragEvent(mapBrowserEvent) {\n    this.box_.setPixels(this.startPixel_, mapBrowserEvent.pixel);\n\n    this.dispatchEvent(\n      new DragBoxEvent(\n        DragBoxEventType.BOXDRAG,\n        mapBrowserEvent.coordinate,\n        mapBrowserEvent\n      )\n    );\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleUpEvent(mapBrowserEvent) {\n    this.box_.setMap(null);\n\n    const completeBox = this.boxEndCondition_(\n      mapBrowserEvent,\n      this.startPixel_,\n      mapBrowserEvent.pixel\n    );\n    if (completeBox) {\n      this.onBoxEnd(mapBrowserEvent);\n    }\n    this.dispatchEvent(\n      new DragBoxEvent(\n        completeBox ? DragBoxEventType.BOXEND : DragBoxEventType.BOXCANCEL,\n        mapBrowserEvent.coordinate,\n        mapBrowserEvent\n      )\n    );\n    return false;\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleDownEvent(mapBrowserEvent) {\n    if (this.condition_(mapBrowserEvent)) {\n      this.startPixel_ = mapBrowserEvent.pixel;\n      this.box_.setMap(mapBrowserEvent.map);\n      this.box_.setPixels(this.startPixel_, this.startPixel_);\n      this.dispatchEvent(\n        new DragBoxEvent(\n          DragBoxEventType.BOXSTART,\n          mapBrowserEvent.coordinate,\n          mapBrowserEvent\n        )\n      );\n      return true;\n    }\n    return false;\n  }\n\n  /**\n   * Function to execute just before `onboxend` is fired\n   * @param {import(\"../MapBrowserEvent.js\").default} event Event.\n   */\n  onBoxEnd(event) {}\n}\n\nexport default DragBox;\n","/**\n * @module ol/interaction/DragZoom\n */\nimport DragBox from './DragBox.js';\nimport {easeOut} from '../easing.js';\nimport {shiftKeyOnly} from '../events/condition.js';\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-dragzoom'] CSS class name for styling the\n * box.\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled.\n * Default is {@link module:ol/events/condition.shiftKeyOnly}.\n * @property {number} [duration=200] Animation duration in milliseconds.\n * @property {boolean} [out=false] Use interaction for zooming out.\n * @property {number} [minArea=64] The minimum area of the box in pixel, this value is used by the parent default\n * `boxEndCondition` function.\n */\n\n/**\n * @classdesc\n * Allows the user to zoom the map by clicking and dragging on the map,\n * normally combined with an {@link module:ol/events/condition} that limits\n * it to when a key, shift by default, is held down.\n *\n * To change the style of the box, use CSS and the `.ol-dragzoom` selector, or\n * your custom one configured with `className`.\n * @api\n */\nclass DragZoom extends DragBox {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    const condition = options.condition ? options.condition : shiftKeyOnly;\n\n    super({\n      condition: condition,\n      className: options.className || 'ol-dragzoom',\n      minArea: options.minArea,\n    });\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 200;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.out_ = options.out !== undefined ? options.out : false;\n  }\n\n  /**\n   * Function to execute just before `onboxend` is fired\n   * @param {import(\"../MapBrowserEvent.js\").default} event Event.\n   */\n  onBoxEnd(event) {\n    const map = this.getMap();\n    const view = /** @type {!import(\"../View.js\").default} */ (map.getView());\n    let geometry = this.getGeometry();\n\n    if (this.out_) {\n      const rotatedExtent = view.rotatedExtentForGeometry(geometry);\n      const resolution = view.getResolutionForExtentInternal(rotatedExtent);\n      const factor = view.getResolution() / resolution;\n      geometry = geometry.clone();\n      geometry.scale(factor * factor);\n    }\n\n    view.fitInternal(geometry, {\n      duration: this.duration_,\n      easing: easeOut,\n    });\n  }\n}\n\nexport default DragZoom;\n","/**\n * @module ol/interaction/KeyboardPan\n */\nimport EventType from '../events/EventType.js';\nimport Interaction, {pan} from './Interaction.js';\nimport KeyCode from '../events/KeyCode.js';\nimport {noModifierKeys, targetNotEditable} from '../events/condition.js';\nimport {rotate as rotateCoordinate} from '../coordinate.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. Default is\n * {@link module:ol/events/condition.noModifierKeys} and\n * {@link module:ol/events/condition.targetNotEditable}.\n * @property {number} [duration=100] Animation duration in milliseconds.\n * @property {number} [pixelDelta=128] The amount of pixels to pan on each key\n * press.\n */\n\n/**\n * @classdesc\n * Allows the user to pan the map using keyboard arrows.\n * Note that, although this interaction is by default included in maps,\n * the keys can only be used when browser focus is on the element to which\n * the keyboard events are attached. By default, this is the map div,\n * though you can change this with the `keyboardEventTarget` in\n * {@link module:ol/Map~Map}. `document` never loses focus but, for any other\n * element, focus will have to be on, and returned to, this element if the keys\n * are to function.\n * See also {@link module:ol/interaction/KeyboardZoom~KeyboardZoom}.\n * @api\n */\nclass KeyboardPan extends Interaction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    super();\n\n    options = options || {};\n\n    /**\n     * @private\n     * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Browser event.\n     * @return {boolean} Combined condition result.\n     */\n    this.defaultCondition_ = function (mapBrowserEvent) {\n      return (\n        noModifierKeys(mapBrowserEvent) && targetNotEditable(mapBrowserEvent)\n      );\n    };\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ =\n      options.condition !== undefined\n        ? options.condition\n        : this.defaultCondition_;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 100;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelDelta_ =\n      options.pixelDelta !== undefined ? options.pixelDelta : 128;\n  }\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent~MapBrowserEvent map browser event} if it was a\n   * `KeyEvent`, and decides the direction to pan to (if an arrow key was\n   * pressed).\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   */\n  handleEvent(mapBrowserEvent) {\n    let stopEvent = false;\n    if (mapBrowserEvent.type == EventType.KEYDOWN) {\n      const keyEvent = /** @type {KeyboardEvent} */ (\n        mapBrowserEvent.originalEvent\n      );\n      const keyCode = keyEvent.keyCode;\n      if (\n        this.condition_(mapBrowserEvent) &&\n        (keyCode == KeyCode.DOWN ||\n          keyCode == KeyCode.LEFT ||\n          keyCode == KeyCode.RIGHT ||\n          keyCode == KeyCode.UP)\n      ) {\n        const map = mapBrowserEvent.map;\n        const view = map.getView();\n        const mapUnitsDelta = view.getResolution() * this.pixelDelta_;\n        let deltaX = 0,\n          deltaY = 0;\n        if (keyCode == KeyCode.DOWN) {\n          deltaY = -mapUnitsDelta;\n        } else if (keyCode == KeyCode.LEFT) {\n          deltaX = -mapUnitsDelta;\n        } else if (keyCode == KeyCode.RIGHT) {\n          deltaX = mapUnitsDelta;\n        } else {\n          deltaY = mapUnitsDelta;\n        }\n        const delta = [deltaX, deltaY];\n        rotateCoordinate(delta, view.getRotation());\n        pan(view, delta, this.duration_);\n        keyEvent.preventDefault();\n        stopEvent = true;\n      }\n    }\n    return !stopEvent;\n  }\n}\n\nexport default KeyboardPan;\n","/**\n * @module ol/events/KeyCode\n */\n\n/**\n * @enum {number}\n * @const\n */\nexport default {\n  LEFT: 37,\n  UP: 38,\n  RIGHT: 39,\n  DOWN: 40,\n};\n","/**\n * @module ol/interaction/KeyboardZoom\n */\nimport EventType from '../events/EventType.js';\nimport Interaction, {zoomByDelta} from './Interaction.js';\nimport {targetNotEditable} from '../events/condition.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=100] Animation duration in milliseconds.\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. Default is\n * {@link module:ol/events/condition.targetNotEditable}.\n * @property {number} [delta=1] The zoom level delta on each key press.\n */\n\n/**\n * @classdesc\n * Allows the user to zoom the map using keyboard + and -.\n * Note that, although this interaction is by default included in maps,\n * the keys can only be used when browser focus is on the element to which\n * the keyboard events are attached. By default, this is the map div,\n * though you can change this with the `keyboardEventTarget` in\n * {@link module:ol/Map~Map}. `document` never loses focus but, for any other\n * element, focus will have to be on, and returned to, this element if the keys\n * are to function.\n * See also {@link module:ol/interaction/KeyboardPan~KeyboardPan}.\n * @api\n */\nclass KeyboardZoom extends Interaction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    super();\n\n    options = options ? options : {};\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.condition ? options.condition : targetNotEditable;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.delta_ = options.delta ? options.delta : 1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 100;\n  }\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent~MapBrowserEvent map browser event} if it was a\n   * `KeyEvent`, and decides whether to zoom in or out (depending on whether the\n   * key pressed was '+' or '-').\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   */\n  handleEvent(mapBrowserEvent) {\n    let stopEvent = false;\n    if (\n      mapBrowserEvent.type == EventType.KEYDOWN ||\n      mapBrowserEvent.type == EventType.KEYPRESS\n    ) {\n      const keyEvent = /** @type {KeyboardEvent} */ (\n        mapBrowserEvent.originalEvent\n      );\n      const charCode = keyEvent.charCode;\n      if (\n        this.condition_(mapBrowserEvent) &&\n        (charCode == '+'.charCodeAt(0) || charCode == '-'.charCodeAt(0))\n      ) {\n        const map = mapBrowserEvent.map;\n        const delta =\n          charCode == '+'.charCodeAt(0) ? this.delta_ : -this.delta_;\n        const view = map.getView();\n        zoomByDelta(view, delta, undefined, this.duration_);\n        keyEvent.preventDefault();\n        stopEvent = true;\n      }\n    }\n    return !stopEvent;\n  }\n}\n\nexport default KeyboardZoom;\n","/**\n * @module ol/Kinetic\n */\n\n/**\n * @classdesc\n * Implementation of inertial deceleration for map movement.\n *\n * @api\n */\nclass Kinetic {\n  /**\n   * @param {number} decay Rate of decay (must be negative).\n   * @param {number} minVelocity Minimum velocity (pixels/millisecond).\n   * @param {number} delay Delay to consider to calculate the kinetic\n   *     initial values (milliseconds).\n   */\n  constructor(decay, minVelocity, delay) {\n    /**\n     * @private\n     * @type {number}\n     */\n    this.decay_ = decay;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.minVelocity_ = minVelocity;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.delay_ = delay;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.points_ = [];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.angle_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.initialVelocity_ = 0;\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  begin() {\n    this.points_.length = 0;\n    this.angle_ = 0;\n    this.initialVelocity_ = 0;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   */\n  update(x, y) {\n    this.points_.push(x, y, Date.now());\n  }\n\n  /**\n   * @return {boolean} Whether we should do kinetic animation.\n   */\n  end() {\n    if (this.points_.length < 6) {\n      // at least 2 points are required (i.e. there must be at least 6 elements\n      // in the array)\n      return false;\n    }\n    const delay = Date.now() - this.delay_;\n    const lastIndex = this.points_.length - 3;\n    if (this.points_[lastIndex + 2] < delay) {\n      // the last tracked point is too old, which means that the user stopped\n      // panning before releasing the map\n      return false;\n    }\n\n    // get the first point which still falls into the delay time\n    let firstIndex = lastIndex - 3;\n    while (firstIndex > 0 && this.points_[firstIndex + 2] > delay) {\n      firstIndex -= 3;\n    }\n\n    const duration = this.points_[lastIndex + 2] - this.points_[firstIndex + 2];\n    // we don't want a duration of 0 (divide by zero)\n    // we also make sure the user panned for a duration of at least one frame\n    // (1/60s) to compute sane displacement values\n    if (duration < 1000 / 60) {\n      return false;\n    }\n\n    const dx = this.points_[lastIndex] - this.points_[firstIndex];\n    const dy = this.points_[lastIndex + 1] - this.points_[firstIndex + 1];\n    this.angle_ = Math.atan2(dy, dx);\n    this.initialVelocity_ = Math.sqrt(dx * dx + dy * dy) / duration;\n    return this.initialVelocity_ > this.minVelocity_;\n  }\n\n  /**\n   * @return {number} Total distance travelled (pixels).\n   */\n  getDistance() {\n    return (this.minVelocity_ - this.initialVelocity_) / this.decay_;\n  }\n\n  /**\n   * @return {number} Angle of the kinetic panning animation (radians).\n   */\n  getAngle() {\n    return this.angle_;\n  }\n}\n\nexport default Kinetic;\n","/**\n * @module ol/interaction/MouseWheelZoom\n */\nimport EventType from '../events/EventType.js';\nimport Interaction, {zoomByDelta} from './Interaction.js';\nimport {DEVICE_PIXEL_RATIO, FIREFOX} from '../has.js';\nimport {all, always, focusWithTabindex} from '../events/condition.js';\nimport {clamp} from '../math.js';\n\n/**\n * @typedef {'trackpad' | 'wheel'} Mode\n */\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. Default is\n * {@link module:ol/events/condition.always}.\n * @property {boolean} [onFocusOnly=false] When the map's target has a `tabindex` attribute set,\n * the interaction will only handle events when the map has the focus.\n * @property {number} [maxDelta=1] Maximum mouse wheel delta.\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {number} [timeout=80] Mouse wheel timeout duration in milliseconds.\n * @property {boolean} [useAnchor=true] Enable zooming using the mouse's\n * location as the anchor. When set to `false`, zooming in and out will zoom to\n * the center of the screen instead of zooming on the mouse's location.\n * @property {boolean} [constrainResolution=false] If true, the mouse wheel zoom\n * event will always animate to the closest zoom level after an interaction;\n * false means intermediary zoom levels are allowed.\n */\n\n/**\n * @classdesc\n * Allows the user to zoom the map by scrolling the mouse wheel.\n * @api\n */\nclass MouseWheelZoom extends Interaction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    super(\n      /** @type {import(\"./Interaction.js\").InteractionOptions} */ (options)\n    );\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.totalDelta_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.lastDelta_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = options.maxDelta !== undefined ? options.maxDelta : 1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.timeout_ = options.timeout !== undefined ? options.timeout : 80;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.useAnchor_ =\n      options.useAnchor !== undefined ? options.useAnchor : true;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.constrainResolution_ =\n      options.constrainResolution !== undefined\n        ? options.constrainResolution\n        : false;\n\n    const condition = options.condition ? options.condition : always;\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.onFocusOnly\n      ? all(focusWithTabindex, condition)\n      : condition;\n\n    /**\n     * @private\n     * @type {?import(\"../coordinate.js\").Coordinate}\n     */\n    this.lastAnchor_ = null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.startTime_ = undefined;\n\n    /**\n     * @private\n     * @type {?}\n     */\n    this.timeoutId_;\n\n    /**\n     * @private\n     * @type {Mode|undefined}\n     */\n    this.mode_ = undefined;\n\n    /**\n     * Trackpad events separated by this delay will be considered separate\n     * interactions.\n     * @type {number}\n     */\n    this.trackpadEventGap_ = 400;\n\n    /**\n     * @type {?}\n     */\n    this.trackpadTimeoutId_;\n\n    /**\n     * The number of delta values per zoom level\n     * @private\n     * @type {number}\n     */\n    this.deltaPerZoom_ = 300;\n  }\n\n  /**\n   * @private\n   */\n  endInteraction_() {\n    this.trackpadTimeoutId_ = undefined;\n    const map = this.getMap();\n    if (!map) {\n      return;\n    }\n    const view = map.getView();\n    view.endInteraction(\n      undefined,\n      this.lastDelta_ ? (this.lastDelta_ > 0 ? 1 : -1) : 0,\n      this.lastAnchor_\n    );\n  }\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent~MapBrowserEvent map browser event} (if it was a mousewheel-event) and eventually\n   * zooms the map.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   */\n  handleEvent(mapBrowserEvent) {\n    if (!this.condition_(mapBrowserEvent)) {\n      return true;\n    }\n    const type = mapBrowserEvent.type;\n    if (type !== EventType.WHEEL) {\n      return true;\n    }\n\n    const map = mapBrowserEvent.map;\n    const wheelEvent = /** @type {WheelEvent} */ (\n      mapBrowserEvent.originalEvent\n    );\n    wheelEvent.preventDefault();\n\n    if (this.useAnchor_) {\n      this.lastAnchor_ = mapBrowserEvent.coordinate;\n    }\n\n    // Delta normalisation inspired by\n    // https://github.com/mapbox/mapbox-gl-js/blob/001c7b9/js/ui/handler/scroll_zoom.js\n    let delta;\n    if (mapBrowserEvent.type == EventType.WHEEL) {\n      delta = wheelEvent.deltaY;\n      if (FIREFOX && wheelEvent.deltaMode === WheelEvent.DOM_DELTA_PIXEL) {\n        delta /= DEVICE_PIXEL_RATIO;\n      }\n      if (wheelEvent.deltaMode === WheelEvent.DOM_DELTA_LINE) {\n        delta *= 40;\n      }\n    }\n\n    if (delta === 0) {\n      return false;\n    }\n    this.lastDelta_ = delta;\n\n    const now = Date.now();\n\n    if (this.startTime_ === undefined) {\n      this.startTime_ = now;\n    }\n\n    if (!this.mode_ || now - this.startTime_ > this.trackpadEventGap_) {\n      this.mode_ = Math.abs(delta) < 4 ? 'trackpad' : 'wheel';\n    }\n\n    const view = map.getView();\n    if (\n      this.mode_ === 'trackpad' &&\n      !(view.getConstrainResolution() || this.constrainResolution_)\n    ) {\n      if (this.trackpadTimeoutId_) {\n        clearTimeout(this.trackpadTimeoutId_);\n      } else {\n        if (view.getAnimating()) {\n          view.cancelAnimations();\n        }\n        view.beginInteraction();\n      }\n      this.trackpadTimeoutId_ = setTimeout(\n        this.endInteraction_.bind(this),\n        this.timeout_\n      );\n      view.adjustZoom(-delta / this.deltaPerZoom_, this.lastAnchor_);\n      this.startTime_ = now;\n      return false;\n    }\n\n    this.totalDelta_ += delta;\n\n    const timeLeft = Math.max(this.timeout_ - (now - this.startTime_), 0);\n\n    clearTimeout(this.timeoutId_);\n    this.timeoutId_ = setTimeout(\n      this.handleWheelZoom_.bind(this, map),\n      timeLeft\n    );\n\n    return false;\n  }\n\n  /**\n   * @private\n   * @param {import(\"../Map.js\").default} map Map.\n   */\n  handleWheelZoom_(map) {\n    const view = map.getView();\n    if (view.getAnimating()) {\n      view.cancelAnimations();\n    }\n    let delta =\n      -clamp(\n        this.totalDelta_,\n        -this.maxDelta_ * this.deltaPerZoom_,\n        this.maxDelta_ * this.deltaPerZoom_\n      ) / this.deltaPerZoom_;\n    if (view.getConstrainResolution() || this.constrainResolution_) {\n      // view has a zoom constraint, zoom by 1\n      delta = delta ? (delta > 0 ? 1 : -1) : 0;\n    }\n    zoomByDelta(view, delta, this.lastAnchor_, this.duration_);\n\n    this.mode_ = undefined;\n    this.totalDelta_ = 0;\n    this.lastAnchor_ = null;\n    this.startTime_ = undefined;\n    this.timeoutId_ = undefined;\n  }\n\n  /**\n   * Enable or disable using the mouse's location as an anchor when zooming\n   * @param {boolean} useAnchor true to zoom to the mouse's location, false\n   * to zoom to the center of the map\n   * @api\n   */\n  setMouseAnchor(useAnchor) {\n    this.useAnchor_ = useAnchor;\n    if (!useAnchor) {\n      this.lastAnchor_ = null;\n    }\n  }\n}\n\nexport default MouseWheelZoom;\n","/**\n * @module ol/interaction/PinchRotate\n */\nimport PointerInteraction, {\n  centroid as centroidFromPointers,\n} from './Pointer.js';\nimport {FALSE} from '../functions.js';\nimport {disable} from '../rotationconstraint.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=250] The duration of the animation in\n * milliseconds.\n * @property {number} [threshold=0.3] Minimal angle in radians to start a rotation.\n */\n\n/**\n * @classdesc\n * Allows the user to rotate the map by twisting with two fingers\n * on a touch screen.\n * @api\n */\nclass PinchRotate extends PointerInteraction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    const pointerOptions = /** @type {import(\"./Pointer.js\").Options} */ (\n      options\n    );\n\n    if (!pointerOptions.stopDown) {\n      pointerOptions.stopDown = FALSE;\n    }\n\n    super(pointerOptions);\n\n    /**\n     * @private\n     * @type {import(\"../coordinate.js\").Coordinate}\n     */\n    this.anchor_ = null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.lastAngle_ = undefined;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.rotating_ = false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.rotationDelta_ = 0.0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.threshold_ = options.threshold !== undefined ? options.threshold : 0.3;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   */\n  handleDragEvent(mapBrowserEvent) {\n    let rotationDelta = 0.0;\n\n    const touch0 = this.targetPointers[0];\n    const touch1 = this.targetPointers[1];\n\n    // angle between touches\n    const angle = Math.atan2(\n      touch1.clientY - touch0.clientY,\n      touch1.clientX - touch0.clientX\n    );\n\n    if (this.lastAngle_ !== undefined) {\n      const delta = angle - this.lastAngle_;\n      this.rotationDelta_ += delta;\n      if (!this.rotating_ && Math.abs(this.rotationDelta_) > this.threshold_) {\n        this.rotating_ = true;\n      }\n      rotationDelta = delta;\n    }\n    this.lastAngle_ = angle;\n\n    const map = mapBrowserEvent.map;\n    const view = map.getView();\n    if (view.getConstraints().rotation === disable) {\n      return;\n    }\n\n    // rotate anchor point.\n    // FIXME: should be the intersection point between the lines:\n    //     touch0,touch1 and previousTouch0,previousTouch1\n    this.anchor_ = map.getCoordinateFromPixelInternal(\n      map.getEventPixel(centroidFromPointers(this.targetPointers))\n    );\n\n    // rotate\n    if (this.rotating_) {\n      map.render();\n      view.adjustRotationInternal(rotationDelta, this.anchor_);\n    }\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleUpEvent(mapBrowserEvent) {\n    if (this.targetPointers.length < 2) {\n      const map = mapBrowserEvent.map;\n      const view = map.getView();\n      view.endInteraction(this.duration_);\n      return false;\n    }\n    return true;\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleDownEvent(mapBrowserEvent) {\n    if (this.targetPointers.length >= 2) {\n      const map = mapBrowserEvent.map;\n      this.anchor_ = null;\n      this.lastAngle_ = undefined;\n      this.rotating_ = false;\n      this.rotationDelta_ = 0.0;\n      if (!this.handlingDownUpSequence) {\n        map.getView().beginInteraction();\n      }\n      return true;\n    }\n    return false;\n  }\n}\n\nexport default PinchRotate;\n","/**\n * @module ol/interaction/PinchZoom\n */\nimport PointerInteraction, {\n  centroid as centroidFromPointers,\n} from './Pointer.js';\nimport {FALSE} from '../functions.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=400] Animation duration in milliseconds.\n */\n\n/**\n * @classdesc\n * Allows the user to zoom the map by pinching with two fingers\n * on a touch screen.\n * @api\n */\nclass PinchZoom extends PointerInteraction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    const pointerOptions = /** @type {import(\"./Pointer.js\").Options} */ (\n      options\n    );\n\n    if (!pointerOptions.stopDown) {\n      pointerOptions.stopDown = FALSE;\n    }\n\n    super(pointerOptions);\n\n    /**\n     * @private\n     * @type {import(\"../coordinate.js\").Coordinate}\n     */\n    this.anchor_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 400;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.lastDistance_ = undefined;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.lastScaleDelta_ = 1;\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   */\n  handleDragEvent(mapBrowserEvent) {\n    let scaleDelta = 1.0;\n\n    const touch0 = this.targetPointers[0];\n    const touch1 = this.targetPointers[1];\n    const dx = touch0.clientX - touch1.clientX;\n    const dy = touch0.clientY - touch1.clientY;\n\n    // distance between touches\n    const distance = Math.sqrt(dx * dx + dy * dy);\n\n    if (this.lastDistance_ !== undefined) {\n      scaleDelta = this.lastDistance_ / distance;\n    }\n    this.lastDistance_ = distance;\n\n    const map = mapBrowserEvent.map;\n    const view = map.getView();\n\n    if (scaleDelta != 1.0) {\n      this.lastScaleDelta_ = scaleDelta;\n    }\n\n    // scale anchor point.\n    this.anchor_ = map.getCoordinateFromPixelInternal(\n      map.getEventPixel(centroidFromPointers(this.targetPointers))\n    );\n\n    // scale, bypass the resolution constraint\n    map.render();\n    view.adjustResolutionInternal(scaleDelta, this.anchor_);\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleUpEvent(mapBrowserEvent) {\n    if (this.targetPointers.length < 2) {\n      const map = mapBrowserEvent.map;\n      const view = map.getView();\n      const direction = this.lastScaleDelta_ > 1 ? 1 : -1;\n      view.endInteraction(this.duration_, direction);\n      return false;\n    }\n    return true;\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleDownEvent(mapBrowserEvent) {\n    if (this.targetPointers.length >= 2) {\n      const map = mapBrowserEvent.map;\n      this.anchor_ = null;\n      this.lastDistance_ = undefined;\n      this.lastScaleDelta_ = 1;\n      if (!this.handlingDownUpSequence) {\n        map.getView().beginInteraction();\n      }\n      return true;\n    }\n    return false;\n  }\n}\n\nexport default PinchZoom;\n","/**\n * @module ol/Map\n */\nimport BaseObject from './Object.js';\nimport Collection from './Collection.js';\nimport CollectionEventType from './CollectionEventType.js';\nimport CompositeMapRenderer from './renderer/Composite.js';\nimport EventType from './events/EventType.js';\nimport Layer from './layer/Layer.js';\nimport LayerGroup, {GroupEvent} from './layer/Group.js';\nimport MapBrowserEvent from './MapBrowserEvent.js';\nimport MapBrowserEventHandler from './MapBrowserEventHandler.js';\nimport MapBrowserEventType from './MapBrowserEventType.js';\nimport MapEvent from './MapEvent.js';\nimport MapEventType from './MapEventType.js';\nimport MapProperty from './MapProperty.js';\nimport ObjectEventType from './ObjectEventType.js';\nimport PointerEventType from './pointer/EventType.js';\nimport RenderEventType from './render/EventType.js';\nimport TileQueue, {getTilePriority} from './TileQueue.js';\nimport View from './View.js';\nimport ViewHint from './ViewHint.js';\nimport {DEVICE_PIXEL_RATIO, PASSIVE_EVENT_LISTENERS} from './has.js';\nimport {TRUE} from './functions.js';\nimport {\n  apply as applyTransform,\n  create as createTransform,\n} from './transform.js';\nimport {assert} from './asserts.js';\nimport {\n  clone,\n  createOrUpdateEmpty,\n  equals as equalsExtent,\n  getForViewAndSize,\n  isEmpty,\n} from './extent.js';\nimport {defaults as defaultControls} from './control/defaults.js';\nimport {defaults as defaultInteractions} from './interaction/defaults.js';\nimport {equals} from './array.js';\nimport {fromUserCoordinate, toUserCoordinate} from './proj.js';\nimport {getUid} from './util.js';\nimport {hasArea} from './size.js';\nimport {listen, unlistenByKey} from './events.js';\nimport {removeNode} from './dom.js';\nimport {warn} from './console.js';\n\n/**\n * State of the current frame. Only `pixelRatio`, `time` and `viewState` should\n * be used in applications.\n * @typedef {Object} FrameState\n * @property {number} pixelRatio The pixel ratio of the frame.\n * @property {number} time The time when rendering of the frame was requested.\n * @property {import(\"./View.js\").State} viewState The state of the current view.\n * @property {boolean} animate Animate.\n * @property {import(\"./transform.js\").Transform} coordinateToPixelTransform CoordinateToPixelTransform.\n * @property {import(\"rbush\").default} declutterTree DeclutterTree.\n * @property {null|import(\"./extent.js\").Extent} extent Extent.\n * @property {import(\"./extent.js\").Extent} [nextExtent] Next extent during an animation series.\n * @property {number} index Index.\n * @property {Array<import(\"./layer/Layer.js\").State>} layerStatesArray LayerStatesArray.\n * @property {number} layerIndex LayerIndex.\n * @property {import(\"./transform.js\").Transform} pixelToCoordinateTransform PixelToCoordinateTransform.\n * @property {Array<PostRenderFunction>} postRenderFunctions PostRenderFunctions.\n * @property {import(\"./size.js\").Size} size Size.\n * @property {TileQueue} tileQueue TileQueue.\n * @property {!Object<string, Object<string, boolean>>} usedTiles UsedTiles.\n * @property {Array<number>} viewHints ViewHints.\n * @property {!Object<string, Object<string, boolean>>} wantedTiles WantedTiles.\n * @property {string} mapId The id of the map.\n * @property {Object<string, boolean>} renderTargets Identifiers of previously rendered elements.\n */\n\n/**\n * @typedef {function(Map, ?FrameState): any} PostRenderFunction\n */\n\n/**\n * @typedef {Object} AtPixelOptions\n * @property {undefined|function(import(\"./layer/Layer.js\").default<import(\"./source/Source\").default>): boolean} [layerFilter] Layer filter\n * function. The filter function will receive one argument, the\n * {@link module:ol/layer/Layer~Layer layer-candidate} and it should return a boolean value.\n * Only layers which are visible and for which this function returns `true`\n * will be tested for features. By default, all visible layers will be tested.\n * @property {number} [hitTolerance=0] Hit-detection tolerance in css pixels. Pixels\n * inside the radius around the given position will be checked for features.\n * @property {boolean} [checkWrapped=true] Check-Wrapped Will check for wrapped geometries inside the range of\n *   +/- 1 world width. Works only if a projection is used that can be wrapped.\n */\n\n/**\n * @typedef {Object} MapOptionsInternal\n * @property {Collection<import(\"./control/Control.js\").default>} [controls] Controls.\n * @property {Collection<import(\"./interaction/Interaction.js\").default>} [interactions] Interactions.\n * @property {HTMLElement|Document} keyboardEventTarget KeyboardEventTarget.\n * @property {Collection<import(\"./Overlay.js\").default>} overlays Overlays.\n * @property {Object<string, *>} values Values.\n */\n\n/**\n * @typedef {import(\"./ObjectEventType\").Types|'change:layergroup'|'change:size'|'change:target'|'change:view'} MapObjectEventTypes\n */\n\n/***\n * @template Return\n * @typedef {import(\"./Observable\").OnSignature<import(\"./Observable\").EventTypes, import(\"./events/Event.js\").default, Return> &\n *    import(\"./Observable\").OnSignature<MapObjectEventTypes, import(\"./Object\").ObjectEvent, Return> &\n *    import(\"./Observable\").OnSignature<import(\"./MapBrowserEventType\").Types, import(\"./MapBrowserEvent\").default, Return> &\n *    import(\"./Observable\").OnSignature<import(\"./MapEventType\").Types, import(\"./MapEvent\").default, Return> &\n *    import(\"./Observable\").OnSignature<import(\"./render/EventType\").MapRenderEventTypes, import(\"./render/Event\").default, Return> &\n *    import(\"./Observable\").CombinedOnSignature<import(\"./Observable\").EventTypes|MapObjectEventTypes|\n *      import(\"./MapBrowserEventType\").Types|import(\"./MapEventType\").Types|\n *      import(\"./render/EventType\").MapRenderEventTypes, Return>} MapEventHandler\n */\n\n/**\n * Object literal with config options for the map.\n * @typedef {Object} MapOptions\n * @property {Collection<import(\"./control/Control.js\").default>|Array<import(\"./control/Control.js\").default>} [controls]\n * Controls initially added to the map. If not specified,\n * {@link module:ol/control/defaults.defaults} is used.\n * @property {number} [pixelRatio=window.devicePixelRatio] The ratio between\n * physical pixels and device-independent pixels (dips) on the device.\n * @property {Collection<import(\"./interaction/Interaction.js\").default>|Array<import(\"./interaction/Interaction.js\").default>} [interactions]\n * Interactions that are initially added to the map. If not specified,\n * {@link module:ol/interaction/defaults.defaults} is used.\n * @property {HTMLElement|Document|string} [keyboardEventTarget] The element to\n * listen to keyboard events on. This determines when the `KeyboardPan` and\n * `KeyboardZoom` interactions trigger. For example, if this option is set to\n * `document` the keyboard interactions will always trigger. If this option is\n * not specified, the element the library listens to keyboard events on is the\n * map target (i.e. the user-provided div for the map). If this is not\n * `document`, the target element needs to be focused for key events to be\n * emitted, requiring that the target element has a `tabindex` attribute.\n * @property {Array<import(\"./layer/Base.js\").default>|Collection<import(\"./layer/Base.js\").default>|LayerGroup} [layers]\n * Layers. If this is not defined, a map with no layers will be rendered. Note\n * that layers are rendered in the order supplied, so if you want, for example,\n * a vector layer to appear on top of a tile layer, it must come after the tile\n * layer.\n * @property {number} [maxTilesLoading=16] Maximum number tiles to load\n * simultaneously.\n * @property {number} [moveTolerance=1] The minimum distance in pixels the\n * cursor must move to be detected as a map move event instead of a click.\n * Increasing this value can make it easier to click on the map.\n * @property {Collection<import(\"./Overlay.js\").default>|Array<import(\"./Overlay.js\").default>} [overlays]\n * Overlays initially added to the map. By default, no overlays are added.\n * @property {HTMLElement|string} [target] The container for the map, either the\n * element itself or the `id` of the element. If not specified at construction\n * time, {@link module:ol/Map~Map#setTarget} must be called for the map to be\n * rendered. If passed by element, the container can be in a secondary document.\n * **Note:** CSS `transform` support for the target element is limited to `scale`.\n * @property {View|Promise<import(\"./View.js\").ViewOptions>} [view] The map's view.  No layer sources will be\n * fetched unless this is specified at construction time or through\n * {@link module:ol/Map~Map#setView}.\n */\n\n/**\n * @param {import(\"./layer/Base.js\").default} layer Layer.\n */\nfunction removeLayerMapProperty(layer) {\n  if (layer instanceof Layer) {\n    layer.setMapInternal(null);\n    return;\n  }\n  if (layer instanceof LayerGroup) {\n    layer.getLayers().forEach(removeLayerMapProperty);\n  }\n}\n\n/**\n * @param {import(\"./layer/Base.js\").default} layer Layer.\n * @param {Map} map Map.\n */\nfunction setLayerMapProperty(layer, map) {\n  if (layer instanceof Layer) {\n    layer.setMapInternal(map);\n    return;\n  }\n  if (layer instanceof LayerGroup) {\n    const layers = layer.getLayers().getArray();\n    for (let i = 0, ii = layers.length; i < ii; ++i) {\n      setLayerMapProperty(layers[i], map);\n    }\n  }\n}\n\n/**\n * @classdesc\n * The map is the core component of OpenLayers. For a map to render, a view,\n * one or more layers, and a target container are needed:\n *\n *     import Map from 'ol/Map.js';\n *     import View from 'ol/View.js';\n *     import TileLayer from 'ol/layer/Tile.js';\n *     import OSM from 'ol/source/OSM.js';\n *\n *     const map = new Map({\n *       view: new View({\n *         center: [0, 0],\n *         zoom: 1,\n *       }),\n *       layers: [\n *         new TileLayer({\n *           source: new OSM(),\n *         }),\n *       ],\n *       target: 'map',\n *     });\n *\n * The above snippet creates a map using a {@link module:ol/layer/Tile~TileLayer} to\n * display {@link module:ol/source/OSM~OSM} OSM data and render it to a DOM\n * element with the id `map`.\n *\n * The constructor places a viewport container (with CSS class name\n * `ol-viewport`) in the target element (see `getViewport()`), and then two\n * further elements within the viewport: one with CSS class name\n * `ol-overlaycontainer-stopevent` for controls and some overlays, and one with\n * CSS class name `ol-overlaycontainer` for other overlays (see the `stopEvent`\n * option of {@link module:ol/Overlay~Overlay} for the difference). The map\n * itself is placed in a further element within the viewport.\n *\n * Layers are stored as a {@link module:ol/Collection~Collection} in\n * layerGroups. A top-level group is provided by the library. This is what is\n * accessed by `getLayerGroup` and `setLayerGroup`. Layers entered in the\n * options are added to this group, and `addLayer` and `removeLayer` change the\n * layer collection in the group. `getLayers` is a convenience function for\n * `getLayerGroup().getLayers()`. Note that {@link module:ol/layer/Group~LayerGroup}\n * is a subclass of {@link module:ol/layer/Base~BaseLayer}, so layers entered in the\n * options or added with `addLayer` can be groups, which can contain further\n * groups, and so on.\n *\n * @fires import(\"./MapBrowserEvent.js\").MapBrowserEvent\n * @fires import(\"./MapEvent.js\").MapEvent\n * @fires import(\"./render/Event.js\").default#precompose\n * @fires import(\"./render/Event.js\").default#postcompose\n * @fires import(\"./render/Event.js\").default#rendercomplete\n * @api\n */\nclass Map extends BaseObject {\n  /**\n   * @param {MapOptions} [options] Map options.\n   */\n  constructor(options) {\n    super();\n\n    options = options || {};\n\n    /***\n     * @type {MapEventHandler<import(\"./events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {MapEventHandler<import(\"./events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {MapEventHandler<void>}\n     */\n    this.un;\n\n    const optionsInternal = createOptionsInternal(options);\n\n    /**\n     * @private\n     * @type {boolean|undefined}\n     */\n    this.renderComplete_;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.loaded_ = true;\n\n    /** @private */\n    this.boundHandleBrowserEvent_ = this.handleBrowserEvent.bind(this);\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.maxTilesLoading_ =\n      options.maxTilesLoading !== undefined ? options.maxTilesLoading : 16;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ =\n      options.pixelRatio !== undefined\n        ? options.pixelRatio\n        : DEVICE_PIXEL_RATIO;\n\n    /**\n     * @private\n     * @type {*}\n     */\n    this.postRenderTimeoutHandle_;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.animationDelayKey_;\n\n    /**\n     * @private\n     */\n    this.animationDelay_ = this.animationDelay_.bind(this);\n\n    /**\n     * @private\n     * @type {import(\"./transform.js\").Transform}\n     */\n    this.coordinateToPixelTransform_ = createTransform();\n\n    /**\n     * @private\n     * @type {import(\"./transform.js\").Transform}\n     */\n    this.pixelToCoordinateTransform_ = createTransform();\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.frameIndex_ = 0;\n\n    /**\n     * @private\n     * @type {?FrameState}\n     */\n    this.frameState_ = null;\n\n    /**\n     * The extent at the previous 'moveend' event.\n     * @private\n     * @type {import(\"./extent.js\").Extent}\n     */\n    this.previousExtent_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"./events.js\").EventsKey}\n     */\n    this.viewPropertyListenerKey_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"./events.js\").EventsKey}\n     */\n    this.viewChangeListenerKey_ = null;\n\n    /**\n     * @private\n     * @type {?Array<import(\"./events.js\").EventsKey>}\n     */\n    this.layerGroupPropertyListenerKeys_ = null;\n\n    /**\n     * @private\n     * @type {!HTMLElement}\n     */\n    this.viewport_ = document.createElement('div');\n    this.viewport_.className =\n      'ol-viewport' + ('ontouchstart' in window ? ' ol-touch' : '');\n    this.viewport_.style.position = 'relative';\n    this.viewport_.style.overflow = 'hidden';\n    this.viewport_.style.width = '100%';\n    this.viewport_.style.height = '100%';\n\n    /**\n     * @private\n     * @type {!HTMLElement}\n     */\n    this.overlayContainer_ = document.createElement('div');\n    this.overlayContainer_.style.position = 'absolute';\n    this.overlayContainer_.style.zIndex = '0';\n    this.overlayContainer_.style.width = '100%';\n    this.overlayContainer_.style.height = '100%';\n    this.overlayContainer_.style.pointerEvents = 'none';\n    this.overlayContainer_.className = 'ol-overlaycontainer';\n    this.viewport_.appendChild(this.overlayContainer_);\n\n    /**\n     * @private\n     * @type {!HTMLElement}\n     */\n    this.overlayContainerStopEvent_ = document.createElement('div');\n    this.overlayContainerStopEvent_.style.position = 'absolute';\n    this.overlayContainerStopEvent_.style.zIndex = '0';\n    this.overlayContainerStopEvent_.style.width = '100%';\n    this.overlayContainerStopEvent_.style.height = '100%';\n    this.overlayContainerStopEvent_.style.pointerEvents = 'none';\n    this.overlayContainerStopEvent_.className = 'ol-overlaycontainer-stopevent';\n    this.viewport_.appendChild(this.overlayContainerStopEvent_);\n\n    /**\n     * @private\n     * @type {MapBrowserEventHandler}\n     */\n    this.mapBrowserEventHandler_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.moveTolerance_ = options.moveTolerance;\n\n    /**\n     * @private\n     * @type {HTMLElement|Document}\n     */\n    this.keyboardEventTarget_ = optionsInternal.keyboardEventTarget;\n\n    /**\n     * @private\n     * @type {?Array<import(\"./events.js\").EventsKey>}\n     */\n    this.targetChangeHandlerKeys_ = null;\n\n    /**\n     * @private\n     * @type {HTMLElement|null}\n     */\n    this.targetElement_ = null;\n\n    /**\n     * @type {ResizeObserver}\n     */\n    this.resizeObserver_ = new ResizeObserver(() => this.updateSize());\n\n    /**\n     * @type {Collection<import(\"./control/Control.js\").default>}\n     * @protected\n     */\n    this.controls = optionsInternal.controls || defaultControls();\n\n    /**\n     * @type {Collection<import(\"./interaction/Interaction.js\").default>}\n     * @protected\n     */\n    this.interactions =\n      optionsInternal.interactions ||\n      defaultInteractions({\n        onFocusOnly: true,\n      });\n\n    /**\n     * @type {Collection<import(\"./Overlay.js\").default>}\n     * @private\n     */\n    this.overlays_ = optionsInternal.overlays;\n\n    /**\n     * A lookup of overlays by id.\n     * @private\n     * @type {Object<string, import(\"./Overlay.js\").default>}\n     */\n    this.overlayIdIndex_ = {};\n\n    /**\n     * @type {import(\"./renderer/Map.js\").default|null}\n     * @private\n     */\n    this.renderer_ = null;\n\n    /**\n     * @private\n     * @type {!Array<PostRenderFunction>}\n     */\n    this.postRenderFunctions_ = [];\n\n    /**\n     * @private\n     * @type {TileQueue}\n     */\n    this.tileQueue_ = new TileQueue(\n      this.getTilePriority.bind(this),\n      this.handleTileChange_.bind(this)\n    );\n\n    this.addChangeListener(\n      MapProperty.LAYERGROUP,\n      this.handleLayerGroupChanged_\n    );\n    this.addChangeListener(MapProperty.VIEW, this.handleViewChanged_);\n    this.addChangeListener(MapProperty.SIZE, this.handleSizeChanged_);\n    this.addChangeListener(MapProperty.TARGET, this.handleTargetChanged_);\n\n    // setProperties will trigger the rendering of the map if the map\n    // is \"defined\" already.\n    this.setProperties(optionsInternal.values);\n\n    const map = this;\n    if (options.view && !(options.view instanceof View)) {\n      options.view.then(function (viewOptions) {\n        map.setView(new View(viewOptions));\n      });\n    }\n\n    this.controls.addEventListener(\n      CollectionEventType.ADD,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent<import(\"./control/Control.js\").default>} event CollectionEvent\n       */\n      (event) => {\n        event.element.setMap(this);\n      }\n    );\n\n    this.controls.addEventListener(\n      CollectionEventType.REMOVE,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent<import(\"./control/Control.js\").default>} event CollectionEvent.\n       */\n      (event) => {\n        event.element.setMap(null);\n      }\n    );\n\n    this.interactions.addEventListener(\n      CollectionEventType.ADD,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent<import(\"./interaction/Interaction.js\").default>} event CollectionEvent.\n       */\n      (event) => {\n        event.element.setMap(this);\n      }\n    );\n\n    this.interactions.addEventListener(\n      CollectionEventType.REMOVE,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent<import(\"./interaction/Interaction.js\").default>} event CollectionEvent.\n       */\n      (event) => {\n        event.element.setMap(null);\n      }\n    );\n\n    this.overlays_.addEventListener(\n      CollectionEventType.ADD,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent<import(\"./Overlay.js\").default>} event CollectionEvent.\n       */\n      (event) => {\n        this.addOverlayInternal_(event.element);\n      }\n    );\n\n    this.overlays_.addEventListener(\n      CollectionEventType.REMOVE,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent<import(\"./Overlay.js\").default>} event CollectionEvent.\n       */\n      (event) => {\n        const id = event.element.getId();\n        if (id !== undefined) {\n          delete this.overlayIdIndex_[id.toString()];\n        }\n        event.element.setMap(null);\n      }\n    );\n\n    this.controls.forEach(\n      /**\n       * @param {import(\"./control/Control.js\").default} control Control.\n       */\n      (control) => {\n        control.setMap(this);\n      }\n    );\n\n    this.interactions.forEach(\n      /**\n       * @param {import(\"./interaction/Interaction.js\").default} interaction Interaction.\n       */\n      (interaction) => {\n        interaction.setMap(this);\n      }\n    );\n\n    this.overlays_.forEach(this.addOverlayInternal_.bind(this));\n  }\n\n  /**\n   * Add the given control to the map.\n   * @param {import(\"./control/Control.js\").default} control Control.\n   * @api\n   */\n  addControl(control) {\n    this.getControls().push(control);\n  }\n\n  /**\n   * Add the given interaction to the map. If you want to add an interaction\n   * at another point of the collection use `getInteractions()` and the methods\n   * available on {@link module:ol/Collection~Collection}. This can be used to\n   * stop the event propagation from the handleEvent function. The interactions\n   * get to handle the events in the reverse order of this collection.\n   * @param {import(\"./interaction/Interaction.js\").default} interaction Interaction to add.\n   * @api\n   */\n  addInteraction(interaction) {\n    this.getInteractions().push(interaction);\n  }\n\n  /**\n   * Adds the given layer to the top of this map. If you want to add a layer\n   * elsewhere in the stack, use `getLayers()` and the methods available on\n   * {@link module:ol/Collection~Collection}.\n   * @param {import(\"./layer/Base.js\").default} layer Layer.\n   * @api\n   */\n  addLayer(layer) {\n    const layers = this.getLayerGroup().getLayers();\n    layers.push(layer);\n  }\n\n  /**\n   * @param {import(\"./layer/Group.js\").GroupEvent} event The layer add event.\n   * @private\n   */\n  handleLayerAdd_(event) {\n    setLayerMapProperty(event.layer, this);\n  }\n\n  /**\n   * Add the given overlay to the map.\n   * @param {import(\"./Overlay.js\").default} overlay Overlay.\n   * @api\n   */\n  addOverlay(overlay) {\n    this.getOverlays().push(overlay);\n  }\n\n  /**\n   * This deals with map's overlay collection changes.\n   * @param {import(\"./Overlay.js\").default} overlay Overlay.\n   * @private\n   */\n  addOverlayInternal_(overlay) {\n    const id = overlay.getId();\n    if (id !== undefined) {\n      this.overlayIdIndex_[id.toString()] = overlay;\n    }\n    overlay.setMap(this);\n  }\n\n  /**\n   *\n   * Clean up.\n   */\n  disposeInternal() {\n    this.controls.clear();\n    this.interactions.clear();\n    this.overlays_.clear();\n    this.resizeObserver_.disconnect();\n    this.setTarget(null);\n    super.disposeInternal();\n  }\n\n  /**\n   * Detect features that intersect a pixel on the viewport, and execute a\n   * callback with each intersecting feature. Layers included in the detection can\n   * be configured through the `layerFilter` option in `options`.\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel.\n   * @param {function(import(\"./Feature.js\").FeatureLike, import(\"./layer/Layer.js\").default<import(\"./source/Source\").default>, import(\"./geom/SimpleGeometry.js\").default): T} callback Feature callback. The callback will be\n   *     called with two arguments. The first argument is one\n   *     {@link module:ol/Feature~Feature feature} or\n   *     {@link module:ol/render/Feature~RenderFeature render feature} at the pixel, the second is\n   *     the {@link module:ol/layer/Layer~Layer layer} of the feature and will be null for\n   *     unmanaged layers. To stop detection, callback functions can return a\n   *     truthy value.\n   * @param {AtPixelOptions} [options] Optional options.\n   * @return {T|undefined} Callback result, i.e. the return value of last\n   * callback execution, or the first truthy callback return value.\n   * @template T\n   * @api\n   */\n  forEachFeatureAtPixel(pixel, callback, options) {\n    if (!this.frameState_ || !this.renderer_) {\n      return;\n    }\n    const coordinate = this.getCoordinateFromPixelInternal(pixel);\n    options = options !== undefined ? options : {};\n    const hitTolerance =\n      options.hitTolerance !== undefined ? options.hitTolerance : 0;\n    const layerFilter =\n      options.layerFilter !== undefined ? options.layerFilter : TRUE;\n    const checkWrapped = options.checkWrapped !== false;\n    return this.renderer_.forEachFeatureAtCoordinate(\n      coordinate,\n      this.frameState_,\n      hitTolerance,\n      checkWrapped,\n      callback,\n      null,\n      layerFilter,\n      null\n    );\n  }\n\n  /**\n   * Get all features that intersect a pixel on the viewport.\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel.\n   * @param {AtPixelOptions} [options] Optional options.\n   * @return {Array<import(\"./Feature.js\").FeatureLike>} The detected features or\n   * an empty array if none were found.\n   * @api\n   */\n  getFeaturesAtPixel(pixel, options) {\n    const features = [];\n    this.forEachFeatureAtPixel(\n      pixel,\n      function (feature) {\n        features.push(feature);\n      },\n      options\n    );\n    return features;\n  }\n\n  /**\n   * Get all layers from all layer groups.\n   * @return {Array<import(\"./layer/Layer.js\").default>} Layers.\n   * @api\n   */\n  getAllLayers() {\n    const layers = [];\n    function addLayersFrom(layerGroup) {\n      layerGroup.forEach(function (layer) {\n        if (layer instanceof LayerGroup) {\n          addLayersFrom(layer.getLayers());\n        } else {\n          layers.push(layer);\n        }\n      });\n    }\n    addLayersFrom(this.getLayers());\n    return layers;\n  }\n\n  /**\n   * Detect if features intersect a pixel on the viewport. Layers included in the\n   * detection can be configured through the `layerFilter` option.\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel.\n   * @param {AtPixelOptions} [options] Optional options.\n   * @return {boolean} Is there a feature at the given pixel?\n   * @api\n   */\n  hasFeatureAtPixel(pixel, options) {\n    if (!this.frameState_ || !this.renderer_) {\n      return false;\n    }\n    const coordinate = this.getCoordinateFromPixelInternal(pixel);\n    options = options !== undefined ? options : {};\n    const layerFilter =\n      options.layerFilter !== undefined ? options.layerFilter : TRUE;\n    const hitTolerance =\n      options.hitTolerance !== undefined ? options.hitTolerance : 0;\n    const checkWrapped = options.checkWrapped !== false;\n    return this.renderer_.hasFeatureAtCoordinate(\n      coordinate,\n      this.frameState_,\n      hitTolerance,\n      checkWrapped,\n      layerFilter,\n      null\n    );\n  }\n\n  /**\n   * Returns the coordinate in user projection for a browser event.\n   * @param {MouseEvent} event Event.\n   * @return {import(\"./coordinate.js\").Coordinate} Coordinate.\n   * @api\n   */\n  getEventCoordinate(event) {\n    return this.getCoordinateFromPixel(this.getEventPixel(event));\n  }\n\n  /**\n   * Returns the coordinate in view projection for a browser event.\n   * @param {MouseEvent} event Event.\n   * @return {import(\"./coordinate.js\").Coordinate} Coordinate.\n   */\n  getEventCoordinateInternal(event) {\n    return this.getCoordinateFromPixelInternal(this.getEventPixel(event));\n  }\n\n  /**\n   * Returns the map pixel position for a browser event relative to the viewport.\n   * @param {UIEvent|{clientX: number, clientY: number}} event Event.\n   * @return {import(\"./pixel.js\").Pixel} Pixel.\n   * @api\n   */\n  getEventPixel(event) {\n    const viewport = this.viewport_;\n    const viewportPosition = viewport.getBoundingClientRect();\n    const viewportSize = this.getSize();\n    const scaleX = viewportPosition.width / viewportSize[0];\n    const scaleY = viewportPosition.height / viewportSize[1];\n    const eventPosition =\n      //FIXME Are we really calling this with a TouchEvent anywhere?\n      'changedTouches' in event\n        ? /** @type {TouchEvent} */ (event).changedTouches[0]\n        : /** @type {MouseEvent} */ (event);\n\n    return [\n      (eventPosition.clientX - viewportPosition.left) / scaleX,\n      (eventPosition.clientY - viewportPosition.top) / scaleY,\n    ];\n  }\n\n  /**\n   * Get the target in which this map is rendered.\n   * Note that this returns what is entered as an option or in setTarget:\n   * if that was an element, it returns an element; if a string, it returns that.\n   * @return {HTMLElement|string|undefined} The Element or id of the Element that the\n   *     map is rendered in.\n   * @observable\n   * @api\n   */\n  getTarget() {\n    return /** @type {HTMLElement|string|undefined} */ (\n      this.get(MapProperty.TARGET)\n    );\n  }\n\n  /**\n   * Get the DOM element into which this map is rendered. In contrast to\n   * `getTarget` this method always return an `Element`, or `null` if the\n   * map has no target.\n   * @return {HTMLElement} The element that the map is rendered in.\n   * @api\n   */\n  getTargetElement() {\n    return this.targetElement_;\n  }\n\n  /**\n   * Get the coordinate for a given pixel.  This returns a coordinate in the\n   * user projection.\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel position in the map viewport.\n   * @return {import(\"./coordinate.js\").Coordinate} The coordinate for the pixel position.\n   * @api\n   */\n  getCoordinateFromPixel(pixel) {\n    return toUserCoordinate(\n      this.getCoordinateFromPixelInternal(pixel),\n      this.getView().getProjection()\n    );\n  }\n\n  /**\n   * Get the coordinate for a given pixel.  This returns a coordinate in the\n   * map view projection.\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel position in the map viewport.\n   * @return {import(\"./coordinate.js\").Coordinate} The coordinate for the pixel position.\n   */\n  getCoordinateFromPixelInternal(pixel) {\n    const frameState = this.frameState_;\n    if (!frameState) {\n      return null;\n    }\n    return applyTransform(frameState.pixelToCoordinateTransform, pixel.slice());\n  }\n\n  /**\n   * Get the map controls. Modifying this collection changes the controls\n   * associated with the map.\n   * @return {Collection<import(\"./control/Control.js\").default>} Controls.\n   * @api\n   */\n  getControls() {\n    return this.controls;\n  }\n\n  /**\n   * Get the map overlays. Modifying this collection changes the overlays\n   * associated with the map.\n   * @return {Collection<import(\"./Overlay.js\").default>} Overlays.\n   * @api\n   */\n  getOverlays() {\n    return this.overlays_;\n  }\n\n  /**\n   * Get an overlay by its identifier (the value returned by overlay.getId()).\n   * Note that the index treats string and numeric identifiers as the same. So\n   * `map.getOverlayById(2)` will return an overlay with id `'2'` or `2`.\n   * @param {string|number} id Overlay identifier.\n   * @return {import(\"./Overlay.js\").default} Overlay.\n   * @api\n   */\n  getOverlayById(id) {\n    const overlay = this.overlayIdIndex_[id.toString()];\n    return overlay !== undefined ? overlay : null;\n  }\n\n  /**\n   * Get the map interactions. Modifying this collection changes the interactions\n   * associated with the map.\n   *\n   * Interactions are used for e.g. pan, zoom and rotate.\n   * @return {Collection<import(\"./interaction/Interaction.js\").default>} Interactions.\n   * @api\n   */\n  getInteractions() {\n    return this.interactions;\n  }\n\n  /**\n   * Get the layergroup associated with this map.\n   * @return {LayerGroup} A layer group containing the layers in this map.\n   * @observable\n   * @api\n   */\n  getLayerGroup() {\n    return /** @type {LayerGroup} */ (this.get(MapProperty.LAYERGROUP));\n  }\n\n  /**\n   * Clear any existing layers and add layers to the map.\n   * @param {Array<import(\"./layer/Base.js\").default>|Collection<import(\"./layer/Base.js\").default>} layers The layers to be added to the map.\n   * @api\n   */\n  setLayers(layers) {\n    const group = this.getLayerGroup();\n    if (layers instanceof Collection) {\n      group.setLayers(layers);\n      return;\n    }\n\n    const collection = group.getLayers();\n    collection.clear();\n    collection.extend(layers);\n  }\n\n  /**\n   * Get the collection of layers associated with this map.\n   * @return {!Collection<import(\"./layer/Base.js\").default>} Layers.\n   * @api\n   */\n  getLayers() {\n    const layers = this.getLayerGroup().getLayers();\n    return layers;\n  }\n\n  /**\n   * @return {boolean} Layers have sources that are still loading.\n   */\n  getLoadingOrNotReady() {\n    const layerStatesArray = this.getLayerGroup().getLayerStatesArray();\n    for (let i = 0, ii = layerStatesArray.length; i < ii; ++i) {\n      const state = layerStatesArray[i];\n      if (!state.visible) {\n        continue;\n      }\n      const renderer = state.layer.getRenderer();\n      if (renderer && !renderer.ready) {\n        return true;\n      }\n      const source = state.layer.getSource();\n      if (source && source.loading) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * Get the pixel for a coordinate.  This takes a coordinate in the user\n   * projection and returns the corresponding pixel.\n   * @param {import(\"./coordinate.js\").Coordinate} coordinate A map coordinate.\n   * @return {import(\"./pixel.js\").Pixel} A pixel position in the map viewport.\n   * @api\n   */\n  getPixelFromCoordinate(coordinate) {\n    const viewCoordinate = fromUserCoordinate(\n      coordinate,\n      this.getView().getProjection()\n    );\n    return this.getPixelFromCoordinateInternal(viewCoordinate);\n  }\n\n  /**\n   * Get the pixel for a coordinate.  This takes a coordinate in the map view\n   * projection and returns the corresponding pixel.\n   * @param {import(\"./coordinate.js\").Coordinate} coordinate A map coordinate.\n   * @return {import(\"./pixel.js\").Pixel} A pixel position in the map viewport.\n   */\n  getPixelFromCoordinateInternal(coordinate) {\n    const frameState = this.frameState_;\n    if (!frameState) {\n      return null;\n    }\n    return applyTransform(\n      frameState.coordinateToPixelTransform,\n      coordinate.slice(0, 2)\n    );\n  }\n\n  /**\n   * Get the map renderer.\n   * @return {import(\"./renderer/Map.js\").default|null} Renderer\n   */\n  getRenderer() {\n    return this.renderer_;\n  }\n\n  /**\n   * Get the size of this map.\n   * @return {import(\"./size.js\").Size|undefined} The size in pixels of the map in the DOM.\n   * @observable\n   * @api\n   */\n  getSize() {\n    return /** @type {import(\"./size.js\").Size|undefined} */ (\n      this.get(MapProperty.SIZE)\n    );\n  }\n\n  /**\n   * Get the view associated with this map. A view manages properties such as\n   * center and resolution.\n   * @return {View} The view that controls this map.\n   * @observable\n   * @api\n   */\n  getView() {\n    return /** @type {View} */ (this.get(MapProperty.VIEW));\n  }\n\n  /**\n   * Get the element that serves as the map viewport.\n   * @return {HTMLElement} Viewport.\n   * @api\n   */\n  getViewport() {\n    return this.viewport_;\n  }\n\n  /**\n   * Get the element that serves as the container for overlays.  Elements added to\n   * this container will let mousedown and touchstart events through to the map,\n   * so clicks and gestures on an overlay will trigger {@link module:ol/MapBrowserEvent~MapBrowserEvent}\n   * events.\n   * @return {!HTMLElement} The map's overlay container.\n   */\n  getOverlayContainer() {\n    return this.overlayContainer_;\n  }\n\n  /**\n   * Get the element that serves as a container for overlays that don't allow\n   * event propagation. Elements added to this container won't let mousedown and\n   * touchstart events through to the map, so clicks and gestures on an overlay\n   * don't trigger any {@link module:ol/MapBrowserEvent~MapBrowserEvent}.\n   * @return {!HTMLElement} The map's overlay container that stops events.\n   */\n  getOverlayContainerStopEvent() {\n    return this.overlayContainerStopEvent_;\n  }\n\n  /**\n   * @return {!Document} The document where the map is displayed.\n   */\n  getOwnerDocument() {\n    const targetElement = this.getTargetElement();\n    return targetElement ? targetElement.ownerDocument : document;\n  }\n\n  /**\n   * @param {import(\"./Tile.js\").default} tile Tile.\n   * @param {string} tileSourceKey Tile source key.\n   * @param {import(\"./coordinate.js\").Coordinate} tileCenter Tile center.\n   * @param {number} tileResolution Tile resolution.\n   * @return {number} Tile priority.\n   */\n  getTilePriority(tile, tileSourceKey, tileCenter, tileResolution) {\n    return getTilePriority(\n      this.frameState_,\n      tile,\n      tileSourceKey,\n      tileCenter,\n      tileResolution\n    );\n  }\n\n  /**\n   * @param {UIEvent} browserEvent Browser event.\n   * @param {string} [type] Type.\n   */\n  handleBrowserEvent(browserEvent, type) {\n    type = type || browserEvent.type;\n    const mapBrowserEvent = new MapBrowserEvent(type, this, browserEvent);\n    this.handleMapBrowserEvent(mapBrowserEvent);\n  }\n\n  /**\n   * @param {MapBrowserEvent} mapBrowserEvent The event to handle.\n   */\n  handleMapBrowserEvent(mapBrowserEvent) {\n    if (!this.frameState_) {\n      // With no view defined, we cannot translate pixels into geographical\n      // coordinates so interactions cannot be used.\n      return;\n    }\n    const originalEvent = /** @type {PointerEvent} */ (\n      mapBrowserEvent.originalEvent\n    );\n    const eventType = originalEvent.type;\n    if (\n      eventType === PointerEventType.POINTERDOWN ||\n      eventType === EventType.WHEEL ||\n      eventType === EventType.KEYDOWN\n    ) {\n      const doc = this.getOwnerDocument();\n      const rootNode = this.viewport_.getRootNode\n        ? this.viewport_.getRootNode()\n        : doc;\n      const target = /** @type {Node} */ (originalEvent.target);\n      if (\n        // Abort if the target is a child of the container for elements whose events are not meant\n        // to be handled by map interactions.\n        this.overlayContainerStopEvent_.contains(target) ||\n        // Abort if the event target is a child of the container that is no longer in the page.\n        // It's possible for the target to no longer be in the page if it has been removed in an\n        // event listener, this might happen in a Control that recreates it's content based on\n        // user interaction either manually or via a render in something like https://reactjs.org/\n        !(rootNode === doc ? doc.documentElement : rootNode).contains(target)\n      ) {\n        return;\n      }\n    }\n    mapBrowserEvent.frameState = this.frameState_;\n    if (this.dispatchEvent(mapBrowserEvent) !== false) {\n      const interactionsArray = this.getInteractions().getArray().slice();\n      for (let i = interactionsArray.length - 1; i >= 0; i--) {\n        const interaction = interactionsArray[i];\n        if (\n          interaction.getMap() !== this ||\n          !interaction.getActive() ||\n          !this.getTargetElement()\n        ) {\n          continue;\n        }\n        const cont = interaction.handleEvent(mapBrowserEvent);\n        if (!cont || mapBrowserEvent.propagationStopped) {\n          break;\n        }\n      }\n    }\n  }\n\n  /**\n   * @protected\n   */\n  handlePostRender() {\n    const frameState = this.frameState_;\n\n    // Manage the tile queue\n    // Image loads are expensive and a limited resource, so try to use them\n    // efficiently:\n    // * When the view is static we allow a large number of parallel tile loads\n    //   to complete the frame as quickly as possible.\n    // * When animating or interacting, image loads can cause janks, so we reduce\n    //   the maximum number of loads per frame and limit the number of parallel\n    //   tile loads to remain reactive to view changes and to reduce the chance of\n    //   loading tiles that will quickly disappear from view.\n    const tileQueue = this.tileQueue_;\n    if (!tileQueue.isEmpty()) {\n      let maxTotalLoading = this.maxTilesLoading_;\n      let maxNewLoads = maxTotalLoading;\n      if (frameState) {\n        const hints = frameState.viewHints;\n        if (hints[ViewHint.ANIMATING] || hints[ViewHint.INTERACTING]) {\n          const lowOnFrameBudget = Date.now() - frameState.time > 8;\n          maxTotalLoading = lowOnFrameBudget ? 0 : 8;\n          maxNewLoads = lowOnFrameBudget ? 0 : 2;\n        }\n      }\n      if (tileQueue.getTilesLoading() < maxTotalLoading) {\n        tileQueue.reprioritize(); // FIXME only call if view has changed\n        tileQueue.loadMoreTiles(maxTotalLoading, maxNewLoads);\n      }\n    }\n\n    if (frameState && this.renderer_ && !frameState.animate) {\n      if (this.renderComplete_ === true) {\n        if (this.hasListener(RenderEventType.RENDERCOMPLETE)) {\n          this.renderer_.dispatchRenderEvent(\n            RenderEventType.RENDERCOMPLETE,\n            frameState\n          );\n        }\n        if (this.loaded_ === false) {\n          this.loaded_ = true;\n          this.dispatchEvent(\n            new MapEvent(MapEventType.LOADEND, this, frameState)\n          );\n        }\n      } else if (this.loaded_ === true) {\n        this.loaded_ = false;\n        this.dispatchEvent(\n          new MapEvent(MapEventType.LOADSTART, this, frameState)\n        );\n      }\n    }\n\n    const postRenderFunctions = this.postRenderFunctions_;\n    for (let i = 0, ii = postRenderFunctions.length; i < ii; ++i) {\n      postRenderFunctions[i](this, frameState);\n    }\n    postRenderFunctions.length = 0;\n  }\n\n  /**\n   * @private\n   */\n  handleSizeChanged_() {\n    if (this.getView() && !this.getView().getAnimating()) {\n      this.getView().resolveConstraints(0);\n    }\n\n    this.render();\n  }\n\n  /**\n   * @private\n   */\n  handleTargetChanged_() {\n    if (this.mapBrowserEventHandler_) {\n      for (let i = 0, ii = this.targetChangeHandlerKeys_.length; i < ii; ++i) {\n        unlistenByKey(this.targetChangeHandlerKeys_[i]);\n      }\n      this.targetChangeHandlerKeys_ = null;\n      this.viewport_.removeEventListener(\n        EventType.CONTEXTMENU,\n        this.boundHandleBrowserEvent_\n      );\n      this.viewport_.removeEventListener(\n        EventType.WHEEL,\n        this.boundHandleBrowserEvent_\n      );\n      this.mapBrowserEventHandler_.dispose();\n      this.mapBrowserEventHandler_ = null;\n      removeNode(this.viewport_);\n    }\n\n    if (this.targetElement_) {\n      this.resizeObserver_.unobserve(this.targetElement_);\n      const rootNode = this.targetElement_.getRootNode();\n      if (rootNode instanceof ShadowRoot) {\n        this.resizeObserver_.unobserve(rootNode.host);\n      }\n    }\n\n    // target may be undefined, null, a string or an Element.\n    // If it's a string we convert it to an Element before proceeding.\n    // If it's not now an Element we remove the viewport from the DOM.\n    // If it's an Element we append the viewport element to it.\n\n    const target = this.getTarget();\n    const targetElement =\n      typeof target === 'string' ? document.getElementById(target) : target;\n    this.targetElement_ = targetElement;\n    if (!targetElement) {\n      if (this.renderer_) {\n        clearTimeout(this.postRenderTimeoutHandle_);\n        this.postRenderTimeoutHandle_ = undefined;\n        this.postRenderFunctions_.length = 0;\n        this.renderer_.dispose();\n        this.renderer_ = null;\n      }\n      if (this.animationDelayKey_) {\n        cancelAnimationFrame(this.animationDelayKey_);\n        this.animationDelayKey_ = undefined;\n      }\n    } else {\n      targetElement.appendChild(this.viewport_);\n      if (!this.renderer_) {\n        this.renderer_ = new CompositeMapRenderer(this);\n      }\n\n      this.mapBrowserEventHandler_ = new MapBrowserEventHandler(\n        this,\n        this.moveTolerance_\n      );\n      for (const key in MapBrowserEventType) {\n        this.mapBrowserEventHandler_.addEventListener(\n          MapBrowserEventType[key],\n          this.handleMapBrowserEvent.bind(this)\n        );\n      }\n      this.viewport_.addEventListener(\n        EventType.CONTEXTMENU,\n        this.boundHandleBrowserEvent_,\n        false\n      );\n      this.viewport_.addEventListener(\n        EventType.WHEEL,\n        this.boundHandleBrowserEvent_,\n        PASSIVE_EVENT_LISTENERS ? {passive: false} : false\n      );\n\n      const keyboardEventTarget = !this.keyboardEventTarget_\n        ? targetElement\n        : this.keyboardEventTarget_;\n      this.targetChangeHandlerKeys_ = [\n        listen(\n          keyboardEventTarget,\n          EventType.KEYDOWN,\n          this.handleBrowserEvent,\n          this\n        ),\n        listen(\n          keyboardEventTarget,\n          EventType.KEYPRESS,\n          this.handleBrowserEvent,\n          this\n        ),\n      ];\n      const rootNode = targetElement.getRootNode();\n      if (rootNode instanceof ShadowRoot) {\n        this.resizeObserver_.observe(rootNode.host);\n      }\n      this.resizeObserver_.observe(targetElement);\n    }\n\n    this.updateSize();\n    // updateSize calls setSize, so no need to call this.render\n    // ourselves here.\n  }\n\n  /**\n   * @private\n   */\n  handleTileChange_() {\n    this.render();\n  }\n\n  /**\n   * @private\n   */\n  handleViewPropertyChanged_() {\n    this.render();\n  }\n\n  /**\n   * @private\n   */\n  handleViewChanged_() {\n    if (this.viewPropertyListenerKey_) {\n      unlistenByKey(this.viewPropertyListenerKey_);\n      this.viewPropertyListenerKey_ = null;\n    }\n    if (this.viewChangeListenerKey_) {\n      unlistenByKey(this.viewChangeListenerKey_);\n      this.viewChangeListenerKey_ = null;\n    }\n    const view = this.getView();\n    if (view) {\n      this.updateViewportSize_();\n\n      this.viewPropertyListenerKey_ = listen(\n        view,\n        ObjectEventType.PROPERTYCHANGE,\n        this.handleViewPropertyChanged_,\n        this\n      );\n      this.viewChangeListenerKey_ = listen(\n        view,\n        EventType.CHANGE,\n        this.handleViewPropertyChanged_,\n        this\n      );\n\n      view.resolveConstraints(0);\n    }\n    this.render();\n  }\n\n  /**\n   * @private\n   */\n  handleLayerGroupChanged_() {\n    if (this.layerGroupPropertyListenerKeys_) {\n      this.layerGroupPropertyListenerKeys_.forEach(unlistenByKey);\n      this.layerGroupPropertyListenerKeys_ = null;\n    }\n    const layerGroup = this.getLayerGroup();\n    if (layerGroup) {\n      this.handleLayerAdd_(new GroupEvent('addlayer', layerGroup));\n      this.layerGroupPropertyListenerKeys_ = [\n        listen(layerGroup, ObjectEventType.PROPERTYCHANGE, this.render, this),\n        listen(layerGroup, EventType.CHANGE, this.render, this),\n        listen(layerGroup, 'addlayer', this.handleLayerAdd_, this),\n        listen(layerGroup, 'removelayer', this.handleLayerRemove_, this),\n      ];\n    }\n    this.render();\n  }\n\n  /**\n   * @return {boolean} Is rendered.\n   */\n  isRendered() {\n    return !!this.frameState_;\n  }\n\n  /**\n   * @private\n   */\n  animationDelay_() {\n    this.animationDelayKey_ = undefined;\n    this.renderFrame_(Date.now());\n  }\n\n  /**\n   * Requests an immediate render in a synchronous manner.\n   * @api\n   */\n  renderSync() {\n    if (this.animationDelayKey_) {\n      cancelAnimationFrame(this.animationDelayKey_);\n    }\n    this.animationDelay_();\n  }\n\n  /**\n   * Redraws all text after new fonts have loaded\n   */\n  redrawText() {\n    const layerStates = this.getLayerGroup().getLayerStatesArray();\n    for (let i = 0, ii = layerStates.length; i < ii; ++i) {\n      const layer = layerStates[i].layer;\n      if (layer.hasRenderer()) {\n        layer.getRenderer().handleFontsChanged();\n      }\n    }\n  }\n\n  /**\n   * Request a map rendering (at the next animation frame).\n   * @api\n   */\n  render() {\n    if (this.renderer_ && this.animationDelayKey_ === undefined) {\n      this.animationDelayKey_ = requestAnimationFrame(this.animationDelay_);\n    }\n  }\n\n  /**\n   * Remove the given control from the map.\n   * @param {import(\"./control/Control.js\").default} control Control.\n   * @return {import(\"./control/Control.js\").default|undefined} The removed control (or undefined\n   *     if the control was not found).\n   * @api\n   */\n  removeControl(control) {\n    return this.getControls().remove(control);\n  }\n\n  /**\n   * Remove the given interaction from the map.\n   * @param {import(\"./interaction/Interaction.js\").default} interaction Interaction to remove.\n   * @return {import(\"./interaction/Interaction.js\").default|undefined} The removed interaction (or\n   *     undefined if the interaction was not found).\n   * @api\n   */\n  removeInteraction(interaction) {\n    return this.getInteractions().remove(interaction);\n  }\n\n  /**\n   * Removes the given layer from the map.\n   * @param {import(\"./layer/Base.js\").default} layer Layer.\n   * @return {import(\"./layer/Base.js\").default|undefined} The removed layer (or undefined if the\n   *     layer was not found).\n   * @api\n   */\n  removeLayer(layer) {\n    const layers = this.getLayerGroup().getLayers();\n    return layers.remove(layer);\n  }\n\n  /**\n   * @param {import(\"./layer/Group.js\").GroupEvent} event The layer remove event.\n   * @private\n   */\n  handleLayerRemove_(event) {\n    removeLayerMapProperty(event.layer);\n  }\n\n  /**\n   * Remove the given overlay from the map.\n   * @param {import(\"./Overlay.js\").default} overlay Overlay.\n   * @return {import(\"./Overlay.js\").default|undefined} The removed overlay (or undefined\n   *     if the overlay was not found).\n   * @api\n   */\n  removeOverlay(overlay) {\n    return this.getOverlays().remove(overlay);\n  }\n\n  /**\n   * @param {number} time Time.\n   * @private\n   */\n  renderFrame_(time) {\n    const size = this.getSize();\n    const view = this.getView();\n    const previousFrameState = this.frameState_;\n    /** @type {?FrameState} */\n    let frameState = null;\n    if (size !== undefined && hasArea(size) && view && view.isDef()) {\n      const viewHints = view.getHints(\n        this.frameState_ ? this.frameState_.viewHints : undefined\n      );\n      const viewState = view.getState();\n      frameState = {\n        animate: false,\n        coordinateToPixelTransform: this.coordinateToPixelTransform_,\n        declutterTree: null,\n        extent: getForViewAndSize(\n          viewState.center,\n          viewState.resolution,\n          viewState.rotation,\n          size\n        ),\n        index: this.frameIndex_++,\n        layerIndex: 0,\n        layerStatesArray: this.getLayerGroup().getLayerStatesArray(),\n        pixelRatio: this.pixelRatio_,\n        pixelToCoordinateTransform: this.pixelToCoordinateTransform_,\n        postRenderFunctions: [],\n        size: size,\n        tileQueue: this.tileQueue_,\n        time: time,\n        usedTiles: {},\n        viewState: viewState,\n        viewHints: viewHints,\n        wantedTiles: {},\n        mapId: getUid(this),\n        renderTargets: {},\n      };\n      if (viewState.nextCenter && viewState.nextResolution) {\n        const rotation = isNaN(viewState.nextRotation)\n          ? viewState.rotation\n          : viewState.nextRotation;\n\n        frameState.nextExtent = getForViewAndSize(\n          viewState.nextCenter,\n          viewState.nextResolution,\n          rotation,\n          size\n        );\n      }\n    }\n\n    this.frameState_ = frameState;\n    this.renderer_.renderFrame(frameState);\n\n    if (frameState) {\n      if (frameState.animate) {\n        this.render();\n      }\n      Array.prototype.push.apply(\n        this.postRenderFunctions_,\n        frameState.postRenderFunctions\n      );\n\n      if (previousFrameState) {\n        const moveStart =\n          !this.previousExtent_ ||\n          (!isEmpty(this.previousExtent_) &&\n            !equalsExtent(frameState.extent, this.previousExtent_));\n        if (moveStart) {\n          this.dispatchEvent(\n            new MapEvent(MapEventType.MOVESTART, this, previousFrameState)\n          );\n          this.previousExtent_ = createOrUpdateEmpty(this.previousExtent_);\n        }\n      }\n\n      const idle =\n        this.previousExtent_ &&\n        !frameState.viewHints[ViewHint.ANIMATING] &&\n        !frameState.viewHints[ViewHint.INTERACTING] &&\n        !equalsExtent(frameState.extent, this.previousExtent_);\n\n      if (idle) {\n        this.dispatchEvent(\n          new MapEvent(MapEventType.MOVEEND, this, frameState)\n        );\n        clone(frameState.extent, this.previousExtent_);\n      }\n    }\n\n    this.dispatchEvent(new MapEvent(MapEventType.POSTRENDER, this, frameState));\n\n    this.renderComplete_ =\n      this.hasListener(MapEventType.LOADSTART) ||\n      this.hasListener(MapEventType.LOADEND) ||\n      this.hasListener(RenderEventType.RENDERCOMPLETE)\n        ? !this.tileQueue_.getTilesLoading() &&\n          !this.tileQueue_.getCount() &&\n          !this.getLoadingOrNotReady()\n        : undefined;\n\n    if (!this.postRenderTimeoutHandle_) {\n      this.postRenderTimeoutHandle_ = setTimeout(() => {\n        this.postRenderTimeoutHandle_ = undefined;\n        this.handlePostRender();\n      }, 0);\n    }\n  }\n\n  /**\n   * Sets the layergroup of this map.\n   * @param {LayerGroup} layerGroup A layer group containing the layers in this map.\n   * @observable\n   * @api\n   */\n  setLayerGroup(layerGroup) {\n    const oldLayerGroup = this.getLayerGroup();\n    if (oldLayerGroup) {\n      this.handleLayerRemove_(new GroupEvent('removelayer', oldLayerGroup));\n    }\n    this.set(MapProperty.LAYERGROUP, layerGroup);\n  }\n\n  /**\n   * Set the size of this map.\n   * @param {import(\"./size.js\").Size|undefined} size The size in pixels of the map in the DOM.\n   * @observable\n   * @api\n   */\n  setSize(size) {\n    this.set(MapProperty.SIZE, size);\n  }\n\n  /**\n   * Set the target element to render this map into.\n   * @param {HTMLElement|string} [target] The Element or id of the Element\n   *     that the map is rendered in.\n   * @observable\n   * @api\n   */\n  setTarget(target) {\n    this.set(MapProperty.TARGET, target);\n  }\n\n  /**\n   * Set the view for this map.\n   * @param {View|Promise<import(\"./View.js\").ViewOptions>} view The view that controls this map.\n   * It is also possible to pass a promise that resolves to options for constructing a view.  This\n   * alternative allows view properties to be resolved by sources or other components that load\n   * view-related metadata.\n   * @observable\n   * @api\n   */\n  setView(view) {\n    if (!view || view instanceof View) {\n      this.set(MapProperty.VIEW, view);\n      return;\n    }\n    this.set(MapProperty.VIEW, new View());\n\n    const map = this;\n    view.then(function (viewOptions) {\n      map.setView(new View(viewOptions));\n    });\n  }\n\n  /**\n   * Force a recalculation of the map viewport size.  This should be called when\n   * third-party code changes the size of the map viewport.\n   * @api\n   */\n  updateSize() {\n    const targetElement = this.getTargetElement();\n\n    let size = undefined;\n    if (targetElement) {\n      const computedStyle = getComputedStyle(targetElement);\n      const width =\n        targetElement.offsetWidth -\n        parseFloat(computedStyle['borderLeftWidth']) -\n        parseFloat(computedStyle['paddingLeft']) -\n        parseFloat(computedStyle['paddingRight']) -\n        parseFloat(computedStyle['borderRightWidth']);\n      const height =\n        targetElement.offsetHeight -\n        parseFloat(computedStyle['borderTopWidth']) -\n        parseFloat(computedStyle['paddingTop']) -\n        parseFloat(computedStyle['paddingBottom']) -\n        parseFloat(computedStyle['borderBottomWidth']);\n      if (!isNaN(width) && !isNaN(height)) {\n        size = [width, height];\n        if (\n          !hasArea(size) &&\n          !!(\n            targetElement.offsetWidth ||\n            targetElement.offsetHeight ||\n            targetElement.getClientRects().length\n          )\n        ) {\n          warn(\n            \"No map visible because the map container's width or height are 0.\"\n          );\n        }\n      }\n    }\n\n    const oldSize = this.getSize();\n    if (size && (!oldSize || !equals(size, oldSize))) {\n      this.setSize(size);\n      this.updateViewportSize_();\n    }\n  }\n\n  /**\n   * Recomputes the viewport size and save it on the view object (if any)\n   * @private\n   */\n  updateViewportSize_() {\n    const view = this.getView();\n    if (view) {\n      let size = undefined;\n      const computedStyle = getComputedStyle(this.viewport_);\n      if (computedStyle.width && computedStyle.height) {\n        size = [\n          parseInt(computedStyle.width, 10),\n          parseInt(computedStyle.height, 10),\n        ];\n      }\n      view.setViewportSize(size);\n    }\n  }\n}\n\n/**\n * @param {MapOptions} options Map options.\n * @return {MapOptionsInternal} Internal map options.\n */\nfunction createOptionsInternal(options) {\n  /**\n   * @type {HTMLElement|Document}\n   */\n  let keyboardEventTarget = null;\n  if (options.keyboardEventTarget !== undefined) {\n    keyboardEventTarget =\n      typeof options.keyboardEventTarget === 'string'\n        ? document.getElementById(options.keyboardEventTarget)\n        : options.keyboardEventTarget;\n  }\n\n  /**\n   * @type {Object<string, *>}\n   */\n  const values = {};\n\n  const layerGroup =\n    options.layers &&\n    typeof (/** @type {?} */ (options.layers).getLayers) === 'function'\n      ? /** @type {LayerGroup} */ (options.layers)\n      : new LayerGroup({\n          layers:\n            /** @type {Collection<import(\"./layer/Base.js\").default>|Array<import(\"./layer/Base.js\").default>} */ (\n              options.layers\n            ),\n        });\n  values[MapProperty.LAYERGROUP] = layerGroup;\n\n  values[MapProperty.TARGET] = options.target;\n\n  values[MapProperty.VIEW] =\n    options.view instanceof View ? options.view : new View();\n\n  /** @type {Collection<import(\"./control/Control.js\").default>} */\n  let controls;\n  if (options.controls !== undefined) {\n    if (Array.isArray(options.controls)) {\n      controls = new Collection(options.controls.slice());\n    } else {\n      assert(\n        typeof (/** @type {?} */ (options.controls).getArray) === 'function',\n        47\n      ); // Expected `controls` to be an array or an `import(\"./Collection.js\").Collection`\n      controls = options.controls;\n    }\n  }\n\n  /** @type {Collection<import(\"./interaction/Interaction\").default>} */\n  let interactions;\n  if (options.interactions !== undefined) {\n    if (Array.isArray(options.interactions)) {\n      interactions = new Collection(options.interactions.slice());\n    } else {\n      assert(\n        typeof (/** @type {?} */ (options.interactions).getArray) ===\n          'function',\n        48\n      ); // Expected `interactions` to be an array or an `import(\"./Collection.js\").Collection`\n      interactions = options.interactions;\n    }\n  }\n\n  /** @type {Collection<import(\"./Overlay.js\").default>} */\n  let overlays;\n  if (options.overlays !== undefined) {\n    if (Array.isArray(options.overlays)) {\n      overlays = new Collection(options.overlays.slice());\n    } else {\n      assert(\n        typeof (/** @type {?} */ (options.overlays).getArray) === 'function',\n        49\n      ); // Expected `overlays` to be an array or an `import(\"./Collection.js\").Collection`\n      overlays = options.overlays;\n    }\n  } else {\n    overlays = new Collection();\n  }\n\n  return {\n    controls: controls,\n    interactions: interactions,\n    keyboardEventTarget: keyboardEventTarget,\n    overlays: overlays,\n    values: values,\n  };\n}\nexport default Map;\n","/**\n * @module ol/control/defaults\n */\nimport Attribution from './Attribution.js';\nimport Collection from '../Collection.js';\nimport Rotate from './Rotate.js';\nimport Zoom from './Zoom.js';\n\n/**\n * @typedef {Object} DefaultsOptions\n * @property {boolean} [attribution=true] Include\n * {@link module:ol/control/Attribution~Attribution}.\n * @property {import(\"./Attribution.js\").Options} [attributionOptions]\n * Options for {@link module:ol/control/Attribution~Attribution}.\n * @property {boolean} [rotate=true] Include\n * {@link module:ol/control/Rotate~Rotate}.\n * @property {import(\"./Rotate.js\").Options} [rotateOptions] Options\n * for {@link module:ol/control/Rotate~Rotate}.\n * @property {boolean} [zoom] Include {@link module:ol/control/Zoom~Zoom}.\n * @property {import(\"./Zoom.js\").Options} [zoomOptions] Options for\n * {@link module:ol/control/Zoom~Zoom}.\n */\n\n/**\n * Set of controls included in maps by default. Unless configured otherwise,\n * this returns a collection containing an instance of each of the following\n * controls:\n * * {@link module:ol/control/Zoom~Zoom}\n * * {@link module:ol/control/Rotate~Rotate}\n * * {@link module:ol/control/Attribution~Attribution}\n *\n * @param {DefaultsOptions} [options] Options for the default controls.\n * @return {Collection<import(\"./Control.js\").default>} A collection of controls\n * to be used with the {@link module:ol/Map~Map} constructor's `controls` option.\n * @api\n */\nexport function defaults(options) {\n  options = options ? options : {};\n\n  /** @type {Collection<import(\"./Control.js\").default>} */\n  const controls = new Collection();\n\n  const zoomControl = options.zoom !== undefined ? options.zoom : true;\n  if (zoomControl) {\n    controls.push(new Zoom(options.zoomOptions));\n  }\n\n  const rotateControl = options.rotate !== undefined ? options.rotate : true;\n  if (rotateControl) {\n    controls.push(new Rotate(options.rotateOptions));\n  }\n\n  const attributionControl =\n    options.attribution !== undefined ? options.attribution : true;\n  if (attributionControl) {\n    controls.push(new Attribution(options.attributionOptions));\n  }\n\n  return controls;\n}\n","/**\n * @module ol/interaction/defaults\n */\nimport Collection from '../Collection.js';\nimport DoubleClickZoom from './DoubleClickZoom.js';\nimport DragPan from './DragPan.js';\nimport DragRotate from './DragRotate.js';\nimport DragZoom from './DragZoom.js';\nimport KeyboardPan from './KeyboardPan.js';\nimport KeyboardZoom from './KeyboardZoom.js';\nimport Kinetic from '../Kinetic.js';\nimport MouseWheelZoom from './MouseWheelZoom.js';\nimport PinchRotate from './PinchRotate.js';\nimport PinchZoom from './PinchZoom.js';\n\n/**\n * @typedef {Object} DefaultsOptions\n * @property {boolean} [altShiftDragRotate=true] Whether Alt-Shift-drag rotate is\n * desired.\n * @property {boolean} [onFocusOnly=false] Interact only when the map has the\n * focus. This affects the `MouseWheelZoom` and `DragPan` interactions and is\n * useful when page scroll is desired for maps that do not have the browser's\n * focus.\n * @property {boolean} [doubleClickZoom=true] Whether double click zoom is\n * desired.\n * @property {boolean} [keyboard=true] Whether keyboard interaction is desired.\n * @property {boolean} [mouseWheelZoom=true] Whether mousewheel zoom is desired.\n * @property {boolean} [shiftDragZoom=true] Whether Shift-drag zoom is desired.\n * @property {boolean} [dragPan=true] Whether drag pan is desired.\n * @property {boolean} [pinchRotate=true] Whether pinch rotate is desired.\n * @property {boolean} [pinchZoom=true] Whether pinch zoom is desired.\n * @property {number} [zoomDelta] Zoom level delta when using keyboard or double click zoom.\n * @property {number} [zoomDuration] Duration of the zoom animation in\n * milliseconds.\n */\n\n/**\n * Set of interactions included in maps by default. Specific interactions can be\n * excluded by setting the appropriate option to false in the constructor\n * options, but the order of the interactions is fixed.  If you want to specify\n * a different order for interactions, you will need to create your own\n * {@link module:ol/interaction/Interaction~Interaction} instances and insert\n * them into a {@link module:ol/Collection~Collection} in the order you want\n * before creating your {@link module:ol/Map~Map} instance. Changing the order can\n * be of interest if the event propagation needs to be stopped at a point.\n * The default set of interactions, in sequence, is:\n * * {@link module:ol/interaction/DragRotate~DragRotate}\n * * {@link module:ol/interaction/DoubleClickZoom~DoubleClickZoom}\n * * {@link module:ol/interaction/DragPan~DragPan}\n * * {@link module:ol/interaction/PinchRotate~PinchRotate}\n * * {@link module:ol/interaction/PinchZoom~PinchZoom}\n * * {@link module:ol/interaction/KeyboardPan~KeyboardPan}\n * * {@link module:ol/interaction/KeyboardZoom~KeyboardZoom}\n * * {@link module:ol/interaction/MouseWheelZoom~MouseWheelZoom}\n * * {@link module:ol/interaction/DragZoom~DragZoom}\n *\n * @param {DefaultsOptions} [options] Defaults options.\n * @return {Collection<import(\"./Interaction.js\").default>}\n * A collection of interactions to be used with the {@link module:ol/Map~Map}\n * constructor's `interactions` option.\n * @api\n */\nexport function defaults(options) {\n  options = options ? options : {};\n\n  /** @type {Collection<import(\"./Interaction.js\").default>} */\n  const interactions = new Collection();\n\n  const kinetic = new Kinetic(-0.005, 0.05, 100);\n\n  const altShiftDragRotate =\n    options.altShiftDragRotate !== undefined\n      ? options.altShiftDragRotate\n      : true;\n  if (altShiftDragRotate) {\n    interactions.push(new DragRotate());\n  }\n\n  const doubleClickZoom =\n    options.doubleClickZoom !== undefined ? options.doubleClickZoom : true;\n  if (doubleClickZoom) {\n    interactions.push(\n      new DoubleClickZoom({\n        delta: options.zoomDelta,\n        duration: options.zoomDuration,\n      })\n    );\n  }\n\n  const dragPan = options.dragPan !== undefined ? options.dragPan : true;\n  if (dragPan) {\n    interactions.push(\n      new DragPan({\n        onFocusOnly: options.onFocusOnly,\n        kinetic: kinetic,\n      })\n    );\n  }\n\n  const pinchRotate =\n    options.pinchRotate !== undefined ? options.pinchRotate : true;\n  if (pinchRotate) {\n    interactions.push(new PinchRotate());\n  }\n\n  const pinchZoom = options.pinchZoom !== undefined ? options.pinchZoom : true;\n  if (pinchZoom) {\n    interactions.push(\n      new PinchZoom({\n        duration: options.zoomDuration,\n      })\n    );\n  }\n\n  const keyboard = options.keyboard !== undefined ? options.keyboard : true;\n  if (keyboard) {\n    interactions.push(new KeyboardPan());\n    interactions.push(\n      new KeyboardZoom({\n        delta: options.zoomDelta,\n        duration: options.zoomDuration,\n      })\n    );\n  }\n\n  const mouseWheelZoom =\n    options.mouseWheelZoom !== undefined ? options.mouseWheelZoom : true;\n  if (mouseWheelZoom) {\n    interactions.push(\n      new MouseWheelZoom({\n        onFocusOnly: options.onFocusOnly,\n        duration: options.zoomDuration,\n      })\n    );\n  }\n\n  const shiftDragZoom =\n    options.shiftDragZoom !== undefined ? options.shiftDragZoom : true;\n  if (shiftDragZoom) {\n    interactions.push(\n      new DragZoom({\n        duration: options.zoomDuration,\n      })\n    );\n  }\n\n  return interactions;\n}\n","/**\n * @module ol/Object\n */\nimport Event from './events/Event.js';\nimport ObjectEventType from './ObjectEventType.js';\nimport Observable from './Observable.js';\nimport {getUid} from './util.js';\nimport {isEmpty} from './obj.js';\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/Object~BaseObject} instances are instances of this type.\n */\nexport class ObjectEvent extends Event {\n  /**\n   * @param {string} type The event type.\n   * @param {string} key The property name.\n   * @param {*} oldValue The old value for `key`.\n   */\n  constructor(type, key, oldValue) {\n    super(type);\n\n    /**\n     * The name of the property whose value is changing.\n     * @type {string}\n     * @api\n     */\n    this.key = key;\n\n    /**\n     * The old value. To get the new value use `e.target.get(e.key)` where\n     * `e` is the event object.\n     * @type {*}\n     * @api\n     */\n    this.oldValue = oldValue;\n  }\n}\n\n/***\n * @template Return\n * @typedef {import(\"./Observable\").OnSignature<import(\"./Observable\").EventTypes, import(\"./events/Event.js\").default, Return> &\n *    import(\"./Observable\").OnSignature<import(\"./ObjectEventType\").Types, ObjectEvent, Return> &\n *    import(\"./Observable\").CombinedOnSignature<import(\"./Observable\").EventTypes|import(\"./ObjectEventType\").Types, Return>} ObjectOnSignature\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Most non-trivial classes inherit from this.\n *\n * This extends {@link module:ol/Observable~Observable} with observable\n * properties, where each property is observable as well as the object as a\n * whole.\n *\n * Classes that inherit from this have pre-defined properties, to which you can\n * add your owns. The pre-defined properties are listed in this documentation as\n * 'Observable Properties', and have their own accessors; for example,\n * {@link module:ol/Map~Map} has a `target` property, accessed with\n * `getTarget()` and changed with `setTarget()`. Not all properties are however\n * settable. There are also general-purpose accessors `get()` and `set()`. For\n * example, `get('target')` is equivalent to `getTarget()`.\n *\n * The `set` accessors trigger a change event, and you can monitor this by\n * registering a listener. For example, {@link module:ol/View~View} has a\n * `center` property, so `view.on('change:center', function(evt) {...});` would\n * call the function whenever the value of the center property changes. Within\n * the function, `evt.target` would be the view, so `evt.target.getCenter()`\n * would return the new center.\n *\n * You can add your own observable properties with\n * `object.set('prop', 'value')`, and retrieve that with `object.get('prop')`.\n * You can listen for changes on that property value with\n * `object.on('change:prop', listener)`. You can get a list of all\n * properties with {@link module:ol/Object~BaseObject#getProperties}.\n *\n * Note that the observable properties are separate from standard JS properties.\n * You can, for example, give your map object a title with\n * `map.title='New title'` and with `map.set('title', 'Another title')`. The\n * first will be a `hasOwnProperty`; the second will appear in\n * `getProperties()`. Only the second is observable.\n *\n * Properties can be deleted by using the unset method. E.g.\n * object.unset('foo').\n *\n * @fires ObjectEvent\n * @api\n */\nclass BaseObject extends Observable {\n  /**\n   * @param {Object<string, *>} [values] An object with key-value pairs.\n   */\n  constructor(values) {\n    super();\n\n    /***\n     * @type {ObjectOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {ObjectOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {ObjectOnSignature<void>}\n     */\n    this.un;\n\n    // Call {@link module:ol/util.getUid} to ensure that the order of objects' ids is\n    // the same as the order in which they were created.  This also helps to\n    // ensure that object properties are always added in the same order, which\n    // helps many JavaScript engines generate faster code.\n    getUid(this);\n\n    /**\n     * @private\n     * @type {Object<string, *>}\n     */\n    this.values_ = null;\n\n    if (values !== undefined) {\n      this.setProperties(values);\n    }\n  }\n\n  /**\n   * Gets a value.\n   * @param {string} key Key name.\n   * @return {*} Value.\n   * @api\n   */\n  get(key) {\n    let value;\n    if (this.values_ && this.values_.hasOwnProperty(key)) {\n      value = this.values_[key];\n    }\n    return value;\n  }\n\n  /**\n   * Get a list of object property names.\n   * @return {Array<string>} List of property names.\n   * @api\n   */\n  getKeys() {\n    return (this.values_ && Object.keys(this.values_)) || [];\n  }\n\n  /**\n   * Get an object of all property names and values.\n   * @return {Object<string, *>} Object.\n   * @api\n   */\n  getProperties() {\n    return (this.values_ && Object.assign({}, this.values_)) || {};\n  }\n\n  /**\n   * @return {boolean} The object has properties.\n   */\n  hasProperties() {\n    return !!this.values_;\n  }\n\n  /**\n   * @param {string} key Key name.\n   * @param {*} oldValue Old value.\n   */\n  notify(key, oldValue) {\n    let eventType;\n    eventType = `change:${key}`;\n    if (this.hasListener(eventType)) {\n      this.dispatchEvent(new ObjectEvent(eventType, key, oldValue));\n    }\n    eventType = ObjectEventType.PROPERTYCHANGE;\n    if (this.hasListener(eventType)) {\n      this.dispatchEvent(new ObjectEvent(eventType, key, oldValue));\n    }\n  }\n\n  /**\n   * @param {string} key Key name.\n   * @param {import(\"./events.js\").Listener} listener Listener.\n   */\n  addChangeListener(key, listener) {\n    this.addEventListener(`change:${key}`, listener);\n  }\n\n  /**\n   * @param {string} key Key name.\n   * @param {import(\"./events.js\").Listener} listener Listener.\n   */\n  removeChangeListener(key, listener) {\n    this.removeEventListener(`change:${key}`, listener);\n  }\n\n  /**\n   * Sets a value.\n   * @param {string} key Key name.\n   * @param {*} value Value.\n   * @param {boolean} [silent] Update without triggering an event.\n   * @api\n   */\n  set(key, value, silent) {\n    const values = this.values_ || (this.values_ = {});\n    if (silent) {\n      values[key] = value;\n    } else {\n      const oldValue = values[key];\n      values[key] = value;\n      if (oldValue !== value) {\n        this.notify(key, oldValue);\n      }\n    }\n  }\n\n  /**\n   * Sets a collection of key-value pairs.  Note that this changes any existing\n   * properties and adds new ones (it does not remove any existing properties).\n   * @param {Object<string, *>} values Values.\n   * @param {boolean} [silent] Update without triggering an event.\n   * @api\n   */\n  setProperties(values, silent) {\n    for (const key in values) {\n      this.set(key, values[key], silent);\n    }\n  }\n\n  /**\n   * Apply any properties from another object without triggering events.\n   * @param {BaseObject} source The source object.\n   * @protected\n   */\n  applyProperties(source) {\n    if (!source.values_) {\n      return;\n    }\n    Object.assign(this.values_ || (this.values_ = {}), source.values_);\n  }\n\n  /**\n   * Unsets a property.\n   * @param {string} key Key name.\n   * @param {boolean} [silent] Unset without triggering an event.\n   * @api\n   */\n  unset(key, silent) {\n    if (this.values_ && key in this.values_) {\n      const oldValue = this.values_[key];\n      delete this.values_[key];\n      if (isEmpty(this.values_)) {\n        this.values_ = null;\n      }\n      if (!silent) {\n        this.notify(key, oldValue);\n      }\n    }\n  }\n}\n\nexport default BaseObject;\n","/**\n * @module ol/ObjectEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered when a property is changed.\n   * @event module:ol/Object.ObjectEvent#propertychange\n   * @api\n   */\n  PROPERTYCHANGE: 'propertychange',\n};\n\n/**\n * @typedef {'propertychange'} Types\n */\n","/**\n * @module ol/Observable\n */\nimport EventTarget from './events/Target.js';\nimport EventType from './events/EventType.js';\nimport {listen, listenOnce, unlistenByKey} from './events.js';\n\n/***\n * @template {string} Type\n * @template {Event|import(\"./events/Event.js\").default} EventClass\n * @template Return\n * @typedef {(type: Type, listener: (event: EventClass) => ?) => Return} OnSignature\n */\n\n/***\n * @template {string} Type\n * @template Return\n * @typedef {(type: Type[], listener: (event: Event|import(\"./events/Event\").default) => ?) => Return extends void ? void : Return[]} CombinedOnSignature\n */\n\n/**\n * @typedef {'change'|'error'} EventTypes\n */\n\n/***\n * @template Return\n * @typedef {OnSignature<EventTypes, import(\"./events/Event.js\").default, Return> & CombinedOnSignature<EventTypes, Return>} ObservableOnSignature\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * An event target providing convenient methods for listener registration\n * and unregistration. A generic `change` event is always available through\n * {@link module:ol/Observable~Observable#changed}.\n *\n * @fires import(\"./events/Event.js\").default\n * @api\n */\nclass Observable extends EventTarget {\n  constructor() {\n    super();\n\n    this.on =\n      /** @type {ObservableOnSignature<import(\"./events\").EventsKey>} */ (\n        this.onInternal\n      );\n\n    this.once =\n      /** @type {ObservableOnSignature<import(\"./events\").EventsKey>} */ (\n        this.onceInternal\n      );\n\n    this.un = /** @type {ObservableOnSignature<void>} */ (this.unInternal);\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.revision_ = 0;\n  }\n\n  /**\n   * Increases the revision counter and dispatches a 'change' event.\n   * @api\n   */\n  changed() {\n    ++this.revision_;\n    this.dispatchEvent(EventType.CHANGE);\n  }\n\n  /**\n   * Get the version number for this object.  Each time the object is modified,\n   * its version number will be incremented.\n   * @return {number} Revision.\n   * @api\n   */\n  getRevision() {\n    return this.revision_;\n  }\n\n  /**\n   * @param {string|Array<string>} type Type.\n   * @param {function((Event|import(\"./events/Event\").default)): ?} listener Listener.\n   * @return {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} Event key.\n   * @protected\n   */\n  onInternal(type, listener) {\n    if (Array.isArray(type)) {\n      const len = type.length;\n      const keys = new Array(len);\n      for (let i = 0; i < len; ++i) {\n        keys[i] = listen(this, type[i], listener);\n      }\n      return keys;\n    }\n    return listen(this, /** @type {string} */ (type), listener);\n  }\n\n  /**\n   * @param {string|Array<string>} type Type.\n   * @param {function((Event|import(\"./events/Event\").default)): ?} listener Listener.\n   * @return {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} Event key.\n   * @protected\n   */\n  onceInternal(type, listener) {\n    let key;\n    if (Array.isArray(type)) {\n      const len = type.length;\n      key = new Array(len);\n      for (let i = 0; i < len; ++i) {\n        key[i] = listenOnce(this, type[i], listener);\n      }\n    } else {\n      key = listenOnce(this, /** @type {string} */ (type), listener);\n    }\n    /** @type {Object} */ (listener).ol_key = key;\n    return key;\n  }\n\n  /**\n   * Unlisten for a certain type of event.\n   * @param {string|Array<string>} type Type.\n   * @param {function((Event|import(\"./events/Event\").default)): ?} listener Listener.\n   * @protected\n   */\n  unInternal(type, listener) {\n    const key = /** @type {Object} */ (listener).ol_key;\n    if (key) {\n      unByKey(key);\n    } else if (Array.isArray(type)) {\n      for (let i = 0, ii = type.length; i < ii; ++i) {\n        this.removeEventListener(type[i], listener);\n      }\n    } else {\n      this.removeEventListener(type, listener);\n    }\n  }\n}\n\n/**\n * Listen for a certain type of event.\n * @function\n * @param {string|Array<string>} type The event type or array of event types.\n * @param {function((Event|import(\"./events/Event\").default)): ?} listener The listener function.\n * @return {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} Unique key for the listener. If\n *     called with an array of event types as the first argument, the return\n *     will be an array of keys.\n * @api\n */\nObservable.prototype.on;\n\n/**\n * Listen once for a certain type of event.\n * @function\n * @param {string|Array<string>} type The event type or array of event types.\n * @param {function((Event|import(\"./events/Event\").default)): ?} listener The listener function.\n * @return {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} Unique key for the listener. If\n *     called with an array of event types as the first argument, the return\n *     will be an array of keys.\n * @api\n */\nObservable.prototype.once;\n\n/**\n * Unlisten for a certain type of event.\n * @function\n * @param {string|Array<string>} type The event type or array of event types.\n * @param {function((Event|import(\"./events/Event\").default)): ?} listener The listener function.\n * @api\n */\nObservable.prototype.un;\n\n/**\n * Removes an event listener using the key returned by `on()` or `once()`.\n * @param {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} key The key returned by `on()`\n *     or `once()` (or an array of keys).\n * @api\n */\nexport function unByKey(key) {\n  if (Array.isArray(key)) {\n    for (let i = 0, ii = key.length; i < ii; ++i) {\n      unlistenByKey(key[i]);\n    }\n  } else {\n    unlistenByKey(/** @type {import(\"./events.js\").EventsKey} */ (key));\n  }\n}\n\nexport default Observable;\n","/**\n * @module ol/Tile\n */\nimport EventTarget from './events/Target.js';\nimport EventType from './events/EventType.js';\nimport TileState from './TileState.js';\nimport {abstract} from './util.js';\nimport {easeIn} from './easing.js';\n\n/**\n * A function that takes an {@link module:ol/Tile~Tile} for the tile and a\n * `{string}` for the url as arguments. The default is\n * ```js\n * source.setTileLoadFunction(function(tile, src) {\n *   tile.getImage().src = src;\n * });\n * ```\n * For more fine grained control, the load function can use fetch or XMLHttpRequest and involve\n * error handling:\n *\n * ```js\n * import TileState from 'ol/TileState.js';\n *\n * source.setTileLoadFunction(function(tile, src) {\n *   const xhr = new XMLHttpRequest();\n *   xhr.responseType = 'blob';\n *   xhr.addEventListener('loadend', function (evt) {\n *     const data = this.response;\n *     if (data !== undefined) {\n *       tile.getImage().src = URL.createObjectURL(data);\n *     } else {\n *       tile.setState(TileState.ERROR);\n *     }\n *   });\n *   xhr.addEventListener('error', function () {\n *     tile.setState(TileState.ERROR);\n *   });\n *   xhr.open('GET', src);\n *   xhr.send();\n * });\n * ```\n *\n * @typedef {function(Tile, string): void} LoadFunction\n * @api\n */\n\n/**\n * {@link module:ol/source/Tile~TileSource} sources use a function of this type to get\n * the url that provides a tile for a given tile coordinate.\n *\n * This function takes an {@link module:ol/tilecoord~TileCoord} for the tile\n * coordinate, a `{number}` representing the pixel ratio and a\n * {@link module:ol/proj/Projection~Projection} for the projection  as arguments\n * and returns a `{string}` representing the tile URL, or undefined if no tile\n * should be requested for the passed tile coordinate.\n *\n * @typedef {function(import(\"./tilecoord.js\").TileCoord, number,\n *           import(\"./proj/Projection.js\").default): (string|undefined)} UrlFunction\n * @api\n */\n\n/**\n * @typedef {Object} Options\n * @property {number} [transition=250] A duration for tile opacity\n * transitions in milliseconds. A duration of 0 disables the opacity transition.\n * @property {boolean} [interpolate=false] Use interpolated values when resampling.  By default,\n * the nearest neighbor is used when resampling.\n * @api\n */\n\n/**\n * @classdesc\n * Base class for tiles.\n *\n * @abstract\n */\nclass Tile extends EventTarget {\n  /**\n   * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"./TileState.js\").default} state State.\n   * @param {Options} [options] Tile options.\n   */\n  constructor(tileCoord, state, options) {\n    super();\n\n    options = options ? options : {};\n\n    /**\n     * @type {import(\"./tilecoord.js\").TileCoord}\n     */\n    this.tileCoord = tileCoord;\n\n    /**\n     * @protected\n     * @type {import(\"./TileState.js\").default}\n     */\n    this.state = state;\n\n    /**\n     * An \"interim\" tile for this tile. The interim tile may be used while this\n     * one is loading, for \"smooth\" transitions when changing params/dimensions\n     * on the source.\n     * @type {Tile}\n     */\n    this.interimTile = null;\n\n    /**\n     * A key assigned to the tile. This is used by the tile source to determine\n     * if this tile can effectively be used, or if a new tile should be created\n     * and this one be used as an interim tile for this new tile.\n     * @type {string}\n     */\n    this.key = '';\n\n    /**\n     * The duration for the opacity transition.\n     * @type {number}\n     */\n    this.transition_ =\n      options.transition === undefined ? 250 : options.transition;\n\n    /**\n     * Lookup of start times for rendering transitions.  If the start time is\n     * equal to -1, the transition is complete.\n     * @type {Object<string, number>}\n     */\n    this.transitionStarts_ = {};\n\n    /**\n     * @type {boolean}\n     */\n    this.interpolate = !!options.interpolate;\n  }\n\n  /**\n   * @protected\n   */\n  changed() {\n    this.dispatchEvent(EventType.CHANGE);\n  }\n\n  /**\n   * Called by the tile cache when the tile is removed from the cache due to expiry\n   */\n  release() {\n    if (this.state === TileState.ERROR) {\n      // to remove the `change` listener on this tile in `ol/TileQueue#handleTileChange`\n      this.setState(TileState.EMPTY);\n    }\n  }\n\n  /**\n   * @return {string} Key.\n   */\n  getKey() {\n    return this.key + '/' + this.tileCoord;\n  }\n\n  /**\n   * Get the interim tile most suitable for rendering using the chain of interim\n   * tiles. This corresponds to the  most recent tile that has been loaded, if no\n   * such tile exists, the original tile is returned.\n   * @return {!Tile} Best tile for rendering.\n   */\n  getInterimTile() {\n    if (!this.interimTile) {\n      //empty chain\n      return this;\n    }\n    let tile = this.interimTile;\n\n    // find the first loaded tile and return it. Since the chain is sorted in\n    // decreasing order of creation time, there is no need to search the remainder\n    // of the list (all those tiles correspond to older requests and will be\n    // cleaned up by refreshInterimChain)\n    do {\n      if (tile.getState() == TileState.LOADED) {\n        // Show tile immediately instead of fading it in after loading, because\n        // the interim tile is in place already\n        this.transition_ = 0;\n        return tile;\n      }\n      tile = tile.interimTile;\n    } while (tile);\n\n    // we can not find a better tile\n    return this;\n  }\n\n  /**\n   * Goes through the chain of interim tiles and discards sections of the chain\n   * that are no longer relevant.\n   */\n  refreshInterimChain() {\n    if (!this.interimTile) {\n      return;\n    }\n\n    let tile = this.interimTile;\n\n    /**\n     * @type {Tile}\n     */\n    let prev = this;\n\n    do {\n      if (tile.getState() == TileState.LOADED) {\n        //we have a loaded tile, we can discard the rest of the list\n        //we would could abort any LOADING tile request\n        //older than this tile (i.e. any LOADING tile following this entry in the chain)\n        tile.interimTile = null;\n        break;\n      } else if (tile.getState() == TileState.LOADING) {\n        //keep this LOADING tile any loaded tiles later in the chain are\n        //older than this tile, so we're still interested in the request\n        prev = tile;\n      } else if (tile.getState() == TileState.IDLE) {\n        //the head of the list is the most current tile, we don't need\n        //to start any other requests for this chain\n        prev.interimTile = tile.interimTile;\n      } else {\n        prev = tile;\n      }\n      tile = prev.interimTile;\n    } while (tile);\n  }\n\n  /**\n   * Get the tile coordinate for this tile.\n   * @return {import(\"./tilecoord.js\").TileCoord} The tile coordinate.\n   * @api\n   */\n  getTileCoord() {\n    return this.tileCoord;\n  }\n\n  /**\n   * @return {import(\"./TileState.js\").default} State.\n   */\n  getState() {\n    return this.state;\n  }\n\n  /**\n   * Sets the state of this tile. If you write your own {@link module:ol/Tile~LoadFunction tileLoadFunction} ,\n   * it is important to set the state correctly to {@link module:ol/TileState~ERROR}\n   * when the tile cannot be loaded. Otherwise the tile cannot be removed from\n   * the tile queue and will block other requests.\n   * @param {import(\"./TileState.js\").default} state State.\n   * @api\n   */\n  setState(state) {\n    if (this.state !== TileState.ERROR && this.state > state) {\n      throw new Error('Tile load sequence violation');\n    }\n    this.state = state;\n    this.changed();\n  }\n\n  /**\n   * Load the image or retry if loading previously failed.\n   * Loading is taken care of by the tile queue, and calling this method is\n   * only needed for preloading or for reloading in case of an error.\n   * @abstract\n   * @api\n   */\n  load() {\n    abstract();\n  }\n\n  /**\n   * Get the alpha value for rendering.\n   * @param {string} id An id for the renderer.\n   * @param {number} time The render frame time.\n   * @return {number} A number between 0 and 1.\n   */\n  getAlpha(id, time) {\n    if (!this.transition_) {\n      return 1;\n    }\n\n    let start = this.transitionStarts_[id];\n    if (!start) {\n      start = time;\n      this.transitionStarts_[id] = start;\n    } else if (start === -1) {\n      return 1;\n    }\n\n    const delta = time - start + 1000 / 60; // avoid rendering at 0\n    if (delta >= this.transition_) {\n      return 1;\n    }\n    return easeIn(delta / this.transition_);\n  }\n\n  /**\n   * Determine if a tile is in an alpha transition.  A tile is considered in\n   * transition if tile.getAlpha() has not yet been called or has been called\n   * and returned 1.\n   * @param {string} id An id for the renderer.\n   * @return {boolean} The tile is in transition.\n   */\n  inTransition(id) {\n    if (!this.transition_) {\n      return false;\n    }\n    return this.transitionStarts_[id] !== -1;\n  }\n\n  /**\n   * Mark a transition as complete.\n   * @param {string} id An id for the renderer.\n   */\n  endTransition(id) {\n    if (this.transition_) {\n      this.transitionStarts_[id] = -1;\n    }\n  }\n}\n\nexport default Tile;\n","/**\n * @module ol/structs/PriorityQueue\n */\nimport {assert} from '../asserts.js';\nimport {clear} from '../obj.js';\n\n/**\n * @type {number}\n */\nexport const DROP = Infinity;\n\n/**\n * @classdesc\n * Priority queue.\n *\n * The implementation is inspired from the Closure Library's Heap class and\n * Python's heapq module.\n *\n * See https://github.com/google/closure-library/blob/master/closure/goog/structs/heap.js\n * and https://hg.python.org/cpython/file/2.7/Lib/heapq.py.\n *\n * @template T\n */\nclass PriorityQueue {\n  /**\n   * @param {function(T): number} priorityFunction Priority function.\n   * @param {function(T): string} keyFunction Key function.\n   */\n  constructor(priorityFunction, keyFunction) {\n    /**\n     * @type {function(T): number}\n     * @private\n     */\n    this.priorityFunction_ = priorityFunction;\n\n    /**\n     * @type {function(T): string}\n     * @private\n     */\n    this.keyFunction_ = keyFunction;\n\n    /**\n     * @type {Array<T>}\n     * @private\n     */\n    this.elements_ = [];\n\n    /**\n     * @type {Array<number>}\n     * @private\n     */\n    this.priorities_ = [];\n\n    /**\n     * @type {!Object<string, boolean>}\n     * @private\n     */\n    this.queuedElements_ = {};\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  clear() {\n    this.elements_.length = 0;\n    this.priorities_.length = 0;\n    clear(this.queuedElements_);\n  }\n\n  /**\n   * Remove and return the highest-priority element. O(log N).\n   * @return {T} Element.\n   */\n  dequeue() {\n    const elements = this.elements_;\n    const priorities = this.priorities_;\n    const element = elements[0];\n    if (elements.length == 1) {\n      elements.length = 0;\n      priorities.length = 0;\n    } else {\n      elements[0] = elements.pop();\n      priorities[0] = priorities.pop();\n      this.siftUp_(0);\n    }\n    const elementKey = this.keyFunction_(element);\n    delete this.queuedElements_[elementKey];\n    return element;\n  }\n\n  /**\n   * Enqueue an element. O(log N).\n   * @param {T} element Element.\n   * @return {boolean} The element was added to the queue.\n   */\n  enqueue(element) {\n    assert(!(this.keyFunction_(element) in this.queuedElements_), 31); // Tried to enqueue an `element` that was already added to the queue\n    const priority = this.priorityFunction_(element);\n    if (priority != DROP) {\n      this.elements_.push(element);\n      this.priorities_.push(priority);\n      this.queuedElements_[this.keyFunction_(element)] = true;\n      this.siftDown_(0, this.elements_.length - 1);\n      return true;\n    }\n    return false;\n  }\n\n  /**\n   * @return {number} Count.\n   */\n  getCount() {\n    return this.elements_.length;\n  }\n\n  /**\n   * Gets the index of the left child of the node at the given index.\n   * @param {number} index The index of the node to get the left child for.\n   * @return {number} The index of the left child.\n   * @private\n   */\n  getLeftChildIndex_(index) {\n    return index * 2 + 1;\n  }\n\n  /**\n   * Gets the index of the right child of the node at the given index.\n   * @param {number} index The index of the node to get the right child for.\n   * @return {number} The index of the right child.\n   * @private\n   */\n  getRightChildIndex_(index) {\n    return index * 2 + 2;\n  }\n\n  /**\n   * Gets the index of the parent of the node at the given index.\n   * @param {number} index The index of the node to get the parent for.\n   * @return {number} The index of the parent.\n   * @private\n   */\n  getParentIndex_(index) {\n    return (index - 1) >> 1;\n  }\n\n  /**\n   * Make this a heap. O(N).\n   * @private\n   */\n  heapify_() {\n    let i;\n    for (i = (this.elements_.length >> 1) - 1; i >= 0; i--) {\n      this.siftUp_(i);\n    }\n  }\n\n  /**\n   * @return {boolean} Is empty.\n   */\n  isEmpty() {\n    return this.elements_.length === 0;\n  }\n\n  /**\n   * @param {string} key Key.\n   * @return {boolean} Is key queued.\n   */\n  isKeyQueued(key) {\n    return key in this.queuedElements_;\n  }\n\n  /**\n   * @param {T} element Element.\n   * @return {boolean} Is queued.\n   */\n  isQueued(element) {\n    return this.isKeyQueued(this.keyFunction_(element));\n  }\n\n  /**\n   * @param {number} index The index of the node to move down.\n   * @private\n   */\n  siftUp_(index) {\n    const elements = this.elements_;\n    const priorities = this.priorities_;\n    const count = elements.length;\n    const element = elements[index];\n    const priority = priorities[index];\n    const startIndex = index;\n\n    while (index < count >> 1) {\n      const lIndex = this.getLeftChildIndex_(index);\n      const rIndex = this.getRightChildIndex_(index);\n\n      const smallerChildIndex =\n        rIndex < count && priorities[rIndex] < priorities[lIndex]\n          ? rIndex\n          : lIndex;\n\n      elements[index] = elements[smallerChildIndex];\n      priorities[index] = priorities[smallerChildIndex];\n      index = smallerChildIndex;\n    }\n\n    elements[index] = element;\n    priorities[index] = priority;\n    this.siftDown_(startIndex, index);\n  }\n\n  /**\n   * @param {number} startIndex The index of the root.\n   * @param {number} index The index of the node to move up.\n   * @private\n   */\n  siftDown_(startIndex, index) {\n    const elements = this.elements_;\n    const priorities = this.priorities_;\n    const element = elements[index];\n    const priority = priorities[index];\n\n    while (index > startIndex) {\n      const parentIndex = this.getParentIndex_(index);\n      if (priorities[parentIndex] > priority) {\n        elements[index] = elements[parentIndex];\n        priorities[index] = priorities[parentIndex];\n        index = parentIndex;\n      } else {\n        break;\n      }\n    }\n    elements[index] = element;\n    priorities[index] = priority;\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  reprioritize() {\n    const priorityFunction = this.priorityFunction_;\n    const elements = this.elements_;\n    const priorities = this.priorities_;\n    let index = 0;\n    const n = elements.length;\n    let element, i, priority;\n    for (i = 0; i < n; ++i) {\n      element = elements[i];\n      priority = priorityFunction(element);\n      if (priority == DROP) {\n        delete this.queuedElements_[this.keyFunction_(element)];\n      } else {\n        priorities[index] = priority;\n        elements[index++] = element;\n      }\n    }\n    elements.length = index;\n    priorities.length = index;\n    this.heapify_();\n  }\n}\n\nexport default PriorityQueue;\n","/**\n * @module ol/TileQueue\n */\nimport EventType from './events/EventType.js';\nimport PriorityQueue, {DROP} from './structs/PriorityQueue.js';\nimport TileState from './TileState.js';\n\n/**\n * @typedef {function(import(\"./Tile.js\").default, string, import(\"./coordinate.js\").Coordinate, number): number} PriorityFunction\n */\n\nclass TileQueue extends PriorityQueue {\n  /**\n   * @param {PriorityFunction} tilePriorityFunction Tile priority function.\n   * @param {function(): ?} tileChangeCallback Function called on each tile change event.\n   */\n  constructor(tilePriorityFunction, tileChangeCallback) {\n    super(\n      /**\n       * @param {Array} element Element.\n       * @return {number} Priority.\n       */\n      function (element) {\n        return tilePriorityFunction.apply(null, element);\n      },\n      /**\n       * @param {Array} element Element.\n       * @return {string} Key.\n       */\n      function (element) {\n        return /** @type {import(\"./Tile.js\").default} */ (element[0]).getKey();\n      }\n    );\n\n    /** @private */\n    this.boundHandleTileChange_ = this.handleTileChange.bind(this);\n\n    /**\n     * @private\n     * @type {function(): ?}\n     */\n    this.tileChangeCallback_ = tileChangeCallback;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.tilesLoading_ = 0;\n\n    /**\n     * @private\n     * @type {!Object<string,boolean>}\n     */\n    this.tilesLoadingKeys_ = {};\n  }\n\n  /**\n   * @param {Array} element Element.\n   * @return {boolean} The element was added to the queue.\n   */\n  enqueue(element) {\n    const added = super.enqueue(element);\n    if (added) {\n      const tile = element[0];\n      tile.addEventListener(EventType.CHANGE, this.boundHandleTileChange_);\n    }\n    return added;\n  }\n\n  /**\n   * @return {number} Number of tiles loading.\n   */\n  getTilesLoading() {\n    return this.tilesLoading_;\n  }\n\n  /**\n   * @param {import(\"./events/Event.js\").default} event Event.\n   * @protected\n   */\n  handleTileChange(event) {\n    const tile = /** @type {import(\"./Tile.js\").default} */ (event.target);\n    const state = tile.getState();\n    if (\n      state === TileState.LOADED ||\n      state === TileState.ERROR ||\n      state === TileState.EMPTY\n    ) {\n      if (state !== TileState.ERROR) {\n        tile.removeEventListener(EventType.CHANGE, this.boundHandleTileChange_);\n      }\n      const tileKey = tile.getKey();\n      if (tileKey in this.tilesLoadingKeys_) {\n        delete this.tilesLoadingKeys_[tileKey];\n        --this.tilesLoading_;\n      }\n      this.tileChangeCallback_();\n    }\n  }\n\n  /**\n   * @param {number} maxTotalLoading Maximum number tiles to load simultaneously.\n   * @param {number} maxNewLoads Maximum number of new tiles to load.\n   */\n  loadMoreTiles(maxTotalLoading, maxNewLoads) {\n    let newLoads = 0;\n    let state, tile, tileKey;\n    while (\n      this.tilesLoading_ < maxTotalLoading &&\n      newLoads < maxNewLoads &&\n      this.getCount() > 0\n    ) {\n      tile = /** @type {import(\"./Tile.js\").default} */ (this.dequeue()[0]);\n      tileKey = tile.getKey();\n      state = tile.getState();\n      if (state === TileState.IDLE && !(tileKey in this.tilesLoadingKeys_)) {\n        this.tilesLoadingKeys_[tileKey] = true;\n        ++this.tilesLoading_;\n        ++newLoads;\n        tile.load();\n      }\n    }\n  }\n}\n\nexport default TileQueue;\n\n/**\n * @param {import('./Map.js').FrameState} frameState Frame state.\n * @param {import(\"./Tile.js\").default} tile Tile.\n * @param {string} tileSourceKey Tile source key.\n * @param {import(\"./coordinate.js\").Coordinate} tileCenter Tile center.\n * @param {number} tileResolution Tile resolution.\n * @return {number} Tile priority.\n */\nexport function getTilePriority(\n  frameState,\n  tile,\n  tileSourceKey,\n  tileCenter,\n  tileResolution\n) {\n  // Filter out tiles at higher zoom levels than the current zoom level, or that\n  // are outside the visible extent.\n  if (!frameState || !(tileSourceKey in frameState.wantedTiles)) {\n    return DROP;\n  }\n  if (!frameState.wantedTiles[tileSourceKey][tile.getKey()]) {\n    return DROP;\n  }\n  // Prioritize the highest zoom level tiles closest to the focus.\n  // Tiles at higher zoom levels are prioritized using Math.log(tileResolution).\n  // Within a zoom level, tiles are prioritized by the distance in pixels between\n  // the center of the tile and the center of the viewport.  The factor of 65536\n  // means that the prioritization should behave as desired for tiles up to\n  // 65536 * Math.log(2) = 45426 pixels from the focus.\n  const center = frameState.viewState.center;\n  const deltaX = tileCenter[0] - center[0];\n  const deltaY = tileCenter[1] - center[1];\n  return (\n    65536 * Math.log(tileResolution) +\n    Math.sqrt(deltaX * deltaX + deltaY * deltaY) / tileResolution\n  );\n}\n","/**\n * @module ol/TileRange\n */\n\n/**\n * A representation of a contiguous block of tiles.  A tile range is specified\n * by its min/max tile coordinates and is inclusive of coordinates.\n */\nclass TileRange {\n  /**\n   * @param {number} minX Minimum X.\n   * @param {number} maxX Maximum X.\n   * @param {number} minY Minimum Y.\n   * @param {number} maxY Maximum Y.\n   */\n  constructor(minX, maxX, minY, maxY) {\n    /**\n     * @type {number}\n     */\n    this.minX = minX;\n\n    /**\n     * @type {number}\n     */\n    this.maxX = maxX;\n\n    /**\n     * @type {number}\n     */\n    this.minY = minY;\n\n    /**\n     * @type {number}\n     */\n    this.maxY = maxY;\n  }\n\n  /**\n   * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @return {boolean} Contains tile coordinate.\n   */\n  contains(tileCoord) {\n    return this.containsXY(tileCoord[1], tileCoord[2]);\n  }\n\n  /**\n   * @param {TileRange} tileRange Tile range.\n   * @return {boolean} Contains.\n   */\n  containsTileRange(tileRange) {\n    return (\n      this.minX <= tileRange.minX &&\n      tileRange.maxX <= this.maxX &&\n      this.minY <= tileRange.minY &&\n      tileRange.maxY <= this.maxY\n    );\n  }\n\n  /**\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @return {boolean} Contains coordinate.\n   */\n  containsXY(x, y) {\n    return this.minX <= x && x <= this.maxX && this.minY <= y && y <= this.maxY;\n  }\n\n  /**\n   * @param {TileRange} tileRange Tile range.\n   * @return {boolean} Equals.\n   */\n  equals(tileRange) {\n    return (\n      this.minX == tileRange.minX &&\n      this.minY == tileRange.minY &&\n      this.maxX == tileRange.maxX &&\n      this.maxY == tileRange.maxY\n    );\n  }\n\n  /**\n   * @param {TileRange} tileRange Tile range.\n   */\n  extend(tileRange) {\n    if (tileRange.minX < this.minX) {\n      this.minX = tileRange.minX;\n    }\n    if (tileRange.maxX > this.maxX) {\n      this.maxX = tileRange.maxX;\n    }\n    if (tileRange.minY < this.minY) {\n      this.minY = tileRange.minY;\n    }\n    if (tileRange.maxY > this.maxY) {\n      this.maxY = tileRange.maxY;\n    }\n  }\n\n  /**\n   * @return {number} Height.\n   */\n  getHeight() {\n    return this.maxY - this.minY + 1;\n  }\n\n  /**\n   * @return {import(\"./size.js\").Size} Size.\n   */\n  getSize() {\n    return [this.getWidth(), this.getHeight()];\n  }\n\n  /**\n   * @return {number} Width.\n   */\n  getWidth() {\n    return this.maxX - this.minX + 1;\n  }\n\n  /**\n   * @param {TileRange} tileRange Tile range.\n   * @return {boolean} Intersects.\n   */\n  intersects(tileRange) {\n    return (\n      this.minX <= tileRange.maxX &&\n      this.maxX >= tileRange.minX &&\n      this.minY <= tileRange.maxY &&\n      this.maxY >= tileRange.minY\n    );\n  }\n}\n\n/**\n * @param {number} minX Minimum X.\n * @param {number} maxX Maximum X.\n * @param {number} minY Minimum Y.\n * @param {number} maxY Maximum Y.\n * @param {TileRange} [tileRange] TileRange.\n * @return {TileRange} Tile range.\n */\nexport function createOrUpdate(minX, maxX, minY, maxY, tileRange) {\n  if (tileRange !== undefined) {\n    tileRange.minX = minX;\n    tileRange.maxX = maxX;\n    tileRange.minY = minY;\n    tileRange.maxY = maxY;\n    return tileRange;\n  }\n  return new TileRange(minX, maxX, minY, maxY);\n}\n\nexport default TileRange;\n","/**\n * @module ol/TileState\n */\n\n/**\n * @enum {number}\n */\nexport default {\n  IDLE: 0,\n  LOADING: 1,\n  LOADED: 2,\n  /**\n   * Indicates that tile loading failed\n   * @type {number}\n   */\n  ERROR: 3,\n  EMPTY: 4,\n};\n","/**\n * @module ol/ViewProperty\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  CENTER: 'center',\n  RESOLUTION: 'resolution',\n  ROTATION: 'rotation',\n};\n","/**\n * @module ol/centerconstraint\n */\nimport {clamp} from './math.js';\n\n/**\n * @typedef {function((import(\"./coordinate.js\").Coordinate|undefined), number, import(\"./size.js\").Size, boolean=, Array<number>=): (import(\"./coordinate.js\").Coordinate|undefined)} Type\n */\n\n/**\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {boolean} onlyCenter If true, the constraint will only apply to the view center.\n * @param {boolean} smooth If true, the view will be able to go slightly out of the given extent\n * (only during interaction and animation).\n * @return {Type} The constraint.\n */\nexport function createExtent(extent, onlyCenter, smooth) {\n  return (\n    /**\n     * @param {import(\"./coordinate.js\").Coordinate|undefined} center Center.\n     * @param {number|undefined} resolution Resolution.\n     * @param {import(\"./size.js\").Size} size Viewport size; unused if `onlyCenter` was specified.\n     * @param {boolean} [isMoving] True if an interaction or animation is in progress.\n     * @param {Array<number>} [centerShift] Shift between map center and viewport center.\n     * @return {import(\"./coordinate.js\").Coordinate|undefined} Center.\n     */\n    function (center, resolution, size, isMoving, centerShift) {\n      if (!center) {\n        return undefined;\n      }\n      if (!resolution && !onlyCenter) {\n        return center;\n      }\n      const viewWidth = onlyCenter ? 0 : size[0] * resolution;\n      const viewHeight = onlyCenter ? 0 : size[1] * resolution;\n      const shiftX = centerShift ? centerShift[0] : 0;\n      const shiftY = centerShift ? centerShift[1] : 0;\n      let minX = extent[0] + viewWidth / 2 + shiftX;\n      let maxX = extent[2] - viewWidth / 2 + shiftX;\n      let minY = extent[1] + viewHeight / 2 + shiftY;\n      let maxY = extent[3] - viewHeight / 2 + shiftY;\n\n      // note: when zooming out of bounds, min and max values for x and y may\n      // end up inverted (min > max); this has to be accounted for\n      if (minX > maxX) {\n        minX = (maxX + minX) / 2;\n        maxX = minX;\n      }\n      if (minY > maxY) {\n        minY = (maxY + minY) / 2;\n        maxY = minY;\n      }\n\n      let x = clamp(center[0], minX, maxX);\n      let y = clamp(center[1], minY, maxY);\n\n      // during an interaction, allow some overscroll\n      if (isMoving && smooth && resolution) {\n        const ratio = 30 * resolution;\n        x +=\n          -ratio * Math.log(1 + Math.max(0, minX - center[0]) / ratio) +\n          ratio * Math.log(1 + Math.max(0, center[0] - maxX) / ratio);\n        y +=\n          -ratio * Math.log(1 + Math.max(0, minY - center[1]) / ratio) +\n          ratio * Math.log(1 + Math.max(0, center[1] - maxY) / ratio);\n      }\n\n      return [x, y];\n    }\n  );\n}\n\n/**\n * @param {import(\"./coordinate.js\").Coordinate} [center] Center.\n * @return {import(\"./coordinate.js\").Coordinate|undefined} Center.\n */\nexport function none(center) {\n  return center;\n}\n","/**\n * @module ol/resolutionconstraint\n */\nimport {clamp} from './math.js';\nimport {getHeight, getWidth} from './extent.js';\nimport {linearFindNearest} from './array.js';\n\n/**\n * @typedef {function((number|undefined), number, import(\"./size.js\").Size, boolean=): (number|undefined)} Type\n */\n\n/**\n * Returns a modified resolution taking into account the viewport size and maximum\n * allowed extent.\n * @param {number} resolution Resolution\n * @param {import(\"./extent.js\").Extent} maxExtent Maximum allowed extent.\n * @param {import(\"./size.js\").Size} viewportSize Viewport size.\n * @param {boolean} showFullExtent Whether to show the full extent.\n * @return {number} Capped resolution.\n */\nfunction getViewportClampedResolution(\n  resolution,\n  maxExtent,\n  viewportSize,\n  showFullExtent\n) {\n  const xResolution = getWidth(maxExtent) / viewportSize[0];\n  const yResolution = getHeight(maxExtent) / viewportSize[1];\n\n  if (showFullExtent) {\n    return Math.min(resolution, Math.max(xResolution, yResolution));\n  }\n  return Math.min(resolution, Math.min(xResolution, yResolution));\n}\n\n/**\n * Returns a modified resolution to be between maxResolution and minResolution while\n * still allowing the value to be slightly out of bounds.\n * Note: the computation is based on the logarithm function (ln):\n *  - at 1, ln(x) is 0\n *  - above 1, ln(x) keeps increasing but at a much slower pace than x\n * The final result is clamped to prevent getting too far away from bounds.\n * @param {number} resolution Resolution.\n * @param {number} maxResolution Max resolution.\n * @param {number} minResolution Min resolution.\n * @return {number} Smoothed resolution.\n */\nfunction getSmoothClampedResolution(resolution, maxResolution, minResolution) {\n  let result = Math.min(resolution, maxResolution);\n  const ratio = 50;\n\n  result *=\n    Math.log(1 + ratio * Math.max(0, resolution / maxResolution - 1)) / ratio +\n    1;\n  if (minResolution) {\n    result = Math.max(result, minResolution);\n    result /=\n      Math.log(1 + ratio * Math.max(0, minResolution / resolution - 1)) /\n        ratio +\n      1;\n  }\n  return clamp(result, minResolution / 2, maxResolution * 2);\n}\n\n/**\n * @param {Array<number>} resolutions Resolutions.\n * @param {boolean} [smooth] If true, the view will be able to slightly exceed resolution limits. Default: true.\n * @param {import(\"./extent.js\").Extent} [maxExtent] Maximum allowed extent.\n * @param {boolean} [showFullExtent] If true, allows us to show the full extent. Default: false.\n * @return {Type} Zoom function.\n */\nexport function createSnapToResolutions(\n  resolutions,\n  smooth,\n  maxExtent,\n  showFullExtent\n) {\n  smooth = smooth !== undefined ? smooth : true;\n  return (\n    /**\n     * @param {number|undefined} resolution Resolution.\n     * @param {number} direction Direction.\n     * @param {import(\"./size.js\").Size} size Viewport size.\n     * @param {boolean} [isMoving] True if an interaction or animation is in progress.\n     * @return {number|undefined} Resolution.\n     */\n    function (resolution, direction, size, isMoving) {\n      if (resolution !== undefined) {\n        const maxResolution = resolutions[0];\n        const minResolution = resolutions[resolutions.length - 1];\n        const cappedMaxRes = maxExtent\n          ? getViewportClampedResolution(\n              maxResolution,\n              maxExtent,\n              size,\n              showFullExtent\n            )\n          : maxResolution;\n\n        // during interacting or animating, allow intermediary values\n        if (isMoving) {\n          if (!smooth) {\n            return clamp(resolution, minResolution, cappedMaxRes);\n          }\n          return getSmoothClampedResolution(\n            resolution,\n            cappedMaxRes,\n            minResolution\n          );\n        }\n\n        const capped = Math.min(cappedMaxRes, resolution);\n        const z = Math.floor(linearFindNearest(resolutions, capped, direction));\n        if (resolutions[z] > cappedMaxRes && z < resolutions.length - 1) {\n          return resolutions[z + 1];\n        }\n        return resolutions[z];\n      }\n      return undefined;\n    }\n  );\n}\n\n/**\n * @param {number} power Power.\n * @param {number} maxResolution Maximum resolution.\n * @param {number} [minResolution] Minimum resolution.\n * @param {boolean} [smooth] If true, the view will be able to slightly exceed resolution limits. Default: true.\n * @param {import(\"./extent.js\").Extent} [maxExtent] Maximum allowed extent.\n * @param {boolean} [showFullExtent] If true, allows us to show the full extent. Default: false.\n * @return {Type} Zoom function.\n */\nexport function createSnapToPower(\n  power,\n  maxResolution,\n  minResolution,\n  smooth,\n  maxExtent,\n  showFullExtent\n) {\n  smooth = smooth !== undefined ? smooth : true;\n  minResolution = minResolution !== undefined ? minResolution : 0;\n\n  return (\n    /**\n     * @param {number|undefined} resolution Resolution.\n     * @param {number} direction Direction.\n     * @param {import(\"./size.js\").Size} size Viewport size.\n     * @param {boolean} [isMoving] True if an interaction or animation is in progress.\n     * @return {number|undefined} Resolution.\n     */\n    function (resolution, direction, size, isMoving) {\n      if (resolution !== undefined) {\n        const cappedMaxRes = maxExtent\n          ? getViewportClampedResolution(\n              maxResolution,\n              maxExtent,\n              size,\n              showFullExtent\n            )\n          : maxResolution;\n\n        // during interacting or animating, allow intermediary values\n        if (isMoving) {\n          if (!smooth) {\n            return clamp(resolution, minResolution, cappedMaxRes);\n          }\n          return getSmoothClampedResolution(\n            resolution,\n            cappedMaxRes,\n            minResolution\n          );\n        }\n\n        const tolerance = 1e-9;\n        const minZoomLevel = Math.ceil(\n          Math.log(maxResolution / cappedMaxRes) / Math.log(power) - tolerance\n        );\n        const offset = -direction * (0.5 - tolerance) + 0.5;\n        const capped = Math.min(cappedMaxRes, resolution);\n        const cappedZoomLevel = Math.floor(\n          Math.log(maxResolution / capped) / Math.log(power) + offset\n        );\n        const zoomLevel = Math.max(minZoomLevel, cappedZoomLevel);\n        const newResolution = maxResolution / Math.pow(power, zoomLevel);\n        return clamp(newResolution, minResolution, cappedMaxRes);\n      }\n      return undefined;\n    }\n  );\n}\n\n/**\n * @param {number} maxResolution Max resolution.\n * @param {number} minResolution Min resolution.\n * @param {boolean} [smooth] If true, the view will be able to slightly exceed resolution limits. Default: true.\n * @param {import(\"./extent.js\").Extent} [maxExtent] Maximum allowed extent.\n * @param {boolean} [showFullExtent] If true, allows us to show the full extent. Default: false.\n * @return {Type} Zoom function.\n */\nexport function createMinMaxResolution(\n  maxResolution,\n  minResolution,\n  smooth,\n  maxExtent,\n  showFullExtent\n) {\n  smooth = smooth !== undefined ? smooth : true;\n\n  return (\n    /**\n     * @param {number|undefined} resolution Resolution.\n     * @param {number} direction Direction.\n     * @param {import(\"./size.js\").Size} size Viewport size.\n     * @param {boolean} [isMoving] True if an interaction or animation is in progress.\n     * @return {number|undefined} Resolution.\n     */\n    function (resolution, direction, size, isMoving) {\n      if (resolution !== undefined) {\n        const cappedMaxRes = maxExtent\n          ? getViewportClampedResolution(\n              maxResolution,\n              maxExtent,\n              size,\n              showFullExtent\n            )\n          : maxResolution;\n\n        if (!smooth || !isMoving) {\n          return clamp(resolution, minResolution, cappedMaxRes);\n        }\n        return getSmoothClampedResolution(\n          resolution,\n          cappedMaxRes,\n          minResolution\n        );\n      }\n      return undefined;\n    }\n  );\n}\n","/**\n * @module ol/View\n */\nimport BaseObject from './Object.js';\nimport ViewHint from './ViewHint.js';\nimport ViewProperty from './ViewProperty.js';\nimport {DEFAULT_TILE_SIZE} from './tilegrid/common.js';\nimport {\n  METERS_PER_UNIT,\n  createProjection,\n  disableCoordinateWarning,\n  fromUserCoordinate,\n  fromUserExtent,\n  getUserProjection,\n  toUserCoordinate,\n  toUserExtent,\n} from './proj.js';\nimport {VOID} from './functions.js';\nimport {\n  add as addCoordinate,\n  equals as coordinatesEqual,\n  equals,\n  rotate as rotateCoordinate,\n} from './coordinate.js';\nimport {assert} from './asserts.js';\nimport {none as centerNone, createExtent} from './centerconstraint.js';\nimport {clamp, modulo} from './math.js';\nimport {\n  createMinMaxResolution,\n  createSnapToPower,\n  createSnapToResolutions,\n} from './resolutionconstraint.js';\nimport {\n  createSnapToN,\n  createSnapToZero,\n  disable,\n  none as rotationNone,\n} from './rotationconstraint.js';\nimport {easeOut, inAndOut} from './easing.js';\nimport {\n  getCenter,\n  getForViewAndSize,\n  getHeight,\n  getWidth,\n  isEmpty,\n} from './extent.js';\nimport {linearFindNearest} from './array.js';\nimport {fromExtent as polygonFromExtent} from './geom/Polygon.js';\n\n/**\n * An animation configuration\n *\n * @typedef {Object} Animation\n * @property {import(\"./coordinate.js\").Coordinate} [sourceCenter] Source center.\n * @property {import(\"./coordinate.js\").Coordinate} [targetCenter] Target center.\n * @property {number} [sourceResolution] Source resolution.\n * @property {number} [targetResolution] Target resolution.\n * @property {number} [sourceRotation] Source rotation.\n * @property {number} [targetRotation] Target rotation.\n * @property {import(\"./coordinate.js\").Coordinate} [anchor] Anchor.\n * @property {number} start Start.\n * @property {number} duration Duration.\n * @property {boolean} complete Complete.\n * @property {function(number):number} easing Easing.\n * @property {function(boolean):void} callback Callback.\n */\n\n/**\n * @typedef {Object} Constraints\n * @property {import(\"./centerconstraint.js\").Type} center Center.\n * @property {import(\"./resolutionconstraint.js\").Type} resolution Resolution.\n * @property {import(\"./rotationconstraint.js\").Type} rotation Rotation.\n */\n\n/**\n * @typedef {Object} FitOptions\n * @property {import(\"./size.js\").Size} [size] The size in pixels of the box to fit\n * the extent into. Default is the current size of the first map in the DOM that\n * uses this view, or `[100, 100]` if no such map is found.\n * @property {!Array<number>} [padding=[0, 0, 0, 0]] Padding (in pixels) to be\n * cleared inside the view. Values in the array are top, right, bottom and left\n * padding.\n * @property {boolean} [nearest=false] If the view `constrainResolution` option is `true`,\n * get the nearest extent instead of the closest that actually fits the view.\n * @property {number} [minResolution=0] Minimum resolution that we zoom to.\n * @property {number} [maxZoom] Maximum zoom level that we zoom to. If\n * `minResolution` is given, this property is ignored.\n * @property {number} [duration] The duration of the animation in milliseconds.\n * By default, there is no animation to the target extent.\n * @property {function(number):number} [easing] The easing function used during\n * the animation (defaults to {@link module:ol/easing.inAndOut}).\n * The function will be called for each frame with a number representing a\n * fraction of the animation's duration.  The function should return a number\n * between 0 and 1 representing the progress toward the destination state.\n * @property {function(boolean):void} [callback] Function called when the view is in\n * its final position. The callback will be called with `true` if the animation\n * series completed on its own or `false` if it was cancelled.\n */\n\n/**\n * @typedef {Object} ViewOptions\n * @property {import(\"./coordinate.js\").Coordinate} [center] The initial center for\n * the view. If a user projection is not set, the coordinate system for the center is\n * specified with the `projection` option. Layer sources will not be fetched if this\n * is not set, but the center can be set later with {@link #setCenter}.\n * @property {boolean|number} [constrainRotation=true] Rotation constraint.\n * `false` means no constraint. `true` means no constraint, but snap to zero\n * near zero. A number constrains the rotation to that number of values. For\n * example, `4` will constrain the rotation to 0, 90, 180, and 270 degrees.\n * @property {boolean} [enableRotation=true] Enable rotation.\n * If `false`, a rotation constraint that always sets the rotation to zero is\n * used. The `constrainRotation` option has no effect if `enableRotation` is\n * `false`.\n * @property {import(\"./extent.js\").Extent} [extent] The extent that constrains the\n * view, in other words, nothing outside of this extent can be visible on the map.\n * @property {boolean} [constrainOnlyCenter=false] If true, the extent\n * constraint will only apply to the view center and not the whole extent.\n * @property {boolean} [smoothExtentConstraint=true] If true, the extent\n * constraint will be applied smoothly, i.e. allow the view to go slightly outside\n * of the given `extent`.\n * @property {number} [maxResolution] The maximum resolution used to determine\n * the resolution constraint. It is used together with `minResolution` (or\n * `maxZoom`) and `zoomFactor`. If unspecified it is calculated in such a way\n * that the projection's validity extent fits in a 256x256 px tile. If the\n * projection is Spherical Mercator (the default) then `maxResolution` defaults\n * to `40075016.68557849 / 256 = 156543.03392804097`.\n * @property {number} [minResolution] The minimum resolution used to determine\n * the resolution constraint.  It is used together with `maxResolution` (or\n * `minZoom`) and `zoomFactor`.  If unspecified it is calculated assuming 29\n * zoom levels (with a factor of 2). If the projection is Spherical Mercator\n * (the default) then `minResolution` defaults to\n * `40075016.68557849 / 256 / Math.pow(2, 28) = 0.0005831682455839253`.\n * @property {number} [maxZoom=28] The maximum zoom level used to determine the\n * resolution constraint. It is used together with `minZoom` (or\n * `maxResolution`) and `zoomFactor`.  Note that if `minResolution` is also\n * provided, it is given precedence over `maxZoom`.\n * @property {number} [minZoom=0] The minimum zoom level used to determine the\n * resolution constraint. It is used together with `maxZoom` (or\n * `minResolution`) and `zoomFactor`.  Note that if `maxResolution` is also\n * provided, it is given precedence over `minZoom`.\n * @property {boolean} [multiWorld=false] If `false` the view is constrained so\n * only one world is visible, and you cannot pan off the edge.  If `true` the map\n * may show multiple worlds at low zoom levels.  Only used if the `projection` is\n * global.  Note that if `extent` is also provided it is given precedence.\n * @property {boolean} [constrainResolution=false] If true, the view will always\n * animate to the closest zoom level after an interaction; false means\n * intermediary zoom levels are allowed.\n * @property {boolean} [smoothResolutionConstraint=true] If true, the resolution\n * min/max values will be applied smoothly, i. e. allow the view to exceed slightly\n * the given resolution or zoom bounds.\n * @property {boolean} [showFullExtent=false] Allow the view to be zoomed out to\n * show the full configured extent. By default, when a view is configured with an\n * extent, users will not be able to zoom out so the viewport exceeds the extent in\n * either dimension. This means the full extent may not be visible if the viewport\n * is taller or wider than the aspect ratio of the configured extent. If\n * showFullExtent is true, the user will be able to zoom out so that the viewport\n * exceeds the height or width of the configured extent, but not both, allowing the\n * full extent to be shown.\n * @property {import(\"./proj.js\").ProjectionLike} [projection='EPSG:3857'] The\n * projection. The default is Spherical Mercator.\n * @property {number} [resolution] The initial resolution for the view. The\n * units are `projection` units per pixel (e.g. meters per pixel). An\n * alternative to setting this is to set `zoom`. Layer sources will not be\n * fetched if neither this nor `zoom` are defined, but they can be set later\n * with {@link #setZoom} or {@link #setResolution}.\n * @property {Array<number>} [resolutions] Resolutions that determine the\n * zoom levels if specified. The index in the array corresponds to the zoom level,\n * therefore the resolution values have to be in descending order. It also constrains\n * the resolution by the minimum and maximum value. If set the `maxResolution`,\n * `minResolution`, `minZoom`, `maxZoom`, and `zoomFactor` options are ignored.\n * @property {number} [rotation=0] The initial rotation for the view in radians\n * (positive rotation clockwise, 0 means North).\n * @property {number} [zoom] Only used if `resolution` is not defined. Zoom\n * level used to calculate the initial resolution for the view.\n * @property {number} [zoomFactor=2] The zoom factor used to compute the\n * corresponding resolution.\n * @property {!Array<number>} [padding=[0, 0, 0, 0]] Padding (in css pixels).\n * If the map viewport is partially covered with other content (overlays) along\n * its edges, this setting allows to shift the center of the viewport away from\n * that content. The order of the values is top, right, bottom, left.\n */\n\n/**\n * @typedef {Object} AnimationOptions\n * @property {import(\"./coordinate.js\").Coordinate} [center] The center of the view at the end of\n * the animation.\n * @property {number} [zoom] The zoom level of the view at the end of the\n * animation. This takes precedence over `resolution`.\n * @property {number} [resolution] The resolution of the view at the end\n * of the animation.  If `zoom` is also provided, this option will be ignored.\n * @property {number} [rotation] The rotation of the view at the end of\n * the animation.\n * @property {import(\"./coordinate.js\").Coordinate} [anchor] Optional anchor to remain fixed\n * during a rotation or resolution animation.\n * @property {number} [duration=1000] The duration of the animation in milliseconds.\n * @property {function(number):number} [easing] The easing function used\n * during the animation (defaults to {@link module:ol/easing.inAndOut}).\n * The function will be called for each frame with a number representing a\n * fraction of the animation's duration.  The function should return a number\n * between 0 and 1 representing the progress toward the destination state.\n */\n\n/**\n * @typedef {Object} State\n * @property {import(\"./coordinate.js\").Coordinate} center Center.\n * @property {import(\"./proj/Projection.js\").default} projection Projection.\n * @property {number} resolution Resolution.\n * @property {import(\"./coordinate.js\").Coordinate} [nextCenter] The next center during an animation series.\n * @property {number} [nextResolution] The next resolution during an animation series.\n * @property {number} [nextRotation] The next rotation during an animation series.\n * @property {number} rotation Rotation.\n * @property {number} zoom Zoom.\n */\n\n/**\n * Default min zoom level for the map view.\n * @type {number}\n */\nconst DEFAULT_MIN_ZOOM = 0;\n\n/**\n * @typedef {import(\"./ObjectEventType\").Types|'change:center'|'change:resolution'|'change:rotation'} ViewObjectEventTypes\n */\n\n/***\n * @template Return\n * @typedef {import(\"./Observable\").OnSignature<import(\"./Observable\").EventTypes, import(\"./events/Event.js\").default, Return> &\n *   import(\"./Observable\").OnSignature<ViewObjectEventTypes, import(\"./Object\").ObjectEvent, Return> &\n *   import(\"./Observable\").CombinedOnSignature<import(\"./Observable\").EventTypes|ViewObjectEventTypes, Return>} ViewOnSignature\n */\n\n/**\n * @classdesc\n * A View object represents a simple 2D view of the map.\n *\n * This is the object to act upon to change the center, resolution,\n * and rotation of the map.\n *\n * A View has a `projection`. The projection determines the\n * coordinate system of the center, and its units determine the units of the\n * resolution (projection units per pixel). The default projection is\n * Web Mercator (EPSG:3857).\n *\n * ### The view states\n *\n * A View is determined by three states: `center`, `resolution`,\n * and `rotation`. Each state has a corresponding getter and setter, e.g.\n * `getCenter` and `setCenter` for the `center` state.\n *\n * The `zoom` state is actually not saved on the view: all computations\n * internally use the `resolution` state. Still, the `setZoom` and `getZoom`\n * methods are available, as well as `getResolutionForZoom` and\n * `getZoomForResolution` to switch from one system to the other.\n *\n * ### The constraints\n *\n * `setCenter`, `setResolution` and `setRotation` can be used to change the\n * states of the view, but any constraint defined in the constructor will\n * be applied along the way.\n *\n * A View object can have a *resolution constraint*, a *rotation constraint*\n * and a *center constraint*.\n *\n * The *resolution constraint* typically restricts min/max values and\n * snaps to specific resolutions. It is determined by the following\n * options: `resolutions`, `maxResolution`, `maxZoom` and `zoomFactor`.\n * If `resolutions` is set, the other three options are ignored. See\n * documentation for each option for more information. By default, the view\n * only has a min/max restriction and allow intermediary zoom levels when\n * pinch-zooming for example.\n *\n * The *rotation constraint* snaps to specific angles. It is determined\n * by the following options: `enableRotation` and `constrainRotation`.\n * By default rotation is allowed and its value is snapped to zero when approaching the\n * horizontal.\n *\n * The *center constraint* is determined by the `extent` option. By\n * default the view center is not constrained at all.\n *\n * ### Changing the view state\n *\n * It is important to note that `setZoom`, `setResolution`, `setCenter` and\n * `setRotation` are subject to the above mentioned constraints. As such, it\n * may sometimes not be possible to know in advance the resulting state of the\n * View. For example, calling `setResolution(10)` does not guarantee that\n * `getResolution()` will return `10`.\n *\n * A consequence of this is that, when applying a delta on the view state, one\n * should use `adjustCenter`, `adjustRotation`, `adjustZoom` and `adjustResolution`\n * rather than the corresponding setters. This will let view do its internal\n * computations. Besides, the `adjust*` methods also take an `anchor`\n * argument which allows specifying an origin for the transformation.\n *\n * ### Interacting with the view\n *\n * View constraints are usually only applied when the view is *at rest*, meaning that\n * no interaction or animation is ongoing. As such, if the user puts the view in a\n * state that is not equivalent to a constrained one (e.g. rotating the view when\n * the snap angle is 0), an animation will be triggered at the interaction end to\n * put back the view to a stable state;\n *\n * @api\n */\nclass View extends BaseObject {\n  /**\n   * @param {ViewOptions} [options] View options.\n   */\n  constructor(options) {\n    super();\n\n    /***\n     * @type {ViewOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {ViewOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {ViewOnSignature<void>}\n     */\n    this.un;\n\n    options = Object.assign({}, options);\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.hints_ = [0, 0];\n\n    /**\n     * @private\n     * @type {Array<Array<Animation>>}\n     */\n    this.animations_ = [];\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.updateAnimationKey_;\n\n    /**\n     * @private\n     * @const\n     * @type {import(\"./proj/Projection.js\").default}\n     */\n    this.projection_ = createProjection(options.projection, 'EPSG:3857');\n\n    /**\n     * @private\n     * @type {import(\"./size.js\").Size}\n     */\n    this.viewportSize_ = [100, 100];\n\n    /**\n     * @private\n     * @type {import(\"./coordinate.js\").Coordinate|undefined}\n     */\n    this.targetCenter_ = null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.targetResolution_;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.targetRotation_;\n\n    /**\n     * @private\n     * @type {import(\"./coordinate.js\").Coordinate}\n     */\n    this.nextCenter_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.nextResolution_;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.nextRotation_;\n\n    /**\n     * @private\n     * @type {import(\"./coordinate.js\").Coordinate|undefined}\n     */\n    this.cancelAnchor_ = undefined;\n\n    if (options.projection) {\n      disableCoordinateWarning();\n    }\n    if (options.center) {\n      options.center = fromUserCoordinate(options.center, this.projection_);\n    }\n    if (options.extent) {\n      options.extent = fromUserExtent(options.extent, this.projection_);\n    }\n\n    this.applyOptions_(options);\n  }\n\n  /**\n   * Set up the view with the given options.\n   * @param {ViewOptions} options View options.\n   */\n  applyOptions_(options) {\n    const properties = Object.assign({}, options);\n    for (const key in ViewProperty) {\n      delete properties[key];\n    }\n    this.setProperties(properties, true);\n\n    const resolutionConstraintInfo = createResolutionConstraint(options);\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxResolution_ = resolutionConstraintInfo.maxResolution;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.minResolution_ = resolutionConstraintInfo.minResolution;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.zoomFactor_ = resolutionConstraintInfo.zoomFactor;\n\n    /**\n     * @private\n     * @type {Array<number>|undefined}\n     */\n    this.resolutions_ = options.resolutions;\n\n    /**\n     * @type {Array<number>|undefined}\n     * @private\n     */\n    this.padding_ = options.padding;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.minZoom_ = resolutionConstraintInfo.minZoom;\n\n    const centerConstraint = createCenterConstraint(options);\n    const resolutionConstraint = resolutionConstraintInfo.constraint;\n    const rotationConstraint = createRotationConstraint(options);\n\n    /**\n     * @private\n     * @type {Constraints}\n     */\n    this.constraints_ = {\n      center: centerConstraint,\n      resolution: resolutionConstraint,\n      rotation: rotationConstraint,\n    };\n\n    this.setRotation(options.rotation !== undefined ? options.rotation : 0);\n    this.setCenterInternal(\n      options.center !== undefined ? options.center : null\n    );\n    if (options.resolution !== undefined) {\n      this.setResolution(options.resolution);\n    } else if (options.zoom !== undefined) {\n      this.setZoom(options.zoom);\n    }\n  }\n\n  /**\n   * Padding (in css pixels).\n   * If the map viewport is partially covered with other content (overlays) along\n   * its edges, this setting allows to shift the center of the viewport away from that\n   * content. The order of the values in the array is top, right, bottom, left.\n   * The default is no padding, which is equivalent to `[0, 0, 0, 0]`.\n   * @type {Array<number>|undefined}\n   * @api\n   */\n  get padding() {\n    return this.padding_;\n  }\n  set padding(padding) {\n    let oldPadding = this.padding_;\n    this.padding_ = padding;\n    const center = this.getCenter();\n    if (center) {\n      const newPadding = padding || [0, 0, 0, 0];\n      oldPadding = oldPadding || [0, 0, 0, 0];\n      const resolution = this.getResolution();\n      const offsetX =\n        (resolution / 2) *\n        (newPadding[3] - oldPadding[3] + oldPadding[1] - newPadding[1]);\n      const offsetY =\n        (resolution / 2) *\n        (newPadding[0] - oldPadding[0] + oldPadding[2] - newPadding[2]);\n      this.setCenterInternal([center[0] + offsetX, center[1] - offsetY]);\n    }\n  }\n\n  /**\n   * Get an updated version of the view options used to construct the view.  The\n   * current resolution (or zoom), center, and rotation are applied to any stored\n   * options.  The provided options can be used to apply new min/max zoom or\n   * resolution limits.\n   * @param {ViewOptions} newOptions New options to be applied.\n   * @return {ViewOptions} New options updated with the current view state.\n   */\n  getUpdatedOptions_(newOptions) {\n    const options = this.getProperties();\n\n    // preserve resolution (or zoom)\n    if (options.resolution !== undefined) {\n      options.resolution = this.getResolution();\n    } else {\n      options.zoom = this.getZoom();\n    }\n\n    // preserve center\n    options.center = this.getCenterInternal();\n\n    // preserve rotation\n    options.rotation = this.getRotation();\n\n    return Object.assign({}, options, newOptions);\n  }\n\n  /**\n   * Animate the view.  The view's center, zoom (or resolution), and rotation\n   * can be animated for smooth transitions between view states.  For example,\n   * to animate the view to a new zoom level:\n   *\n   *     view.animate({zoom: view.getZoom() + 1});\n   *\n   * By default, the animation lasts one second and uses in-and-out easing.  You\n   * can customize this behavior by including `duration` (in milliseconds) and\n   * `easing` options (see {@link module:ol/easing}).\n   *\n   * To chain together multiple animations, call the method with multiple\n   * animation objects.  For example, to first zoom and then pan:\n   *\n   *     view.animate({zoom: 10}, {center: [0, 0]});\n   *\n   * If you provide a function as the last argument to the animate method, it\n   * will get called at the end of an animation series.  The callback will be\n   * called with `true` if the animation series completed on its own or `false`\n   * if it was cancelled.\n   *\n   * Animations are cancelled by user interactions (e.g. dragging the map) or by\n   * calling `view.setCenter()`, `view.setResolution()`, or `view.setRotation()`\n   * (or another method that calls one of these).\n   *\n   * @param {...(AnimationOptions|function(boolean): void)} var_args Animation\n   *     options.  Multiple animations can be run in series by passing multiple\n   *     options objects.  To run multiple animations in parallel, call the method\n   *     multiple times.  An optional callback can be provided as a final\n   *     argument.  The callback will be called with a boolean indicating whether\n   *     the animation completed without being cancelled.\n   * @api\n   */\n  animate(var_args) {\n    if (this.isDef() && !this.getAnimating()) {\n      this.resolveConstraints(0);\n    }\n    const args = new Array(arguments.length);\n    for (let i = 0; i < args.length; ++i) {\n      let options = arguments[i];\n      if (options.center) {\n        options = Object.assign({}, options);\n        options.center = fromUserCoordinate(\n          options.center,\n          this.getProjection()\n        );\n      }\n      if (options.anchor) {\n        options = Object.assign({}, options);\n        options.anchor = fromUserCoordinate(\n          options.anchor,\n          this.getProjection()\n        );\n      }\n      args[i] = options;\n    }\n    this.animateInternal.apply(this, args);\n  }\n\n  /**\n   * @param {...(AnimationOptions|function(boolean): void)} var_args Animation options.\n   */\n  animateInternal(var_args) {\n    let animationCount = arguments.length;\n    let callback;\n    if (\n      animationCount > 1 &&\n      typeof arguments[animationCount - 1] === 'function'\n    ) {\n      callback = arguments[animationCount - 1];\n      --animationCount;\n    }\n\n    let i = 0;\n    for (; i < animationCount && !this.isDef(); ++i) {\n      // if view properties are not yet set, shortcut to the final state\n      const state = arguments[i];\n      if (state.center) {\n        this.setCenterInternal(state.center);\n      }\n      if (state.zoom !== undefined) {\n        this.setZoom(state.zoom);\n      } else if (state.resolution) {\n        this.setResolution(state.resolution);\n      }\n      if (state.rotation !== undefined) {\n        this.setRotation(state.rotation);\n      }\n    }\n    if (i === animationCount) {\n      if (callback) {\n        animationCallback(callback, true);\n      }\n      return;\n    }\n\n    let start = Date.now();\n    let center = this.targetCenter_.slice();\n    let resolution = this.targetResolution_;\n    let rotation = this.targetRotation_;\n    const series = [];\n    for (; i < animationCount; ++i) {\n      const options = /** @type {AnimationOptions} */ (arguments[i]);\n\n      const animation = {\n        start: start,\n        complete: false,\n        anchor: options.anchor,\n        duration: options.duration !== undefined ? options.duration : 1000,\n        easing: options.easing || inAndOut,\n        callback: callback,\n      };\n\n      if (options.center) {\n        animation.sourceCenter = center;\n        animation.targetCenter = options.center.slice();\n        center = animation.targetCenter;\n      }\n\n      if (options.zoom !== undefined) {\n        animation.sourceResolution = resolution;\n        animation.targetResolution = this.getResolutionForZoom(options.zoom);\n        resolution = animation.targetResolution;\n      } else if (options.resolution) {\n        animation.sourceResolution = resolution;\n        animation.targetResolution = options.resolution;\n        resolution = animation.targetResolution;\n      }\n\n      if (options.rotation !== undefined) {\n        animation.sourceRotation = rotation;\n        const delta =\n          modulo(options.rotation - rotation + Math.PI, 2 * Math.PI) - Math.PI;\n        animation.targetRotation = rotation + delta;\n        rotation = animation.targetRotation;\n      }\n\n      // check if animation is a no-op\n      if (isNoopAnimation(animation)) {\n        animation.complete = true;\n        // we still push it onto the series for callback handling\n      } else {\n        start += animation.duration;\n      }\n      series.push(animation);\n    }\n    this.animations_.push(series);\n    this.setHint(ViewHint.ANIMATING, 1);\n    this.updateAnimations_();\n  }\n\n  /**\n   * Determine if the view is being animated.\n   * @return {boolean} The view is being animated.\n   * @api\n   */\n  getAnimating() {\n    return this.hints_[ViewHint.ANIMATING] > 0;\n  }\n\n  /**\n   * Determine if the user is interacting with the view, such as panning or zooming.\n   * @return {boolean} The view is being interacted with.\n   * @api\n   */\n  getInteracting() {\n    return this.hints_[ViewHint.INTERACTING] > 0;\n  }\n\n  /**\n   * Cancel any ongoing animations.\n   * @api\n   */\n  cancelAnimations() {\n    this.setHint(ViewHint.ANIMATING, -this.hints_[ViewHint.ANIMATING]);\n    let anchor;\n    for (let i = 0, ii = this.animations_.length; i < ii; ++i) {\n      const series = this.animations_[i];\n      if (series[0].callback) {\n        animationCallback(series[0].callback, false);\n      }\n      if (!anchor) {\n        for (let j = 0, jj = series.length; j < jj; ++j) {\n          const animation = series[j];\n          if (!animation.complete) {\n            anchor = animation.anchor;\n            break;\n          }\n        }\n      }\n    }\n    this.animations_.length = 0;\n    this.cancelAnchor_ = anchor;\n    this.nextCenter_ = null;\n    this.nextResolution_ = NaN;\n    this.nextRotation_ = NaN;\n  }\n\n  /**\n   * Update all animations.\n   */\n  updateAnimations_() {\n    if (this.updateAnimationKey_ !== undefined) {\n      cancelAnimationFrame(this.updateAnimationKey_);\n      this.updateAnimationKey_ = undefined;\n    }\n    if (!this.getAnimating()) {\n      return;\n    }\n    const now = Date.now();\n    let more = false;\n    for (let i = this.animations_.length - 1; i >= 0; --i) {\n      const series = this.animations_[i];\n      let seriesComplete = true;\n      for (let j = 0, jj = series.length; j < jj; ++j) {\n        const animation = series[j];\n        if (animation.complete) {\n          continue;\n        }\n        const elapsed = now - animation.start;\n        let fraction =\n          animation.duration > 0 ? elapsed / animation.duration : 1;\n        if (fraction >= 1) {\n          animation.complete = true;\n          fraction = 1;\n        } else {\n          seriesComplete = false;\n        }\n        const progress = animation.easing(fraction);\n        if (animation.sourceCenter) {\n          const x0 = animation.sourceCenter[0];\n          const y0 = animation.sourceCenter[1];\n          const x1 = animation.targetCenter[0];\n          const y1 = animation.targetCenter[1];\n          this.nextCenter_ = animation.targetCenter;\n          const x = x0 + progress * (x1 - x0);\n          const y = y0 + progress * (y1 - y0);\n          this.targetCenter_ = [x, y];\n        }\n        if (animation.sourceResolution && animation.targetResolution) {\n          const resolution =\n            progress === 1\n              ? animation.targetResolution\n              : animation.sourceResolution +\n                progress *\n                  (animation.targetResolution - animation.sourceResolution);\n          if (animation.anchor) {\n            const size = this.getViewportSize_(this.getRotation());\n            const constrainedResolution = this.constraints_.resolution(\n              resolution,\n              0,\n              size,\n              true\n            );\n            this.targetCenter_ = this.calculateCenterZoom(\n              constrainedResolution,\n              animation.anchor\n            );\n          }\n          this.nextResolution_ = animation.targetResolution;\n          this.targetResolution_ = resolution;\n          this.applyTargetState_(true);\n        }\n        if (\n          animation.sourceRotation !== undefined &&\n          animation.targetRotation !== undefined\n        ) {\n          const rotation =\n            progress === 1\n              ? modulo(animation.targetRotation + Math.PI, 2 * Math.PI) -\n                Math.PI\n              : animation.sourceRotation +\n                progress *\n                  (animation.targetRotation - animation.sourceRotation);\n          if (animation.anchor) {\n            const constrainedRotation = this.constraints_.rotation(\n              rotation,\n              true\n            );\n            this.targetCenter_ = this.calculateCenterRotate(\n              constrainedRotation,\n              animation.anchor\n            );\n          }\n          this.nextRotation_ = animation.targetRotation;\n          this.targetRotation_ = rotation;\n        }\n        this.applyTargetState_(true);\n        more = true;\n        if (!animation.complete) {\n          break;\n        }\n      }\n      if (seriesComplete) {\n        this.animations_[i] = null;\n        this.setHint(ViewHint.ANIMATING, -1);\n        this.nextCenter_ = null;\n        this.nextResolution_ = NaN;\n        this.nextRotation_ = NaN;\n        const callback = series[0].callback;\n        if (callback) {\n          animationCallback(callback, true);\n        }\n      }\n    }\n    // prune completed series\n    this.animations_ = this.animations_.filter(Boolean);\n    if (more && this.updateAnimationKey_ === undefined) {\n      this.updateAnimationKey_ = requestAnimationFrame(\n        this.updateAnimations_.bind(this)\n      );\n    }\n  }\n\n  /**\n   * @param {number} rotation Target rotation.\n   * @param {import(\"./coordinate.js\").Coordinate} anchor Rotation anchor.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} Center for rotation and anchor.\n   */\n  calculateCenterRotate(rotation, anchor) {\n    let center;\n    const currentCenter = this.getCenterInternal();\n    if (currentCenter !== undefined) {\n      center = [currentCenter[0] - anchor[0], currentCenter[1] - anchor[1]];\n      rotateCoordinate(center, rotation - this.getRotation());\n      addCoordinate(center, anchor);\n    }\n    return center;\n  }\n\n  /**\n   * @param {number} resolution Target resolution.\n   * @param {import(\"./coordinate.js\").Coordinate} anchor Zoom anchor.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} Center for resolution and anchor.\n   */\n  calculateCenterZoom(resolution, anchor) {\n    let center;\n    const currentCenter = this.getCenterInternal();\n    const currentResolution = this.getResolution();\n    if (currentCenter !== undefined && currentResolution !== undefined) {\n      const x =\n        anchor[0] -\n        (resolution * (anchor[0] - currentCenter[0])) / currentResolution;\n      const y =\n        anchor[1] -\n        (resolution * (anchor[1] - currentCenter[1])) / currentResolution;\n      center = [x, y];\n    }\n    return center;\n  }\n\n  /**\n   * Returns the current viewport size.\n   * @private\n   * @param {number} [rotation] Take into account the rotation of the viewport when giving the size\n   * @return {import(\"./size.js\").Size} Viewport size or `[100, 100]` when no viewport is found.\n   */\n  getViewportSize_(rotation) {\n    const size = this.viewportSize_;\n    if (rotation) {\n      const w = size[0];\n      const h = size[1];\n      return [\n        Math.abs(w * Math.cos(rotation)) + Math.abs(h * Math.sin(rotation)),\n        Math.abs(w * Math.sin(rotation)) + Math.abs(h * Math.cos(rotation)),\n      ];\n    }\n    return size;\n  }\n\n  /**\n   * Stores the viewport size on the view. The viewport size is not read every time from the DOM\n   * to avoid performance hit and layout reflow.\n   * This should be done on map size change.\n   * Note: the constraints are not resolved during an animation to avoid stopping it\n   * @param {import(\"./size.js\").Size} [size] Viewport size; if undefined, [100, 100] is assumed\n   */\n  setViewportSize(size) {\n    this.viewportSize_ = Array.isArray(size) ? size.slice() : [100, 100];\n    if (!this.getAnimating()) {\n      this.resolveConstraints(0);\n    }\n  }\n\n  /**\n   * Get the view center.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} The center of the view.\n   * @observable\n   * @api\n   */\n  getCenter() {\n    const center = this.getCenterInternal();\n    if (!center) {\n      return center;\n    }\n    return toUserCoordinate(center, this.getProjection());\n  }\n\n  /**\n   * Get the view center without transforming to user projection.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} The center of the view.\n   */\n  getCenterInternal() {\n    return /** @type {import(\"./coordinate.js\").Coordinate|undefined} */ (\n      this.get(ViewProperty.CENTER)\n    );\n  }\n\n  /**\n   * @return {Constraints} Constraints.\n   */\n  getConstraints() {\n    return this.constraints_;\n  }\n\n  /**\n   * @return {boolean} Resolution constraint is set\n   */\n  getConstrainResolution() {\n    return this.get('constrainResolution');\n  }\n\n  /**\n   * @param {Array<number>} [hints] Destination array.\n   * @return {Array<number>} Hint.\n   */\n  getHints(hints) {\n    if (hints !== undefined) {\n      hints[0] = this.hints_[0];\n      hints[1] = this.hints_[1];\n      return hints;\n    }\n    return this.hints_.slice();\n  }\n\n  /**\n   * Calculate the extent for the current view state and the passed size.\n   * The size is the pixel dimensions of the box into which the calculated extent\n   * should fit. In most cases you want to get the extent of the entire map,\n   * that is `map.getSize()`.\n   * @param {import(\"./size.js\").Size} [size] Box pixel size. If not provided, the size\n   * of the map that uses this view will be used.\n   * @return {import(\"./extent.js\").Extent} Extent.\n   * @api\n   */\n  calculateExtent(size) {\n    const extent = this.calculateExtentInternal(size);\n    return toUserExtent(extent, this.getProjection());\n  }\n\n  /**\n   * @param {import(\"./size.js\").Size} [size] Box pixel size. If not provided,\n   * the map's last known viewport size will be used.\n   * @return {import(\"./extent.js\").Extent} Extent.\n   */\n  calculateExtentInternal(size) {\n    size = size || this.getViewportSizeMinusPadding_();\n    const center = /** @type {!import(\"./coordinate.js\").Coordinate} */ (\n      this.getCenterInternal()\n    );\n    assert(center, 1); // The view center is not defined\n    const resolution = /** @type {!number} */ (this.getResolution());\n    assert(resolution !== undefined, 2); // The view resolution is not defined\n    const rotation = /** @type {!number} */ (this.getRotation());\n    assert(rotation !== undefined, 3); // The view rotation is not defined\n\n    return getForViewAndSize(center, resolution, rotation, size);\n  }\n\n  /**\n   * Get the maximum resolution of the view.\n   * @return {number} The maximum resolution of the view.\n   * @api\n   */\n  getMaxResolution() {\n    return this.maxResolution_;\n  }\n\n  /**\n   * Get the minimum resolution of the view.\n   * @return {number} The minimum resolution of the view.\n   * @api\n   */\n  getMinResolution() {\n    return this.minResolution_;\n  }\n\n  /**\n   * Get the maximum zoom level for the view.\n   * @return {number} The maximum zoom level.\n   * @api\n   */\n  getMaxZoom() {\n    return /** @type {number} */ (\n      this.getZoomForResolution(this.minResolution_)\n    );\n  }\n\n  /**\n   * Set a new maximum zoom level for the view.\n   * @param {number} zoom The maximum zoom level.\n   * @api\n   */\n  setMaxZoom(zoom) {\n    this.applyOptions_(this.getUpdatedOptions_({maxZoom: zoom}));\n  }\n\n  /**\n   * Get the minimum zoom level for the view.\n   * @return {number} The minimum zoom level.\n   * @api\n   */\n  getMinZoom() {\n    return /** @type {number} */ (\n      this.getZoomForResolution(this.maxResolution_)\n    );\n  }\n\n  /**\n   * Set a new minimum zoom level for the view.\n   * @param {number} zoom The minimum zoom level.\n   * @api\n   */\n  setMinZoom(zoom) {\n    this.applyOptions_(this.getUpdatedOptions_({minZoom: zoom}));\n  }\n\n  /**\n   * Set whether the view should allow intermediary zoom levels.\n   * @param {boolean} enabled Whether the resolution is constrained.\n   * @api\n   */\n  setConstrainResolution(enabled) {\n    this.applyOptions_(this.getUpdatedOptions_({constrainResolution: enabled}));\n  }\n\n  /**\n   * Get the view projection.\n   * @return {import(\"./proj/Projection.js\").default} The projection of the view.\n   * @api\n   */\n  getProjection() {\n    return this.projection_;\n  }\n\n  /**\n   * Get the view resolution.\n   * @return {number|undefined} The resolution of the view.\n   * @observable\n   * @api\n   */\n  getResolution() {\n    return /** @type {number|undefined} */ (this.get(ViewProperty.RESOLUTION));\n  }\n\n  /**\n   * Get the resolutions for the view. This returns the array of resolutions\n   * passed to the constructor of the View, or undefined if none were given.\n   * @return {Array<number>|undefined} The resolutions of the view.\n   * @api\n   */\n  getResolutions() {\n    return this.resolutions_;\n  }\n\n  /**\n   * Get the resolution for a provided extent (in map units) and size (in pixels).\n   * @param {import(\"./extent.js\").Extent} extent Extent.\n   * @param {import(\"./size.js\").Size} [size] Box pixel size.\n   * @return {number} The resolution at which the provided extent will render at\n   *     the given size.\n   * @api\n   */\n  getResolutionForExtent(extent, size) {\n    return this.getResolutionForExtentInternal(\n      fromUserExtent(extent, this.getProjection()),\n      size\n    );\n  }\n\n  /**\n   * Get the resolution for a provided extent (in map units) and size (in pixels).\n   * @param {import(\"./extent.js\").Extent} extent Extent.\n   * @param {import(\"./size.js\").Size} [size] Box pixel size.\n   * @return {number} The resolution at which the provided extent will render at\n   *     the given size.\n   */\n  getResolutionForExtentInternal(extent, size) {\n    size = size || this.getViewportSizeMinusPadding_();\n    const xResolution = getWidth(extent) / size[0];\n    const yResolution = getHeight(extent) / size[1];\n    return Math.max(xResolution, yResolution);\n  }\n\n  /**\n   * Return a function that returns a value between 0 and 1 for a\n   * resolution. Exponential scaling is assumed.\n   * @param {number} [power] Power.\n   * @return {function(number): number} Resolution for value function.\n   */\n  getResolutionForValueFunction(power) {\n    power = power || 2;\n    const maxResolution = this.getConstrainedResolution(this.maxResolution_);\n    const minResolution = this.minResolution_;\n    const max = Math.log(maxResolution / minResolution) / Math.log(power);\n    return (\n      /**\n       * @param {number} value Value.\n       * @return {number} Resolution.\n       */\n      function (value) {\n        const resolution = maxResolution / Math.pow(power, value * max);\n        return resolution;\n      }\n    );\n  }\n\n  /**\n   * Get the view rotation.\n   * @return {number} The rotation of the view in radians.\n   * @observable\n   * @api\n   */\n  getRotation() {\n    return /** @type {number} */ (this.get(ViewProperty.ROTATION));\n  }\n\n  /**\n   * Return a function that returns a resolution for a value between\n   * 0 and 1. Exponential scaling is assumed.\n   * @param {number} [power] Power.\n   * @return {function(number): number} Value for resolution function.\n   */\n  getValueForResolutionFunction(power) {\n    const logPower = Math.log(power || 2);\n    const maxResolution = this.getConstrainedResolution(this.maxResolution_);\n    const minResolution = this.minResolution_;\n    const max = Math.log(maxResolution / minResolution) / logPower;\n    return (\n      /**\n       * @param {number} resolution Resolution.\n       * @return {number} Value.\n       */\n      function (resolution) {\n        const value = Math.log(maxResolution / resolution) / logPower / max;\n        return value;\n      }\n    );\n  }\n\n  /**\n   * Returns the size of the viewport minus padding.\n   * @private\n   * @param {number} [rotation] Take into account the rotation of the viewport when giving the size\n   * @return {import(\"./size.js\").Size} Viewport size reduced by the padding.\n   */\n  getViewportSizeMinusPadding_(rotation) {\n    let size = this.getViewportSize_(rotation);\n    const padding = this.padding_;\n    if (padding) {\n      size = [\n        size[0] - padding[1] - padding[3],\n        size[1] - padding[0] - padding[2],\n      ];\n    }\n    return size;\n  }\n\n  /**\n   * @return {State} View state.\n   */\n  getState() {\n    const projection = this.getProjection();\n    const resolution = this.getResolution();\n    const rotation = this.getRotation();\n    let center = /** @type {import(\"./coordinate.js\").Coordinate} */ (\n      this.getCenterInternal()\n    );\n    const padding = this.padding_;\n    if (padding) {\n      const reducedSize = this.getViewportSizeMinusPadding_();\n      center = calculateCenterOn(\n        center,\n        this.getViewportSize_(),\n        [reducedSize[0] / 2 + padding[3], reducedSize[1] / 2 + padding[0]],\n        resolution,\n        rotation\n      );\n    }\n    return {\n      center: center.slice(0),\n      projection: projection !== undefined ? projection : null,\n      resolution: resolution,\n      nextCenter: this.nextCenter_,\n      nextResolution: this.nextResolution_,\n      nextRotation: this.nextRotation_,\n      rotation: rotation,\n      zoom: this.getZoom(),\n    };\n  }\n\n  /**\n   * Get the current zoom level. This method may return non-integer zoom levels\n   * if the view does not constrain the resolution, or if an interaction or\n   * animation is underway.\n   * @return {number|undefined} Zoom.\n   * @api\n   */\n  getZoom() {\n    let zoom;\n    const resolution = this.getResolution();\n    if (resolution !== undefined) {\n      zoom = this.getZoomForResolution(resolution);\n    }\n    return zoom;\n  }\n\n  /**\n   * Get the zoom level for a resolution.\n   * @param {number} resolution The resolution.\n   * @return {number|undefined} The zoom level for the provided resolution.\n   * @api\n   */\n  getZoomForResolution(resolution) {\n    let offset = this.minZoom_ || 0;\n    let max, zoomFactor;\n    if (this.resolutions_) {\n      const nearest = linearFindNearest(this.resolutions_, resolution, 1);\n      offset = nearest;\n      max = this.resolutions_[nearest];\n      if (nearest == this.resolutions_.length - 1) {\n        zoomFactor = 2;\n      } else {\n        zoomFactor = max / this.resolutions_[nearest + 1];\n      }\n    } else {\n      max = this.maxResolution_;\n      zoomFactor = this.zoomFactor_;\n    }\n    return offset + Math.log(max / resolution) / Math.log(zoomFactor);\n  }\n\n  /**\n   * Get the resolution for a zoom level.\n   * @param {number} zoom Zoom level.\n   * @return {number} The view resolution for the provided zoom level.\n   * @api\n   */\n  getResolutionForZoom(zoom) {\n    if (this.resolutions_) {\n      if (this.resolutions_.length <= 1) {\n        return 0;\n      }\n      const baseLevel = clamp(\n        Math.floor(zoom),\n        0,\n        this.resolutions_.length - 2\n      );\n      const zoomFactor =\n        this.resolutions_[baseLevel] / this.resolutions_[baseLevel + 1];\n      return (\n        this.resolutions_[baseLevel] /\n        Math.pow(zoomFactor, clamp(zoom - baseLevel, 0, 1))\n      );\n    }\n    return (\n      this.maxResolution_ / Math.pow(this.zoomFactor_, zoom - this.minZoom_)\n    );\n  }\n\n  /**\n   * Fit the given geometry or extent based on the given map size and border.\n   * The size is pixel dimensions of the box to fit the extent into.\n   * In most cases you will want to use the map size, that is `map.getSize()`.\n   * Takes care of the map angle.\n   * @param {import(\"./geom/SimpleGeometry.js\").default|import(\"./extent.js\").Extent} geometryOrExtent The geometry or\n   *     extent to fit the view to.\n   * @param {FitOptions} [options] Options.\n   * @api\n   */\n  fit(geometryOrExtent, options) {\n    /** @type {import(\"./geom/SimpleGeometry.js\").default} */\n    let geometry;\n    assert(\n      Array.isArray(geometryOrExtent) ||\n        typeof (/** @type {?} */ (geometryOrExtent).getSimplifiedGeometry) ===\n          'function',\n      24\n    ); // Invalid extent or geometry provided as `geometry`\n    if (Array.isArray(geometryOrExtent)) {\n      assert(!isEmpty(geometryOrExtent), 25); // Cannot fit empty extent provided as `geometry`\n      const extent = fromUserExtent(geometryOrExtent, this.getProjection());\n      geometry = polygonFromExtent(extent);\n    } else if (geometryOrExtent.getType() === 'Circle') {\n      const extent = fromUserExtent(\n        geometryOrExtent.getExtent(),\n        this.getProjection()\n      );\n      geometry = polygonFromExtent(extent);\n      geometry.rotate(this.getRotation(), getCenter(extent));\n    } else {\n      const userProjection = getUserProjection();\n      if (userProjection) {\n        geometry = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (\n          geometryOrExtent\n            .clone()\n            .transform(userProjection, this.getProjection())\n        );\n      } else {\n        geometry = geometryOrExtent;\n      }\n    }\n\n    this.fitInternal(geometry, options);\n  }\n\n  /**\n   * Calculate rotated extent\n   * @param {import(\"./geom/SimpleGeometry.js\").default} geometry The geometry.\n   * @return {import(\"./extent\").Extent} The rotated extent for the geometry.\n   */\n  rotatedExtentForGeometry(geometry) {\n    const rotation = this.getRotation();\n    const cosAngle = Math.cos(rotation);\n    const sinAngle = Math.sin(-rotation);\n    const coords = geometry.getFlatCoordinates();\n    const stride = geometry.getStride();\n    let minRotX = +Infinity;\n    let minRotY = +Infinity;\n    let maxRotX = -Infinity;\n    let maxRotY = -Infinity;\n    for (let i = 0, ii = coords.length; i < ii; i += stride) {\n      const rotX = coords[i] * cosAngle - coords[i + 1] * sinAngle;\n      const rotY = coords[i] * sinAngle + coords[i + 1] * cosAngle;\n      minRotX = Math.min(minRotX, rotX);\n      minRotY = Math.min(minRotY, rotY);\n      maxRotX = Math.max(maxRotX, rotX);\n      maxRotY = Math.max(maxRotY, rotY);\n    }\n    return [minRotX, minRotY, maxRotX, maxRotY];\n  }\n\n  /**\n   * @param {import(\"./geom/SimpleGeometry.js\").default} geometry The geometry.\n   * @param {FitOptions} [options] Options.\n   */\n  fitInternal(geometry, options) {\n    options = options || {};\n    let size = options.size;\n    if (!size) {\n      size = this.getViewportSizeMinusPadding_();\n    }\n    const padding =\n      options.padding !== undefined ? options.padding : [0, 0, 0, 0];\n    const nearest = options.nearest !== undefined ? options.nearest : false;\n    let minResolution;\n    if (options.minResolution !== undefined) {\n      minResolution = options.minResolution;\n    } else if (options.maxZoom !== undefined) {\n      minResolution = this.getResolutionForZoom(options.maxZoom);\n    } else {\n      minResolution = 0;\n    }\n\n    const rotatedExtent = this.rotatedExtentForGeometry(geometry);\n\n    // calculate resolution\n    let resolution = this.getResolutionForExtentInternal(rotatedExtent, [\n      size[0] - padding[1] - padding[3],\n      size[1] - padding[0] - padding[2],\n    ]);\n    resolution = isNaN(resolution)\n      ? minResolution\n      : Math.max(resolution, minResolution);\n    resolution = this.getConstrainedResolution(resolution, nearest ? 0 : 1);\n\n    // calculate center\n    const rotation = this.getRotation();\n    const sinAngle = Math.sin(rotation);\n    const cosAngle = Math.cos(rotation);\n    const centerRot = getCenter(rotatedExtent);\n    centerRot[0] += ((padding[1] - padding[3]) / 2) * resolution;\n    centerRot[1] += ((padding[0] - padding[2]) / 2) * resolution;\n    const centerX = centerRot[0] * cosAngle - centerRot[1] * sinAngle;\n    const centerY = centerRot[1] * cosAngle + centerRot[0] * sinAngle;\n    const center = this.getConstrainedCenter([centerX, centerY], resolution);\n    const callback = options.callback ? options.callback : VOID;\n\n    if (options.duration !== undefined) {\n      this.animateInternal(\n        {\n          resolution: resolution,\n          center: center,\n          duration: options.duration,\n          easing: options.easing,\n        },\n        callback\n      );\n    } else {\n      this.targetResolution_ = resolution;\n      this.targetCenter_ = center;\n      this.applyTargetState_(false, true);\n      animationCallback(callback, true);\n    }\n  }\n\n  /**\n   * Center on coordinate and view position.\n   * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"./size.js\").Size} size Box pixel size.\n   * @param {import(\"./pixel.js\").Pixel} position Position on the view to center on.\n   * @api\n   */\n  centerOn(coordinate, size, position) {\n    this.centerOnInternal(\n      fromUserCoordinate(coordinate, this.getProjection()),\n      size,\n      position\n    );\n  }\n\n  /**\n   * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"./size.js\").Size} size Box pixel size.\n   * @param {import(\"./pixel.js\").Pixel} position Position on the view to center on.\n   */\n  centerOnInternal(coordinate, size, position) {\n    this.setCenterInternal(\n      calculateCenterOn(\n        coordinate,\n        size,\n        position,\n        this.getResolution(),\n        this.getRotation()\n      )\n    );\n  }\n\n  /**\n   * Calculates the shift between map and viewport center.\n   * @param {import(\"./coordinate.js\").Coordinate} center Center.\n   * @param {number} resolution Resolution.\n   * @param {number} rotation Rotation.\n   * @param {import(\"./size.js\").Size} size Size.\n   * @return {Array<number>|undefined} Center shift.\n   */\n  calculateCenterShift(center, resolution, rotation, size) {\n    let centerShift;\n    const padding = this.padding_;\n    if (padding && center) {\n      const reducedSize = this.getViewportSizeMinusPadding_(-rotation);\n      const shiftedCenter = calculateCenterOn(\n        center,\n        size,\n        [reducedSize[0] / 2 + padding[3], reducedSize[1] / 2 + padding[0]],\n        resolution,\n        rotation\n      );\n      centerShift = [\n        center[0] - shiftedCenter[0],\n        center[1] - shiftedCenter[1],\n      ];\n    }\n    return centerShift;\n  }\n\n  /**\n   * @return {boolean} Is defined.\n   */\n  isDef() {\n    return !!this.getCenterInternal() && this.getResolution() !== undefined;\n  }\n\n  /**\n   * Adds relative coordinates to the center of the view. Any extent constraint will apply.\n   * @param {import(\"./coordinate.js\").Coordinate} deltaCoordinates Relative value to add.\n   * @api\n   */\n  adjustCenter(deltaCoordinates) {\n    const center = toUserCoordinate(this.targetCenter_, this.getProjection());\n    this.setCenter([\n      center[0] + deltaCoordinates[0],\n      center[1] + deltaCoordinates[1],\n    ]);\n  }\n\n  /**\n   * Adds relative coordinates to the center of the view. Any extent constraint will apply.\n   * @param {import(\"./coordinate.js\").Coordinate} deltaCoordinates Relative value to add.\n   */\n  adjustCenterInternal(deltaCoordinates) {\n    const center = this.targetCenter_;\n    this.setCenterInternal([\n      center[0] + deltaCoordinates[0],\n      center[1] + deltaCoordinates[1],\n    ]);\n  }\n\n  /**\n   * Multiply the view resolution by a ratio, optionally using an anchor. Any resolution\n   * constraint will apply.\n   * @param {number} ratio The ratio to apply on the view resolution.\n   * @param {import(\"./coordinate.js\").Coordinate} [anchor] The origin of the transformation.\n   * @api\n   */\n  adjustResolution(ratio, anchor) {\n    anchor = anchor && fromUserCoordinate(anchor, this.getProjection());\n    this.adjustResolutionInternal(ratio, anchor);\n  }\n\n  /**\n   * Multiply the view resolution by a ratio, optionally using an anchor. Any resolution\n   * constraint will apply.\n   * @param {number} ratio The ratio to apply on the view resolution.\n   * @param {import(\"./coordinate.js\").Coordinate} [anchor] The origin of the transformation.\n   */\n  adjustResolutionInternal(ratio, anchor) {\n    const isMoving = this.getAnimating() || this.getInteracting();\n    const size = this.getViewportSize_(this.getRotation());\n    const newResolution = this.constraints_.resolution(\n      this.targetResolution_ * ratio,\n      0,\n      size,\n      isMoving\n    );\n\n    if (anchor) {\n      this.targetCenter_ = this.calculateCenterZoom(newResolution, anchor);\n    }\n\n    this.targetResolution_ *= ratio;\n    this.applyTargetState_();\n  }\n\n  /**\n   * Adds a value to the view zoom level, optionally using an anchor. Any resolution\n   * constraint will apply.\n   * @param {number} delta Relative value to add to the zoom level.\n   * @param {import(\"./coordinate.js\").Coordinate} [anchor] The origin of the transformation.\n   * @api\n   */\n  adjustZoom(delta, anchor) {\n    this.adjustResolution(Math.pow(this.zoomFactor_, -delta), anchor);\n  }\n\n  /**\n   * Adds a value to the view rotation, optionally using an anchor. Any rotation\n   * constraint will apply.\n   * @param {number} delta Relative value to add to the zoom rotation, in radians.\n   * @param {import(\"./coordinate.js\").Coordinate} [anchor] The rotation center.\n   * @api\n   */\n  adjustRotation(delta, anchor) {\n    if (anchor) {\n      anchor = fromUserCoordinate(anchor, this.getProjection());\n    }\n    this.adjustRotationInternal(delta, anchor);\n  }\n\n  /**\n   * @param {number} delta Relative value to add to the zoom rotation, in radians.\n   * @param {import(\"./coordinate.js\").Coordinate} [anchor] The rotation center.\n   */\n  adjustRotationInternal(delta, anchor) {\n    const isMoving = this.getAnimating() || this.getInteracting();\n    const newRotation = this.constraints_.rotation(\n      this.targetRotation_ + delta,\n      isMoving\n    );\n    if (anchor) {\n      this.targetCenter_ = this.calculateCenterRotate(newRotation, anchor);\n    }\n    this.targetRotation_ += delta;\n    this.applyTargetState_();\n  }\n\n  /**\n   * Set the center of the current view. Any extent constraint will apply.\n   * @param {import(\"./coordinate.js\").Coordinate|undefined} center The center of the view.\n   * @observable\n   * @api\n   */\n  setCenter(center) {\n    this.setCenterInternal(\n      center ? fromUserCoordinate(center, this.getProjection()) : center\n    );\n  }\n\n  /**\n   * Set the center using the view projection (not the user projection).\n   * @param {import(\"./coordinate.js\").Coordinate|undefined} center The center of the view.\n   */\n  setCenterInternal(center) {\n    this.targetCenter_ = center;\n    this.applyTargetState_();\n  }\n\n  /**\n   * @param {import(\"./ViewHint.js\").default} hint Hint.\n   * @param {number} delta Delta.\n   * @return {number} New value.\n   */\n  setHint(hint, delta) {\n    this.hints_[hint] += delta;\n    this.changed();\n    return this.hints_[hint];\n  }\n\n  /**\n   * Set the resolution for this view. Any resolution constraint will apply.\n   * @param {number|undefined} resolution The resolution of the view.\n   * @observable\n   * @api\n   */\n  setResolution(resolution) {\n    this.targetResolution_ = resolution;\n    this.applyTargetState_();\n  }\n\n  /**\n   * Set the rotation for this view. Any rotation constraint will apply.\n   * @param {number} rotation The rotation of the view in radians.\n   * @observable\n   * @api\n   */\n  setRotation(rotation) {\n    this.targetRotation_ = rotation;\n    this.applyTargetState_();\n  }\n\n  /**\n   * Zoom to a specific zoom level. Any resolution constrain will apply.\n   * @param {number} zoom Zoom level.\n   * @api\n   */\n  setZoom(zoom) {\n    this.setResolution(this.getResolutionForZoom(zoom));\n  }\n\n  /**\n   * Recompute rotation/resolution/center based on target values.\n   * Note: we have to compute rotation first, then resolution and center considering that\n   * parameters can influence one another in case a view extent constraint is present.\n   * @param {boolean} [doNotCancelAnims] Do not cancel animations.\n   * @param {boolean} [forceMoving] Apply constraints as if the view is moving.\n   * @private\n   */\n  applyTargetState_(doNotCancelAnims, forceMoving) {\n    const isMoving =\n      this.getAnimating() || this.getInteracting() || forceMoving;\n\n    // compute rotation\n    const newRotation = this.constraints_.rotation(\n      this.targetRotation_,\n      isMoving\n    );\n    const size = this.getViewportSize_(newRotation);\n    const newResolution = this.constraints_.resolution(\n      this.targetResolution_,\n      0,\n      size,\n      isMoving\n    );\n    const newCenter = this.constraints_.center(\n      this.targetCenter_,\n      newResolution,\n      size,\n      isMoving,\n      this.calculateCenterShift(\n        this.targetCenter_,\n        newResolution,\n        newRotation,\n        size\n      )\n    );\n\n    if (this.get(ViewProperty.ROTATION) !== newRotation) {\n      this.set(ViewProperty.ROTATION, newRotation);\n    }\n    if (this.get(ViewProperty.RESOLUTION) !== newResolution) {\n      this.set(ViewProperty.RESOLUTION, newResolution);\n      this.set('zoom', this.getZoom(), true);\n    }\n    if (\n      !newCenter ||\n      !this.get(ViewProperty.CENTER) ||\n      !equals(this.get(ViewProperty.CENTER), newCenter)\n    ) {\n      this.set(ViewProperty.CENTER, newCenter);\n    }\n\n    if (this.getAnimating() && !doNotCancelAnims) {\n      this.cancelAnimations();\n    }\n    this.cancelAnchor_ = undefined;\n  }\n\n  /**\n   * If any constraints need to be applied, an animation will be triggered.\n   * This is typically done on interaction end.\n   * Note: calling this with a duration of 0 will apply the constrained values straight away,\n   * without animation.\n   * @param {number} [duration] The animation duration in ms.\n   * @param {number} [resolutionDirection] Which direction to zoom.\n   * @param {import(\"./coordinate.js\").Coordinate} [anchor] The origin of the transformation.\n   */\n  resolveConstraints(duration, resolutionDirection, anchor) {\n    duration = duration !== undefined ? duration : 200;\n    const direction = resolutionDirection || 0;\n\n    const newRotation = this.constraints_.rotation(this.targetRotation_);\n    const size = this.getViewportSize_(newRotation);\n    const newResolution = this.constraints_.resolution(\n      this.targetResolution_,\n      direction,\n      size\n    );\n    const newCenter = this.constraints_.center(\n      this.targetCenter_,\n      newResolution,\n      size,\n      false,\n      this.calculateCenterShift(\n        this.targetCenter_,\n        newResolution,\n        newRotation,\n        size\n      )\n    );\n\n    if (duration === 0 && !this.cancelAnchor_) {\n      this.targetResolution_ = newResolution;\n      this.targetRotation_ = newRotation;\n      this.targetCenter_ = newCenter;\n      this.applyTargetState_();\n      return;\n    }\n\n    anchor = anchor || (duration === 0 ? this.cancelAnchor_ : undefined);\n    this.cancelAnchor_ = undefined;\n\n    if (\n      this.getResolution() !== newResolution ||\n      this.getRotation() !== newRotation ||\n      !this.getCenterInternal() ||\n      !equals(this.getCenterInternal(), newCenter)\n    ) {\n      if (this.getAnimating()) {\n        this.cancelAnimations();\n      }\n\n      this.animateInternal({\n        rotation: newRotation,\n        center: newCenter,\n        resolution: newResolution,\n        duration: duration,\n        easing: easeOut,\n        anchor: anchor,\n      });\n    }\n  }\n\n  /**\n   * Notify the View that an interaction has started.\n   * The view state will be resolved to a stable one if needed\n   * (depending on its constraints).\n   * @api\n   */\n  beginInteraction() {\n    this.resolveConstraints(0);\n\n    this.setHint(ViewHint.INTERACTING, 1);\n  }\n\n  /**\n   * Notify the View that an interaction has ended. The view state will be resolved\n   * to a stable one if needed (depending on its constraints).\n   * @param {number} [duration] Animation duration in ms.\n   * @param {number} [resolutionDirection] Which direction to zoom.\n   * @param {import(\"./coordinate.js\").Coordinate} [anchor] The origin of the transformation.\n   * @api\n   */\n  endInteraction(duration, resolutionDirection, anchor) {\n    anchor = anchor && fromUserCoordinate(anchor, this.getProjection());\n    this.endInteractionInternal(duration, resolutionDirection, anchor);\n  }\n\n  /**\n   * Notify the View that an interaction has ended. The view state will be resolved\n   * to a stable one if needed (depending on its constraints).\n   * @param {number} [duration] Animation duration in ms.\n   * @param {number} [resolutionDirection] Which direction to zoom.\n   * @param {import(\"./coordinate.js\").Coordinate} [anchor] The origin of the transformation.\n   */\n  endInteractionInternal(duration, resolutionDirection, anchor) {\n    this.setHint(ViewHint.INTERACTING, -1);\n\n    this.resolveConstraints(duration, resolutionDirection, anchor);\n  }\n\n  /**\n   * Get a valid position for the view center according to the current constraints.\n   * @param {import(\"./coordinate.js\").Coordinate|undefined} targetCenter Target center position.\n   * @param {number} [targetResolution] Target resolution. If not supplied, the current one will be used.\n   * This is useful to guess a valid center position at a different zoom level.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} Valid center position.\n   */\n  getConstrainedCenter(targetCenter, targetResolution) {\n    const size = this.getViewportSize_(this.getRotation());\n    return this.constraints_.center(\n      targetCenter,\n      targetResolution || this.getResolution(),\n      size\n    );\n  }\n\n  /**\n   * Get a valid zoom level according to the current view constraints.\n   * @param {number|undefined} targetZoom Target zoom.\n   * @param {number} [direction=0] Indicate which resolution should be used\n   * by a renderer if the view resolution does not match any resolution of the tile source.\n   * If 0, the nearest resolution will be used. If 1, the nearest lower resolution\n   * will be used. If -1, the nearest higher resolution will be used.\n   * @return {number|undefined} Valid zoom level.\n   */\n  getConstrainedZoom(targetZoom, direction) {\n    const targetRes = this.getResolutionForZoom(targetZoom);\n    return this.getZoomForResolution(\n      this.getConstrainedResolution(targetRes, direction)\n    );\n  }\n\n  /**\n   * Get a valid resolution according to the current view constraints.\n   * @param {number|undefined} targetResolution Target resolution.\n   * @param {number} [direction=0] Indicate which resolution should be used\n   * by a renderer if the view resolution does not match any resolution of the tile source.\n   * If 0, the nearest resolution will be used. If 1, the nearest lower resolution\n   * will be used. If -1, the nearest higher resolution will be used.\n   * @return {number|undefined} Valid resolution.\n   */\n  getConstrainedResolution(targetResolution, direction) {\n    direction = direction || 0;\n    const size = this.getViewportSize_(this.getRotation());\n\n    return this.constraints_.resolution(targetResolution, direction, size);\n  }\n}\n\n/**\n * @param {Function} callback Callback.\n * @param {*} returnValue Return value.\n */\nfunction animationCallback(callback, returnValue) {\n  setTimeout(function () {\n    callback(returnValue);\n  }, 0);\n}\n\n/**\n * @param {ViewOptions} options View options.\n * @return {import(\"./centerconstraint.js\").Type} The constraint.\n */\nexport function createCenterConstraint(options) {\n  if (options.extent !== undefined) {\n    const smooth =\n      options.smoothExtentConstraint !== undefined\n        ? options.smoothExtentConstraint\n        : true;\n    return createExtent(options.extent, options.constrainOnlyCenter, smooth);\n  }\n\n  const projection = createProjection(options.projection, 'EPSG:3857');\n  if (options.multiWorld !== true && projection.isGlobal()) {\n    const extent = projection.getExtent().slice();\n    extent[0] = -Infinity;\n    extent[2] = Infinity;\n    return createExtent(extent, false, false);\n  }\n\n  return centerNone;\n}\n\n/**\n * @param {ViewOptions} options View options.\n * @return {{constraint: import(\"./resolutionconstraint.js\").Type, maxResolution: number,\n *     minResolution: number, minZoom: number, zoomFactor: number}} The constraint.\n */\nexport function createResolutionConstraint(options) {\n  let resolutionConstraint;\n  let maxResolution;\n  let minResolution;\n\n  // TODO: move these to be ol constants\n  // see https://github.com/openlayers/openlayers/issues/2076\n  const defaultMaxZoom = 28;\n  const defaultZoomFactor = 2;\n\n  let minZoom =\n    options.minZoom !== undefined ? options.minZoom : DEFAULT_MIN_ZOOM;\n\n  let maxZoom =\n    options.maxZoom !== undefined ? options.maxZoom : defaultMaxZoom;\n\n  const zoomFactor =\n    options.zoomFactor !== undefined ? options.zoomFactor : defaultZoomFactor;\n\n  const multiWorld =\n    options.multiWorld !== undefined ? options.multiWorld : false;\n\n  const smooth =\n    options.smoothResolutionConstraint !== undefined\n      ? options.smoothResolutionConstraint\n      : true;\n\n  const showFullExtent =\n    options.showFullExtent !== undefined ? options.showFullExtent : false;\n\n  const projection = createProjection(options.projection, 'EPSG:3857');\n  const projExtent = projection.getExtent();\n  let constrainOnlyCenter = options.constrainOnlyCenter;\n  let extent = options.extent;\n  if (!multiWorld && !extent && projection.isGlobal()) {\n    constrainOnlyCenter = false;\n    extent = projExtent;\n  }\n\n  if (options.resolutions !== undefined) {\n    const resolutions = options.resolutions;\n    maxResolution = resolutions[minZoom];\n    minResolution =\n      resolutions[maxZoom] !== undefined\n        ? resolutions[maxZoom]\n        : resolutions[resolutions.length - 1];\n\n    if (options.constrainResolution) {\n      resolutionConstraint = createSnapToResolutions(\n        resolutions,\n        smooth,\n        !constrainOnlyCenter && extent,\n        showFullExtent\n      );\n    } else {\n      resolutionConstraint = createMinMaxResolution(\n        maxResolution,\n        minResolution,\n        smooth,\n        !constrainOnlyCenter && extent,\n        showFullExtent\n      );\n    }\n  } else {\n    // calculate the default min and max resolution\n    const size = !projExtent\n      ? // use an extent that can fit the whole world if need be\n        (360 * METERS_PER_UNIT.degrees) / projection.getMetersPerUnit()\n      : Math.max(getWidth(projExtent), getHeight(projExtent));\n\n    const defaultMaxResolution =\n      size / DEFAULT_TILE_SIZE / Math.pow(defaultZoomFactor, DEFAULT_MIN_ZOOM);\n\n    const defaultMinResolution =\n      defaultMaxResolution /\n      Math.pow(defaultZoomFactor, defaultMaxZoom - DEFAULT_MIN_ZOOM);\n\n    // user provided maxResolution takes precedence\n    maxResolution = options.maxResolution;\n    if (maxResolution !== undefined) {\n      minZoom = 0;\n    } else {\n      maxResolution = defaultMaxResolution / Math.pow(zoomFactor, minZoom);\n    }\n\n    // user provided minResolution takes precedence\n    minResolution = options.minResolution;\n    if (minResolution === undefined) {\n      if (options.maxZoom !== undefined) {\n        if (options.maxResolution !== undefined) {\n          minResolution = maxResolution / Math.pow(zoomFactor, maxZoom);\n        } else {\n          minResolution = defaultMaxResolution / Math.pow(zoomFactor, maxZoom);\n        }\n      } else {\n        minResolution = defaultMinResolution;\n      }\n    }\n\n    // given discrete zoom levels, minResolution may be different than provided\n    maxZoom =\n      minZoom +\n      Math.floor(\n        Math.log(maxResolution / minResolution) / Math.log(zoomFactor)\n      );\n    minResolution = maxResolution / Math.pow(zoomFactor, maxZoom - minZoom);\n\n    if (options.constrainResolution) {\n      resolutionConstraint = createSnapToPower(\n        zoomFactor,\n        maxResolution,\n        minResolution,\n        smooth,\n        !constrainOnlyCenter && extent,\n        showFullExtent\n      );\n    } else {\n      resolutionConstraint = createMinMaxResolution(\n        maxResolution,\n        minResolution,\n        smooth,\n        !constrainOnlyCenter && extent,\n        showFullExtent\n      );\n    }\n  }\n  return {\n    constraint: resolutionConstraint,\n    maxResolution: maxResolution,\n    minResolution: minResolution,\n    minZoom: minZoom,\n    zoomFactor: zoomFactor,\n  };\n}\n\n/**\n * @param {ViewOptions} options View options.\n * @return {import(\"./rotationconstraint.js\").Type} Rotation constraint.\n */\nexport function createRotationConstraint(options) {\n  const enableRotation =\n    options.enableRotation !== undefined ? options.enableRotation : true;\n  if (enableRotation) {\n    const constrainRotation = options.constrainRotation;\n    if (constrainRotation === undefined || constrainRotation === true) {\n      return createSnapToZero();\n    } else if (constrainRotation === false) {\n      return rotationNone;\n    } else if (typeof constrainRotation === 'number') {\n      return createSnapToN(constrainRotation);\n    }\n    return rotationNone;\n  }\n  return disable;\n}\n\n/**\n * Determine if an animation involves no view change.\n * @param {Animation} animation The animation.\n * @return {boolean} The animation involves no view change.\n */\nexport function isNoopAnimation(animation) {\n  if (animation.sourceCenter && animation.targetCenter) {\n    if (!coordinatesEqual(animation.sourceCenter, animation.targetCenter)) {\n      return false;\n    }\n  }\n  if (animation.sourceResolution !== animation.targetResolution) {\n    return false;\n  }\n  if (animation.sourceRotation !== animation.targetRotation) {\n    return false;\n  }\n  return true;\n}\n\n/**\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {import(\"./size.js\").Size} size Box pixel size.\n * @param {import(\"./pixel.js\").Pixel} position Position on the view to center on.\n * @param {number} resolution Resolution.\n * @param {number} rotation Rotation.\n * @return {import(\"./coordinate.js\").Coordinate} Shifted center.\n */\nfunction calculateCenterOn(coordinate, size, position, resolution, rotation) {\n  // calculate rotated position\n  const cosAngle = Math.cos(-rotation);\n  let sinAngle = Math.sin(-rotation);\n  let rotX = coordinate[0] * cosAngle - coordinate[1] * sinAngle;\n  let rotY = coordinate[1] * cosAngle + coordinate[0] * sinAngle;\n  rotX += (size[0] / 2 - position[0]) * resolution;\n  rotY += (position[1] - size[1] / 2) * resolution;\n\n  // go back to original angle\n  sinAngle = -sinAngle; // go back to original rotation\n  const centerX = rotX * cosAngle - rotY * sinAngle;\n  const centerY = rotY * cosAngle + rotX * sinAngle;\n\n  return [centerX, centerY];\n}\n\nexport default View;\n","/**\n * @module ol/ViewHint\n */\n\n/**\n * @enum {number}\n */\nexport default {\n  ANIMATING: 0,\n  INTERACTING: 1,\n};\n","/**\n * @module ol/array\n */\n\n/**\n * Performs a binary search on the provided sorted list and returns the index of the item if found. If it can't be found it'll return -1.\n * https://github.com/darkskyapp/binary-search\n *\n * @param {Array<*>} haystack Items to search through.\n * @param {*} needle The item to look for.\n * @param {Function} [comparator] Comparator function.\n * @return {number} The index of the item if found, -1 if not.\n */\nexport function binarySearch(haystack, needle, comparator) {\n  let mid, cmp;\n  comparator = comparator || ascending;\n  let low = 0;\n  let high = haystack.length;\n  let found = false;\n\n  while (low < high) {\n    /* Note that \"(low + high) >>> 1\" may overflow, and results in a typecast\n     * to double (which gives the wrong results). */\n    mid = low + ((high - low) >> 1);\n    cmp = +comparator(haystack[mid], needle);\n\n    if (cmp < 0.0) {\n      /* Too low. */\n      low = mid + 1;\n    } else {\n      /* Key found or too high */\n      high = mid;\n      found = !cmp;\n    }\n  }\n\n  /* Key not found. */\n  return found ? low : ~low;\n}\n\n/**\n * Compare function sorting arrays in ascending order.  Safe to use for numeric values.\n * @param {*} a The first object to be compared.\n * @param {*} b The second object to be compared.\n * @return {number} A negative number, zero, or a positive number as the first\n *     argument is less than, equal to, or greater than the second.\n */\nexport function ascending(a, b) {\n  return a > b ? 1 : a < b ? -1 : 0;\n}\n\n/**\n * {@link module:ol/tilegrid/TileGrid~TileGrid#getZForResolution} can use a function\n * of this type to determine which nearest resolution to use.\n *\n * This function takes a `{number}` representing a value between two array entries,\n * a `{number}` representing the value of the nearest higher entry and\n * a `{number}` representing the value of the nearest lower entry\n * as arguments and returns a `{number}`. If a negative number or zero is returned\n * the lower value will be used, if a positive number is returned the higher value\n * will be used.\n * @typedef {function(number, number, number): number} NearestDirectionFunction\n * @api\n */\n\n/**\n * @param {Array<number>} arr Array in descending order.\n * @param {number} target Target.\n * @param {number|NearestDirectionFunction} direction\n *    0 means return the nearest,\n *    > 0 means return the largest nearest,\n *    < 0 means return the smallest nearest.\n * @return {number} Index.\n */\nexport function linearFindNearest(arr, target, direction) {\n  const n = arr.length;\n  if (arr[0] <= target) {\n    return 0;\n  } else if (target <= arr[n - 1]) {\n    return n - 1;\n  }\n  let i;\n  if (direction > 0) {\n    for (i = 1; i < n; ++i) {\n      if (arr[i] < target) {\n        return i - 1;\n      }\n    }\n  } else if (direction < 0) {\n    for (i = 1; i < n; ++i) {\n      if (arr[i] <= target) {\n        return i;\n      }\n    }\n  } else {\n    for (i = 1; i < n; ++i) {\n      if (arr[i] == target) {\n        return i;\n      } else if (arr[i] < target) {\n        if (typeof direction === 'function') {\n          if (direction(target, arr[i - 1], arr[i]) > 0) {\n            return i - 1;\n          }\n          return i;\n        } else if (arr[i - 1] - target < target - arr[i]) {\n          return i - 1;\n        }\n        return i;\n      }\n    }\n  }\n  return n - 1;\n}\n\n/**\n * @param {Array<*>} arr Array.\n * @param {number} begin Begin index.\n * @param {number} end End index.\n */\nexport function reverseSubArray(arr, begin, end) {\n  while (begin < end) {\n    const tmp = arr[begin];\n    arr[begin] = arr[end];\n    arr[end] = tmp;\n    ++begin;\n    --end;\n  }\n}\n\n/**\n * @param {Array<VALUE>} arr The array to modify.\n * @param {!Array<VALUE>|VALUE} data The elements or arrays of elements to add to arr.\n * @template VALUE\n */\nexport function extend(arr, data) {\n  const extension = Array.isArray(data) ? data : [data];\n  const length = extension.length;\n  for (let i = 0; i < length; i++) {\n    arr[arr.length] = extension[i];\n  }\n}\n\n/**\n * @param {Array<VALUE>} arr The array to modify.\n * @param {VALUE} obj The element to remove.\n * @template VALUE\n * @return {boolean} If the element was removed.\n */\nexport function remove(arr, obj) {\n  const i = arr.indexOf(obj);\n  const found = i > -1;\n  if (found) {\n    arr.splice(i, 1);\n  }\n  return found;\n}\n\n/**\n * @param {Array|Uint8ClampedArray} arr1 The first array to compare.\n * @param {Array|Uint8ClampedArray} arr2 The second array to compare.\n * @return {boolean} Whether the two arrays are equal.\n */\nexport function equals(arr1, arr2) {\n  const len1 = arr1.length;\n  if (len1 !== arr2.length) {\n    return false;\n  }\n  for (let i = 0; i < len1; i++) {\n    if (arr1[i] !== arr2[i]) {\n      return false;\n    }\n  }\n  return true;\n}\n\n/**\n * Sort the passed array such that the relative order of equal elements is preserved.\n * See https://en.wikipedia.org/wiki/Sorting_algorithm#Stability for details.\n * @param {Array<*>} arr The array to sort (modifies original).\n * @param {!function(*, *): number} compareFnc Comparison function.\n * @api\n */\nexport function stableSort(arr, compareFnc) {\n  const length = arr.length;\n  const tmp = Array(arr.length);\n  let i;\n  for (i = 0; i < length; i++) {\n    tmp[i] = {index: i, value: arr[i]};\n  }\n  tmp.sort(function (a, b) {\n    return compareFnc(a.value, b.value) || a.index - b.index;\n  });\n  for (i = 0; i < arr.length; i++) {\n    arr[i] = tmp[i].value;\n  }\n}\n\n/**\n * @param {Array<*>} arr The array to test.\n * @param {Function} [func] Comparison function.\n * @param {boolean} [strict] Strictly sorted (default false).\n * @return {boolean} Return index.\n */\nexport function isSorted(arr, func, strict) {\n  const compare = func || ascending;\n  return arr.every(function (currentVal, index) {\n    if (index === 0) {\n      return true;\n    }\n    const res = compare(arr[index - 1], currentVal);\n    return !(res > 0 || (strict && res === 0));\n  });\n}\n","/**\n * @module ol/asserts\n */\nimport AssertionError from './AssertionError.js';\n\n/**\n * @param {*} assertion Assertion we expected to be truthy.\n * @param {number} errorCode Error code.\n */\nexport function assert(assertion, errorCode) {\n  if (!assertion) {\n    throw new AssertionError(errorCode);\n  }\n}\n","/**\n * @module ol/color\n */\nimport {assert} from './asserts.js';\nimport {clamp} from './math.js';\n\n/**\n * A color represented as a short array [red, green, blue, alpha].\n * red, green, and blue should be integers in the range 0..255 inclusive.\n * alpha should be a float in the range 0..1 inclusive. If no alpha value is\n * given then `1` will be used.\n * @typedef {Array<number>} Color\n * @api\n */\n\n/**\n * This RegExp matches # followed by 3, 4, 6, or 8 hex digits.\n * @const\n * @type {RegExp}\n * @private\n */\nconst HEX_COLOR_RE_ = /^#([a-f0-9]{3}|[a-f0-9]{4}(?:[a-f0-9]{2}){0,2})$/i;\n\n/**\n * Regular expression for matching potential named color style strings.\n * @const\n * @type {RegExp}\n * @private\n */\nconst NAMED_COLOR_RE_ = /^([a-z]*)$|^hsla?\\(.*\\)$/i;\n\n/**\n * Return the color as an rgba string.\n * @param {Color|string} color Color.\n * @return {string} Rgba string.\n * @api\n */\nexport function asString(color) {\n  if (typeof color === 'string') {\n    return color;\n  }\n  return toString(color);\n}\n\n/**\n * Return named color as an rgba string.\n * @param {string} color Named color.\n * @return {string} Rgb string.\n */\nfunction fromNamed(color) {\n  const el = document.createElement('div');\n  el.style.color = color;\n  if (el.style.color !== '') {\n    document.body.appendChild(el);\n    const rgb = getComputedStyle(el).color;\n    document.body.removeChild(el);\n    return rgb;\n  }\n  return '';\n}\n\n/**\n * @param {string} s String.\n * @return {Color} Color.\n */\nexport const fromString = (function () {\n  // We maintain a small cache of parsed strings.  To provide cheap LRU-like\n  // semantics, whenever the cache grows too large we simply delete an\n  // arbitrary 25% of the entries.\n\n  /**\n   * @const\n   * @type {number}\n   */\n  const MAX_CACHE_SIZE = 1024;\n\n  /**\n   * @type {Object<string, Color>}\n   */\n  const cache = {};\n\n  /**\n   * @type {number}\n   */\n  let cacheSize = 0;\n\n  return (\n    /**\n     * @param {string} s String.\n     * @return {Color} Color.\n     */\n    function (s) {\n      let color;\n      if (cache.hasOwnProperty(s)) {\n        color = cache[s];\n      } else {\n        if (cacheSize >= MAX_CACHE_SIZE) {\n          let i = 0;\n          for (const key in cache) {\n            if ((i++ & 3) === 0) {\n              delete cache[key];\n              --cacheSize;\n            }\n          }\n        }\n        color = fromStringInternal_(s);\n        cache[s] = color;\n        ++cacheSize;\n      }\n      return color;\n    }\n  );\n})();\n\n/**\n * Return the color as an array. This function maintains a cache of calculated\n * arrays which means the result should not be modified.\n * @param {Color|string} color Color.\n * @return {Color} Color.\n * @api\n */\nexport function asArray(color) {\n  if (Array.isArray(color)) {\n    return color;\n  }\n  return fromString(color);\n}\n\n/**\n * @param {string} s String.\n * @private\n * @return {Color} Color.\n */\nfunction fromStringInternal_(s) {\n  let r, g, b, a, color;\n\n  if (NAMED_COLOR_RE_.exec(s)) {\n    s = fromNamed(s);\n  }\n\n  if (HEX_COLOR_RE_.exec(s)) {\n    // hex\n    const n = s.length - 1; // number of hex digits\n    let d; // number of digits per channel\n    if (n <= 4) {\n      d = 1;\n    } else {\n      d = 2;\n    }\n    const hasAlpha = n === 4 || n === 8;\n    r = parseInt(s.substr(1 + 0 * d, d), 16);\n    g = parseInt(s.substr(1 + 1 * d, d), 16);\n    b = parseInt(s.substr(1 + 2 * d, d), 16);\n    if (hasAlpha) {\n      a = parseInt(s.substr(1 + 3 * d, d), 16);\n    } else {\n      a = 255;\n    }\n    if (d == 1) {\n      r = (r << 4) + r;\n      g = (g << 4) + g;\n      b = (b << 4) + b;\n      if (hasAlpha) {\n        a = (a << 4) + a;\n      }\n    }\n    color = [r, g, b, a / 255];\n  } else if (s.startsWith('rgba(')) {\n    // rgba()\n    color = s.slice(5, -1).split(',').map(Number);\n    normalize(color);\n  } else if (s.startsWith('rgb(')) {\n    // rgb()\n    color = s.slice(4, -1).split(',').map(Number);\n    color.push(1);\n    normalize(color);\n  } else {\n    assert(false, 14); // Invalid color\n  }\n  return color;\n}\n\n/**\n * TODO this function is only used in the test, we probably shouldn't export it\n * @param {Color} color Color.\n * @return {Color} Clamped color.\n */\nexport function normalize(color) {\n  color[0] = clamp((color[0] + 0.5) | 0, 0, 255);\n  color[1] = clamp((color[1] + 0.5) | 0, 0, 255);\n  color[2] = clamp((color[2] + 0.5) | 0, 0, 255);\n  color[3] = clamp(color[3], 0, 1);\n  return color;\n}\n\n/**\n * @param {Color} color Color.\n * @return {string} String.\n */\nexport function toString(color) {\n  let r = color[0];\n  if (r != (r | 0)) {\n    r = (r + 0.5) | 0;\n  }\n  let g = color[1];\n  if (g != (g | 0)) {\n    g = (g + 0.5) | 0;\n  }\n  let b = color[2];\n  if (b != (b | 0)) {\n    b = (b + 0.5) | 0;\n  }\n  const a = color[3] === undefined ? 1 : Math.round(color[3] * 100) / 100;\n  return 'rgba(' + r + ',' + g + ',' + b + ',' + a + ')';\n}\n\n/**\n * @param {string} s String.\n * @return {boolean} Whether the string is actually a valid color\n */\nexport function isStringColor(s) {\n  if (NAMED_COLOR_RE_.test(s)) {\n    s = fromNamed(s);\n  }\n  return HEX_COLOR_RE_.test(s) || s.startsWith('rgba(') || s.startsWith('rgb(');\n}\n","/**\n * @module ol/colorlike\n */\nimport {toString} from './color.js';\n\n/**\n * A type accepted by CanvasRenderingContext2D.fillStyle\n * or CanvasRenderingContext2D.strokeStyle.\n * Represents a color, pattern, or gradient. The origin for patterns and\n * gradients as fill style is an increment of 512 css pixels from map coordinate\n * `[0, 0]`. For seamless repeat patterns, width and height of the pattern image\n * must be a factor of two (2, 4, 8, ..., 512).\n *\n * @typedef {string|CanvasPattern|CanvasGradient} ColorLike\n * @api\n */\n\n/**\n * @param {import(\"./color.js\").Color|ColorLike} color Color.\n * @return {ColorLike} The color as an {@link ol/colorlike~ColorLike}.\n * @api\n */\nexport function asColorLike(color) {\n  if (Array.isArray(color)) {\n    return toString(color);\n  }\n  return color;\n}\n","/**\n * @module ol/console\n */\n\n/**\n * @typedef {'info'|'warn'|'error'|'none'} Level\n */\n\n/**\n * @type {Object<Level, number>}\n */\nconst levels = {\n  info: 1,\n  warn: 2,\n  error: 3,\n  none: 4,\n};\n\n/**\n * @type {number}\n */\nlet level = levels.info;\n\n/**\n * Set the logging level.  By default, the level is set to 'info' and all\n * messages will be logged.  Set to 'warn' to only display warnings and errors.\n * Set to 'error' to only display errors.  Set to 'none' to silence all messages.\n *\n * @param {Level} l The new level.\n */\nexport function setLevel(l) {\n  level = levels[l];\n}\n\nexport function log(...args) {\n  if (level > levels.info) {\n    return;\n  }\n  console.log(...args); // eslint-disable-line no-console\n}\n\nexport function warn(...args) {\n  if (level > levels.warn) {\n    return;\n  }\n  console.warn(...args); // eslint-disable-line no-console\n}\n\nexport function error(...args) {\n  if (level > levels.error) {\n    return;\n  }\n  console.error(...args); // eslint-disable-line no-console\n}\n","/**\n * @module ol/coordinate\n */\nimport {getWidth} from './extent.js';\nimport {modulo, toFixed} from './math.js';\nimport {padNumber} from './string.js';\n\n/**\n * An array of numbers representing an xy coordinate. Example: `[16, 48]`.\n * @typedef {Array<number>} Coordinate\n * @api\n */\n\n/**\n * A function that takes a {@link module:ol/coordinate~Coordinate} and\n * transforms it into a `{string}`.\n *\n * @typedef {function((Coordinate|undefined)): string} CoordinateFormat\n * @api\n */\n\n/**\n * Add `delta` to `coordinate`. `coordinate` is modified in place and returned\n * by the function.\n *\n * Example:\n *\n *     import {add} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     add(coord, [-2, 4]);\n *     // coord is now [5.85, 51.983333]\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {Coordinate} delta Delta.\n * @return {Coordinate} The input coordinate adjusted by\n * the given delta.\n * @api\n */\nexport function add(coordinate, delta) {\n  coordinate[0] += +delta[0];\n  coordinate[1] += +delta[1];\n  return coordinate;\n}\n\n/**\n * Calculates the point closest to the passed coordinate on the passed circle.\n *\n * @param {Coordinate} coordinate The coordinate.\n * @param {import(\"./geom/Circle.js\").default} circle The circle.\n * @return {Coordinate} Closest point on the circumference.\n */\nexport function closestOnCircle(coordinate, circle) {\n  const r = circle.getRadius();\n  const center = circle.getCenter();\n  const x0 = center[0];\n  const y0 = center[1];\n  const x1 = coordinate[0];\n  const y1 = coordinate[1];\n\n  let dx = x1 - x0;\n  const dy = y1 - y0;\n  if (dx === 0 && dy === 0) {\n    dx = 1;\n  }\n  const d = Math.sqrt(dx * dx + dy * dy);\n\n  const x = x0 + (r * dx) / d;\n  const y = y0 + (r * dy) / d;\n\n  return [x, y];\n}\n\n/**\n * Calculates the point closest to the passed coordinate on the passed segment.\n * This is the foot of the perpendicular of the coordinate to the segment when\n * the foot is on the segment, or the closest segment coordinate when the foot\n * is outside the segment.\n *\n * @param {Coordinate} coordinate The coordinate.\n * @param {Array<Coordinate>} segment The two coordinates\n * of the segment.\n * @return {Coordinate} The foot of the perpendicular of\n * the coordinate to the segment.\n */\nexport function closestOnSegment(coordinate, segment) {\n  const x0 = coordinate[0];\n  const y0 = coordinate[1];\n  const start = segment[0];\n  const end = segment[1];\n  const x1 = start[0];\n  const y1 = start[1];\n  const x2 = end[0];\n  const y2 = end[1];\n  const dx = x2 - x1;\n  const dy = y2 - y1;\n  const along =\n    dx === 0 && dy === 0\n      ? 0\n      : (dx * (x0 - x1) + dy * (y0 - y1)) / (dx * dx + dy * dy || 0);\n  let x, y;\n  if (along <= 0) {\n    x = x1;\n    y = y1;\n  } else if (along >= 1) {\n    x = x2;\n    y = y2;\n  } else {\n    x = x1 + along * dx;\n    y = y1 + along * dy;\n  }\n  return [x, y];\n}\n\n/**\n * Returns a {@link module:ol/coordinate~CoordinateFormat} function that can be\n * used to format\n * a {Coordinate} to a string.\n *\n * Example without specifying the fractional digits:\n *\n *     import {createStringXY} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const stringifyFunc = createStringXY();\n *     const out = stringifyFunc(coord);\n *     // out is now '8, 48'\n *\n * Example with explicitly specifying 2 fractional digits:\n *\n *     import {createStringXY} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const stringifyFunc = createStringXY(2);\n *     const out = stringifyFunc(coord);\n *     // out is now '7.85, 47.98'\n *\n * @param {number} [fractionDigits] The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {CoordinateFormat} Coordinate format.\n * @api\n */\nexport function createStringXY(fractionDigits) {\n  return (\n    /**\n     * @param {Coordinate} coordinate Coordinate.\n     * @return {string} String XY.\n     */\n    function (coordinate) {\n      return toStringXY(coordinate, fractionDigits);\n    }\n  );\n}\n\n/**\n * @param {string} hemispheres Hemispheres.\n * @param {number} degrees Degrees.\n * @param {number} [fractionDigits] The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} String.\n */\nexport function degreesToStringHDMS(hemispheres, degrees, fractionDigits) {\n  const normalizedDegrees = modulo(degrees + 180, 360) - 180;\n  const x = Math.abs(3600 * normalizedDegrees);\n  const decimals = fractionDigits || 0;\n\n  let deg = Math.floor(x / 3600);\n  let min = Math.floor((x - deg * 3600) / 60);\n  let sec = toFixed(x - deg * 3600 - min * 60, decimals);\n\n  if (sec >= 60) {\n    sec = 0;\n    min += 1;\n  }\n\n  if (min >= 60) {\n    min = 0;\n    deg += 1;\n  }\n\n  let hdms = deg + '\\u00b0';\n  if (min !== 0 || sec !== 0) {\n    hdms += ' ' + padNumber(min, 2) + '\\u2032';\n  }\n  if (sec !== 0) {\n    hdms += ' ' + padNumber(sec, 2, decimals) + '\\u2033';\n  }\n  if (normalizedDegrees !== 0) {\n    hdms += ' ' + hemispheres.charAt(normalizedDegrees < 0 ? 1 : 0);\n  }\n\n  return hdms;\n}\n\n/**\n * Transforms the given {@link module:ol/coordinate~Coordinate} to a string\n * using the given string template. The strings `{x}` and `{y}` in the template\n * will be replaced with the first and second coordinate values respectively.\n *\n * Example without specifying the fractional digits:\n *\n *     import {format} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const template = 'Coordinate is ({x}|{y}).';\n *     const out = format(coord, template);\n *     // out is now 'Coordinate is (8|48).'\n *\n * Example explicitly specifying the fractional digits:\n *\n *     import {format} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const template = 'Coordinate is ({x}|{y}).';\n *     const out = format(coord, template, 2);\n *     // out is now 'Coordinate is (7.85|47.98).'\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {string} template A template string with `{x}` and `{y}` placeholders\n *     that will be replaced by first and second coordinate values.\n * @param {number} [fractionDigits] The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} Formatted coordinate.\n * @api\n */\nexport function format(coordinate, template, fractionDigits) {\n  if (coordinate) {\n    return template\n      .replace('{x}', coordinate[0].toFixed(fractionDigits))\n      .replace('{y}', coordinate[1].toFixed(fractionDigits));\n  }\n  return '';\n}\n\n/**\n * @param {Coordinate} coordinate1 First coordinate.\n * @param {Coordinate} coordinate2 Second coordinate.\n * @return {boolean} The two coordinates are equal.\n */\nexport function equals(coordinate1, coordinate2) {\n  let equals = true;\n  for (let i = coordinate1.length - 1; i >= 0; --i) {\n    if (coordinate1[i] != coordinate2[i]) {\n      equals = false;\n      break;\n    }\n  }\n  return equals;\n}\n\n/**\n * Rotate `coordinate` by `angle`. `coordinate` is modified in place and\n * returned by the function.\n *\n * Example:\n *\n *     import {rotate} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const rotateRadians = Math.PI / 2; // 90 degrees\n *     rotate(coord, rotateRadians);\n *     // coord is now [-47.983333, 7.85]\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number} angle Angle in radian.\n * @return {Coordinate} Coordinate.\n * @api\n */\nexport function rotate(coordinate, angle) {\n  const cosAngle = Math.cos(angle);\n  const sinAngle = Math.sin(angle);\n  const x = coordinate[0] * cosAngle - coordinate[1] * sinAngle;\n  const y = coordinate[1] * cosAngle + coordinate[0] * sinAngle;\n  coordinate[0] = x;\n  coordinate[1] = y;\n  return coordinate;\n}\n\n/**\n * Scale `coordinate` by `scale`. `coordinate` is modified in place and returned\n * by the function.\n *\n * Example:\n *\n *     import {scale as scaleCoordinate} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const scale = 1.2;\n *     scaleCoordinate(coord, scale);\n *     // coord is now [9.42, 57.5799996]\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number} scale Scale factor.\n * @return {Coordinate} Coordinate.\n */\nexport function scale(coordinate, scale) {\n  coordinate[0] *= scale;\n  coordinate[1] *= scale;\n  return coordinate;\n}\n\n/**\n * @param {Coordinate} coord1 First coordinate.\n * @param {Coordinate} coord2 Second coordinate.\n * @return {number} Squared distance between coord1 and coord2.\n */\nexport function squaredDistance(coord1, coord2) {\n  const dx = coord1[0] - coord2[0];\n  const dy = coord1[1] - coord2[1];\n  return dx * dx + dy * dy;\n}\n\n/**\n * @param {Coordinate} coord1 First coordinate.\n * @param {Coordinate} coord2 Second coordinate.\n * @return {number} Distance between coord1 and coord2.\n */\nexport function distance(coord1, coord2) {\n  return Math.sqrt(squaredDistance(coord1, coord2));\n}\n\n/**\n * Calculate the squared distance from a coordinate to a line segment.\n *\n * @param {Coordinate} coordinate Coordinate of the point.\n * @param {Array<Coordinate>} segment Line segment (2\n * coordinates).\n * @return {number} Squared distance from the point to the line segment.\n */\nexport function squaredDistanceToSegment(coordinate, segment) {\n  return squaredDistance(coordinate, closestOnSegment(coordinate, segment));\n}\n\n/**\n * Format a geographic coordinate with the hemisphere, degrees, minutes, and\n * seconds.\n *\n * Example without specifying fractional digits:\n *\n *     import {toStringHDMS} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const out = toStringHDMS(coord);\n *     // out is now '47° 58′ 60″ N 7° 50′ 60″ E'\n *\n * Example explicitly specifying 1 fractional digit:\n *\n *     import {toStringHDMS} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const out = toStringHDMS(coord, 1);\n *     // out is now '47° 58′ 60.0″ N 7° 50′ 60.0″ E'\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number} [fractionDigits] The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} Hemisphere, degrees, minutes and seconds.\n * @api\n */\nexport function toStringHDMS(coordinate, fractionDigits) {\n  if (coordinate) {\n    return (\n      degreesToStringHDMS('NS', coordinate[1], fractionDigits) +\n      ' ' +\n      degreesToStringHDMS('EW', coordinate[0], fractionDigits)\n    );\n  }\n  return '';\n}\n\n/**\n * Format a coordinate as a comma delimited string.\n *\n * Example without specifying fractional digits:\n *\n *     import {toStringXY} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const out = toStringXY(coord);\n *     // out is now '8, 48'\n *\n * Example explicitly specifying 1 fractional digit:\n *\n *     import {toStringXY} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const out = toStringXY(coord, 1);\n *     // out is now '7.8, 48.0'\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number} [fractionDigits] The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} XY.\n * @api\n */\nexport function toStringXY(coordinate, fractionDigits) {\n  return format(coordinate, '{x}, {y}', fractionDigits);\n}\n\n/**\n * Modifies the provided coordinate in-place to be within the real world\n * extent. The lower projection extent boundary is inclusive, the upper one\n * exclusive.\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @return {Coordinate} The coordinate within the real world extent.\n */\nexport function wrapX(coordinate, projection) {\n  if (projection.canWrapX()) {\n    const worldWidth = getWidth(projection.getExtent());\n    const worldsAway = getWorldsAway(coordinate, projection, worldWidth);\n    if (worldsAway) {\n      coordinate[0] -= worldsAway * worldWidth;\n    }\n  }\n  return coordinate;\n}\n/**\n * @param {Coordinate} coordinate Coordinate.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @param {number} [sourceExtentWidth] Width of the source extent.\n * @return {number} Offset in world widths.\n */\nexport function getWorldsAway(coordinate, projection, sourceExtentWidth) {\n  const projectionExtent = projection.getExtent();\n  let worldsAway = 0;\n  if (\n    projection.canWrapX() &&\n    (coordinate[0] < projectionExtent[0] || coordinate[0] > projectionExtent[2])\n  ) {\n    sourceExtentWidth = sourceExtentWidth || getWidth(projectionExtent);\n    worldsAway = Math.floor(\n      (coordinate[0] - projectionExtent[0]) / sourceExtentWidth\n    );\n  }\n  return worldsAway;\n}\n","/**\n * @module ol/css\n */\n\n/**\n * @typedef {Object} FontParameters\n * @property {string} style Style.\n * @property {string} variant Variant.\n * @property {string} weight Weight.\n * @property {string} size Size.\n * @property {string} lineHeight LineHeight.\n * @property {string} family Family.\n * @property {Array<string>} families Families.\n */\n\n/**\n * The CSS class for hidden feature.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_HIDDEN = 'ol-hidden';\n\n/**\n * The CSS class that we'll give the DOM elements to have them selectable.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_SELECTABLE = 'ol-selectable';\n\n/**\n * The CSS class that we'll give the DOM elements to have them unselectable.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_UNSELECTABLE = 'ol-unselectable';\n\n/**\n * The CSS class for unsupported feature.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_UNSUPPORTED = 'ol-unsupported';\n\n/**\n * The CSS class for controls.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_CONTROL = 'ol-control';\n\n/**\n * The CSS class that we'll give the DOM elements that are collapsed, i.e.\n * to those elements which usually can be expanded.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_COLLAPSED = 'ol-collapsed';\n\n/**\n * From https://stackoverflow.com/questions/10135697/regex-to-parse-any-css-font\n * @type {RegExp}\n */\nconst fontRegEx = new RegExp(\n  [\n    '^\\\\s*(?=(?:(?:[-a-z]+\\\\s*){0,2}(italic|oblique))?)',\n    '(?=(?:(?:[-a-z]+\\\\s*){0,2}(small-caps))?)',\n    '(?=(?:(?:[-a-z]+\\\\s*){0,2}(bold(?:er)?|lighter|[1-9]00 ))?)',\n    '(?:(?:normal|\\\\1|\\\\2|\\\\3)\\\\s*){0,3}((?:xx?-)?',\n    '(?:small|large)|medium|smaller|larger|[\\\\.\\\\d]+(?:\\\\%|in|[cem]m|ex|p[ctx]))',\n    '(?:\\\\s*\\\\/\\\\s*(normal|[\\\\.\\\\d]+(?:\\\\%|in|[cem]m|ex|p[ctx])?))',\n    '?\\\\s*([-,\\\\\"\\\\\\'\\\\sa-z]+?)\\\\s*$',\n  ].join(''),\n  'i'\n);\nconst fontRegExMatchIndex = [\n  'style',\n  'variant',\n  'weight',\n  'size',\n  'lineHeight',\n  'family',\n];\n\n/**\n * Get the list of font families from a font spec.  Note that this doesn't work\n * for font families that have commas in them.\n * @param {string} fontSpec The CSS font property.\n * @return {FontParameters|null} The font parameters (or null if the input spec is invalid).\n */\nexport const getFontParameters = function (fontSpec) {\n  const match = fontSpec.match(fontRegEx);\n  if (!match) {\n    return null;\n  }\n  const style = /** @type {FontParameters} */ ({\n    lineHeight: 'normal',\n    size: '1.2em',\n    style: 'normal',\n    weight: 'normal',\n    variant: 'normal',\n  });\n  for (let i = 0, ii = fontRegExMatchIndex.length; i < ii; ++i) {\n    const value = match[i + 1];\n    if (value !== undefined) {\n      style[fontRegExMatchIndex[i]] = value;\n    }\n  }\n  style.families = style.family.split(/,\\s?/);\n  return style;\n};\n","import {WORKER_OFFSCREEN_CANVAS} from './has.js';\n\n/**\n * @module ol/dom\n */\n\n//FIXME Move this function to the canvas module\n/**\n * Create an html canvas element and returns its 2d context.\n * @param {number} [width] Canvas width.\n * @param {number} [height] Canvas height.\n * @param {Array<HTMLCanvasElement>} [canvasPool] Canvas pool to take existing canvas from.\n * @param {CanvasRenderingContext2DSettings} [settings] CanvasRenderingContext2DSettings\n * @return {CanvasRenderingContext2D} The context.\n */\nexport function createCanvasContext2D(width, height, canvasPool, settings) {\n  /** @type {HTMLCanvasElement|OffscreenCanvas} */\n  let canvas;\n  if (canvasPool && canvasPool.length) {\n    canvas = canvasPool.shift();\n  } else if (WORKER_OFFSCREEN_CANVAS) {\n    canvas = new OffscreenCanvas(width || 300, height || 300);\n  } else {\n    canvas = document.createElement('canvas');\n  }\n  if (width) {\n    canvas.width = width;\n  }\n  if (height) {\n    canvas.height = height;\n  }\n  //FIXME Allow OffscreenCanvasRenderingContext2D as return type\n  return /** @type {CanvasRenderingContext2D} */ (\n    canvas.getContext('2d', settings)\n  );\n}\n\n/**\n * Releases canvas memory to avoid exceeding memory limits in Safari.\n * See https://pqina.nl/blog/total-canvas-memory-use-exceeds-the-maximum-limit/\n * @param {CanvasRenderingContext2D} context Context.\n */\nexport function releaseCanvas(context) {\n  const canvas = context.canvas;\n  canvas.width = 1;\n  canvas.height = 1;\n  context.clearRect(0, 0, 1, 1);\n}\n\n/**\n * Get the current computed width for the given element including margin,\n * padding and border.\n * Equivalent to jQuery's `$(el).outerWidth(true)`.\n * @param {!HTMLElement} element Element.\n * @return {number} The width.\n */\nexport function outerWidth(element) {\n  let width = element.offsetWidth;\n  const style = getComputedStyle(element);\n  width += parseInt(style.marginLeft, 10) + parseInt(style.marginRight, 10);\n\n  return width;\n}\n\n/**\n * Get the current computed height for the given element including margin,\n * padding and border.\n * Equivalent to jQuery's `$(el).outerHeight(true)`.\n * @param {!HTMLElement} element Element.\n * @return {number} The height.\n */\nexport function outerHeight(element) {\n  let height = element.offsetHeight;\n  const style = getComputedStyle(element);\n  height += parseInt(style.marginTop, 10) + parseInt(style.marginBottom, 10);\n\n  return height;\n}\n\n/**\n * @param {Node} newNode Node to replace old node\n * @param {Node} oldNode The node to be replaced\n */\nexport function replaceNode(newNode, oldNode) {\n  const parent = oldNode.parentNode;\n  if (parent) {\n    parent.replaceChild(newNode, oldNode);\n  }\n}\n\n/**\n * @param {Node} node The node to remove.\n * @return {Node|null} The node that was removed or null.\n */\nexport function removeNode(node) {\n  return node && node.parentNode ? node.parentNode.removeChild(node) : null;\n}\n\n/**\n * @param {Node} node The node to remove the children from.\n */\nexport function removeChildren(node) {\n  while (node.lastChild) {\n    node.removeChild(node.lastChild);\n  }\n}\n\n/**\n * Transform the children of a parent node so they match the\n * provided list of children.  This function aims to efficiently\n * remove, add, and reorder child nodes while maintaining a simple\n * implementation (it is not guaranteed to minimize DOM operations).\n * @param {Node} node The parent node whose children need reworking.\n * @param {Array<Node>} children The desired children.\n */\nexport function replaceChildren(node, children) {\n  const oldChildren = node.childNodes;\n\n  for (let i = 0; true; ++i) {\n    const oldChild = oldChildren[i];\n    const newChild = children[i];\n\n    // check if our work is done\n    if (!oldChild && !newChild) {\n      break;\n    }\n\n    // check if children match\n    if (oldChild === newChild) {\n      continue;\n    }\n\n    // check if a new child needs to be added\n    if (!oldChild) {\n      node.appendChild(newChild);\n      continue;\n    }\n\n    // check if an old child needs to be removed\n    if (!newChild) {\n      node.removeChild(oldChild);\n      --i;\n      continue;\n    }\n\n    // reorder\n    node.insertBefore(newChild, oldChild);\n  }\n}\n","/**\n * @module ol/easing\n */\n\n/**\n * Start slow and speed up.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function easeIn(t) {\n  return Math.pow(t, 3);\n}\n\n/**\n * Start fast and slow down.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function easeOut(t) {\n  return 1 - easeIn(1 - t);\n}\n\n/**\n * Start slow, speed up, and then slow down again.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function inAndOut(t) {\n  return 3 * t * t - 2 * t * t * t;\n}\n\n/**\n * Maintain a constant speed over time.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function linear(t) {\n  return t;\n}\n\n/**\n * Start slow, speed up, and at the very end slow down again.  This has the\n * same general behavior as {@link module:ol/easing.inAndOut}, but the final\n * slowdown is delayed.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function upAndDown(t) {\n  if (t < 0.5) {\n    return inAndOut(2 * t);\n  }\n  return 1 - inAndOut(2 * (t - 0.5));\n}\n","/**\n * @module ol/events\n */\nimport {clear} from './obj.js';\n\n/**\n * Key to use with {@link module:ol/Observable.unByKey}.\n * @typedef {Object} EventsKey\n * @property {ListenerFunction} listener Listener.\n * @property {import(\"./events/Target.js\").EventTargetLike} target Target.\n * @property {string} type Type.\n * @api\n */\n\n/**\n * Listener function. This function is called with an event object as argument.\n * When the function returns `false`, event propagation will stop.\n *\n * @typedef {function((Event|import(\"./events/Event.js\").default)): (void|boolean)} ListenerFunction\n * @api\n */\n\n/**\n * @typedef {Object} ListenerObject\n * @property {ListenerFunction} handleEvent HandleEvent listener function.\n */\n\n/**\n * @typedef {ListenerFunction|ListenerObject} Listener\n */\n\n/**\n * Registers an event listener on an event target. Inspired by\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\n *\n * This function efficiently binds a `listener` to a `this` object, and returns\n * a key for use with {@link module:ol/events.unlistenByKey}.\n *\n * @param {import(\"./events/Target.js\").EventTargetLike} target Event target.\n * @param {string} type Event type.\n * @param {ListenerFunction} listener Listener.\n * @param {Object} [thisArg] Object referenced by the `this` keyword in the\n *     listener. Default is the `target`.\n * @param {boolean} [once] If true, add the listener as one-off listener.\n * @return {EventsKey} Unique key for the listener.\n */\nexport function listen(target, type, listener, thisArg, once) {\n  if (thisArg && thisArg !== target) {\n    listener = listener.bind(thisArg);\n  }\n  if (once) {\n    const originalListener = listener;\n    listener = function () {\n      target.removeEventListener(type, listener);\n      originalListener.apply(this, arguments);\n    };\n  }\n  const eventsKey = {\n    target: target,\n    type: type,\n    listener: listener,\n  };\n  target.addEventListener(type, listener);\n  return eventsKey;\n}\n\n/**\n * Registers a one-off event listener on an event target. Inspired by\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\n *\n * This function efficiently binds a `listener` as self-unregistering listener\n * to a `this` object, and returns a key for use with\n * {@link module:ol/events.unlistenByKey} in case the listener needs to be\n * unregistered before it is called.\n *\n * When {@link module:ol/events.listen} is called with the same arguments after this\n * function, the self-unregistering listener will be turned into a permanent\n * listener.\n *\n * @param {import(\"./events/Target.js\").EventTargetLike} target Event target.\n * @param {string} type Event type.\n * @param {ListenerFunction} listener Listener.\n * @param {Object} [thisArg] Object referenced by the `this` keyword in the\n *     listener. Default is the `target`.\n * @return {EventsKey} Key for unlistenByKey.\n */\nexport function listenOnce(target, type, listener, thisArg) {\n  return listen(target, type, listener, thisArg, true);\n}\n\n/**\n * Unregisters event listeners on an event target. Inspired by\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\n *\n * The argument passed to this function is the key returned from\n * {@link module:ol/events.listen} or {@link module:ol/events.listenOnce}.\n *\n * @param {EventsKey} key The key.\n */\nexport function unlistenByKey(key) {\n  if (key && key.target) {\n    key.target.removeEventListener(key.type, key.listener);\n    clear(key);\n  }\n}\n","/**\n * @module ol/events/Event\n */\n\n/**\n * @classdesc\n * Stripped down implementation of the W3C DOM Level 2 Event interface.\n * See https://www.w3.org/TR/DOM-Level-2-Events/events.html#Events-interface.\n *\n * This implementation only provides `type` and `target` properties, and\n * `stopPropagation` and `preventDefault` methods. It is meant as base class\n * for higher level events defined in the library, and works with\n * {@link module:ol/events/Target~Target}.\n */\nclass BaseEvent {\n  /**\n   * @param {string} type Type.\n   */\n  constructor(type) {\n    /**\n     * @type {boolean}\n     */\n    this.propagationStopped;\n\n    /**\n     * @type {boolean}\n     */\n    this.defaultPrevented;\n\n    /**\n     * The event type.\n     * @type {string}\n     * @api\n     */\n    this.type = type;\n\n    /**\n     * The event target.\n     * @type {Object}\n     * @api\n     */\n    this.target = null;\n  }\n\n  /**\n   * Prevent default. This means that no emulated `click`, `singleclick` or `doubleclick` events\n   * will be fired.\n   * @api\n   */\n  preventDefault() {\n    this.defaultPrevented = true;\n  }\n\n  /**\n   * Stop event propagation.\n   * @api\n   */\n  stopPropagation() {\n    this.propagationStopped = true;\n  }\n}\n\n/**\n * @param {Event|import(\"./Event.js\").default} evt Event\n */\nexport function stopPropagation(evt) {\n  evt.stopPropagation();\n}\n\n/**\n * @param {Event|import(\"./Event.js\").default} evt Event\n */\nexport function preventDefault(evt) {\n  evt.preventDefault();\n}\n\nexport default BaseEvent;\n","/**\n * @module ol/events/EventType\n */\n\n/**\n * @enum {string}\n * @const\n */\nexport default {\n  /**\n   * Generic change event. Triggered when the revision counter is increased.\n   * @event module:ol/events/Event~BaseEvent#change\n   * @api\n   */\n  CHANGE: 'change',\n\n  /**\n   * Generic error event. Triggered when an error occurs.\n   * @event module:ol/events/Event~BaseEvent#error\n   * @api\n   */\n  ERROR: 'error',\n\n  BLUR: 'blur',\n  CLEAR: 'clear',\n  CONTEXTMENU: 'contextmenu',\n  CLICK: 'click',\n  DBLCLICK: 'dblclick',\n  DRAGENTER: 'dragenter',\n  DRAGOVER: 'dragover',\n  DROP: 'drop',\n  FOCUS: 'focus',\n  KEYDOWN: 'keydown',\n  KEYPRESS: 'keypress',\n  LOAD: 'load',\n  RESIZE: 'resize',\n  TOUCHMOVE: 'touchmove',\n  WHEEL: 'wheel',\n};\n","/**\n * @module ol/events/Target\n */\nimport Disposable from '../Disposable.js';\nimport Event from './Event.js';\nimport {VOID} from '../functions.js';\nimport {clear} from '../obj.js';\n\n/**\n * @typedef {EventTarget|Target} EventTargetLike\n */\n\n/**\n * @classdesc\n * A simplified implementation of the W3C DOM Level 2 EventTarget interface.\n * See https://www.w3.org/TR/2000/REC-DOM-Level-2-Events-20001113/events.html#Events-EventTarget.\n *\n * There are two important simplifications compared to the specification:\n *\n * 1. The handling of `useCapture` in `addEventListener` and\n *    `removeEventListener`. There is no real capture model.\n * 2. The handling of `stopPropagation` and `preventDefault` on `dispatchEvent`.\n *    There is no event target hierarchy. When a listener calls\n *    `stopPropagation` or `preventDefault` on an event object, it means that no\n *    more listeners after this one will be called. Same as when the listener\n *    returns false.\n */\nclass Target extends Disposable {\n  /**\n   * @param {*} [target] Default event target for dispatched events.\n   */\n  constructor(target) {\n    super();\n\n    /**\n     * @private\n     * @type {*}\n     */\n    this.eventTarget_ = target;\n\n    /**\n     * @private\n     * @type {Object<string, number>}\n     */\n    this.pendingRemovals_ = null;\n\n    /**\n     * @private\n     * @type {Object<string, number>}\n     */\n    this.dispatching_ = null;\n\n    /**\n     * @private\n     * @type {Object<string, Array<import(\"../events.js\").Listener>>}\n     */\n    this.listeners_ = null;\n  }\n\n  /**\n   * @param {string} type Type.\n   * @param {import(\"../events.js\").Listener} listener Listener.\n   */\n  addEventListener(type, listener) {\n    if (!type || !listener) {\n      return;\n    }\n    const listeners = this.listeners_ || (this.listeners_ = {});\n    const listenersForType = listeners[type] || (listeners[type] = []);\n    if (!listenersForType.includes(listener)) {\n      listenersForType.push(listener);\n    }\n  }\n\n  /**\n   * Dispatches an event and calls all listeners listening for events\n   * of this type. The event parameter can either be a string or an\n   * Object with a `type` property.\n   *\n   * @param {import(\"./Event.js\").default|string} event Event object.\n   * @return {boolean|undefined} `false` if anyone called preventDefault on the\n   *     event object or if any of the listeners returned false.\n   * @api\n   */\n  dispatchEvent(event) {\n    const isString = typeof event === 'string';\n    const type = isString ? event : event.type;\n    const listeners = this.listeners_ && this.listeners_[type];\n    if (!listeners) {\n      return;\n    }\n\n    const evt = isString ? new Event(event) : /** @type {Event} */ (event);\n    if (!evt.target) {\n      evt.target = this.eventTarget_ || this;\n    }\n    const dispatching = this.dispatching_ || (this.dispatching_ = {});\n    const pendingRemovals =\n      this.pendingRemovals_ || (this.pendingRemovals_ = {});\n    if (!(type in dispatching)) {\n      dispatching[type] = 0;\n      pendingRemovals[type] = 0;\n    }\n    ++dispatching[type];\n    let propagate;\n    for (let i = 0, ii = listeners.length; i < ii; ++i) {\n      if ('handleEvent' in listeners[i]) {\n        propagate = /** @type {import(\"../events.js\").ListenerObject} */ (\n          listeners[i]\n        ).handleEvent(evt);\n      } else {\n        propagate = /** @type {import(\"../events.js\").ListenerFunction} */ (\n          listeners[i]\n        ).call(this, evt);\n      }\n      if (propagate === false || evt.propagationStopped) {\n        propagate = false;\n        break;\n      }\n    }\n    if (--dispatching[type] === 0) {\n      let pr = pendingRemovals[type];\n      delete pendingRemovals[type];\n      while (pr--) {\n        this.removeEventListener(type, VOID);\n      }\n      delete dispatching[type];\n    }\n    return propagate;\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    this.listeners_ && clear(this.listeners_);\n  }\n\n  /**\n   * Get the listeners for a specified event type. Listeners are returned in the\n   * order that they will be called in.\n   *\n   * @param {string} type Type.\n   * @return {Array<import(\"../events.js\").Listener>|undefined} Listeners.\n   */\n  getListeners(type) {\n    return (this.listeners_ && this.listeners_[type]) || undefined;\n  }\n\n  /**\n   * @param {string} [type] Type. If not provided,\n   *     `true` will be returned if this event target has any listeners.\n   * @return {boolean} Has listeners.\n   */\n  hasListener(type) {\n    if (!this.listeners_) {\n      return false;\n    }\n    return type\n      ? type in this.listeners_\n      : Object.keys(this.listeners_).length > 0;\n  }\n\n  /**\n   * @param {string} type Type.\n   * @param {import(\"../events.js\").Listener} listener Listener.\n   */\n  removeEventListener(type, listener) {\n    const listeners = this.listeners_ && this.listeners_[type];\n    if (listeners) {\n      const index = listeners.indexOf(listener);\n      if (index !== -1) {\n        if (this.pendingRemovals_ && type in this.pendingRemovals_) {\n          // make listener a no-op, and remove later in #dispatchEvent()\n          listeners[index] = VOID;\n          ++this.pendingRemovals_[type];\n        } else {\n          listeners.splice(index, 1);\n          if (listeners.length === 0) {\n            delete this.listeners_[type];\n          }\n        }\n      }\n    }\n  }\n}\n\nexport default Target;\n","/**\n * @module ol/extent\n */\nimport Relationship from './extent/Relationship.js';\nimport {assert} from './asserts.js';\n\n/**\n * An array of numbers representing an extent: `[minx, miny, maxx, maxy]`.\n * @typedef {Array<number>} Extent\n * @api\n */\n\n/**\n * Extent corner.\n * @typedef {'bottom-left' | 'bottom-right' | 'top-left' | 'top-right'} Corner\n */\n\n/**\n * Build an extent that includes all given coordinates.\n *\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates Coordinates.\n * @return {Extent} Bounding extent.\n * @api\n */\nexport function boundingExtent(coordinates) {\n  const extent = createEmpty();\n  for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n    extendCoordinate(extent, coordinates[i]);\n  }\n  return extent;\n}\n\n/**\n * @param {Array<number>} xs Xs.\n * @param {Array<number>} ys Ys.\n * @param {Extent} [dest] Destination extent.\n * @private\n * @return {Extent} Extent.\n */\nfunction _boundingExtentXYs(xs, ys, dest) {\n  const minX = Math.min.apply(null, xs);\n  const minY = Math.min.apply(null, ys);\n  const maxX = Math.max.apply(null, xs);\n  const maxY = Math.max.apply(null, ys);\n  return createOrUpdate(minX, minY, maxX, maxY, dest);\n}\n\n/**\n * Return extent increased by the provided value.\n * @param {Extent} extent Extent.\n * @param {number} value The amount by which the extent should be buffered.\n * @param {Extent} [dest] Extent.\n * @return {Extent} Extent.\n * @api\n */\nexport function buffer(extent, value, dest) {\n  if (dest) {\n    dest[0] = extent[0] - value;\n    dest[1] = extent[1] - value;\n    dest[2] = extent[2] + value;\n    dest[3] = extent[3] + value;\n    return dest;\n  }\n  return [\n    extent[0] - value,\n    extent[1] - value,\n    extent[2] + value,\n    extent[3] + value,\n  ];\n}\n\n/**\n * Creates a clone of an extent.\n *\n * @param {Extent} extent Extent to clone.\n * @param {Extent} [dest] Extent.\n * @return {Extent} The clone.\n */\nexport function clone(extent, dest) {\n  if (dest) {\n    dest[0] = extent[0];\n    dest[1] = extent[1];\n    dest[2] = extent[2];\n    dest[3] = extent[3];\n    return dest;\n  }\n  return extent.slice();\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {number} Closest squared distance.\n */\nexport function closestSquaredDistanceXY(extent, x, y) {\n  let dx, dy;\n  if (x < extent[0]) {\n    dx = extent[0] - x;\n  } else if (extent[2] < x) {\n    dx = x - extent[2];\n  } else {\n    dx = 0;\n  }\n  if (y < extent[1]) {\n    dy = extent[1] - y;\n  } else if (extent[3] < y) {\n    dy = y - extent[3];\n  } else {\n    dy = 0;\n  }\n  return dx * dx + dy * dy;\n}\n\n/**\n * Check if the passed coordinate is contained or on the edge of the extent.\n *\n * @param {Extent} extent Extent.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n * @return {boolean} The coordinate is contained in the extent.\n * @api\n */\nexport function containsCoordinate(extent, coordinate) {\n  return containsXY(extent, coordinate[0], coordinate[1]);\n}\n\n/**\n * Check if one extent contains another.\n *\n * An extent is deemed contained if it lies completely within the other extent,\n * including if they share one or more edges.\n *\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {boolean} The second extent is contained by or on the edge of the\n *     first.\n * @api\n */\nexport function containsExtent(extent1, extent2) {\n  return (\n    extent1[0] <= extent2[0] &&\n    extent2[2] <= extent1[2] &&\n    extent1[1] <= extent2[1] &&\n    extent2[3] <= extent1[3]\n  );\n}\n\n/**\n * Check if the passed coordinate is contained or on the edge of the extent.\n *\n * @param {Extent} extent Extent.\n * @param {number} x X coordinate.\n * @param {number} y Y coordinate.\n * @return {boolean} The x, y values are contained in the extent.\n * @api\n */\nexport function containsXY(extent, x, y) {\n  return extent[0] <= x && x <= extent[2] && extent[1] <= y && y <= extent[3];\n}\n\n/**\n * Get the relationship between a coordinate and extent.\n * @param {Extent} extent The extent.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate The coordinate.\n * @return {import(\"./extent/Relationship.js\").default} The relationship (bitwise compare with\n *     import(\"./extent/Relationship.js\").Relationship).\n */\nexport function coordinateRelationship(extent, coordinate) {\n  const minX = extent[0];\n  const minY = extent[1];\n  const maxX = extent[2];\n  const maxY = extent[3];\n  const x = coordinate[0];\n  const y = coordinate[1];\n  let relationship = Relationship.UNKNOWN;\n  if (x < minX) {\n    relationship = relationship | Relationship.LEFT;\n  } else if (x > maxX) {\n    relationship = relationship | Relationship.RIGHT;\n  }\n  if (y < minY) {\n    relationship = relationship | Relationship.BELOW;\n  } else if (y > maxY) {\n    relationship = relationship | Relationship.ABOVE;\n  }\n  if (relationship === Relationship.UNKNOWN) {\n    relationship = Relationship.INTERSECTING;\n  }\n  return relationship;\n}\n\n/**\n * Create an empty extent.\n * @return {Extent} Empty extent.\n * @api\n */\nexport function createEmpty() {\n  return [Infinity, Infinity, -Infinity, -Infinity];\n}\n\n/**\n * Create a new extent or update the provided extent.\n * @param {number} minX Minimum X.\n * @param {number} minY Minimum Y.\n * @param {number} maxX Maximum X.\n * @param {number} maxY Maximum Y.\n * @param {Extent} [dest] Destination extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdate(minX, minY, maxX, maxY, dest) {\n  if (dest) {\n    dest[0] = minX;\n    dest[1] = minY;\n    dest[2] = maxX;\n    dest[3] = maxY;\n    return dest;\n  }\n  return [minX, minY, maxX, maxY];\n}\n\n/**\n * Create a new empty extent or make the provided one empty.\n * @param {Extent} [dest] Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateEmpty(dest) {\n  return createOrUpdate(Infinity, Infinity, -Infinity, -Infinity, dest);\n}\n\n/**\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {Extent} [dest] Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromCoordinate(coordinate, dest) {\n  const x = coordinate[0];\n  const y = coordinate[1];\n  return createOrUpdate(x, y, x, y, dest);\n}\n\n/**\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates Coordinates.\n * @param {Extent} [dest] Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromCoordinates(coordinates, dest) {\n  const extent = createOrUpdateEmpty(dest);\n  return extendCoordinates(extent, coordinates);\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {Extent} [dest] Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromFlatCoordinates(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  dest\n) {\n  const extent = createOrUpdateEmpty(dest);\n  return extendFlatCoordinates(extent, flatCoordinates, offset, end, stride);\n}\n\n/**\n * @param {Array<Array<import(\"./coordinate.js\").Coordinate>>} rings Rings.\n * @param {Extent} [dest] Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromRings(rings, dest) {\n  const extent = createOrUpdateEmpty(dest);\n  return extendRings(extent, rings);\n}\n\n/**\n * Determine if two extents are equivalent.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {boolean} The two extents are equivalent.\n * @api\n */\nexport function equals(extent1, extent2) {\n  return (\n    extent1[0] == extent2[0] &&\n    extent1[2] == extent2[2] &&\n    extent1[1] == extent2[1] &&\n    extent1[3] == extent2[3]\n  );\n}\n\n/**\n * Determine if two extents are approximately equivalent.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @param {number} tolerance Tolerance in extent coordinate units.\n * @return {boolean} The two extents differ by less than the tolerance.\n */\nexport function approximatelyEquals(extent1, extent2, tolerance) {\n  return (\n    Math.abs(extent1[0] - extent2[0]) < tolerance &&\n    Math.abs(extent1[2] - extent2[2]) < tolerance &&\n    Math.abs(extent1[1] - extent2[1]) < tolerance &&\n    Math.abs(extent1[3] - extent2[3]) < tolerance\n  );\n}\n\n/**\n * Modify an extent to include another extent.\n * @param {Extent} extent1 The extent to be modified.\n * @param {Extent} extent2 The extent that will be included in the first.\n * @return {Extent} A reference to the first (extended) extent.\n * @api\n */\nexport function extend(extent1, extent2) {\n  if (extent2[0] < extent1[0]) {\n    extent1[0] = extent2[0];\n  }\n  if (extent2[2] > extent1[2]) {\n    extent1[2] = extent2[2];\n  }\n  if (extent2[1] < extent1[1]) {\n    extent1[1] = extent2[1];\n  }\n  if (extent2[3] > extent1[3]) {\n    extent1[3] = extent2[3];\n  }\n  return extent1;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n */\nexport function extendCoordinate(extent, coordinate) {\n  if (coordinate[0] < extent[0]) {\n    extent[0] = coordinate[0];\n  }\n  if (coordinate[0] > extent[2]) {\n    extent[2] = coordinate[0];\n  }\n  if (coordinate[1] < extent[1]) {\n    extent[1] = coordinate[1];\n  }\n  if (coordinate[1] > extent[3]) {\n    extent[3] = coordinate[1];\n  }\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates Coordinates.\n * @return {Extent} Extent.\n */\nexport function extendCoordinates(extent, coordinates) {\n  for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n    extendCoordinate(extent, coordinates[i]);\n  }\n  return extent;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {Extent} Extent.\n */\nexport function extendFlatCoordinates(\n  extent,\n  flatCoordinates,\n  offset,\n  end,\n  stride\n) {\n  for (; offset < end; offset += stride) {\n    extendXY(extent, flatCoordinates[offset], flatCoordinates[offset + 1]);\n  }\n  return extent;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {Array<Array<import(\"./coordinate.js\").Coordinate>>} rings Rings.\n * @return {Extent} Extent.\n */\nexport function extendRings(extent, rings) {\n  for (let i = 0, ii = rings.length; i < ii; ++i) {\n    extendCoordinates(extent, rings[i]);\n  }\n  return extent;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {number} x X.\n * @param {number} y Y.\n */\nexport function extendXY(extent, x, y) {\n  extent[0] = Math.min(extent[0], x);\n  extent[1] = Math.min(extent[1], y);\n  extent[2] = Math.max(extent[2], x);\n  extent[3] = Math.max(extent[3], y);\n}\n\n/**\n * This function calls `callback` for each corner of the extent. If the\n * callback returns a truthy value the function returns that value\n * immediately. Otherwise the function returns `false`.\n * @param {Extent} extent Extent.\n * @param {function(import(\"./coordinate.js\").Coordinate): S} callback Callback.\n * @return {S|boolean} Value.\n * @template S\n */\nexport function forEachCorner(extent, callback) {\n  let val;\n  val = callback(getBottomLeft(extent));\n  if (val) {\n    return val;\n  }\n  val = callback(getBottomRight(extent));\n  if (val) {\n    return val;\n  }\n  val = callback(getTopRight(extent));\n  if (val) {\n    return val;\n  }\n  val = callback(getTopLeft(extent));\n  if (val) {\n    return val;\n  }\n  return false;\n}\n\n/**\n * Get the size of an extent.\n * @param {Extent} extent Extent.\n * @return {number} Area.\n * @api\n */\nexport function getArea(extent) {\n  let area = 0;\n  if (!isEmpty(extent)) {\n    area = getWidth(extent) * getHeight(extent);\n  }\n  return area;\n}\n\n/**\n * Get the bottom left coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Bottom left coordinate.\n * @api\n */\nexport function getBottomLeft(extent) {\n  return [extent[0], extent[1]];\n}\n\n/**\n * Get the bottom right coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Bottom right coordinate.\n * @api\n */\nexport function getBottomRight(extent) {\n  return [extent[2], extent[1]];\n}\n\n/**\n * Get the center coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Center.\n * @api\n */\nexport function getCenter(extent) {\n  return [(extent[0] + extent[2]) / 2, (extent[1] + extent[3]) / 2];\n}\n\n/**\n * Get a corner coordinate of an extent.\n * @param {Extent} extent Extent.\n * @param {Corner} corner Corner.\n * @return {import(\"./coordinate.js\").Coordinate} Corner coordinate.\n */\nexport function getCorner(extent, corner) {\n  let coordinate;\n  if (corner === 'bottom-left') {\n    coordinate = getBottomLeft(extent);\n  } else if (corner === 'bottom-right') {\n    coordinate = getBottomRight(extent);\n  } else if (corner === 'top-left') {\n    coordinate = getTopLeft(extent);\n  } else if (corner === 'top-right') {\n    coordinate = getTopRight(extent);\n  } else {\n    assert(false, 13); // Invalid corner\n  }\n  return coordinate;\n}\n\n/**\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {number} Enlarged area.\n */\nexport function getEnlargedArea(extent1, extent2) {\n  const minX = Math.min(extent1[0], extent2[0]);\n  const minY = Math.min(extent1[1], extent2[1]);\n  const maxX = Math.max(extent1[2], extent2[2]);\n  const maxY = Math.max(extent1[3], extent2[3]);\n  return (maxX - minX) * (maxY - minY);\n}\n\n/**\n * @param {import(\"./coordinate.js\").Coordinate} center Center.\n * @param {number} resolution Resolution.\n * @param {number} rotation Rotation.\n * @param {import(\"./size.js\").Size} size Size.\n * @param {Extent} [dest] Destination extent.\n * @return {Extent} Extent.\n */\nexport function getForViewAndSize(center, resolution, rotation, size, dest) {\n  const [x0, y0, x1, y1, x2, y2, x3, y3] = getRotatedViewport(\n    center,\n    resolution,\n    rotation,\n    size\n  );\n  return createOrUpdate(\n    Math.min(x0, x1, x2, x3),\n    Math.min(y0, y1, y2, y3),\n    Math.max(x0, x1, x2, x3),\n    Math.max(y0, y1, y2, y3),\n    dest\n  );\n}\n\n/**\n * @param {import(\"./coordinate.js\").Coordinate} center Center.\n * @param {number} resolution Resolution.\n * @param {number} rotation Rotation.\n * @param {import(\"./size.js\").Size} size Size.\n * @return {Array<number>} Linear ring representing the viewport.\n */\nexport function getRotatedViewport(center, resolution, rotation, size) {\n  const dx = (resolution * size[0]) / 2;\n  const dy = (resolution * size[1]) / 2;\n  const cosRotation = Math.cos(rotation);\n  const sinRotation = Math.sin(rotation);\n  const xCos = dx * cosRotation;\n  const xSin = dx * sinRotation;\n  const yCos = dy * cosRotation;\n  const ySin = dy * sinRotation;\n  const x = center[0];\n  const y = center[1];\n  return [\n    x - xCos + ySin,\n    y - xSin - yCos,\n    x - xCos - ySin,\n    y - xSin + yCos,\n    x + xCos - ySin,\n    y + xSin + yCos,\n    x + xCos + ySin,\n    y + xSin - yCos,\n    x - xCos + ySin,\n    y - xSin - yCos,\n  ];\n}\n\n/**\n * Get the height of an extent.\n * @param {Extent} extent Extent.\n * @return {number} Height.\n * @api\n */\nexport function getHeight(extent) {\n  return extent[3] - extent[1];\n}\n\n/**\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {number} Intersection area.\n */\nexport function getIntersectionArea(extent1, extent2) {\n  const intersection = getIntersection(extent1, extent2);\n  return getArea(intersection);\n}\n\n/**\n * Get the intersection of two extents.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @param {Extent} [dest] Optional extent to populate with intersection.\n * @return {Extent} Intersecting extent.\n * @api\n */\nexport function getIntersection(extent1, extent2, dest) {\n  const intersection = dest ? dest : createEmpty();\n  if (intersects(extent1, extent2)) {\n    if (extent1[0] > extent2[0]) {\n      intersection[0] = extent1[0];\n    } else {\n      intersection[0] = extent2[0];\n    }\n    if (extent1[1] > extent2[1]) {\n      intersection[1] = extent1[1];\n    } else {\n      intersection[1] = extent2[1];\n    }\n    if (extent1[2] < extent2[2]) {\n      intersection[2] = extent1[2];\n    } else {\n      intersection[2] = extent2[2];\n    }\n    if (extent1[3] < extent2[3]) {\n      intersection[3] = extent1[3];\n    } else {\n      intersection[3] = extent2[3];\n    }\n  } else {\n    createOrUpdateEmpty(intersection);\n  }\n  return intersection;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @return {number} Margin.\n */\nexport function getMargin(extent) {\n  return getWidth(extent) + getHeight(extent);\n}\n\n/**\n * Get the size (width, height) of an extent.\n * @param {Extent} extent The extent.\n * @return {import(\"./size.js\").Size} The extent size.\n * @api\n */\nexport function getSize(extent) {\n  return [extent[2] - extent[0], extent[3] - extent[1]];\n}\n\n/**\n * Get the top left coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Top left coordinate.\n * @api\n */\nexport function getTopLeft(extent) {\n  return [extent[0], extent[3]];\n}\n\n/**\n * Get the top right coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Top right coordinate.\n * @api\n */\nexport function getTopRight(extent) {\n  return [extent[2], extent[3]];\n}\n\n/**\n * Get the width of an extent.\n * @param {Extent} extent Extent.\n * @return {number} Width.\n * @api\n */\nexport function getWidth(extent) {\n  return extent[2] - extent[0];\n}\n\n/**\n * Determine if one extent intersects another.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent.\n * @return {boolean} The two extents intersect.\n * @api\n */\nexport function intersects(extent1, extent2) {\n  return (\n    extent1[0] <= extent2[2] &&\n    extent1[2] >= extent2[0] &&\n    extent1[1] <= extent2[3] &&\n    extent1[3] >= extent2[1]\n  );\n}\n\n/**\n * Determine if an extent is empty.\n * @param {Extent} extent Extent.\n * @return {boolean} Is empty.\n * @api\n */\nexport function isEmpty(extent) {\n  return extent[2] < extent[0] || extent[3] < extent[1];\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {Extent} [dest] Extent.\n * @return {Extent} Extent.\n */\nexport function returnOrUpdate(extent, dest) {\n  if (dest) {\n    dest[0] = extent[0];\n    dest[1] = extent[1];\n    dest[2] = extent[2];\n    dest[3] = extent[3];\n    return dest;\n  }\n  return extent;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {number} value Value.\n */\nexport function scaleFromCenter(extent, value) {\n  const deltaX = ((extent[2] - extent[0]) / 2) * (value - 1);\n  const deltaY = ((extent[3] - extent[1]) / 2) * (value - 1);\n  extent[0] -= deltaX;\n  extent[2] += deltaX;\n  extent[1] -= deltaY;\n  extent[3] += deltaY;\n}\n\n/**\n * Determine if the segment between two coordinates intersects (crosses,\n * touches, or is contained by) the provided extent.\n * @param {Extent} extent The extent.\n * @param {import(\"./coordinate.js\").Coordinate} start Segment start coordinate.\n * @param {import(\"./coordinate.js\").Coordinate} end Segment end coordinate.\n * @return {boolean} The segment intersects the extent.\n */\nexport function intersectsSegment(extent, start, end) {\n  let intersects = false;\n  const startRel = coordinateRelationship(extent, start);\n  const endRel = coordinateRelationship(extent, end);\n  if (\n    startRel === Relationship.INTERSECTING ||\n    endRel === Relationship.INTERSECTING\n  ) {\n    intersects = true;\n  } else {\n    const minX = extent[0];\n    const minY = extent[1];\n    const maxX = extent[2];\n    const maxY = extent[3];\n    const startX = start[0];\n    const startY = start[1];\n    const endX = end[0];\n    const endY = end[1];\n    const slope = (endY - startY) / (endX - startX);\n    let x, y;\n    if (!!(endRel & Relationship.ABOVE) && !(startRel & Relationship.ABOVE)) {\n      // potentially intersects top\n      x = endX - (endY - maxY) / slope;\n      intersects = x >= minX && x <= maxX;\n    }\n    if (\n      !intersects &&\n      !!(endRel & Relationship.RIGHT) &&\n      !(startRel & Relationship.RIGHT)\n    ) {\n      // potentially intersects right\n      y = endY - (endX - maxX) * slope;\n      intersects = y >= minY && y <= maxY;\n    }\n    if (\n      !intersects &&\n      !!(endRel & Relationship.BELOW) &&\n      !(startRel & Relationship.BELOW)\n    ) {\n      // potentially intersects bottom\n      x = endX - (endY - minY) / slope;\n      intersects = x >= minX && x <= maxX;\n    }\n    if (\n      !intersects &&\n      !!(endRel & Relationship.LEFT) &&\n      !(startRel & Relationship.LEFT)\n    ) {\n      // potentially intersects left\n      y = endY - (endX - minX) * slope;\n      intersects = y >= minY && y <= maxY;\n    }\n  }\n  return intersects;\n}\n\n/**\n * Apply a transform function to the extent.\n * @param {Extent} extent Extent.\n * @param {import(\"./proj.js\").TransformFunction} transformFn Transform function.\n * Called with `[minX, minY, maxX, maxY]` extent coordinates.\n * @param {Extent} [dest] Destination extent.\n * @param {number} [stops] Number of stops per side used for the transform.\n * By default only the corners are used.\n * @return {Extent} Extent.\n * @api\n */\nexport function applyTransform(extent, transformFn, dest, stops) {\n  let coordinates = [];\n  if (stops > 1) {\n    const width = extent[2] - extent[0];\n    const height = extent[3] - extent[1];\n    for (let i = 0; i < stops; ++i) {\n      coordinates.push(\n        extent[0] + (width * i) / stops,\n        extent[1],\n        extent[2],\n        extent[1] + (height * i) / stops,\n        extent[2] - (width * i) / stops,\n        extent[3],\n        extent[0],\n        extent[3] - (height * i) / stops\n      );\n    }\n  } else {\n    coordinates = [\n      extent[0],\n      extent[1],\n      extent[2],\n      extent[1],\n      extent[2],\n      extent[3],\n      extent[0],\n      extent[3],\n    ];\n  }\n  transformFn(coordinates, coordinates, 2);\n  const xs = [];\n  const ys = [];\n  for (let i = 0, l = coordinates.length; i < l; i += 2) {\n    xs.push(coordinates[i]);\n    ys.push(coordinates[i + 1]);\n  }\n  return _boundingExtentXYs(xs, ys, dest);\n}\n\n/**\n * Modifies the provided extent in-place to be within the real world\n * extent.\n *\n * @param {Extent} extent Extent.\n * @param {import(\"./proj/Projection.js\").default} projection Projection\n * @return {Extent} The extent within the real world extent.\n */\nexport function wrapX(extent, projection) {\n  const projectionExtent = projection.getExtent();\n  const center = getCenter(extent);\n  if (\n    projection.canWrapX() &&\n    (center[0] < projectionExtent[0] || center[0] >= projectionExtent[2])\n  ) {\n    const worldWidth = getWidth(projectionExtent);\n    const worldsAway = Math.floor(\n      (center[0] - projectionExtent[0]) / worldWidth\n    );\n    const offset = worldsAway * worldWidth;\n    extent[0] -= offset;\n    extent[2] -= offset;\n  }\n  return extent;\n}\n\n/**\n * Fits the extent to the real world\n *\n * If the extent does not cross the anti meridian, this will return the extent in an array\n * If the extent crosses the anti meridian, the extent will be sliced, so each part fits within the\n * real world\n *\n *\n * @param {Extent} extent Extent.\n * @param {import(\"./proj/Projection.js\").default} projection Projection\n * @return {Array<Extent>} The extent within the real world extent.\n */\nexport function wrapAndSliceX(extent, projection) {\n  if (projection.canWrapX()) {\n    const projectionExtent = projection.getExtent();\n\n    if (!isFinite(extent[0]) || !isFinite(extent[2])) {\n      return [[projectionExtent[0], extent[1], projectionExtent[2], extent[3]]];\n    }\n\n    wrapX(extent, projection);\n    const worldWidth = getWidth(projectionExtent);\n\n    if (getWidth(extent) > worldWidth) {\n      // the extent wraps around on itself\n      return [[projectionExtent[0], extent[1], projectionExtent[2], extent[3]]];\n    } else if (extent[0] < projectionExtent[0]) {\n      // the extent crosses the anti meridian, so it needs to be sliced\n      return [\n        [extent[0] + worldWidth, extent[1], projectionExtent[2], extent[3]],\n        [projectionExtent[0], extent[1], extent[2], extent[3]],\n      ];\n    } else if (extent[2] > projectionExtent[2]) {\n      // the extent crosses the anti meridian, so it needs to be sliced\n      return [\n        [extent[0], extent[1], projectionExtent[2], extent[3]],\n        [projectionExtent[0], extent[1], extent[2] - worldWidth, extent[3]],\n      ];\n    }\n  }\n\n  return [extent];\n}\n","/**\n * @module ol/extent/Relationship\n */\n\n/**\n * Relationship to an extent.\n * @enum {number}\n */\nexport default {\n  UNKNOWN: 0,\n  INTERSECTING: 1,\n  ABOVE: 2,\n  RIGHT: 4,\n  BELOW: 8,\n  LEFT: 16,\n};\n","/**\n * @module ol/featureloader\n */\nimport {VOID} from './functions.js';\n\n/**\n *\n * @type {boolean}\n * @private\n */\nlet withCredentials = false;\n\n/**\n * {@link module:ol/source/Vector~VectorSource} sources use a function of this type to\n * load features.\n *\n * This function takes up to 5 arguments. These are an {@link module:ol/extent~Extent} representing\n * the area to be loaded, a `{number}` representing the resolution (map units per pixel), an\n * {@link module:ol/proj/Projection~Projection} for the projection, an optional success callback that should get\n * the loaded features passed as an argument and an optional failure callback with no arguments. If\n * the callbacks are not used, the corresponding vector source will not fire `'featuresloadend'` and\n * `'featuresloaderror'` events. `this` within the function is bound to the\n * {@link module:ol/source/Vector~VectorSource} it's called from.\n *\n * The function is responsible for loading the features and adding them to the\n * source.\n * @typedef {function(this:(import(\"./source/Vector\").default|import(\"./VectorTile.js\").default),\n *           import(\"./extent.js\").Extent,\n *           number,\n *           import(\"./proj/Projection.js\").default,\n *           function(Array<import(\"./Feature.js\").default>): void=,\n *           function(): void=): void} FeatureLoader\n * @api\n */\n\n/**\n * {@link module:ol/source/Vector~VectorSource} sources use a function of this type to\n * get the url to load features from.\n *\n * This function takes an {@link module:ol/extent~Extent} representing the area\n * to be loaded, a `{number}` representing the resolution (map units per pixel)\n * and an {@link module:ol/proj/Projection~Projection} for the projection  as\n * arguments and returns a `{string}` representing the URL.\n * @typedef {function(import(\"./extent.js\").Extent, number, import(\"./proj/Projection.js\").default): string} FeatureUrlFunction\n * @api\n */\n\n/**\n * @param {string|FeatureUrlFunction} url Feature URL service.\n * @param {import(\"./format/Feature.js\").default} format Feature format.\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number} resolution Resolution.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @param {function(Array<import(\"./Feature.js\").default>, import(\"./proj/Projection.js\").default): void} success Success\n *      Function called with the loaded features and optionally with the data projection.\n * @param {function(): void} failure Failure\n *      Function called when loading failed.\n */\nexport function loadFeaturesXhr(\n  url,\n  format,\n  extent,\n  resolution,\n  projection,\n  success,\n  failure\n) {\n  const xhr = new XMLHttpRequest();\n  xhr.open(\n    'GET',\n    typeof url === 'function' ? url(extent, resolution, projection) : url,\n    true\n  );\n  if (format.getType() == 'arraybuffer') {\n    xhr.responseType = 'arraybuffer';\n  }\n  xhr.withCredentials = withCredentials;\n  /**\n   * @param {Event} event Event.\n   * @private\n   */\n  xhr.onload = function (event) {\n    // status will be 0 for file:// urls\n    if (!xhr.status || (xhr.status >= 200 && xhr.status < 300)) {\n      const type = format.getType();\n      /** @type {Document|Node|Object|string|undefined} */\n      let source;\n      if (type == 'json' || type == 'text') {\n        source = xhr.responseText;\n      } else if (type == 'xml') {\n        source = xhr.responseXML;\n        if (!source) {\n          source = new DOMParser().parseFromString(\n            xhr.responseText,\n            'application/xml'\n          );\n        }\n      } else if (type == 'arraybuffer') {\n        source = /** @type {ArrayBuffer} */ (xhr.response);\n      }\n      if (source) {\n        success(\n          /** @type {Array<import(\"./Feature.js\").default>} */\n          (\n            format.readFeatures(source, {\n              extent: extent,\n              featureProjection: projection,\n            })\n          ),\n          format.readProjection(source)\n        );\n      } else {\n        failure();\n      }\n    } else {\n      failure();\n    }\n  };\n  /**\n   * @private\n   */\n  xhr.onerror = failure;\n  xhr.send();\n}\n\n/**\n * Create an XHR feature loader for a `url` and `format`. The feature loader\n * loads features (with XHR), parses the features, and adds them to the\n * vector source.\n * @param {string|FeatureUrlFunction} url Feature URL service.\n * @param {import(\"./format/Feature.js\").default} format Feature format.\n * @return {FeatureLoader} The feature loader.\n * @api\n */\nexport function xhr(url, format) {\n  /**\n   * @param {import(\"./extent.js\").Extent} extent Extent.\n   * @param {number} resolution Resolution.\n   * @param {import(\"./proj/Projection.js\").default} projection Projection.\n   * @param {function(Array<import(\"./Feature.js\").default>): void} [success] Success\n   *      Function called when loading succeeded.\n   * @param {function(): void} [failure] Failure\n   *      Function called when loading failed.\n   */\n  return function (extent, resolution, projection, success, failure) {\n    const source = /** @type {import(\"./source/Vector\").default} */ (this);\n    loadFeaturesXhr(\n      url,\n      format,\n      extent,\n      resolution,\n      projection,\n      /**\n       * @param {Array<import(\"./Feature.js\").default>} features The loaded features.\n       * @param {import(\"./proj/Projection.js\").default} dataProjection Data\n       * projection.\n       */\n      function (features, dataProjection) {\n        source.addFeatures(features);\n        if (success !== undefined) {\n          success(features);\n        }\n      },\n      /* FIXME handle error */ failure ? failure : VOID\n    );\n  };\n}\n\n/**\n * Setter for the withCredentials configuration for the XHR.\n *\n * @param {boolean} xhrWithCredentials The value of withCredentials to set.\n * Compare https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest/\n * @api\n */\nexport function setWithCredentials(xhrWithCredentials) {\n  withCredentials = xhrWithCredentials;\n}\n","/**\n * @module ol/format/Feature\n */\nimport {abstract} from '../util.js';\nimport {\n  equivalent as equivalentProjection,\n  get as getProjection,\n  transformExtent,\n} from '../proj.js';\n\n/**\n * @typedef {Object} ReadOptions\n * @property {import(\"../proj.js\").ProjectionLike} [dataProjection] Projection of the data we are reading.\n * If not provided, the projection will be derived from the data (where possible) or\n * the `dataProjection` of the format is assigned (where set). If the projection\n * can not be derived from the data and if no `dataProjection` is set for a format,\n * the features will not be reprojected.\n * @property {import(\"../extent.js\").Extent} [extent] Tile extent in map units of the tile being read.\n * This is only required when reading data with tile pixels as geometry units. When configured,\n * a `dataProjection` with `TILE_PIXELS` as `units` and the tile's pixel extent as `extent` needs to be\n * provided.\n * @property {import(\"../proj.js\").ProjectionLike} [featureProjection] Projection of the feature geometries\n * created by the format reader. If not provided, features will be returned in the\n * `dataProjection`.\n */\n\n/**\n * @typedef {Object} WriteOptions\n * @property {import(\"../proj.js\").ProjectionLike} [dataProjection] Projection of the data we are writing.\n * If not provided, the `dataProjection` of the format is assigned (where set).\n * If no `dataProjection` is set for a format, the features will be returned\n * in the `featureProjection`.\n * @property {import(\"../proj.js\").ProjectionLike} [featureProjection] Projection of the feature geometries\n * that will be serialized by the format writer. If not provided, geometries are assumed\n * to be in the `dataProjection` if that is set; in other words, they are not transformed.\n * @property {boolean} [rightHanded] When writing geometries, follow the right-hand\n * rule for linear ring orientation.  This means that polygons will have counter-clockwise\n * exterior rings and clockwise interior rings.  By default, coordinates are serialized\n * as they are provided at construction.  If `true`, the right-hand rule will\n * be applied.  If `false`, the left-hand rule will be applied (clockwise for\n * exterior and counter-clockwise for interior rings).  Note that not all\n * formats support this.  The GeoJSON format does use this property when writing\n * geometries.\n * @property {number} [decimals] Maximum number of decimal places for coordinates.\n * Coordinates are stored internally as floats, but floating-point arithmetic can create\n * coordinates with a large number of decimal places, not generally wanted on output.\n * Set a number here to round coordinates. Can also be used to ensure that\n * coordinates read in can be written back out with the same number of decimals.\n * Default is no rounding.\n */\n\n/**\n * @typedef {'arraybuffer' | 'json' | 'text' | 'xml'} Type\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for feature formats.\n * {@link module:ol/format/Feature~FeatureFormat} subclasses provide the ability to decode and encode\n * {@link module:ol/Feature~Feature} objects from a variety of commonly used geospatial\n * file formats.  See the documentation for each format for more details.\n *\n * @abstract\n * @api\n */\nclass FeatureFormat {\n  constructor() {\n    /**\n     * @protected\n     * @type {import(\"../proj/Projection.js\").default|undefined}\n     */\n    this.dataProjection = undefined;\n\n    /**\n     * @protected\n     * @type {import(\"../proj/Projection.js\").default|undefined}\n     */\n    this.defaultFeatureProjection = undefined;\n\n    /**\n     * A list media types supported by the format in descending order of preference.\n     * @type {Array<string>}\n     */\n    this.supportedMediaTypes = null;\n  }\n\n  /**\n   * Adds the data projection to the read options.\n   * @param {Document|Element|Object|string} source Source.\n   * @param {ReadOptions} [options] Options.\n   * @return {ReadOptions|undefined} Options.\n   * @protected\n   */\n  getReadOptions(source, options) {\n    if (options) {\n      let dataProjection = options.dataProjection\n        ? getProjection(options.dataProjection)\n        : this.readProjection(source);\n      if (\n        options.extent &&\n        dataProjection &&\n        dataProjection.getUnits() === 'tile-pixels'\n      ) {\n        dataProjection = getProjection(dataProjection);\n        dataProjection.setWorldExtent(options.extent);\n      }\n      options = {\n        dataProjection: dataProjection,\n        featureProjection: options.featureProjection,\n      };\n    }\n    return this.adaptOptions(options);\n  }\n\n  /**\n   * Sets the `dataProjection` on the options, if no `dataProjection`\n   * is set.\n   * @param {WriteOptions|ReadOptions|undefined} options\n   *     Options.\n   * @protected\n   * @return {WriteOptions|ReadOptions|undefined}\n   *     Updated options.\n   */\n  adaptOptions(options) {\n    return Object.assign(\n      {\n        dataProjection: this.dataProjection,\n        featureProjection: this.defaultFeatureProjection,\n      },\n      options\n    );\n  }\n\n  /**\n   * @abstract\n   * @return {Type} The format type.\n   */\n  getType() {\n    return abstract();\n  }\n\n  /**\n   * Read a single feature from a source.\n   *\n   * @abstract\n   * @param {Document|Element|Object|string} source Source.\n   * @param {ReadOptions} [options] Read options.\n   * @return {import(\"../Feature.js\").FeatureLike} Feature.\n   */\n  readFeature(source, options) {\n    return abstract();\n  }\n\n  /**\n   * Read all features from a source.\n   *\n   * @abstract\n   * @param {Document|Element|ArrayBuffer|Object|string} source Source.\n   * @param {ReadOptions} [options] Read options.\n   * @return {Array<import(\"../Feature.js\").FeatureLike>} Features.\n   */\n  readFeatures(source, options) {\n    return abstract();\n  }\n\n  /**\n   * Read a single geometry from a source.\n   *\n   * @abstract\n   * @param {Document|Element|Object|string} source Source.\n   * @param {ReadOptions} [options] Read options.\n   * @return {import(\"../geom/Geometry.js\").default} Geometry.\n   */\n  readGeometry(source, options) {\n    return abstract();\n  }\n\n  /**\n   * Read the projection from a source.\n   *\n   * @abstract\n   * @param {Document|Element|Object|string} source Source.\n   * @return {import(\"../proj/Projection.js\").default|undefined} Projection.\n   */\n  readProjection(source) {\n    return abstract();\n  }\n\n  /**\n   * Encode a feature in this format.\n   *\n   * @abstract\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   * @param {WriteOptions} [options] Write options.\n   * @return {string|ArrayBuffer} Result.\n   */\n  writeFeature(feature, options) {\n    return abstract();\n  }\n\n  /**\n   * Encode an array of features in this format.\n   *\n   * @abstract\n   * @param {Array<import(\"../Feature.js\").default>} features Features.\n   * @param {WriteOptions} [options] Write options.\n   * @return {string|ArrayBuffer} Result.\n   */\n  writeFeatures(features, options) {\n    return abstract();\n  }\n\n  /**\n   * Write a single geometry in this format.\n   *\n   * @abstract\n   * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n   * @param {WriteOptions} [options] Write options.\n   * @return {string|ArrayBuffer} Result.\n   */\n  writeGeometry(geometry, options) {\n    return abstract();\n  }\n}\n\nexport default FeatureFormat;\n\n/**\n * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n * @param {boolean} write Set to true for writing, false for reading.\n * @param {WriteOptions|ReadOptions} [options] Options.\n * @return {import(\"../geom/Geometry.js\").default} Transformed geometry.\n */\nexport function transformGeometryWithOptions(geometry, write, options) {\n  const featureProjection = options\n    ? getProjection(options.featureProjection)\n    : null;\n  const dataProjection = options ? getProjection(options.dataProjection) : null;\n\n  let transformed;\n  if (\n    featureProjection &&\n    dataProjection &&\n    !equivalentProjection(featureProjection, dataProjection)\n  ) {\n    transformed = (write ? geometry.clone() : geometry).transform(\n      write ? featureProjection : dataProjection,\n      write ? dataProjection : featureProjection\n    );\n  } else {\n    transformed = geometry;\n  }\n  if (\n    write &&\n    options &&\n    /** @type {WriteOptions} */ (options).decimals !== undefined\n  ) {\n    const power = Math.pow(10, /** @type {WriteOptions} */ (options).decimals);\n    // if decimals option on write, round each coordinate appropriately\n    /**\n     * @param {Array<number>} coordinates Coordinates.\n     * @return {Array<number>} Transformed coordinates.\n     */\n    const transform = function (coordinates) {\n      for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n        coordinates[i] = Math.round(coordinates[i] * power) / power;\n      }\n      return coordinates;\n    };\n    if (transformed === geometry) {\n      transformed = geometry.clone();\n    }\n    transformed.applyTransform(transform);\n  }\n  return transformed;\n}\n\n/**\n * @param {import(\"../extent.js\").Extent} extent Extent.\n * @param {ReadOptions} [options] Read options.\n * @return {import(\"../extent.js\").Extent} Transformed extent.\n */\nexport function transformExtentWithOptions(extent, options) {\n  const featureProjection = options\n    ? getProjection(options.featureProjection)\n    : null;\n  const dataProjection = options ? getProjection(options.dataProjection) : null;\n\n  if (\n    featureProjection &&\n    dataProjection &&\n    !equivalentProjection(featureProjection, dataProjection)\n  ) {\n    return transformExtent(extent, dataProjection, featureProjection);\n  }\n  return extent;\n}\n","/**\n * @module ol/Feature\n */\nimport BaseObject from './Object.js';\nimport EventType from './events/EventType.js';\nimport {assert} from './asserts.js';\nimport {listen, unlistenByKey} from './events.js';\n\n/**\n * @typedef {typeof Feature|typeof import(\"./render/Feature.js\").default} FeatureClass\n */\n\n/**\n * @typedef {Feature|import(\"./render/Feature.js\").default} FeatureLike\n */\n\n/***\n * @template Return\n * @typedef {import(\"./Observable\").OnSignature<import(\"./Observable\").EventTypes, import(\"./events/Event.js\").default, Return> &\n *   import(\"./Observable\").OnSignature<import(\"./ObjectEventType\").Types|'change:geometry', import(\"./Object\").ObjectEvent, Return> &\n *   import(\"./Observable\").CombinedOnSignature<import(\"./Observable\").EventTypes|import(\"./ObjectEventType\").Types\n *     |'change:geometry', Return>} FeatureOnSignature\n */\n\n/***\n * @template Geometry\n * @typedef {Object<string, *> & { geometry?: Geometry }} ObjectWithGeometry\n */\n\n/**\n * @classdesc\n * A vector object for geographic features with a geometry and other\n * attribute properties, similar to the features in vector file formats like\n * GeoJSON.\n *\n * Features can be styled individually with `setStyle`; otherwise they use the\n * style of their vector layer.\n *\n * Note that attribute properties are set as {@link module:ol/Object~BaseObject} properties on\n * the feature object, so they are observable, and have get/set accessors.\n *\n * Typically, a feature has a single geometry property. You can set the\n * geometry using the `setGeometry` method and get it with `getGeometry`.\n * It is possible to store more than one geometry on a feature using attribute\n * properties. By default, the geometry used for rendering is identified by\n * the property name `geometry`. If you want to use another geometry property\n * for rendering, use the `setGeometryName` method to change the attribute\n * property associated with the geometry for the feature.  For example:\n *\n * ```js\n *\n * import Feature from 'ol/Feature.js';\n * import Polygon from 'ol/geom/Polygon.js';\n * import Point from 'ol/geom/Point.js';\n *\n * const feature = new Feature({\n *   geometry: new Polygon(polyCoords),\n *   labelPoint: new Point(labelCoords),\n *   name: 'My Polygon',\n * });\n *\n * // get the polygon geometry\n * const poly = feature.getGeometry();\n *\n * // Render the feature as a point using the coordinates from labelPoint\n * feature.setGeometryName('labelPoint');\n *\n * // get the point geometry\n * const point = feature.getGeometry();\n * ```\n *\n * @api\n * @template {import(\"./geom/Geometry.js\").default} [Geometry=import(\"./geom/Geometry.js\").default]\n */\nclass Feature extends BaseObject {\n  /**\n   * @param {Geometry|ObjectWithGeometry<Geometry>} [geometryOrProperties]\n   *     You may pass a Geometry object directly, or an object literal containing\n   *     properties. If you pass an object literal, you may include a Geometry\n   *     associated with a `geometry` key.\n   */\n  constructor(geometryOrProperties) {\n    super();\n\n    /***\n     * @type {FeatureOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {FeatureOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {FeatureOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @private\n     * @type {number|string|undefined}\n     */\n    this.id_ = undefined;\n\n    /**\n     * @type {string}\n     * @private\n     */\n    this.geometryName_ = 'geometry';\n\n    /**\n     * User provided style.\n     * @private\n     * @type {import(\"./style/Style.js\").StyleLike}\n     */\n    this.style_ = null;\n\n    /**\n     * @private\n     * @type {import(\"./style/Style.js\").StyleFunction|undefined}\n     */\n    this.styleFunction_ = undefined;\n\n    /**\n     * @private\n     * @type {?import(\"./events.js\").EventsKey}\n     */\n    this.geometryChangeKey_ = null;\n\n    this.addChangeListener(this.geometryName_, this.handleGeometryChanged_);\n\n    if (geometryOrProperties) {\n      if (\n        typeof (\n          /** @type {?} */ (geometryOrProperties).getSimplifiedGeometry\n        ) === 'function'\n      ) {\n        const geometry = /** @type {Geometry} */ (geometryOrProperties);\n        this.setGeometry(geometry);\n      } else {\n        /** @type {Object<string, *>} */\n        const properties = geometryOrProperties;\n        this.setProperties(properties);\n      }\n    }\n  }\n\n  /**\n   * Clone this feature. If the original feature has a geometry it\n   * is also cloned. The feature id is not set in the clone.\n   * @return {Feature<Geometry>} The clone.\n   * @api\n   */\n  clone() {\n    const clone = /** @type {Feature<Geometry>} */ (\n      new Feature(this.hasProperties() ? this.getProperties() : null)\n    );\n    clone.setGeometryName(this.getGeometryName());\n    const geometry = this.getGeometry();\n    if (geometry) {\n      clone.setGeometry(/** @type {Geometry} */ (geometry.clone()));\n    }\n    const style = this.getStyle();\n    if (style) {\n      clone.setStyle(style);\n    }\n    return clone;\n  }\n\n  /**\n   * Get the feature's default geometry.  A feature may have any number of named\n   * geometries.  The \"default\" geometry (the one that is rendered by default) is\n   * set when calling {@link module:ol/Feature~Feature#setGeometry}.\n   * @return {Geometry|undefined} The default geometry for the feature.\n   * @api\n   * @observable\n   */\n  getGeometry() {\n    return /** @type {Geometry|undefined} */ (this.get(this.geometryName_));\n  }\n\n  /**\n   * Get the feature identifier.  This is a stable identifier for the feature and\n   * is either set when reading data from a remote source or set explicitly by\n   * calling {@link module:ol/Feature~Feature#setId}.\n   * @return {number|string|undefined} Id.\n   * @api\n   */\n  getId() {\n    return this.id_;\n  }\n\n  /**\n   * Get the name of the feature's default geometry.  By default, the default\n   * geometry is named `geometry`.\n   * @return {string} Get the property name associated with the default geometry\n   *     for this feature.\n   * @api\n   */\n  getGeometryName() {\n    return this.geometryName_;\n  }\n\n  /**\n   * Get the feature's style. Will return what was provided to the\n   * {@link module:ol/Feature~Feature#setStyle} method.\n   * @return {import(\"./style/Style.js\").StyleLike|undefined} The feature style.\n   * @api\n   */\n  getStyle() {\n    return this.style_;\n  }\n\n  /**\n   * Get the feature's style function.\n   * @return {import(\"./style/Style.js\").StyleFunction|undefined} Return a function\n   * representing the current style of this feature.\n   * @api\n   */\n  getStyleFunction() {\n    return this.styleFunction_;\n  }\n\n  /**\n   * @private\n   */\n  handleGeometryChange_() {\n    this.changed();\n  }\n\n  /**\n   * @private\n   */\n  handleGeometryChanged_() {\n    if (this.geometryChangeKey_) {\n      unlistenByKey(this.geometryChangeKey_);\n      this.geometryChangeKey_ = null;\n    }\n    const geometry = this.getGeometry();\n    if (geometry) {\n      this.geometryChangeKey_ = listen(\n        geometry,\n        EventType.CHANGE,\n        this.handleGeometryChange_,\n        this\n      );\n    }\n    this.changed();\n  }\n\n  /**\n   * Set the default geometry for the feature.  This will update the property\n   * with the name returned by {@link module:ol/Feature~Feature#getGeometryName}.\n   * @param {Geometry|undefined} geometry The new geometry.\n   * @api\n   * @observable\n   */\n  setGeometry(geometry) {\n    this.set(this.geometryName_, geometry);\n  }\n\n  /**\n   * Set the style for the feature to override the layer style.  This can be a\n   * single style object, an array of styles, or a function that takes a\n   * resolution and returns an array of styles. To unset the feature style, call\n   * `setStyle()` without arguments or a falsey value.\n   * @param {import(\"./style/Style.js\").StyleLike} [style] Style for this feature.\n   * @api\n   * @fires module:ol/events/Event~BaseEvent#event:change\n   */\n  setStyle(style) {\n    this.style_ = style;\n    this.styleFunction_ = !style ? undefined : createStyleFunction(style);\n    this.changed();\n  }\n\n  /**\n   * Set the feature id.  The feature id is considered stable and may be used when\n   * requesting features or comparing identifiers returned from a remote source.\n   * The feature id can be used with the\n   * {@link module:ol/source/Vector~VectorSource#getFeatureById} method.\n   * @param {number|string|undefined} id The feature id.\n   * @api\n   * @fires module:ol/events/Event~BaseEvent#event:change\n   */\n  setId(id) {\n    this.id_ = id;\n    this.changed();\n  }\n\n  /**\n   * Set the property name to be used when getting the feature's default geometry.\n   * When calling {@link module:ol/Feature~Feature#getGeometry}, the value of the property with\n   * this name will be returned.\n   * @param {string} name The property name of the default geometry.\n   * @api\n   */\n  setGeometryName(name) {\n    this.removeChangeListener(this.geometryName_, this.handleGeometryChanged_);\n    this.geometryName_ = name;\n    this.addChangeListener(this.geometryName_, this.handleGeometryChanged_);\n    this.handleGeometryChanged_();\n  }\n}\n\n/**\n * Convert the provided object into a feature style function.  Functions passed\n * through unchanged.  Arrays of Style or single style objects wrapped\n * in a new feature style function.\n * @param {!import(\"./style/Style.js\").StyleFunction|!Array<import(\"./style/Style.js\").default>|!import(\"./style/Style.js\").default} obj\n *     A feature style function, a single style, or an array of styles.\n * @return {import(\"./style/Style.js\").StyleFunction} A style function.\n */\nexport function createStyleFunction(obj) {\n  if (typeof obj === 'function') {\n    return obj;\n  }\n  /**\n   * @type {Array<import(\"./style/Style.js\").default>}\n   */\n  let styles;\n  if (Array.isArray(obj)) {\n    styles = obj;\n  } else {\n    assert(typeof (/** @type {?} */ (obj).getZIndex) === 'function', 41); // Expected an `import(\"./style/Style.js\").Style` or an array of `import(\"./style/Style.js\").Style`\n    const style = /** @type {import(\"./style/Style.js\").default} */ (obj);\n    styles = [style];\n  }\n  return function () {\n    return styles;\n  };\n}\nexport default Feature;\n","/**\n * @module ol/geom/GeometryCollection\n */\nimport EventType from '../events/EventType.js';\nimport Geometry from './Geometry.js';\nimport {\n  closestSquaredDistanceXY,\n  createOrUpdateEmpty,\n  extend,\n  getCenter,\n} from '../extent.js';\nimport {listen, unlistenByKey} from '../events.js';\n\n/**\n * @classdesc\n * An array of {@link module:ol/geom/Geometry~Geometry} objects.\n *\n * @api\n */\nclass GeometryCollection extends Geometry {\n  /**\n   * @param {Array<Geometry>} [geometries] Geometries.\n   */\n  constructor(geometries) {\n    super();\n\n    /**\n     * @private\n     * @type {Array<Geometry>}\n     */\n    this.geometries_ = geometries ? geometries : null;\n\n    /**\n     * @type {Array<import(\"../events.js\").EventsKey>}\n     */\n    this.changeEventsKeys_ = [];\n\n    this.listenGeometriesChange_();\n  }\n\n  /**\n   * @private\n   */\n  unlistenGeometriesChange_() {\n    this.changeEventsKeys_.forEach(unlistenByKey);\n    this.changeEventsKeys_.length = 0;\n  }\n\n  /**\n   * @private\n   */\n  listenGeometriesChange_() {\n    if (!this.geometries_) {\n      return;\n    }\n    for (let i = 0, ii = this.geometries_.length; i < ii; ++i) {\n      this.changeEventsKeys_.push(\n        listen(this.geometries_[i], EventType.CHANGE, this.changed, this)\n      );\n    }\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!GeometryCollection} Clone.\n   * @api\n   */\n  clone() {\n    const geometryCollection = new GeometryCollection(null);\n    geometryCollection.setGeometries(this.geometries_);\n    geometryCollection.applyProperties(this);\n    return geometryCollection;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    const geometries = this.geometries_;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      minSquaredDistance = geometries[i].closestPointXY(\n        x,\n        y,\n        closestPoint,\n        minSquaredDistance\n      );\n    }\n    return minSquaredDistance;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @return {boolean} Contains (x, y).\n   */\n  containsXY(x, y) {\n    const geometries = this.geometries_;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      if (geometries[i].containsXY(x, y)) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @protected\n   * @return {import(\"../extent.js\").Extent} extent Extent.\n   */\n  computeExtent(extent) {\n    createOrUpdateEmpty(extent);\n    const geometries = this.geometries_;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      extend(extent, geometries[i].getExtent());\n    }\n    return extent;\n  }\n\n  /**\n   * Return the geometries that make up this geometry collection.\n   * @return {Array<Geometry>} Geometries.\n   * @api\n   */\n  getGeometries() {\n    return cloneGeometries(this.geometries_);\n  }\n\n  /**\n   * @return {Array<Geometry>} Geometries.\n   */\n  getGeometriesArray() {\n    return this.geometries_;\n  }\n\n  /**\n   * @return {Array<Geometry>} Geometries.\n   */\n  getGeometriesArrayRecursive() {\n    /** @type {Array<Geometry>} */\n    let geometriesArray = [];\n    const geometries = this.geometries_;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      if (geometries[i].getType() === this.getType()) {\n        geometriesArray = geometriesArray.concat(\n          /** @type {GeometryCollection} */ (\n            geometries[i]\n          ).getGeometriesArrayRecursive()\n        );\n      } else {\n        geometriesArray.push(geometries[i]);\n      }\n    }\n    return geometriesArray;\n  }\n\n  /**\n   * Create a simplified version of this geometry using the Douglas Peucker algorithm.\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {GeometryCollection} Simplified GeometryCollection.\n   */\n  getSimplifiedGeometry(squaredTolerance) {\n    if (this.simplifiedGeometryRevision !== this.getRevision()) {\n      this.simplifiedGeometryMaxMinSquaredTolerance = 0;\n      this.simplifiedGeometryRevision = this.getRevision();\n    }\n    if (\n      squaredTolerance < 0 ||\n      (this.simplifiedGeometryMaxMinSquaredTolerance !== 0 &&\n        squaredTolerance < this.simplifiedGeometryMaxMinSquaredTolerance)\n    ) {\n      return this;\n    }\n\n    const simplifiedGeometries = [];\n    const geometries = this.geometries_;\n    let simplified = false;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      const geometry = geometries[i];\n      const simplifiedGeometry =\n        geometry.getSimplifiedGeometry(squaredTolerance);\n      simplifiedGeometries.push(simplifiedGeometry);\n      if (simplifiedGeometry !== geometry) {\n        simplified = true;\n      }\n    }\n    if (simplified) {\n      const simplifiedGeometryCollection = new GeometryCollection(null);\n      simplifiedGeometryCollection.setGeometriesArray(simplifiedGeometries);\n      return simplifiedGeometryCollection;\n    }\n    this.simplifiedGeometryMaxMinSquaredTolerance = squaredTolerance;\n    return this;\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./Geometry.js\").Type} Geometry type.\n   * @api\n   */\n  getType() {\n    return 'GeometryCollection';\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   */\n  intersectsExtent(extent) {\n    const geometries = this.geometries_;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      if (geometries[i].intersectsExtent(extent)) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * @return {boolean} Is empty.\n   */\n  isEmpty() {\n    return this.geometries_.length === 0;\n  }\n\n  /**\n   * Rotate the geometry around a given coordinate. This modifies the geometry\n   * coordinates in place.\n   * @param {number} angle Rotation angle in radians.\n   * @param {import(\"../coordinate.js\").Coordinate} anchor The rotation center.\n   * @api\n   */\n  rotate(angle, anchor) {\n    const geometries = this.geometries_;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      geometries[i].rotate(angle, anchor);\n    }\n    this.changed();\n  }\n\n  /**\n   * Scale the geometry (with an optional origin).  This modifies the geometry\n   * coordinates in place.\n   * @abstract\n   * @param {number} sx The scaling factor in the x-direction.\n   * @param {number} [sy] The scaling factor in the y-direction (defaults to sx).\n   * @param {import(\"../coordinate.js\").Coordinate} [anchor] The scale origin (defaults to the center\n   *     of the geometry extent).\n   * @api\n   */\n  scale(sx, sy, anchor) {\n    if (!anchor) {\n      anchor = getCenter(this.getExtent());\n    }\n    const geometries = this.geometries_;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      geometries[i].scale(sx, sy, anchor);\n    }\n    this.changed();\n  }\n\n  /**\n   * Set the geometries that make up this geometry collection.\n   * @param {Array<Geometry>} geometries Geometries.\n   * @api\n   */\n  setGeometries(geometries) {\n    this.setGeometriesArray(cloneGeometries(geometries));\n  }\n\n  /**\n   * @param {Array<Geometry>} geometries Geometries.\n   */\n  setGeometriesArray(geometries) {\n    this.unlistenGeometriesChange_();\n    this.geometries_ = geometries;\n    this.listenGeometriesChange_();\n    this.changed();\n  }\n\n  /**\n   * Apply a transform function to the coordinates of the geometry.\n   * The geometry is modified in place.\n   * If you do not want the geometry modified in place, first `clone()` it and\n   * then use this function on the clone.\n   * @param {import(\"../proj.js\").TransformFunction} transformFn Transform function.\n   * Called with a flat array of geometry coordinates.\n   * @api\n   */\n  applyTransform(transformFn) {\n    const geometries = this.geometries_;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      geometries[i].applyTransform(transformFn);\n    }\n    this.changed();\n  }\n\n  /**\n   * Translate the geometry.  This modifies the geometry coordinates in place.  If\n   * instead you want a new geometry, first `clone()` this geometry.\n   * @param {number} deltaX Delta X.\n   * @param {number} deltaY Delta Y.\n   * @api\n   */\n  translate(deltaX, deltaY) {\n    const geometries = this.geometries_;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      geometries[i].translate(deltaX, deltaY);\n    }\n    this.changed();\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    this.unlistenGeometriesChange_();\n    super.disposeInternal();\n  }\n}\n\n/**\n * @param {Array<Geometry>} geometries Geometries.\n * @return {Array<Geometry>} Cloned geometries.\n */\nfunction cloneGeometries(geometries) {\n  const clonedGeometries = [];\n  for (let i = 0, ii = geometries.length; i < ii; ++i) {\n    clonedGeometries.push(geometries[i].clone());\n  }\n  return clonedGeometries;\n}\n\nexport default GeometryCollection;\n","/**\n * @module ol/format/JSONFeature\n */\nimport FeatureFormat from './Feature.js';\nimport {abstract} from '../util.js';\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for JSON feature formats.\n *\n * @abstract\n */\nclass JSONFeature extends FeatureFormat {\n  constructor() {\n    super();\n  }\n\n  /**\n   * @return {import(\"./Feature.js\").Type} Format.\n   */\n  getType() {\n    return 'json';\n  }\n\n  /**\n   * Read a feature.  Only works for a single feature. Use `readFeatures` to\n   * read a feature collection.\n   *\n   * @param {ArrayBuffer|Document|Element|Object|string} source Source.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n   * @return {import(\"../Feature.js\").default} Feature.\n   * @api\n   */\n  readFeature(source, options) {\n    return this.readFeatureFromObject(\n      getObject(source),\n      this.getReadOptions(source, options)\n    );\n  }\n\n  /**\n   * Read all features.  Works with both a single feature and a feature\n   * collection.\n   *\n   * @param {ArrayBuffer|Document|Element|Object|string} source Source.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n   * @return {Array<import(\"../Feature.js\").default>} Features.\n   * @api\n   */\n  readFeatures(source, options) {\n    return this.readFeaturesFromObject(\n      getObject(source),\n      this.getReadOptions(source, options)\n    );\n  }\n\n  /**\n   * @abstract\n   * @param {Object} object Object.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n   * @protected\n   * @return {import(\"../Feature.js\").default} Feature.\n   */\n  readFeatureFromObject(object, options) {\n    return abstract();\n  }\n\n  /**\n   * @abstract\n   * @param {Object} object Object.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n   * @protected\n   * @return {Array<import(\"../Feature.js\").default>} Features.\n   */\n  readFeaturesFromObject(object, options) {\n    return abstract();\n  }\n\n  /**\n   * Read a geometry.\n   *\n   * @param {ArrayBuffer|Document|Element|Object|string} source Source.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n   * @return {import(\"../geom/Geometry.js\").default} Geometry.\n   * @api\n   */\n  readGeometry(source, options) {\n    return this.readGeometryFromObject(\n      getObject(source),\n      this.getReadOptions(source, options)\n    );\n  }\n\n  /**\n   * @abstract\n   * @param {Object} object Object.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n   * @protected\n   * @return {import(\"../geom/Geometry.js\").default} Geometry.\n   */\n  readGeometryFromObject(object, options) {\n    return abstract();\n  }\n\n  /**\n   * Read the projection.\n   *\n   * @param {ArrayBuffer|Document|Element|Object|string} source Source.\n   * @return {import(\"../proj/Projection.js\").default} Projection.\n   * @api\n   */\n  readProjection(source) {\n    return this.readProjectionFromObject(getObject(source));\n  }\n\n  /**\n   * @abstract\n   * @param {Object} object Object.\n   * @protected\n   * @return {import(\"../proj/Projection.js\").default} Projection.\n   */\n  readProjectionFromObject(object) {\n    return abstract();\n  }\n\n  /**\n   * Encode a feature as string.\n   *\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n   * @return {string} Encoded feature.\n   * @api\n   */\n  writeFeature(feature, options) {\n    return JSON.stringify(this.writeFeatureObject(feature, options));\n  }\n\n  /**\n   * @abstract\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n   * @return {Object} Object.\n   */\n  writeFeatureObject(feature, options) {\n    return abstract();\n  }\n\n  /**\n   * Encode an array of features as string.\n   *\n   * @param {Array<import(\"../Feature.js\").default>} features Features.\n   * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n   * @return {string} Encoded features.\n   * @api\n   */\n  writeFeatures(features, options) {\n    return JSON.stringify(this.writeFeaturesObject(features, options));\n  }\n\n  /**\n   * @abstract\n   * @param {Array<import(\"../Feature.js\").default>} features Features.\n   * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n   * @return {Object} Object.\n   */\n  writeFeaturesObject(features, options) {\n    return abstract();\n  }\n\n  /**\n   * Encode a geometry as string.\n   *\n   * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n   * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n   * @return {string} Encoded geometry.\n   * @api\n   */\n  writeGeometry(geometry, options) {\n    return JSON.stringify(this.writeGeometryObject(geometry, options));\n  }\n\n  /**\n   * @abstract\n   * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n   * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n   * @return {Object} Object.\n   */\n  writeGeometryObject(geometry, options) {\n    return abstract();\n  }\n}\n\n/**\n * @param {Document|Element|Object|string} source Source.\n * @return {Object} Object.\n */\nfunction getObject(source) {\n  if (typeof source === 'string') {\n    const object = JSON.parse(source);\n    return object ? /** @type {Object} */ (object) : null;\n  } else if (source !== null) {\n    return source;\n  }\n  return null;\n}\n\nexport default JSONFeature;\n","/**\n * @module ol/format/GeoJSON\n */\n\nimport Feature from '../Feature.js';\nimport GeometryCollection from '../geom/GeometryCollection.js';\nimport JSONFeature from './JSONFeature.js';\nimport LineString from '../geom/LineString.js';\nimport MultiLineString from '../geom/MultiLineString.js';\nimport MultiPoint from '../geom/MultiPoint.js';\nimport MultiPolygon from '../geom/MultiPolygon.js';\nimport Point from '../geom/Point.js';\nimport Polygon from '../geom/Polygon.js';\nimport {assert} from '../asserts.js';\nimport {get as getProjection} from '../proj.js';\nimport {isEmpty} from '../obj.js';\nimport {transformGeometryWithOptions} from './Feature.js';\n\n/**\n * @typedef {import(\"geojson\").GeoJSON} GeoJSONObject\n * @typedef {import(\"geojson\").Feature} GeoJSONFeature\n * @typedef {import(\"geojson\").FeatureCollection} GeoJSONFeatureCollection\n * @typedef {import(\"geojson\").Geometry} GeoJSONGeometry\n * @typedef {import(\"geojson\").Point} GeoJSONPoint\n * @typedef {import(\"geojson\").LineString} GeoJSONLineString\n * @typedef {import(\"geojson\").Polygon} GeoJSONPolygon\n * @typedef {import(\"geojson\").MultiPoint} GeoJSONMultiPoint\n * @typedef {import(\"geojson\").MultiLineString} GeoJSONMultiLineString\n * @typedef {import(\"geojson\").MultiPolygon} GeoJSONMultiPolygon\n * @typedef {import(\"geojson\").GeometryCollection} GeoJSONGeometryCollection\n */\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../proj.js\").ProjectionLike} [dataProjection='EPSG:4326'] Default data projection.\n * @property {import(\"../proj.js\").ProjectionLike} [featureProjection] Projection for features read or\n * written by the format.  Options passed to read or write methods will take precedence.\n * @property {string} [geometryName] Geometry name to use when creating features.\n * @property {boolean} [extractGeometryName=false] Certain GeoJSON providers include\n * the geometry_name field in the feature GeoJSON. If set to `true` the GeoJSON reader\n * will look for that field to set the geometry name. If both this field is set to `true`\n * and a `geometryName` is provided, the `geometryName` will take precedence.\n */\n\n/**\n * @classdesc\n * Feature format for reading and writing data in the GeoJSON format.\n *\n * @api\n */\nclass GeoJSON extends JSONFeature {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    super();\n\n    /**\n     * @type {import(\"../proj/Projection.js\").default}\n     */\n    this.dataProjection = getProjection(\n      options.dataProjection ? options.dataProjection : 'EPSG:4326'\n    );\n\n    if (options.featureProjection) {\n      /**\n       * @type {import(\"../proj/Projection.js\").default}\n       */\n      this.defaultFeatureProjection = getProjection(options.featureProjection);\n    }\n\n    /**\n     * Name of the geometry attribute for features.\n     * @type {string|undefined}\n     * @private\n     */\n    this.geometryName_ = options.geometryName;\n\n    /**\n     * Look for the geometry name in the feature GeoJSON\n     * @type {boolean|undefined}\n     * @private\n     */\n    this.extractGeometryName_ = options.extractGeometryName;\n\n    this.supportedMediaTypes = [\n      'application/geo+json',\n      'application/vnd.geo+json',\n    ];\n  }\n\n  /**\n   * @param {Object} object Object.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n   * @protected\n   * @return {import(\"../Feature.js\").default} Feature.\n   */\n  readFeatureFromObject(object, options) {\n    /**\n     * @type {GeoJSONFeature}\n     */\n    let geoJSONFeature = null;\n    if (object['type'] === 'Feature') {\n      geoJSONFeature = /** @type {GeoJSONFeature} */ (object);\n    } else {\n      geoJSONFeature = {\n        'type': 'Feature',\n        'geometry': /** @type {GeoJSONGeometry} */ (object),\n        'properties': null,\n      };\n    }\n\n    const geometry = readGeometry(geoJSONFeature['geometry'], options);\n    const feature = new Feature();\n    if (this.geometryName_) {\n      feature.setGeometryName(this.geometryName_);\n    } else if (\n      this.extractGeometryName_ &&\n      'geometry_name' in geoJSONFeature !== undefined\n    ) {\n      feature.setGeometryName(geoJSONFeature['geometry_name']);\n    }\n    feature.setGeometry(geometry);\n\n    if ('id' in geoJSONFeature) {\n      feature.setId(geoJSONFeature['id']);\n    }\n\n    if (geoJSONFeature['properties']) {\n      feature.setProperties(geoJSONFeature['properties'], true);\n    }\n    return feature;\n  }\n\n  /**\n   * @param {Object} object Object.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n   * @protected\n   * @return {Array<Feature>} Features.\n   */\n  readFeaturesFromObject(object, options) {\n    const geoJSONObject = /** @type {GeoJSONObject} */ (object);\n    /** @type {Array<import(\"../Feature.js\").default>} */\n    let features = null;\n    if (geoJSONObject['type'] === 'FeatureCollection') {\n      const geoJSONFeatureCollection = /** @type {GeoJSONFeatureCollection} */ (\n        object\n      );\n      features = [];\n      const geoJSONFeatures = geoJSONFeatureCollection['features'];\n      for (let i = 0, ii = geoJSONFeatures.length; i < ii; ++i) {\n        features.push(this.readFeatureFromObject(geoJSONFeatures[i], options));\n      }\n    } else {\n      features = [this.readFeatureFromObject(object, options)];\n    }\n    return features;\n  }\n\n  /**\n   * @param {GeoJSONGeometry} object Object.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n   * @protected\n   * @return {import(\"../geom/Geometry.js\").default} Geometry.\n   */\n  readGeometryFromObject(object, options) {\n    return readGeometry(object, options);\n  }\n\n  /**\n   * @param {Object} object Object.\n   * @protected\n   * @return {import(\"../proj/Projection.js\").default} Projection.\n   */\n  readProjectionFromObject(object) {\n    const crs = object['crs'];\n    let projection;\n    if (crs) {\n      if (crs['type'] == 'name') {\n        projection = getProjection(crs['properties']['name']);\n      } else if (crs['type'] === 'EPSG') {\n        projection = getProjection('EPSG:' + crs['properties']['code']);\n      } else {\n        assert(false, 36); // Unknown SRS type\n      }\n    } else {\n      projection = this.dataProjection;\n    }\n    return /** @type {import(\"../proj/Projection.js\").default} */ (projection);\n  }\n\n  /**\n   * Encode a feature as a GeoJSON Feature object.\n   *\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n   * @return {GeoJSONFeature} Object.\n   * @api\n   */\n  writeFeatureObject(feature, options) {\n    options = this.adaptOptions(options);\n\n    /** @type {GeoJSONFeature} */\n    const object = {\n      'type': 'Feature',\n      geometry: null,\n      properties: null,\n    };\n\n    const id = feature.getId();\n    if (id !== undefined) {\n      object.id = id;\n    }\n\n    if (!feature.hasProperties()) {\n      return object;\n    }\n\n    const properties = feature.getProperties();\n    const geometry = feature.getGeometry();\n    if (geometry) {\n      object.geometry = writeGeometry(geometry, options);\n\n      delete properties[feature.getGeometryName()];\n    }\n\n    if (!isEmpty(properties)) {\n      object.properties = properties;\n    }\n\n    return object;\n  }\n\n  /**\n   * Encode an array of features as a GeoJSON object.\n   *\n   * @param {Array<import(\"../Feature.js\").default>} features Features.\n   * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n   * @return {GeoJSONFeatureCollection} GeoJSON Object.\n   * @api\n   */\n  writeFeaturesObject(features, options) {\n    options = this.adaptOptions(options);\n    const objects = [];\n    for (let i = 0, ii = features.length; i < ii; ++i) {\n      objects.push(this.writeFeatureObject(features[i], options));\n    }\n    return {\n      type: 'FeatureCollection',\n      features: objects,\n    };\n  }\n\n  /**\n   * Encode a geometry as a GeoJSON object.\n   *\n   * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n   * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n   * @return {GeoJSONGeometry|GeoJSONGeometryCollection} Object.\n   * @api\n   */\n  writeGeometryObject(geometry, options) {\n    return writeGeometry(geometry, this.adaptOptions(options));\n  }\n}\n\n/**\n * @param {GeoJSONGeometry|GeoJSONGeometryCollection} object Object.\n * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n * @return {import(\"../geom/Geometry.js\").default} Geometry.\n */\nfunction readGeometry(object, options) {\n  if (!object) {\n    return null;\n  }\n\n  /**\n   * @type {import(\"../geom/Geometry.js\").default}\n   */\n  let geometry;\n  switch (object['type']) {\n    case 'Point': {\n      geometry = readPointGeometry(/** @type {GeoJSONPoint} */ (object));\n      break;\n    }\n    case 'LineString': {\n      geometry = readLineStringGeometry(\n        /** @type {GeoJSONLineString} */ (object)\n      );\n      break;\n    }\n    case 'Polygon': {\n      geometry = readPolygonGeometry(/** @type {GeoJSONPolygon} */ (object));\n      break;\n    }\n    case 'MultiPoint': {\n      geometry = readMultiPointGeometry(\n        /** @type {GeoJSONMultiPoint} */ (object)\n      );\n      break;\n    }\n    case 'MultiLineString': {\n      geometry = readMultiLineStringGeometry(\n        /** @type {GeoJSONMultiLineString} */ (object)\n      );\n      break;\n    }\n    case 'MultiPolygon': {\n      geometry = readMultiPolygonGeometry(\n        /** @type {GeoJSONMultiPolygon} */ (object)\n      );\n      break;\n    }\n    case 'GeometryCollection': {\n      geometry = readGeometryCollectionGeometry(\n        /** @type {GeoJSONGeometryCollection} */ (object)\n      );\n      break;\n    }\n    default: {\n      throw new Error('Unsupported GeoJSON type: ' + object['type']);\n    }\n  }\n  return transformGeometryWithOptions(geometry, false, options);\n}\n\n/**\n * @param {GeoJSONGeometryCollection} object Object.\n * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n * @return {GeometryCollection} Geometry collection.\n */\nfunction readGeometryCollectionGeometry(object, options) {\n  const geometries = object['geometries'].map(\n    /**\n     * @param {GeoJSONGeometry} geometry Geometry.\n     * @return {import(\"../geom/Geometry.js\").default} geometry Geometry.\n     */\n    function (geometry) {\n      return readGeometry(geometry, options);\n    }\n  );\n  return new GeometryCollection(geometries);\n}\n\n/**\n * @param {GeoJSONPoint} object Object.\n * @return {Point} Point.\n */\nfunction readPointGeometry(object) {\n  return new Point(object['coordinates']);\n}\n\n/**\n * @param {GeoJSONLineString} object Object.\n * @return {LineString} LineString.\n */\nfunction readLineStringGeometry(object) {\n  return new LineString(object['coordinates']);\n}\n\n/**\n * @param {GeoJSONMultiLineString} object Object.\n * @return {MultiLineString} MultiLineString.\n */\nfunction readMultiLineStringGeometry(object) {\n  return new MultiLineString(object['coordinates']);\n}\n\n/**\n * @param {GeoJSONMultiPoint} object Object.\n * @return {MultiPoint} MultiPoint.\n */\nfunction readMultiPointGeometry(object) {\n  return new MultiPoint(object['coordinates']);\n}\n\n/**\n * @param {GeoJSONMultiPolygon} object Object.\n * @return {MultiPolygon} MultiPolygon.\n */\nfunction readMultiPolygonGeometry(object) {\n  return new MultiPolygon(object['coordinates']);\n}\n\n/**\n * @param {GeoJSONPolygon} object Object.\n * @return {Polygon} Polygon.\n */\nfunction readPolygonGeometry(object) {\n  return new Polygon(object['coordinates']);\n}\n\n/**\n * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n * @return {GeoJSONGeometry} GeoJSON geometry.\n */\nfunction writeGeometry(geometry, options) {\n  geometry = transformGeometryWithOptions(geometry, true, options);\n  const type = geometry.getType();\n\n  /** @type {GeoJSONGeometry} */\n  let geoJSON;\n  switch (type) {\n    case 'Point': {\n      geoJSON = writePointGeometry(/** @type {Point} */ (geometry), options);\n      break;\n    }\n    case 'LineString': {\n      geoJSON = writeLineStringGeometry(\n        /** @type {LineString} */ (geometry),\n        options\n      );\n      break;\n    }\n    case 'Polygon': {\n      geoJSON = writePolygonGeometry(\n        /** @type {Polygon} */ (geometry),\n        options\n      );\n      break;\n    }\n    case 'MultiPoint': {\n      geoJSON = writeMultiPointGeometry(\n        /** @type {MultiPoint} */ (geometry),\n        options\n      );\n      break;\n    }\n    case 'MultiLineString': {\n      geoJSON = writeMultiLineStringGeometry(\n        /** @type {MultiLineString} */ (geometry),\n        options\n      );\n      break;\n    }\n    case 'MultiPolygon': {\n      geoJSON = writeMultiPolygonGeometry(\n        /** @type {MultiPolygon} */ (geometry),\n        options\n      );\n      break;\n    }\n    case 'GeometryCollection': {\n      geoJSON = writeGeometryCollectionGeometry(\n        /** @type {GeometryCollection} */ (geometry),\n        options\n      );\n      break;\n    }\n    case 'Circle': {\n      geoJSON = {\n        type: 'GeometryCollection',\n        geometries: [],\n      };\n      break;\n    }\n    default: {\n      throw new Error('Unsupported geometry type: ' + type);\n    }\n  }\n  return geoJSON;\n}\n\n/**\n * @param {GeometryCollection} geometry Geometry.\n * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n * @return {GeoJSONGeometryCollection} GeoJSON geometry collection.\n */\nfunction writeGeometryCollectionGeometry(geometry, options) {\n  options = Object.assign({}, options);\n  delete options.featureProjection;\n  const geometries = geometry.getGeometriesArray().map(function (geometry) {\n    return writeGeometry(geometry, options);\n  });\n  return {\n    type: 'GeometryCollection',\n    geometries: geometries,\n  };\n}\n\n/**\n * @param {LineString} geometry Geometry.\n * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n * @return {GeoJSONGeometry} GeoJSON geometry.\n */\nfunction writeLineStringGeometry(geometry, options) {\n  return {\n    type: 'LineString',\n    coordinates: geometry.getCoordinates(),\n  };\n}\n\n/**\n * @param {MultiLineString} geometry Geometry.\n * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n * @return {GeoJSONGeometry} GeoJSON geometry.\n */\nfunction writeMultiLineStringGeometry(geometry, options) {\n  return {\n    type: 'MultiLineString',\n    coordinates: geometry.getCoordinates(),\n  };\n}\n\n/**\n * @param {MultiPoint} geometry Geometry.\n * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n * @return {GeoJSONGeometry} GeoJSON geometry.\n */\nfunction writeMultiPointGeometry(geometry, options) {\n  return {\n    type: 'MultiPoint',\n    coordinates: geometry.getCoordinates(),\n  };\n}\n\n/**\n * @param {MultiPolygon} geometry Geometry.\n * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n * @return {GeoJSONGeometry} GeoJSON geometry.\n */\nfunction writeMultiPolygonGeometry(geometry, options) {\n  let right;\n  if (options) {\n    right = options.rightHanded;\n  }\n  return {\n    type: 'MultiPolygon',\n    coordinates: geometry.getCoordinates(right),\n  };\n}\n\n/**\n * @param {Point} geometry Geometry.\n * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n * @return {GeoJSONGeometry} GeoJSON geometry.\n */\nfunction writePointGeometry(geometry, options) {\n  return {\n    type: 'Point',\n    coordinates: geometry.getCoordinates(),\n  };\n}\n\n/**\n * @param {Polygon} geometry Geometry.\n * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n * @return {GeoJSONGeometry} GeoJSON geometry.\n */\nfunction writePolygonGeometry(geometry, options) {\n  let right;\n  if (options) {\n    right = options.rightHanded;\n  }\n  return {\n    type: 'Polygon',\n    coordinates: geometry.getCoordinates(right),\n  };\n}\n\nexport default GeoJSON;\n","/**\n * @module ol/functions\n */\n\nimport {equals as arrayEquals} from './array.js';\n\n/**\n * Always returns true.\n * @return {boolean} true.\n */\nexport function TRUE() {\n  return true;\n}\n\n/**\n * Always returns false.\n * @return {boolean} false.\n */\nexport function FALSE() {\n  return false;\n}\n\n/**\n * A reusable function, used e.g. as a default for callbacks.\n *\n * @return {void} Nothing.\n */\nexport function VOID() {}\n\n/**\n * Wrap a function in another function that remembers the last return.  If the\n * returned function is called twice in a row with the same arguments and the same\n * this object, it will return the value from the first call in the second call.\n *\n * @param {function(...any): ReturnType} fn The function to memoize.\n * @return {function(...any): ReturnType} The memoized function.\n * @template ReturnType\n */\nexport function memoizeOne(fn) {\n  let called = false;\n\n  /** @type {ReturnType} */\n  let lastResult;\n\n  /** @type {Array<any>} */\n  let lastArgs;\n\n  let lastThis;\n\n  return function () {\n    const nextArgs = Array.prototype.slice.call(arguments);\n    if (!called || this !== lastThis || !arrayEquals(nextArgs, lastArgs)) {\n      called = true;\n      lastThis = this;\n      lastArgs = nextArgs;\n      lastResult = fn.apply(this, arguments);\n    }\n    return lastResult;\n  };\n}\n\n/**\n * @template T\n * @param {function(): (T | Promise<T>)} getter A function that returns a value or a promise for a value.\n * @return {Promise<T>} A promise for the value.\n */\nexport function toPromise(getter) {\n  function promiseGetter() {\n    let value;\n    try {\n      value = getter();\n    } catch (err) {\n      return Promise.reject(err);\n    }\n    if (value instanceof Promise) {\n      return value;\n    }\n    return Promise.resolve(value);\n  }\n  return promiseGetter();\n}\n","/**\n * @module ol/geom/Geometry\n */\nimport BaseObject from '../Object.js';\nimport {abstract} from '../util.js';\nimport {\n  compose as composeTransform,\n  create as createTransform,\n} from '../transform.js';\nimport {\n  createEmpty,\n  createOrUpdateEmpty,\n  getHeight,\n  returnOrUpdate,\n} from '../extent.js';\nimport {get as getProjection, getTransform} from '../proj.js';\nimport {memoizeOne} from '../functions.js';\nimport {transform2D} from './flat/transform.js';\n\n/**\n * @typedef {'XY' | 'XYZ' | 'XYM' | 'XYZM'} GeometryLayout\n * The coordinate layout for geometries, indicating whether a 3rd or 4th z ('Z')\n * or measure ('M') coordinate is available.\n */\n\n/**\n * @typedef {'Point' | 'LineString' | 'LinearRing' | 'Polygon' | 'MultiPoint' | 'MultiLineString' | 'MultiPolygon' | 'GeometryCollection' | 'Circle'} Type\n * The geometry type.  One of `'Point'`, `'LineString'`, `'LinearRing'`,\n * `'Polygon'`, `'MultiPoint'`, `'MultiLineString'`, `'MultiPolygon'`,\n * `'GeometryCollection'`, or `'Circle'`.\n */\n\n/**\n * @type {import(\"../transform.js\").Transform}\n */\nconst tmpTransform = createTransform();\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for vector geometries.\n *\n * To get notified of changes to the geometry, register a listener for the\n * generic `change` event on your geometry instance.\n *\n * @abstract\n * @api\n */\nclass Geometry extends BaseObject {\n  constructor() {\n    super();\n\n    /**\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.extent_ = createEmpty();\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.extentRevision_ = -1;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.simplifiedGeometryMaxMinSquaredTolerance = 0;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.simplifiedGeometryRevision = 0;\n\n    /**\n     * Get a transformed and simplified version of the geometry.\n     * @abstract\n     * @param {number} revision The geometry revision.\n     * @param {number} squaredTolerance Squared tolerance.\n     * @param {import(\"../proj.js\").TransformFunction} [transform] Optional transform function.\n     * @return {Geometry} Simplified geometry.\n     */\n    this.simplifyTransformedInternal = memoizeOne(function (\n      revision,\n      squaredTolerance,\n      transform\n    ) {\n      if (!transform) {\n        return this.getSimplifiedGeometry(squaredTolerance);\n      }\n      const clone = this.clone();\n      clone.applyTransform(transform);\n      return clone.getSimplifiedGeometry(squaredTolerance);\n    });\n  }\n\n  /**\n   * Get a transformed and simplified version of the geometry.\n   * @abstract\n   * @param {number} squaredTolerance Squared tolerance.\n   * @param {import(\"../proj.js\").TransformFunction} [transform] Optional transform function.\n   * @return {Geometry} Simplified geometry.\n   */\n  simplifyTransformed(squaredTolerance, transform) {\n    return this.simplifyTransformedInternal(\n      this.getRevision(),\n      squaredTolerance,\n      transform\n    );\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @abstract\n   * @return {!Geometry} Clone.\n   */\n  clone() {\n    return abstract();\n  }\n\n  /**\n   * @abstract\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    return abstract();\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @return {boolean} Contains (x, y).\n   */\n  containsXY(x, y) {\n    const coord = this.getClosestPoint([x, y]);\n    return coord[0] === x && coord[1] === y;\n  }\n\n  /**\n   * Return the closest point of the geometry to the passed point as\n   * {@link module:ol/coordinate~Coordinate coordinate}.\n   * @param {import(\"../coordinate.js\").Coordinate} point Point.\n   * @param {import(\"../coordinate.js\").Coordinate} [closestPoint] Closest point.\n   * @return {import(\"../coordinate.js\").Coordinate} Closest point.\n   * @api\n   */\n  getClosestPoint(point, closestPoint) {\n    closestPoint = closestPoint ? closestPoint : [NaN, NaN];\n    this.closestPointXY(point[0], point[1], closestPoint, Infinity);\n    return closestPoint;\n  }\n\n  /**\n   * Returns true if this geometry includes the specified coordinate. If the\n   * coordinate is on the boundary of the geometry, returns false.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @return {boolean} Contains coordinate.\n   * @api\n   */\n  intersectsCoordinate(coordinate) {\n    return this.containsXY(coordinate[0], coordinate[1]);\n  }\n\n  /**\n   * @abstract\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @protected\n   * @return {import(\"../extent.js\").Extent} extent Extent.\n   */\n  computeExtent(extent) {\n    return abstract();\n  }\n\n  /**\n   * Get the extent of the geometry.\n   * @param {import(\"../extent.js\").Extent} [extent] Extent.\n   * @return {import(\"../extent.js\").Extent} extent Extent.\n   * @api\n   */\n  getExtent(extent) {\n    if (this.extentRevision_ != this.getRevision()) {\n      const extent = this.computeExtent(this.extent_);\n      if (isNaN(extent[0]) || isNaN(extent[1])) {\n        createOrUpdateEmpty(extent);\n      }\n      this.extentRevision_ = this.getRevision();\n    }\n    return returnOrUpdate(this.extent_, extent);\n  }\n\n  /**\n   * Rotate the geometry around a given coordinate. This modifies the geometry\n   * coordinates in place.\n   * @abstract\n   * @param {number} angle Rotation angle in radians.\n   * @param {import(\"../coordinate.js\").Coordinate} anchor The rotation center.\n   * @api\n   */\n  rotate(angle, anchor) {\n    abstract();\n  }\n\n  /**\n   * Scale the geometry (with an optional origin).  This modifies the geometry\n   * coordinates in place.\n   * @abstract\n   * @param {number} sx The scaling factor in the x-direction.\n   * @param {number} [sy] The scaling factor in the y-direction (defaults to sx).\n   * @param {import(\"../coordinate.js\").Coordinate} [anchor] The scale origin (defaults to the center\n   *     of the geometry extent).\n   * @api\n   */\n  scale(sx, sy, anchor) {\n    abstract();\n  }\n\n  /**\n   * Create a simplified version of this geometry.  For linestrings, this uses\n   * the [Douglas Peucker](https://en.wikipedia.org/wiki/Ramer-Douglas-Peucker_algorithm)\n   * algorithm.  For polygons, a quantization-based\n   * simplification is used to preserve topology.\n   * @param {number} tolerance The tolerance distance for simplification.\n   * @return {Geometry} A new, simplified version of the original geometry.\n   * @api\n   */\n  simplify(tolerance) {\n    return this.getSimplifiedGeometry(tolerance * tolerance);\n  }\n\n  /**\n   * Create a simplified version of this geometry using the Douglas Peucker\n   * algorithm.\n   * See https://en.wikipedia.org/wiki/Ramer-Douglas-Peucker_algorithm.\n   * @abstract\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {Geometry} Simplified geometry.\n   */\n  getSimplifiedGeometry(squaredTolerance) {\n    return abstract();\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @abstract\n   * @return {Type} Geometry type.\n   */\n  getType() {\n    return abstract();\n  }\n\n  /**\n   * Apply a transform function to the coordinates of the geometry.\n   * The geometry is modified in place.\n   * If you do not want the geometry modified in place, first `clone()` it and\n   * then use this function on the clone.\n   * @abstract\n   * @param {import(\"../proj.js\").TransformFunction} transformFn Transform function.\n   * Called with a flat array of geometry coordinates.\n   */\n  applyTransform(transformFn) {\n    abstract();\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @abstract\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   */\n  intersectsExtent(extent) {\n    return abstract();\n  }\n\n  /**\n   * Translate the geometry.  This modifies the geometry coordinates in place.  If\n   * instead you want a new geometry, first `clone()` this geometry.\n   * @abstract\n   * @param {number} deltaX Delta X.\n   * @param {number} deltaY Delta Y.\n   * @api\n   */\n  translate(deltaX, deltaY) {\n    abstract();\n  }\n\n  /**\n   * Transform each coordinate of the geometry from one coordinate reference\n   * system to another. The geometry is modified in place.\n   * For example, a line will be transformed to a line and a circle to a circle.\n   * If you do not want the geometry modified in place, first `clone()` it and\n   * then use this function on the clone.\n   *\n   * @param {import(\"../proj.js\").ProjectionLike} source The current projection.  Can be a\n   *     string identifier or a {@link module:ol/proj/Projection~Projection} object.\n   * @param {import(\"../proj.js\").ProjectionLike} destination The desired projection.  Can be a\n   *     string identifier or a {@link module:ol/proj/Projection~Projection} object.\n   * @return {Geometry} This geometry.  Note that original geometry is\n   *     modified in place.\n   * @api\n   */\n  transform(source, destination) {\n    /** @type {import(\"../proj/Projection.js\").default} */\n    const sourceProj = getProjection(source);\n    const transformFn =\n      sourceProj.getUnits() == 'tile-pixels'\n        ? function (inCoordinates, outCoordinates, stride) {\n            const pixelExtent = sourceProj.getExtent();\n            const projectedExtent = sourceProj.getWorldExtent();\n            const scale = getHeight(projectedExtent) / getHeight(pixelExtent);\n            composeTransform(\n              tmpTransform,\n              projectedExtent[0],\n              projectedExtent[3],\n              scale,\n              -scale,\n              0,\n              0,\n              0\n            );\n            transform2D(\n              inCoordinates,\n              0,\n              inCoordinates.length,\n              stride,\n              tmpTransform,\n              outCoordinates\n            );\n            return getTransform(sourceProj, destination)(\n              inCoordinates,\n              outCoordinates,\n              stride\n            );\n          }\n        : getTransform(sourceProj, destination);\n    this.applyTransform(transformFn);\n    return this;\n  }\n}\n\nexport default Geometry;\n","/**\n * @module ol/geom/LineString\n */\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {assignClosestPoint, maxSquaredDelta} from './flat/closest.js';\nimport {closestSquaredDistanceXY} from '../extent.js';\nimport {deflateCoordinates} from './flat/deflate.js';\nimport {douglasPeucker} from './flat/simplify.js';\nimport {extend} from '../array.js';\nimport {forEach as forEachSegment} from './flat/segments.js';\nimport {inflateCoordinates} from './flat/inflate.js';\nimport {interpolatePoint, lineStringCoordinateAtM} from './flat/interpolate.js';\nimport {intersectsLineString} from './flat/intersectsextent.js';\nimport {lineStringLength} from './flat/length.js';\n\n/**\n * @classdesc\n * Linestring geometry.\n *\n * @api\n */\nclass LineString extends SimpleGeometry {\n  /**\n   * @param {Array<import(\"../coordinate.js\").Coordinate>|Array<number>} coordinates Coordinates.\n   *     For internal use, flat coordinates in combination with `layout` are also accepted.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   */\n  constructor(coordinates, layout) {\n    super();\n\n    /**\n     * @private\n     * @type {import(\"../coordinate.js\").Coordinate}\n     */\n    this.flatMidpoint_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.flatMidpointRevision_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDeltaRevision_ = -1;\n\n    if (layout !== undefined && !Array.isArray(coordinates[0])) {\n      this.setFlatCoordinates(\n        layout,\n        /** @type {Array<number>} */ (coordinates)\n      );\n    } else {\n      this.setCoordinates(\n        /** @type {Array<import(\"../coordinate.js\").Coordinate>} */ (\n          coordinates\n        ),\n        layout\n      );\n    }\n  }\n\n  /**\n   * Append the passed coordinate to the coordinates of the linestring.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @api\n   */\n  appendCoordinate(coordinate) {\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = coordinate.slice();\n    } else {\n      extend(this.flatCoordinates, coordinate);\n    }\n    this.changed();\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!LineString} Clone.\n   * @api\n   */\n  clone() {\n    const lineString = new LineString(\n      this.flatCoordinates.slice(),\n      this.layout\n    );\n    lineString.applyProperties(this);\n    return lineString;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    if (this.maxDeltaRevision_ != this.getRevision()) {\n      this.maxDelta_ = Math.sqrt(\n        maxSquaredDelta(\n          this.flatCoordinates,\n          0,\n          this.flatCoordinates.length,\n          this.stride,\n          0\n        )\n      );\n      this.maxDeltaRevision_ = this.getRevision();\n    }\n    return assignClosestPoint(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      this.maxDelta_,\n      false,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance\n    );\n  }\n\n  /**\n   * Iterate over each segment, calling the provided callback.\n   * If the callback returns a truthy value the function returns that\n   * value immediately. Otherwise the function returns `false`.\n   *\n   * @param {function(this: S, import(\"../coordinate.js\").Coordinate, import(\"../coordinate.js\").Coordinate): T} callback Function\n   *     called for each segment. The function will receive two arguments, the start and end coordinates of the segment.\n   * @return {T|boolean} Value.\n   * @template T,S\n   * @api\n   */\n  forEachSegment(callback) {\n    return forEachSegment(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      callback\n    );\n  }\n\n  /**\n   * Returns the coordinate at `m` using linear interpolation, or `null` if no\n   * such coordinate exists.\n   *\n   * `extrapolate` controls extrapolation beyond the range of Ms in the\n   * MultiLineString. If `extrapolate` is `true` then Ms less than the first\n   * M will return the first coordinate and Ms greater than the last M will\n   * return the last coordinate.\n   *\n   * @param {number} m M.\n   * @param {boolean} [extrapolate] Extrapolate. Default is `false`.\n   * @return {import(\"../coordinate.js\").Coordinate|null} Coordinate.\n   * @api\n   */\n  getCoordinateAtM(m, extrapolate) {\n    if (this.layout != 'XYM' && this.layout != 'XYZM') {\n      return null;\n    }\n    extrapolate = extrapolate !== undefined ? extrapolate : false;\n    return lineStringCoordinateAtM(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      m,\n      extrapolate\n    );\n  }\n\n  /**\n   * Return the coordinates of the linestring.\n   * @return {Array<import(\"../coordinate.js\").Coordinate>} Coordinates.\n   * @api\n   */\n  getCoordinates() {\n    return inflateCoordinates(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride\n    );\n  }\n\n  /**\n   * Return the coordinate at the provided fraction along the linestring.\n   * The `fraction` is a number between 0 and 1, where 0 is the start of the\n   * linestring and 1 is the end.\n   * @param {number} fraction Fraction.\n   * @param {import(\"../coordinate.js\").Coordinate} [dest] Optional coordinate whose values will\n   *     be modified. If not provided, a new coordinate will be returned.\n   * @return {import(\"../coordinate.js\").Coordinate} Coordinate of the interpolated point.\n   * @api\n   */\n  getCoordinateAt(fraction, dest) {\n    return interpolatePoint(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      fraction,\n      dest,\n      this.stride\n    );\n  }\n\n  /**\n   * Return the length of the linestring on projected plane.\n   * @return {number} Length (on projected plane).\n   * @api\n   */\n  getLength() {\n    return lineStringLength(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride\n    );\n  }\n\n  /**\n   * @return {Array<number>} Flat midpoint.\n   */\n  getFlatMidpoint() {\n    if (this.flatMidpointRevision_ != this.getRevision()) {\n      this.flatMidpoint_ = this.getCoordinateAt(0.5, this.flatMidpoint_);\n      this.flatMidpointRevision_ = this.getRevision();\n    }\n    return this.flatMidpoint_;\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {LineString} Simplified LineString.\n   * @protected\n   */\n  getSimplifiedGeometryInternal(squaredTolerance) {\n    const simplifiedFlatCoordinates = [];\n    simplifiedFlatCoordinates.length = douglasPeucker(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      squaredTolerance,\n      simplifiedFlatCoordinates,\n      0\n    );\n    return new LineString(simplifiedFlatCoordinates, 'XY');\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./Geometry.js\").Type} Geometry type.\n   * @api\n   */\n  getType() {\n    return 'LineString';\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   */\n  intersectsExtent(extent) {\n    return intersectsLineString(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      extent\n    );\n  }\n\n  /**\n   * Set the coordinates of the linestring.\n   * @param {!Array<import(\"../coordinate.js\").Coordinate>} coordinates Coordinates.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @api\n   */\n  setCoordinates(coordinates, layout) {\n    this.setLayout(layout, coordinates, 1);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    this.flatCoordinates.length = deflateCoordinates(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride\n    );\n    this.changed();\n  }\n}\n\nexport default LineString;\n","/**\n * @module ol/geom/MultiLineString\n */\nimport LineString from './LineString.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {arrayMaxSquaredDelta, assignClosestArrayPoint} from './flat/closest.js';\nimport {closestSquaredDistanceXY} from '../extent.js';\nimport {deflateCoordinatesArray} from './flat/deflate.js';\nimport {douglasPeuckerArray} from './flat/simplify.js';\nimport {extend} from '../array.js';\nimport {inflateCoordinatesArray} from './flat/inflate.js';\nimport {\n  interpolatePoint,\n  lineStringsCoordinateAtM,\n} from './flat/interpolate.js';\nimport {intersectsLineStringArray} from './flat/intersectsextent.js';\n\n/**\n * @classdesc\n * Multi-linestring geometry.\n *\n * @api\n */\nclass MultiLineString extends SimpleGeometry {\n  /**\n   * @param {Array<Array<import(\"../coordinate.js\").Coordinate>|LineString>|Array<number>} coordinates\n   *     Coordinates or LineString geometries. (For internal use, flat coordinates in\n   *     combination with `layout` and `ends` are also accepted.)\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @param {Array<number>} [ends] Flat coordinate ends for internal use.\n   */\n  constructor(coordinates, layout, ends) {\n    super();\n\n    /**\n     * @type {Array<number>}\n     * @private\n     */\n    this.ends_ = [];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDeltaRevision_ = -1;\n\n    if (Array.isArray(coordinates[0])) {\n      this.setCoordinates(\n        /** @type {Array<Array<import(\"../coordinate.js\").Coordinate>>} */ (\n          coordinates\n        ),\n        layout\n      );\n    } else if (layout !== undefined && ends) {\n      this.setFlatCoordinates(\n        layout,\n        /** @type {Array<number>} */ (coordinates)\n      );\n      this.ends_ = ends;\n    } else {\n      let layout = this.getLayout();\n      const lineStrings = /** @type {Array<LineString>} */ (coordinates);\n      const flatCoordinates = [];\n      const ends = [];\n      for (let i = 0, ii = lineStrings.length; i < ii; ++i) {\n        const lineString = lineStrings[i];\n        if (i === 0) {\n          layout = lineString.getLayout();\n        }\n        extend(flatCoordinates, lineString.getFlatCoordinates());\n        ends.push(flatCoordinates.length);\n      }\n      this.setFlatCoordinates(layout, flatCoordinates);\n      this.ends_ = ends;\n    }\n  }\n\n  /**\n   * Append the passed linestring to the multilinestring.\n   * @param {LineString} lineString LineString.\n   * @api\n   */\n  appendLineString(lineString) {\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = lineString.getFlatCoordinates().slice();\n    } else {\n      extend(this.flatCoordinates, lineString.getFlatCoordinates().slice());\n    }\n    this.ends_.push(this.flatCoordinates.length);\n    this.changed();\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!MultiLineString} Clone.\n   * @api\n   */\n  clone() {\n    const multiLineString = new MultiLineString(\n      this.flatCoordinates.slice(),\n      this.layout,\n      this.ends_.slice()\n    );\n    multiLineString.applyProperties(this);\n    return multiLineString;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    if (this.maxDeltaRevision_ != this.getRevision()) {\n      this.maxDelta_ = Math.sqrt(\n        arrayMaxSquaredDelta(\n          this.flatCoordinates,\n          0,\n          this.ends_,\n          this.stride,\n          0\n        )\n      );\n      this.maxDeltaRevision_ = this.getRevision();\n    }\n    return assignClosestArrayPoint(\n      this.flatCoordinates,\n      0,\n      this.ends_,\n      this.stride,\n      this.maxDelta_,\n      false,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance\n    );\n  }\n\n  /**\n   * Returns the coordinate at `m` using linear interpolation, or `null` if no\n   * such coordinate exists.\n   *\n   * `extrapolate` controls extrapolation beyond the range of Ms in the\n   * MultiLineString. If `extrapolate` is `true` then Ms less than the first\n   * M will return the first coordinate and Ms greater than the last M will\n   * return the last coordinate.\n   *\n   * `interpolate` controls interpolation between consecutive LineStrings\n   * within the MultiLineString. If `interpolate` is `true` the coordinates\n   * will be linearly interpolated between the last coordinate of one LineString\n   * and the first coordinate of the next LineString.  If `interpolate` is\n   * `false` then the function will return `null` for Ms falling between\n   * LineStrings.\n   *\n   * @param {number} m M.\n   * @param {boolean} [extrapolate] Extrapolate. Default is `false`.\n   * @param {boolean} [interpolate] Interpolate. Default is `false`.\n   * @return {import(\"../coordinate.js\").Coordinate|null} Coordinate.\n   * @api\n   */\n  getCoordinateAtM(m, extrapolate, interpolate) {\n    if (\n      (this.layout != 'XYM' && this.layout != 'XYZM') ||\n      this.flatCoordinates.length === 0\n    ) {\n      return null;\n    }\n    extrapolate = extrapolate !== undefined ? extrapolate : false;\n    interpolate = interpolate !== undefined ? interpolate : false;\n    return lineStringsCoordinateAtM(\n      this.flatCoordinates,\n      0,\n      this.ends_,\n      this.stride,\n      m,\n      extrapolate,\n      interpolate\n    );\n  }\n\n  /**\n   * Return the coordinates of the multilinestring.\n   * @return {Array<Array<import(\"../coordinate.js\").Coordinate>>} Coordinates.\n   * @api\n   */\n  getCoordinates() {\n    return inflateCoordinatesArray(\n      this.flatCoordinates,\n      0,\n      this.ends_,\n      this.stride\n    );\n  }\n\n  /**\n   * @return {Array<number>} Ends.\n   */\n  getEnds() {\n    return this.ends_;\n  }\n\n  /**\n   * Return the linestring at the specified index.\n   * @param {number} index Index.\n   * @return {LineString} LineString.\n   * @api\n   */\n  getLineString(index) {\n    if (index < 0 || this.ends_.length <= index) {\n      return null;\n    }\n    return new LineString(\n      this.flatCoordinates.slice(\n        index === 0 ? 0 : this.ends_[index - 1],\n        this.ends_[index]\n      ),\n      this.layout\n    );\n  }\n\n  /**\n   * Return the linestrings of this multilinestring.\n   * @return {Array<LineString>} LineStrings.\n   * @api\n   */\n  getLineStrings() {\n    const flatCoordinates = this.flatCoordinates;\n    const ends = this.ends_;\n    const layout = this.layout;\n    /** @type {Array<LineString>} */\n    const lineStrings = [];\n    let offset = 0;\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\n      const end = ends[i];\n      const lineString = new LineString(\n        flatCoordinates.slice(offset, end),\n        layout\n      );\n      lineStrings.push(lineString);\n      offset = end;\n    }\n    return lineStrings;\n  }\n\n  /**\n   * @return {Array<number>} Flat midpoints.\n   */\n  getFlatMidpoints() {\n    const midpoints = [];\n    const flatCoordinates = this.flatCoordinates;\n    let offset = 0;\n    const ends = this.ends_;\n    const stride = this.stride;\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\n      const end = ends[i];\n      const midpoint = interpolatePoint(\n        flatCoordinates,\n        offset,\n        end,\n        stride,\n        0.5\n      );\n      extend(midpoints, midpoint);\n      offset = end;\n    }\n    return midpoints;\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {MultiLineString} Simplified MultiLineString.\n   * @protected\n   */\n  getSimplifiedGeometryInternal(squaredTolerance) {\n    const simplifiedFlatCoordinates = [];\n    const simplifiedEnds = [];\n    simplifiedFlatCoordinates.length = douglasPeuckerArray(\n      this.flatCoordinates,\n      0,\n      this.ends_,\n      this.stride,\n      squaredTolerance,\n      simplifiedFlatCoordinates,\n      0,\n      simplifiedEnds\n    );\n    return new MultiLineString(simplifiedFlatCoordinates, 'XY', simplifiedEnds);\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./Geometry.js\").Type} Geometry type.\n   * @api\n   */\n  getType() {\n    return 'MultiLineString';\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   */\n  intersectsExtent(extent) {\n    return intersectsLineStringArray(\n      this.flatCoordinates,\n      0,\n      this.ends_,\n      this.stride,\n      extent\n    );\n  }\n\n  /**\n   * Set the coordinates of the multilinestring.\n   * @param {!Array<Array<import(\"../coordinate.js\").Coordinate>>} coordinates Coordinates.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @api\n   */\n  setCoordinates(coordinates, layout) {\n    this.setLayout(layout, coordinates, 2);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    const ends = deflateCoordinatesArray(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride,\n      this.ends_\n    );\n    this.flatCoordinates.length = ends.length === 0 ? 0 : ends[ends.length - 1];\n    this.changed();\n  }\n}\n\nexport default MultiLineString;\n","/**\n * @module ol/geom/MultiPoint\n */\nimport Point from './Point.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {closestSquaredDistanceXY, containsXY} from '../extent.js';\nimport {deflateCoordinates} from './flat/deflate.js';\nimport {extend} from '../array.js';\nimport {inflateCoordinates} from './flat/inflate.js';\nimport {squaredDistance as squaredDx} from '../math.js';\n\n/**\n * @classdesc\n * Multi-point geometry.\n *\n * @api\n */\nclass MultiPoint extends SimpleGeometry {\n  /**\n   * @param {Array<import(\"../coordinate.js\").Coordinate>|Array<number>} coordinates Coordinates.\n   *     For internal use, flat coordinates in combination with `layout` are also accepted.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   */\n  constructor(coordinates, layout) {\n    super();\n    if (layout && !Array.isArray(coordinates[0])) {\n      this.setFlatCoordinates(\n        layout,\n        /** @type {Array<number>} */ (coordinates)\n      );\n    } else {\n      this.setCoordinates(\n        /** @type {Array<import(\"../coordinate.js\").Coordinate>} */ (\n          coordinates\n        ),\n        layout\n      );\n    }\n  }\n\n  /**\n   * Append the passed point to this multipoint.\n   * @param {Point} point Point.\n   * @api\n   */\n  appendPoint(point) {\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = point.getFlatCoordinates().slice();\n    } else {\n      extend(this.flatCoordinates, point.getFlatCoordinates());\n    }\n    this.changed();\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!MultiPoint} Clone.\n   * @api\n   */\n  clone() {\n    const multiPoint = new MultiPoint(\n      this.flatCoordinates.slice(),\n      this.layout\n    );\n    multiPoint.applyProperties(this);\n    return multiPoint;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    const flatCoordinates = this.flatCoordinates;\n    const stride = this.stride;\n    for (let i = 0, ii = flatCoordinates.length; i < ii; i += stride) {\n      const squaredDistance = squaredDx(\n        x,\n        y,\n        flatCoordinates[i],\n        flatCoordinates[i + 1]\n      );\n      if (squaredDistance < minSquaredDistance) {\n        minSquaredDistance = squaredDistance;\n        for (let j = 0; j < stride; ++j) {\n          closestPoint[j] = flatCoordinates[i + j];\n        }\n        closestPoint.length = stride;\n      }\n    }\n    return minSquaredDistance;\n  }\n\n  /**\n   * Return the coordinates of the multipoint.\n   * @return {Array<import(\"../coordinate.js\").Coordinate>} Coordinates.\n   * @api\n   */\n  getCoordinates() {\n    return inflateCoordinates(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride\n    );\n  }\n\n  /**\n   * Return the point at the specified index.\n   * @param {number} index Index.\n   * @return {Point} Point.\n   * @api\n   */\n  getPoint(index) {\n    const n = !this.flatCoordinates\n      ? 0\n      : this.flatCoordinates.length / this.stride;\n    if (index < 0 || n <= index) {\n      return null;\n    }\n    return new Point(\n      this.flatCoordinates.slice(\n        index * this.stride,\n        (index + 1) * this.stride\n      ),\n      this.layout\n    );\n  }\n\n  /**\n   * Return the points of this multipoint.\n   * @return {Array<Point>} Points.\n   * @api\n   */\n  getPoints() {\n    const flatCoordinates = this.flatCoordinates;\n    const layout = this.layout;\n    const stride = this.stride;\n    /** @type {Array<Point>} */\n    const points = [];\n    for (let i = 0, ii = flatCoordinates.length; i < ii; i += stride) {\n      const point = new Point(flatCoordinates.slice(i, i + stride), layout);\n      points.push(point);\n    }\n    return points;\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./Geometry.js\").Type} Geometry type.\n   * @api\n   */\n  getType() {\n    return 'MultiPoint';\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   */\n  intersectsExtent(extent) {\n    const flatCoordinates = this.flatCoordinates;\n    const stride = this.stride;\n    for (let i = 0, ii = flatCoordinates.length; i < ii; i += stride) {\n      const x = flatCoordinates[i];\n      const y = flatCoordinates[i + 1];\n      if (containsXY(extent, x, y)) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * Set the coordinates of the multipoint.\n   * @param {!Array<import(\"../coordinate.js\").Coordinate>} coordinates Coordinates.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @api\n   */\n  setCoordinates(coordinates, layout) {\n    this.setLayout(layout, coordinates, 1);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    this.flatCoordinates.length = deflateCoordinates(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride\n    );\n    this.changed();\n  }\n}\n\nexport default MultiPoint;\n","/**\n * @module ol/geom/MultiPolygon\n */\nimport MultiPoint from './MultiPoint.js';\nimport Polygon from './Polygon.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {\n  assignClosestMultiArrayPoint,\n  multiArrayMaxSquaredDelta,\n} from './flat/closest.js';\nimport {closestSquaredDistanceXY} from '../extent.js';\nimport {deflateMultiCoordinatesArray} from './flat/deflate.js';\nimport {extend} from '../array.js';\nimport {getInteriorPointsOfMultiArray} from './flat/interiorpoint.js';\nimport {inflateMultiCoordinatesArray} from './flat/inflate.js';\nimport {intersectsLinearRingMultiArray} from './flat/intersectsextent.js';\nimport {\n  linearRingssAreOriented,\n  orientLinearRingsArray,\n} from './flat/orient.js';\nimport {linearRingss as linearRingssArea} from './flat/area.js';\nimport {linearRingss as linearRingssCenter} from './flat/center.js';\nimport {linearRingssContainsXY} from './flat/contains.js';\nimport {quantizeMultiArray} from './flat/simplify.js';\n\n/**\n * @classdesc\n * Multi-polygon geometry.\n *\n * @api\n */\nclass MultiPolygon extends SimpleGeometry {\n  /**\n   * @param {Array<Array<Array<import(\"../coordinate.js\").Coordinate>>|Polygon>|Array<number>} coordinates Coordinates.\n   *     For internal use, flat coordinates in combination with `layout` and `endss` are also accepted.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @param {Array<Array<number>>} [endss] Array of ends for internal use with flat coordinates.\n   */\n  constructor(coordinates, layout, endss) {\n    super();\n\n    /**\n     * @type {Array<Array<number>>}\n     * @private\n     */\n    this.endss_ = [];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.flatInteriorPointsRevision_ = -1;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.flatInteriorPoints_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDeltaRevision_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.orientedRevision_ = -1;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.orientedFlatCoordinates_ = null;\n\n    if (!endss && !Array.isArray(coordinates[0])) {\n      let thisLayout = this.getLayout();\n      const polygons = /** @type {Array<Polygon>} */ (coordinates);\n      const flatCoordinates = [];\n      const thisEndss = [];\n      for (let i = 0, ii = polygons.length; i < ii; ++i) {\n        const polygon = polygons[i];\n        if (i === 0) {\n          thisLayout = polygon.getLayout();\n        }\n        const offset = flatCoordinates.length;\n        const ends = polygon.getEnds();\n        for (let j = 0, jj = ends.length; j < jj; ++j) {\n          ends[j] += offset;\n        }\n        extend(flatCoordinates, polygon.getFlatCoordinates());\n        thisEndss.push(ends);\n      }\n      layout = thisLayout;\n      coordinates = flatCoordinates;\n      endss = thisEndss;\n    }\n    if (layout !== undefined && endss) {\n      this.setFlatCoordinates(\n        layout,\n        /** @type {Array<number>} */ (coordinates)\n      );\n      this.endss_ = endss;\n    } else {\n      this.setCoordinates(\n        /** @type {Array<Array<Array<import(\"../coordinate.js\").Coordinate>>>} */ (\n          coordinates\n        ),\n        layout\n      );\n    }\n  }\n\n  /**\n   * Append the passed polygon to this multipolygon.\n   * @param {Polygon} polygon Polygon.\n   * @api\n   */\n  appendPolygon(polygon) {\n    /** @type {Array<number>} */\n    let ends;\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = polygon.getFlatCoordinates().slice();\n      ends = polygon.getEnds().slice();\n      this.endss_.push();\n    } else {\n      const offset = this.flatCoordinates.length;\n      extend(this.flatCoordinates, polygon.getFlatCoordinates());\n      ends = polygon.getEnds().slice();\n      for (let i = 0, ii = ends.length; i < ii; ++i) {\n        ends[i] += offset;\n      }\n    }\n    this.endss_.push(ends);\n    this.changed();\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!MultiPolygon} Clone.\n   * @api\n   */\n  clone() {\n    const len = this.endss_.length;\n    const newEndss = new Array(len);\n    for (let i = 0; i < len; ++i) {\n      newEndss[i] = this.endss_[i].slice();\n    }\n\n    const multiPolygon = new MultiPolygon(\n      this.flatCoordinates.slice(),\n      this.layout,\n      newEndss\n    );\n    multiPolygon.applyProperties(this);\n\n    return multiPolygon;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    if (this.maxDeltaRevision_ != this.getRevision()) {\n      this.maxDelta_ = Math.sqrt(\n        multiArrayMaxSquaredDelta(\n          this.flatCoordinates,\n          0,\n          this.endss_,\n          this.stride,\n          0\n        )\n      );\n      this.maxDeltaRevision_ = this.getRevision();\n    }\n    return assignClosestMultiArrayPoint(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.endss_,\n      this.stride,\n      this.maxDelta_,\n      true,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance\n    );\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @return {boolean} Contains (x, y).\n   */\n  containsXY(x, y) {\n    return linearRingssContainsXY(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.endss_,\n      this.stride,\n      x,\n      y\n    );\n  }\n\n  /**\n   * Return the area of the multipolygon on projected plane.\n   * @return {number} Area (on projected plane).\n   * @api\n   */\n  getArea() {\n    return linearRingssArea(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.endss_,\n      this.stride\n    );\n  }\n\n  /**\n   * Get the coordinate array for this geometry.  This array has the structure\n   * of a GeoJSON coordinate array for multi-polygons.\n   *\n   * @param {boolean} [right] Orient coordinates according to the right-hand\n   *     rule (counter-clockwise for exterior and clockwise for interior rings).\n   *     If `false`, coordinates will be oriented according to the left-hand rule\n   *     (clockwise for exterior and counter-clockwise for interior rings).\n   *     By default, coordinate orientation will depend on how the geometry was\n   *     constructed.\n   * @return {Array<Array<Array<import(\"../coordinate.js\").Coordinate>>>} Coordinates.\n   * @api\n   */\n  getCoordinates(right) {\n    let flatCoordinates;\n    if (right !== undefined) {\n      flatCoordinates = this.getOrientedFlatCoordinates().slice();\n      orientLinearRingsArray(\n        flatCoordinates,\n        0,\n        this.endss_,\n        this.stride,\n        right\n      );\n    } else {\n      flatCoordinates = this.flatCoordinates;\n    }\n\n    return inflateMultiCoordinatesArray(\n      flatCoordinates,\n      0,\n      this.endss_,\n      this.stride\n    );\n  }\n\n  /**\n   * @return {Array<Array<number>>} Endss.\n   */\n  getEndss() {\n    return this.endss_;\n  }\n\n  /**\n   * @return {Array<number>} Flat interior points.\n   */\n  getFlatInteriorPoints() {\n    if (this.flatInteriorPointsRevision_ != this.getRevision()) {\n      const flatCenters = linearRingssCenter(\n        this.flatCoordinates,\n        0,\n        this.endss_,\n        this.stride\n      );\n      this.flatInteriorPoints_ = getInteriorPointsOfMultiArray(\n        this.getOrientedFlatCoordinates(),\n        0,\n        this.endss_,\n        this.stride,\n        flatCenters\n      );\n      this.flatInteriorPointsRevision_ = this.getRevision();\n    }\n    return this.flatInteriorPoints_;\n  }\n\n  /**\n   * Return the interior points as {@link module:ol/geom/MultiPoint~MultiPoint multipoint}.\n   * @return {MultiPoint} Interior points as XYM coordinates, where M is\n   * the length of the horizontal intersection that the point belongs to.\n   * @api\n   */\n  getInteriorPoints() {\n    return new MultiPoint(this.getFlatInteriorPoints().slice(), 'XYM');\n  }\n\n  /**\n   * @return {Array<number>} Oriented flat coordinates.\n   */\n  getOrientedFlatCoordinates() {\n    if (this.orientedRevision_ != this.getRevision()) {\n      const flatCoordinates = this.flatCoordinates;\n      if (\n        linearRingssAreOriented(flatCoordinates, 0, this.endss_, this.stride)\n      ) {\n        this.orientedFlatCoordinates_ = flatCoordinates;\n      } else {\n        this.orientedFlatCoordinates_ = flatCoordinates.slice();\n        this.orientedFlatCoordinates_.length = orientLinearRingsArray(\n          this.orientedFlatCoordinates_,\n          0,\n          this.endss_,\n          this.stride\n        );\n      }\n      this.orientedRevision_ = this.getRevision();\n    }\n    return this.orientedFlatCoordinates_;\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {MultiPolygon} Simplified MultiPolygon.\n   * @protected\n   */\n  getSimplifiedGeometryInternal(squaredTolerance) {\n    const simplifiedFlatCoordinates = [];\n    const simplifiedEndss = [];\n    simplifiedFlatCoordinates.length = quantizeMultiArray(\n      this.flatCoordinates,\n      0,\n      this.endss_,\n      this.stride,\n      Math.sqrt(squaredTolerance),\n      simplifiedFlatCoordinates,\n      0,\n      simplifiedEndss\n    );\n    return new MultiPolygon(simplifiedFlatCoordinates, 'XY', simplifiedEndss);\n  }\n\n  /**\n   * Return the polygon at the specified index.\n   * @param {number} index Index.\n   * @return {Polygon} Polygon.\n   * @api\n   */\n  getPolygon(index) {\n    if (index < 0 || this.endss_.length <= index) {\n      return null;\n    }\n    let offset;\n    if (index === 0) {\n      offset = 0;\n    } else {\n      const prevEnds = this.endss_[index - 1];\n      offset = prevEnds[prevEnds.length - 1];\n    }\n    const ends = this.endss_[index].slice();\n    const end = ends[ends.length - 1];\n    if (offset !== 0) {\n      for (let i = 0, ii = ends.length; i < ii; ++i) {\n        ends[i] -= offset;\n      }\n    }\n    return new Polygon(\n      this.flatCoordinates.slice(offset, end),\n      this.layout,\n      ends\n    );\n  }\n\n  /**\n   * Return the polygons of this multipolygon.\n   * @return {Array<Polygon>} Polygons.\n   * @api\n   */\n  getPolygons() {\n    const layout = this.layout;\n    const flatCoordinates = this.flatCoordinates;\n    const endss = this.endss_;\n    const polygons = [];\n    let offset = 0;\n    for (let i = 0, ii = endss.length; i < ii; ++i) {\n      const ends = endss[i].slice();\n      const end = ends[ends.length - 1];\n      if (offset !== 0) {\n        for (let j = 0, jj = ends.length; j < jj; ++j) {\n          ends[j] -= offset;\n        }\n      }\n      const polygon = new Polygon(\n        flatCoordinates.slice(offset, end),\n        layout,\n        ends\n      );\n      polygons.push(polygon);\n      offset = end;\n    }\n    return polygons;\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./Geometry.js\").Type} Geometry type.\n   * @api\n   */\n  getType() {\n    return 'MultiPolygon';\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   */\n  intersectsExtent(extent) {\n    return intersectsLinearRingMultiArray(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.endss_,\n      this.stride,\n      extent\n    );\n  }\n\n  /**\n   * Set the coordinates of the multipolygon.\n   * @param {!Array<Array<Array<import(\"../coordinate.js\").Coordinate>>>} coordinates Coordinates.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @api\n   */\n  setCoordinates(coordinates, layout) {\n    this.setLayout(layout, coordinates, 3);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    const endss = deflateMultiCoordinatesArray(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride,\n      this.endss_\n    );\n    if (endss.length === 0) {\n      this.flatCoordinates.length = 0;\n    } else {\n      const lastEnds = endss[endss.length - 1];\n      this.flatCoordinates.length =\n        lastEnds.length === 0 ? 0 : lastEnds[lastEnds.length - 1];\n    }\n    this.changed();\n  }\n}\n\nexport default MultiPolygon;\n","/**\n * @module ol/geom/Point\n */\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {containsXY, createOrUpdateFromCoordinate} from '../extent.js';\nimport {deflateCoordinate} from './flat/deflate.js';\nimport {squaredDistance as squaredDx} from '../math.js';\n\n/**\n * @classdesc\n * Point geometry.\n *\n * @api\n */\nclass Point extends SimpleGeometry {\n  /**\n   * @param {import(\"../coordinate.js\").Coordinate} coordinates Coordinates.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   */\n  constructor(coordinates, layout) {\n    super();\n    this.setCoordinates(coordinates, layout);\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!Point} Clone.\n   * @api\n   */\n  clone() {\n    const point = new Point(this.flatCoordinates.slice(), this.layout);\n    point.applyProperties(this);\n    return point;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    const flatCoordinates = this.flatCoordinates;\n    const squaredDistance = squaredDx(\n      x,\n      y,\n      flatCoordinates[0],\n      flatCoordinates[1]\n    );\n    if (squaredDistance < minSquaredDistance) {\n      const stride = this.stride;\n      for (let i = 0; i < stride; ++i) {\n        closestPoint[i] = flatCoordinates[i];\n      }\n      closestPoint.length = stride;\n      return squaredDistance;\n    }\n    return minSquaredDistance;\n  }\n\n  /**\n   * Return the coordinate of the point.\n   * @return {import(\"../coordinate.js\").Coordinate} Coordinates.\n   * @api\n   */\n  getCoordinates() {\n    return !this.flatCoordinates ? [] : this.flatCoordinates.slice();\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @protected\n   * @return {import(\"../extent.js\").Extent} extent Extent.\n   */\n  computeExtent(extent) {\n    return createOrUpdateFromCoordinate(this.flatCoordinates, extent);\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./Geometry.js\").Type} Geometry type.\n   * @api\n   */\n  getType() {\n    return 'Point';\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   */\n  intersectsExtent(extent) {\n    return containsXY(extent, this.flatCoordinates[0], this.flatCoordinates[1]);\n  }\n\n  /**\n   * @param {!Array<*>} coordinates Coordinates.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @api\n   */\n  setCoordinates(coordinates, layout) {\n    this.setLayout(layout, coordinates, 0);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    this.flatCoordinates.length = deflateCoordinate(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride\n    );\n    this.changed();\n  }\n}\n\nexport default Point;\n","/**\n * @module ol/geom/LinearRing\n */\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {assignClosestPoint, maxSquaredDelta} from './flat/closest.js';\nimport {closestSquaredDistanceXY} from '../extent.js';\nimport {deflateCoordinates} from './flat/deflate.js';\nimport {douglasPeucker} from './flat/simplify.js';\nimport {inflateCoordinates} from './flat/inflate.js';\nimport {linearRing as linearRingArea} from './flat/area.js';\n\n/**\n * @classdesc\n * Linear ring geometry. Only used as part of polygon; cannot be rendered\n * on its own.\n *\n * @api\n */\nclass LinearRing extends SimpleGeometry {\n  /**\n   * @param {Array<import(\"../coordinate.js\").Coordinate>|Array<number>} coordinates Coordinates.\n   *     For internal use, flat coordinates in combination with `layout` are also accepted.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   */\n  constructor(coordinates, layout) {\n    super();\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDeltaRevision_ = -1;\n\n    if (layout !== undefined && !Array.isArray(coordinates[0])) {\n      this.setFlatCoordinates(\n        layout,\n        /** @type {Array<number>} */ (coordinates)\n      );\n    } else {\n      this.setCoordinates(\n        /** @type {Array<import(\"../coordinate.js\").Coordinate>} */ (\n          coordinates\n        ),\n        layout\n      );\n    }\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!LinearRing} Clone.\n   * @api\n   */\n  clone() {\n    return new LinearRing(this.flatCoordinates.slice(), this.layout);\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    if (this.maxDeltaRevision_ != this.getRevision()) {\n      this.maxDelta_ = Math.sqrt(\n        maxSquaredDelta(\n          this.flatCoordinates,\n          0,\n          this.flatCoordinates.length,\n          this.stride,\n          0\n        )\n      );\n      this.maxDeltaRevision_ = this.getRevision();\n    }\n    return assignClosestPoint(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      this.maxDelta_,\n      true,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance\n    );\n  }\n\n  /**\n   * Return the area of the linear ring on projected plane.\n   * @return {number} Area (on projected plane).\n   * @api\n   */\n  getArea() {\n    return linearRingArea(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride\n    );\n  }\n\n  /**\n   * Return the coordinates of the linear ring.\n   * @return {Array<import(\"../coordinate.js\").Coordinate>} Coordinates.\n   * @api\n   */\n  getCoordinates() {\n    return inflateCoordinates(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride\n    );\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {LinearRing} Simplified LinearRing.\n   * @protected\n   */\n  getSimplifiedGeometryInternal(squaredTolerance) {\n    const simplifiedFlatCoordinates = [];\n    simplifiedFlatCoordinates.length = douglasPeucker(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      squaredTolerance,\n      simplifiedFlatCoordinates,\n      0\n    );\n    return new LinearRing(simplifiedFlatCoordinates, 'XY');\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./Geometry.js\").Type} Geometry type.\n   * @api\n   */\n  getType() {\n    return 'LinearRing';\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   */\n  intersectsExtent(extent) {\n    return false;\n  }\n\n  /**\n   * Set the coordinates of the linear ring.\n   * @param {!Array<import(\"../coordinate.js\").Coordinate>} coordinates Coordinates.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @api\n   */\n  setCoordinates(coordinates, layout) {\n    this.setLayout(layout, coordinates, 1);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    this.flatCoordinates.length = deflateCoordinates(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride\n    );\n    this.changed();\n  }\n}\n\nexport default LinearRing;\n","/**\n * @module ol/geom/Polygon\n */\nimport LinearRing from './LinearRing.js';\nimport Point from './Point.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {arrayMaxSquaredDelta, assignClosestArrayPoint} from './flat/closest.js';\nimport {closestSquaredDistanceXY, getCenter} from '../extent.js';\nimport {deflateCoordinatesArray} from './flat/deflate.js';\nimport {extend} from '../array.js';\nimport {getInteriorPointOfArray} from './flat/interiorpoint.js';\nimport {inflateCoordinatesArray} from './flat/inflate.js';\nimport {intersectsLinearRingArray} from './flat/intersectsextent.js';\nimport {linearRingsAreOriented, orientLinearRings} from './flat/orient.js';\nimport {linearRings as linearRingsArea} from './flat/area.js';\nimport {linearRingsContainsXY} from './flat/contains.js';\nimport {modulo} from '../math.js';\nimport {quantizeArray} from './flat/simplify.js';\nimport {offset as sphereOffset} from '../sphere.js';\n\n/**\n * @classdesc\n * Polygon geometry.\n *\n * @api\n */\nclass Polygon extends SimpleGeometry {\n  /**\n   * @param {!Array<Array<import(\"../coordinate.js\").Coordinate>>|!Array<number>} coordinates\n   *     Array of linear rings that define the polygon. The first linear ring of the\n   *     array defines the outer-boundary or surface of the polygon. Each subsequent\n   *     linear ring defines a hole in the surface of the polygon. A linear ring is\n   *     an array of vertices' coordinates where the first coordinate and the last are\n   *     equivalent. (For internal use, flat coordinates in combination with\n   *     `layout` and `ends` are also accepted.)\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @param {Array<number>} [ends] Ends (for internal use with flat coordinates).\n   */\n  constructor(coordinates, layout, ends) {\n    super();\n\n    /**\n     * @type {Array<number>}\n     * @private\n     */\n    this.ends_ = [];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.flatInteriorPointRevision_ = -1;\n\n    /**\n     * @private\n     * @type {import(\"../coordinate.js\").Coordinate}\n     */\n    this.flatInteriorPoint_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDeltaRevision_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.orientedRevision_ = -1;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.orientedFlatCoordinates_ = null;\n\n    if (layout !== undefined && ends) {\n      this.setFlatCoordinates(\n        layout,\n        /** @type {Array<number>} */ (coordinates)\n      );\n      this.ends_ = ends;\n    } else {\n      this.setCoordinates(\n        /** @type {Array<Array<import(\"../coordinate.js\").Coordinate>>} */ (\n          coordinates\n        ),\n        layout\n      );\n    }\n  }\n\n  /**\n   * Append the passed linear ring to this polygon.\n   * @param {LinearRing} linearRing Linear ring.\n   * @api\n   */\n  appendLinearRing(linearRing) {\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = linearRing.getFlatCoordinates().slice();\n    } else {\n      extend(this.flatCoordinates, linearRing.getFlatCoordinates());\n    }\n    this.ends_.push(this.flatCoordinates.length);\n    this.changed();\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!Polygon} Clone.\n   * @api\n   */\n  clone() {\n    const polygon = new Polygon(\n      this.flatCoordinates.slice(),\n      this.layout,\n      this.ends_.slice()\n    );\n    polygon.applyProperties(this);\n    return polygon;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    if (this.maxDeltaRevision_ != this.getRevision()) {\n      this.maxDelta_ = Math.sqrt(\n        arrayMaxSquaredDelta(\n          this.flatCoordinates,\n          0,\n          this.ends_,\n          this.stride,\n          0\n        )\n      );\n      this.maxDeltaRevision_ = this.getRevision();\n    }\n    return assignClosestArrayPoint(\n      this.flatCoordinates,\n      0,\n      this.ends_,\n      this.stride,\n      this.maxDelta_,\n      true,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance\n    );\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @return {boolean} Contains (x, y).\n   */\n  containsXY(x, y) {\n    return linearRingsContainsXY(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.ends_,\n      this.stride,\n      x,\n      y\n    );\n  }\n\n  /**\n   * Return the area of the polygon on projected plane.\n   * @return {number} Area (on projected plane).\n   * @api\n   */\n  getArea() {\n    return linearRingsArea(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.ends_,\n      this.stride\n    );\n  }\n\n  /**\n   * Get the coordinate array for this geometry.  This array has the structure\n   * of a GeoJSON coordinate array for polygons.\n   *\n   * @param {boolean} [right] Orient coordinates according to the right-hand\n   *     rule (counter-clockwise for exterior and clockwise for interior rings).\n   *     If `false`, coordinates will be oriented according to the left-hand rule\n   *     (clockwise for exterior and counter-clockwise for interior rings).\n   *     By default, coordinate orientation will depend on how the geometry was\n   *     constructed.\n   * @return {Array<Array<import(\"../coordinate.js\").Coordinate>>} Coordinates.\n   * @api\n   */\n  getCoordinates(right) {\n    let flatCoordinates;\n    if (right !== undefined) {\n      flatCoordinates = this.getOrientedFlatCoordinates().slice();\n      orientLinearRings(flatCoordinates, 0, this.ends_, this.stride, right);\n    } else {\n      flatCoordinates = this.flatCoordinates;\n    }\n\n    return inflateCoordinatesArray(flatCoordinates, 0, this.ends_, this.stride);\n  }\n\n  /**\n   * @return {Array<number>} Ends.\n   */\n  getEnds() {\n    return this.ends_;\n  }\n\n  /**\n   * @return {Array<number>} Interior point.\n   */\n  getFlatInteriorPoint() {\n    if (this.flatInteriorPointRevision_ != this.getRevision()) {\n      const flatCenter = getCenter(this.getExtent());\n      this.flatInteriorPoint_ = getInteriorPointOfArray(\n        this.getOrientedFlatCoordinates(),\n        0,\n        this.ends_,\n        this.stride,\n        flatCenter,\n        0\n      );\n      this.flatInteriorPointRevision_ = this.getRevision();\n    }\n    return this.flatInteriorPoint_;\n  }\n\n  /**\n   * Return an interior point of the polygon.\n   * @return {Point} Interior point as XYM coordinate, where M is the\n   * length of the horizontal intersection that the point belongs to.\n   * @api\n   */\n  getInteriorPoint() {\n    return new Point(this.getFlatInteriorPoint(), 'XYM');\n  }\n\n  /**\n   * Return the number of rings of the polygon,  this includes the exterior\n   * ring and any interior rings.\n   *\n   * @return {number} Number of rings.\n   * @api\n   */\n  getLinearRingCount() {\n    return this.ends_.length;\n  }\n\n  /**\n   * Return the Nth linear ring of the polygon geometry. Return `null` if the\n   * given index is out of range.\n   * The exterior linear ring is available at index `0` and the interior rings\n   * at index `1` and beyond.\n   *\n   * @param {number} index Index.\n   * @return {LinearRing|null} Linear ring.\n   * @api\n   */\n  getLinearRing(index) {\n    if (index < 0 || this.ends_.length <= index) {\n      return null;\n    }\n    return new LinearRing(\n      this.flatCoordinates.slice(\n        index === 0 ? 0 : this.ends_[index - 1],\n        this.ends_[index]\n      ),\n      this.layout\n    );\n  }\n\n  /**\n   * Return the linear rings of the polygon.\n   * @return {Array<LinearRing>} Linear rings.\n   * @api\n   */\n  getLinearRings() {\n    const layout = this.layout;\n    const flatCoordinates = this.flatCoordinates;\n    const ends = this.ends_;\n    const linearRings = [];\n    let offset = 0;\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\n      const end = ends[i];\n      const linearRing = new LinearRing(\n        flatCoordinates.slice(offset, end),\n        layout\n      );\n      linearRings.push(linearRing);\n      offset = end;\n    }\n    return linearRings;\n  }\n\n  /**\n   * @return {Array<number>} Oriented flat coordinates.\n   */\n  getOrientedFlatCoordinates() {\n    if (this.orientedRevision_ != this.getRevision()) {\n      const flatCoordinates = this.flatCoordinates;\n      if (linearRingsAreOriented(flatCoordinates, 0, this.ends_, this.stride)) {\n        this.orientedFlatCoordinates_ = flatCoordinates;\n      } else {\n        this.orientedFlatCoordinates_ = flatCoordinates.slice();\n        this.orientedFlatCoordinates_.length = orientLinearRings(\n          this.orientedFlatCoordinates_,\n          0,\n          this.ends_,\n          this.stride\n        );\n      }\n      this.orientedRevision_ = this.getRevision();\n    }\n    return this.orientedFlatCoordinates_;\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {Polygon} Simplified Polygon.\n   * @protected\n   */\n  getSimplifiedGeometryInternal(squaredTolerance) {\n    const simplifiedFlatCoordinates = [];\n    const simplifiedEnds = [];\n    simplifiedFlatCoordinates.length = quantizeArray(\n      this.flatCoordinates,\n      0,\n      this.ends_,\n      this.stride,\n      Math.sqrt(squaredTolerance),\n      simplifiedFlatCoordinates,\n      0,\n      simplifiedEnds\n    );\n    return new Polygon(simplifiedFlatCoordinates, 'XY', simplifiedEnds);\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./Geometry.js\").Type} Geometry type.\n   * @api\n   */\n  getType() {\n    return 'Polygon';\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   */\n  intersectsExtent(extent) {\n    return intersectsLinearRingArray(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.ends_,\n      this.stride,\n      extent\n    );\n  }\n\n  /**\n   * Set the coordinates of the polygon.\n   * @param {!Array<Array<import(\"../coordinate.js\").Coordinate>>} coordinates Coordinates.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @api\n   */\n  setCoordinates(coordinates, layout) {\n    this.setLayout(layout, coordinates, 2);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    const ends = deflateCoordinatesArray(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride,\n      this.ends_\n    );\n    this.flatCoordinates.length = ends.length === 0 ? 0 : ends[ends.length - 1];\n    this.changed();\n  }\n}\n\nexport default Polygon;\n\n/**\n * Create an approximation of a circle on the surface of a sphere.\n * @param {import(\"../coordinate.js\").Coordinate} center Center (`[lon, lat]` in degrees).\n * @param {number} radius The great-circle distance from the center to\n *     the polygon vertices in meters.\n * @param {number} [n] Optional number of vertices for the resulting\n *     polygon. Default is `32`.\n * @param {number} [sphereRadius] Optional radius for the sphere (defaults to\n *     the Earth's mean radius using the WGS84 ellipsoid).\n * @return {Polygon} The \"circular\" polygon.\n * @api\n */\nexport function circular(center, radius, n, sphereRadius) {\n  n = n ? n : 32;\n  /** @type {Array<number>} */\n  const flatCoordinates = [];\n  for (let i = 0; i < n; ++i) {\n    extend(\n      flatCoordinates,\n      sphereOffset(center, radius, (2 * Math.PI * i) / n, sphereRadius)\n    );\n  }\n  flatCoordinates.push(flatCoordinates[0], flatCoordinates[1]);\n  return new Polygon(flatCoordinates, 'XY', [flatCoordinates.length]);\n}\n\n/**\n * Create a polygon from an extent. The layout used is `XY`.\n * @param {import(\"../extent.js\").Extent} extent The extent.\n * @return {Polygon} The polygon.\n * @api\n */\nexport function fromExtent(extent) {\n  const minX = extent[0];\n  const minY = extent[1];\n  const maxX = extent[2];\n  const maxY = extent[3];\n  const flatCoordinates = [\n    minX,\n    minY,\n    minX,\n    maxY,\n    maxX,\n    maxY,\n    maxX,\n    minY,\n    minX,\n    minY,\n  ];\n  return new Polygon(flatCoordinates, 'XY', [flatCoordinates.length]);\n}\n\n/**\n * Create a regular polygon from a circle.\n * @param {import(\"./Circle.js\").default} circle Circle geometry.\n * @param {number} [sides] Number of sides of the polygon. Default is 32.\n * @param {number} [angle] Start angle for the first vertex of the polygon in\n *     counter-clockwise radians. 0 means East. Default is 0.\n * @return {Polygon} Polygon geometry.\n * @api\n */\nexport function fromCircle(circle, sides, angle) {\n  sides = sides ? sides : 32;\n  const stride = circle.getStride();\n  const layout = circle.getLayout();\n  const center = circle.getCenter();\n  const arrayLength = stride * (sides + 1);\n  const flatCoordinates = new Array(arrayLength);\n  for (let i = 0; i < arrayLength; i += stride) {\n    flatCoordinates[i] = 0;\n    flatCoordinates[i + 1] = 0;\n    for (let j = 2; j < stride; j++) {\n      flatCoordinates[i + j] = center[j];\n    }\n  }\n  const ends = [flatCoordinates.length];\n  const polygon = new Polygon(flatCoordinates, layout, ends);\n  makeRegular(polygon, center, circle.getRadius(), angle);\n  return polygon;\n}\n\n/**\n * Modify the coordinates of a polygon to make it a regular polygon.\n * @param {Polygon} polygon Polygon geometry.\n * @param {import(\"../coordinate.js\").Coordinate} center Center of the regular polygon.\n * @param {number} radius Radius of the regular polygon.\n * @param {number} [angle] Start angle for the first vertex of the polygon in\n *     counter-clockwise radians. 0 means East. Default is 0.\n */\nexport function makeRegular(polygon, center, radius, angle) {\n  const flatCoordinates = polygon.getFlatCoordinates();\n  const stride = polygon.getStride();\n  const sides = flatCoordinates.length / stride - 1;\n  const startAngle = angle ? angle : 0;\n  for (let i = 0; i <= sides; ++i) {\n    const offset = i * stride;\n    const angle = startAngle + (modulo(i, sides) * 2 * Math.PI) / sides;\n    flatCoordinates[offset] = center[0] + radius * Math.cos(angle);\n    flatCoordinates[offset + 1] = center[1] + radius * Math.sin(angle);\n  }\n  polygon.changed();\n}\n","/**\n * @module ol/geom/SimpleGeometry\n */\nimport Geometry from './Geometry.js';\nimport {abstract} from '../util.js';\nimport {createOrUpdateFromFlatCoordinates, getCenter} from '../extent.js';\nimport {rotate, scale, transform2D, translate} from './flat/transform.js';\n\n/**\n * @classdesc\n * Abstract base class; only used for creating subclasses; do not instantiate\n * in apps, as cannot be rendered.\n *\n * @abstract\n * @api\n */\nclass SimpleGeometry extends Geometry {\n  constructor() {\n    super();\n\n    /**\n     * @protected\n     * @type {import(\"./Geometry.js\").GeometryLayout}\n     */\n    this.layout = 'XY';\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.stride = 2;\n\n    /**\n     * @protected\n     * @type {Array<number>}\n     */\n    this.flatCoordinates = null;\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @protected\n   * @return {import(\"../extent.js\").Extent} extent Extent.\n   */\n  computeExtent(extent) {\n    return createOrUpdateFromFlatCoordinates(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      extent\n    );\n  }\n\n  /**\n   * @abstract\n   * @return {Array<*> | null} Coordinates.\n   */\n  getCoordinates() {\n    return abstract();\n  }\n\n  /**\n   * Return the first coordinate of the geometry.\n   * @return {import(\"../coordinate.js\").Coordinate} First coordinate.\n   * @api\n   */\n  getFirstCoordinate() {\n    return this.flatCoordinates.slice(0, this.stride);\n  }\n\n  /**\n   * @return {Array<number>} Flat coordinates.\n   */\n  getFlatCoordinates() {\n    return this.flatCoordinates;\n  }\n\n  /**\n   * Return the last coordinate of the geometry.\n   * @return {import(\"../coordinate.js\").Coordinate} Last point.\n   * @api\n   */\n  getLastCoordinate() {\n    return this.flatCoordinates.slice(\n      this.flatCoordinates.length - this.stride\n    );\n  }\n\n  /**\n   * Return the {@link import(\"./Geometry.js\").GeometryLayout layout} of the geometry.\n   * @return {import(\"./Geometry.js\").GeometryLayout} Layout.\n   * @api\n   */\n  getLayout() {\n    return this.layout;\n  }\n\n  /**\n   * Create a simplified version of this geometry using the Douglas Peucker algorithm.\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {SimpleGeometry} Simplified geometry.\n   */\n  getSimplifiedGeometry(squaredTolerance) {\n    if (this.simplifiedGeometryRevision !== this.getRevision()) {\n      this.simplifiedGeometryMaxMinSquaredTolerance = 0;\n      this.simplifiedGeometryRevision = this.getRevision();\n    }\n    // If squaredTolerance is negative or if we know that simplification will not\n    // have any effect then just return this.\n    if (\n      squaredTolerance < 0 ||\n      (this.simplifiedGeometryMaxMinSquaredTolerance !== 0 &&\n        squaredTolerance <= this.simplifiedGeometryMaxMinSquaredTolerance)\n    ) {\n      return this;\n    }\n\n    const simplifiedGeometry =\n      this.getSimplifiedGeometryInternal(squaredTolerance);\n    const simplifiedFlatCoordinates = simplifiedGeometry.getFlatCoordinates();\n    if (simplifiedFlatCoordinates.length < this.flatCoordinates.length) {\n      return simplifiedGeometry;\n    }\n    // Simplification did not actually remove any coordinates.  We now know\n    // that any calls to getSimplifiedGeometry with a squaredTolerance less\n    // than or equal to the current squaredTolerance will also not have any\n    // effect.  This allows us to short circuit simplification (saving CPU\n    // cycles) and prevents the cache of simplified geometries from filling\n    // up with useless identical copies of this geometry (saving memory).\n    this.simplifiedGeometryMaxMinSquaredTolerance = squaredTolerance;\n    return this;\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {SimpleGeometry} Simplified geometry.\n   * @protected\n   */\n  getSimplifiedGeometryInternal(squaredTolerance) {\n    return this;\n  }\n\n  /**\n   * @return {number} Stride.\n   */\n  getStride() {\n    return this.stride;\n  }\n\n  /**\n   * @param {import(\"./Geometry.js\").GeometryLayout} layout Layout.\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   */\n  setFlatCoordinates(layout, flatCoordinates) {\n    this.stride = getStrideForLayout(layout);\n    this.layout = layout;\n    this.flatCoordinates = flatCoordinates;\n  }\n\n  /**\n   * @abstract\n   * @param {!Array<*>} coordinates Coordinates.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   */\n  setCoordinates(coordinates, layout) {\n    abstract();\n  }\n\n  /**\n   * @param {import(\"./Geometry.js\").GeometryLayout|undefined} layout Layout.\n   * @param {Array<*>} coordinates Coordinates.\n   * @param {number} nesting Nesting.\n   * @protected\n   */\n  setLayout(layout, coordinates, nesting) {\n    /** @type {number} */\n    let stride;\n    if (layout) {\n      stride = getStrideForLayout(layout);\n    } else {\n      for (let i = 0; i < nesting; ++i) {\n        if (coordinates.length === 0) {\n          this.layout = 'XY';\n          this.stride = 2;\n          return;\n        }\n        coordinates = /** @type {Array} */ (coordinates[0]);\n      }\n      stride = coordinates.length;\n      layout = getLayoutForStride(stride);\n    }\n    this.layout = layout;\n    this.stride = stride;\n  }\n\n  /**\n   * Apply a transform function to the coordinates of the geometry.\n   * The geometry is modified in place.\n   * If you do not want the geometry modified in place, first `clone()` it and\n   * then use this function on the clone.\n   * @param {import(\"../proj.js\").TransformFunction} transformFn Transform function.\n   * Called with a flat array of geometry coordinates.\n   * @api\n   */\n  applyTransform(transformFn) {\n    if (this.flatCoordinates) {\n      transformFn(this.flatCoordinates, this.flatCoordinates, this.stride);\n      this.changed();\n    }\n  }\n\n  /**\n   * Rotate the geometry around a given coordinate. This modifies the geometry\n   * coordinates in place.\n   * @param {number} angle Rotation angle in counter-clockwise radians.\n   * @param {import(\"../coordinate.js\").Coordinate} anchor The rotation center.\n   * @api\n   */\n  rotate(angle, anchor) {\n    const flatCoordinates = this.getFlatCoordinates();\n    if (flatCoordinates) {\n      const stride = this.getStride();\n      rotate(\n        flatCoordinates,\n        0,\n        flatCoordinates.length,\n        stride,\n        angle,\n        anchor,\n        flatCoordinates\n      );\n      this.changed();\n    }\n  }\n\n  /**\n   * Scale the geometry (with an optional origin).  This modifies the geometry\n   * coordinates in place.\n   * @param {number} sx The scaling factor in the x-direction.\n   * @param {number} [sy] The scaling factor in the y-direction (defaults to sx).\n   * @param {import(\"../coordinate.js\").Coordinate} [anchor] The scale origin (defaults to the center\n   *     of the geometry extent).\n   * @api\n   */\n  scale(sx, sy, anchor) {\n    if (sy === undefined) {\n      sy = sx;\n    }\n    if (!anchor) {\n      anchor = getCenter(this.getExtent());\n    }\n    const flatCoordinates = this.getFlatCoordinates();\n    if (flatCoordinates) {\n      const stride = this.getStride();\n      scale(\n        flatCoordinates,\n        0,\n        flatCoordinates.length,\n        stride,\n        sx,\n        sy,\n        anchor,\n        flatCoordinates\n      );\n      this.changed();\n    }\n  }\n\n  /**\n   * Translate the geometry.  This modifies the geometry coordinates in place.  If\n   * instead you want a new geometry, first `clone()` this geometry.\n   * @param {number} deltaX Delta X.\n   * @param {number} deltaY Delta Y.\n   * @api\n   */\n  translate(deltaX, deltaY) {\n    const flatCoordinates = this.getFlatCoordinates();\n    if (flatCoordinates) {\n      const stride = this.getStride();\n      translate(\n        flatCoordinates,\n        0,\n        flatCoordinates.length,\n        stride,\n        deltaX,\n        deltaY,\n        flatCoordinates\n      );\n      this.changed();\n    }\n  }\n}\n\n/**\n * @param {number} stride Stride.\n * @return {import(\"./Geometry.js\").GeometryLayout} layout Layout.\n */\nfunction getLayoutForStride(stride) {\n  let layout;\n  if (stride == 2) {\n    layout = 'XY';\n  } else if (stride == 3) {\n    layout = 'XYZ';\n  } else if (stride == 4) {\n    layout = 'XYZM';\n  }\n  return /** @type {import(\"./Geometry.js\").GeometryLayout} */ (layout);\n}\n\n/**\n * @param {import(\"./Geometry.js\").GeometryLayout} layout Layout.\n * @return {number} Stride.\n */\nexport function getStrideForLayout(layout) {\n  let stride;\n  if (layout == 'XY') {\n    stride = 2;\n  } else if (layout == 'XYZ' || layout == 'XYM') {\n    stride = 3;\n  } else if (layout == 'XYZM') {\n    stride = 4;\n  }\n  return /** @type {number} */ (stride);\n}\n\n/**\n * @param {SimpleGeometry} simpleGeometry Simple geometry.\n * @param {import(\"../transform.js\").Transform} transform Transform.\n * @param {Array<number>} [dest] Destination.\n * @return {Array<number>} Transformed flat coordinates.\n */\nexport function transformGeom2D(simpleGeometry, transform, dest) {\n  const flatCoordinates = simpleGeometry.getFlatCoordinates();\n  if (!flatCoordinates) {\n    return null;\n  }\n  const stride = simpleGeometry.getStride();\n  return transform2D(\n    flatCoordinates,\n    0,\n    flatCoordinates.length,\n    stride,\n    transform,\n    dest\n  );\n}\n\nexport default SimpleGeometry;\n","/**\n * @module ol/geom/flat/area\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {number} Area.\n */\nexport function linearRing(flatCoordinates, offset, end, stride) {\n  let twiceArea = 0;\n  let x1 = flatCoordinates[end - stride];\n  let y1 = flatCoordinates[end - stride + 1];\n  for (; offset < end; offset += stride) {\n    const x2 = flatCoordinates[offset];\n    const y2 = flatCoordinates[offset + 1];\n    twiceArea += y1 * x2 - x1 * y2;\n    x1 = x2;\n    y1 = y2;\n  }\n  return twiceArea / 2;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @return {number} Area.\n */\nexport function linearRings(flatCoordinates, offset, ends, stride) {\n  let area = 0;\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    area += linearRing(flatCoordinates, offset, end, stride);\n    offset = end;\n  }\n  return area;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @return {number} Area.\n */\nexport function linearRingss(flatCoordinates, offset, endss, stride) {\n  let area = 0;\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    area += linearRings(flatCoordinates, offset, ends, stride);\n    offset = ends[ends.length - 1];\n  }\n  return area;\n}\n","/**\n * @module ol/geom/flat/center\n */\nimport {createEmpty, createOrUpdateFromFlatCoordinates} from '../../extent.js';\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @return {Array<number>} Flat centers.\n */\nexport function linearRingss(flatCoordinates, offset, endss, stride) {\n  const flatCenters = [];\n  let extent = createEmpty();\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    extent = createOrUpdateFromFlatCoordinates(\n      flatCoordinates,\n      offset,\n      ends[0],\n      stride\n    );\n    flatCenters.push((extent[0] + extent[2]) / 2, (extent[1] + extent[3]) / 2);\n    offset = ends[ends.length - 1];\n  }\n  return flatCenters;\n}\n","/**\n * @module ol/geom/flat/closest\n */\nimport {lerp, squaredDistance as squaredDx} from '../../math.js';\n\n/**\n * Returns the point on the 2D line segment flatCoordinates[offset1] to\n * flatCoordinates[offset2] that is closest to the point (x, y).  Extra\n * dimensions are linearly interpolated.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset1 Offset 1.\n * @param {number} offset2 Offset 2.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n */\nfunction assignClosest(\n  flatCoordinates,\n  offset1,\n  offset2,\n  stride,\n  x,\n  y,\n  closestPoint\n) {\n  const x1 = flatCoordinates[offset1];\n  const y1 = flatCoordinates[offset1 + 1];\n  const dx = flatCoordinates[offset2] - x1;\n  const dy = flatCoordinates[offset2 + 1] - y1;\n  let offset;\n  if (dx === 0 && dy === 0) {\n    offset = offset1;\n  } else {\n    const t = ((x - x1) * dx + (y - y1) * dy) / (dx * dx + dy * dy);\n    if (t > 1) {\n      offset = offset2;\n    } else if (t > 0) {\n      for (let i = 0; i < stride; ++i) {\n        closestPoint[i] = lerp(\n          flatCoordinates[offset1 + i],\n          flatCoordinates[offset2 + i],\n          t\n        );\n      }\n      closestPoint.length = stride;\n      return;\n    } else {\n      offset = offset1;\n    }\n  }\n  for (let i = 0; i < stride; ++i) {\n    closestPoint[i] = flatCoordinates[offset + i];\n  }\n  closestPoint.length = stride;\n}\n\n/**\n * Return the squared of the largest distance between any pair of consecutive\n * coordinates.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} max Max squared delta.\n * @return {number} Max squared delta.\n */\nexport function maxSquaredDelta(flatCoordinates, offset, end, stride, max) {\n  let x1 = flatCoordinates[offset];\n  let y1 = flatCoordinates[offset + 1];\n  for (offset += stride; offset < end; offset += stride) {\n    const x2 = flatCoordinates[offset];\n    const y2 = flatCoordinates[offset + 1];\n    const squaredDelta = squaredDx(x1, y1, x2, y2);\n    if (squaredDelta > max) {\n      max = squaredDelta;\n    }\n    x1 = x2;\n    y1 = y2;\n  }\n  return max;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} max Max squared delta.\n * @return {number} Max squared delta.\n */\nexport function arrayMaxSquaredDelta(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  max\n) {\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    max = maxSquaredDelta(flatCoordinates, offset, end, stride, max);\n    offset = end;\n  }\n  return max;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} max Max squared delta.\n * @return {number} Max squared delta.\n */\nexport function multiArrayMaxSquaredDelta(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  max\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    max = arrayMaxSquaredDelta(flatCoordinates, offset, ends, stride, max);\n    offset = ends[ends.length - 1];\n  }\n  return max;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} maxDelta Max delta.\n * @param {boolean} isRing Is ring.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n * @param {number} minSquaredDistance Minimum squared distance.\n * @param {Array<number>} [tmpPoint] Temporary point object.\n * @return {number} Minimum squared distance.\n */\nexport function assignClosestPoint(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  maxDelta,\n  isRing,\n  x,\n  y,\n  closestPoint,\n  minSquaredDistance,\n  tmpPoint\n) {\n  if (offset == end) {\n    return minSquaredDistance;\n  }\n  let i, squaredDistance;\n  if (maxDelta === 0) {\n    // All points are identical, so just test the first point.\n    squaredDistance = squaredDx(\n      x,\n      y,\n      flatCoordinates[offset],\n      flatCoordinates[offset + 1]\n    );\n    if (squaredDistance < minSquaredDistance) {\n      for (i = 0; i < stride; ++i) {\n        closestPoint[i] = flatCoordinates[offset + i];\n      }\n      closestPoint.length = stride;\n      return squaredDistance;\n    }\n    return minSquaredDistance;\n  }\n  tmpPoint = tmpPoint ? tmpPoint : [NaN, NaN];\n  let index = offset + stride;\n  while (index < end) {\n    assignClosest(\n      flatCoordinates,\n      index - stride,\n      index,\n      stride,\n      x,\n      y,\n      tmpPoint\n    );\n    squaredDistance = squaredDx(x, y, tmpPoint[0], tmpPoint[1]);\n    if (squaredDistance < minSquaredDistance) {\n      minSquaredDistance = squaredDistance;\n      for (i = 0; i < stride; ++i) {\n        closestPoint[i] = tmpPoint[i];\n      }\n      closestPoint.length = stride;\n      index += stride;\n    } else {\n      // Skip ahead multiple points, because we know that all the skipped\n      // points cannot be any closer than the closest point we have found so\n      // far.  We know this because we know how close the current point is, how\n      // close the closest point we have found so far is, and the maximum\n      // distance between consecutive points.  For example, if we're currently\n      // at distance 10, the best we've found so far is 3, and that the maximum\n      // distance between consecutive points is 2, then we'll need to skip at\n      // least (10 - 3) / 2 == 3 (rounded down) points to have any chance of\n      // finding a closer point.  We use Math.max(..., 1) to ensure that we\n      // always advance at least one point, to avoid an infinite loop.\n      index +=\n        stride *\n        Math.max(\n          ((Math.sqrt(squaredDistance) - Math.sqrt(minSquaredDistance)) /\n            maxDelta) |\n            0,\n          1\n        );\n    }\n  }\n  if (isRing) {\n    // Check the closing segment.\n    assignClosest(\n      flatCoordinates,\n      end - stride,\n      offset,\n      stride,\n      x,\n      y,\n      tmpPoint\n    );\n    squaredDistance = squaredDx(x, y, tmpPoint[0], tmpPoint[1]);\n    if (squaredDistance < minSquaredDistance) {\n      minSquaredDistance = squaredDistance;\n      for (i = 0; i < stride; ++i) {\n        closestPoint[i] = tmpPoint[i];\n      }\n      closestPoint.length = stride;\n    }\n  }\n  return minSquaredDistance;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} maxDelta Max delta.\n * @param {boolean} isRing Is ring.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n * @param {number} minSquaredDistance Minimum squared distance.\n * @param {Array<number>} [tmpPoint] Temporary point object.\n * @return {number} Minimum squared distance.\n */\nexport function assignClosestArrayPoint(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  maxDelta,\n  isRing,\n  x,\n  y,\n  closestPoint,\n  minSquaredDistance,\n  tmpPoint\n) {\n  tmpPoint = tmpPoint ? tmpPoint : [NaN, NaN];\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    minSquaredDistance = assignClosestPoint(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      maxDelta,\n      isRing,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance,\n      tmpPoint\n    );\n    offset = end;\n  }\n  return minSquaredDistance;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} maxDelta Max delta.\n * @param {boolean} isRing Is ring.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n * @param {number} minSquaredDistance Minimum squared distance.\n * @param {Array<number>} [tmpPoint] Temporary point object.\n * @return {number} Minimum squared distance.\n */\nexport function assignClosestMultiArrayPoint(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  maxDelta,\n  isRing,\n  x,\n  y,\n  closestPoint,\n  minSquaredDistance,\n  tmpPoint\n) {\n  tmpPoint = tmpPoint ? tmpPoint : [NaN, NaN];\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    minSquaredDistance = assignClosestArrayPoint(\n      flatCoordinates,\n      offset,\n      ends,\n      stride,\n      maxDelta,\n      isRing,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance,\n      tmpPoint\n    );\n    offset = ends[ends.length - 1];\n  }\n  return minSquaredDistance;\n}\n","/**\n * @module ol/geom/flat/contains\n */\nimport {forEachCorner} from '../../extent.js';\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} Contains extent.\n */\nexport function linearRingContainsExtent(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  extent\n) {\n  const outside = forEachCorner(\n    extent,\n    /**\n     * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n     * @return {boolean} Contains (x, y).\n     */\n    function (coordinate) {\n      return !linearRingContainsXY(\n        flatCoordinates,\n        offset,\n        end,\n        stride,\n        coordinate[0],\n        coordinate[1]\n      );\n    }\n  );\n  return !outside;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {boolean} Contains (x, y).\n */\nexport function linearRingContainsXY(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  x,\n  y\n) {\n  // https://geomalgorithms.com/a03-_inclusion.html\n  // Copyright 2000 softSurfer, 2012 Dan Sunday\n  // This code may be freely used and modified for any purpose\n  // providing that this copyright notice is included with it.\n  // SoftSurfer makes no warranty for this code, and cannot be held\n  // liable for any real or imagined damage resulting from its use.\n  // Users of this code must verify correctness for their application.\n  let wn = 0;\n  let x1 = flatCoordinates[end - stride];\n  let y1 = flatCoordinates[end - stride + 1];\n  for (; offset < end; offset += stride) {\n    const x2 = flatCoordinates[offset];\n    const y2 = flatCoordinates[offset + 1];\n    if (y1 <= y) {\n      if (y2 > y && (x2 - x1) * (y - y1) - (x - x1) * (y2 - y1) > 0) {\n        wn++;\n      }\n    } else if (y2 <= y && (x2 - x1) * (y - y1) - (x - x1) * (y2 - y1) < 0) {\n      wn--;\n    }\n    x1 = x2;\n    y1 = y2;\n  }\n  return wn !== 0;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {boolean} Contains (x, y).\n */\nexport function linearRingsContainsXY(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  x,\n  y\n) {\n  if (ends.length === 0) {\n    return false;\n  }\n  if (!linearRingContainsXY(flatCoordinates, offset, ends[0], stride, x, y)) {\n    return false;\n  }\n  for (let i = 1, ii = ends.length; i < ii; ++i) {\n    if (\n      linearRingContainsXY(flatCoordinates, ends[i - 1], ends[i], stride, x, y)\n    ) {\n      return false;\n    }\n  }\n  return true;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {boolean} Contains (x, y).\n */\nexport function linearRingssContainsXY(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  x,\n  y\n) {\n  if (endss.length === 0) {\n    return false;\n  }\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    if (linearRingsContainsXY(flatCoordinates, offset, ends, stride, x, y)) {\n      return true;\n    }\n    offset = ends[ends.length - 1];\n  }\n  return false;\n}\n","/**\n * @module ol/geom/flat/deflate\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {number} stride Stride.\n * @return {number} offset Offset.\n */\nexport function deflateCoordinate(flatCoordinates, offset, coordinate, stride) {\n  for (let i = 0, ii = coordinate.length; i < ii; ++i) {\n    flatCoordinates[offset++] = coordinate[i];\n  }\n  return offset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<import(\"../../coordinate.js\").Coordinate>} coordinates Coordinates.\n * @param {number} stride Stride.\n * @return {number} offset Offset.\n */\nexport function deflateCoordinates(\n  flatCoordinates,\n  offset,\n  coordinates,\n  stride\n) {\n  for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n    const coordinate = coordinates[i];\n    for (let j = 0; j < stride; ++j) {\n      flatCoordinates[offset++] = coordinate[j];\n    }\n  }\n  return offset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<import(\"../../coordinate.js\").Coordinate>>} coordinatess Coordinatess.\n * @param {number} stride Stride.\n * @param {Array<number>} [ends] Ends.\n * @return {Array<number>} Ends.\n */\nexport function deflateCoordinatesArray(\n  flatCoordinates,\n  offset,\n  coordinatess,\n  stride,\n  ends\n) {\n  ends = ends ? ends : [];\n  let i = 0;\n  for (let j = 0, jj = coordinatess.length; j < jj; ++j) {\n    const end = deflateCoordinates(\n      flatCoordinates,\n      offset,\n      coordinatess[j],\n      stride\n    );\n    ends[i++] = end;\n    offset = end;\n  }\n  ends.length = i;\n  return ends;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<Array<import(\"../../coordinate.js\").Coordinate>>>} coordinatesss Coordinatesss.\n * @param {number} stride Stride.\n * @param {Array<Array<number>>} [endss] Endss.\n * @return {Array<Array<number>>} Endss.\n */\nexport function deflateMultiCoordinatesArray(\n  flatCoordinates,\n  offset,\n  coordinatesss,\n  stride,\n  endss\n) {\n  endss = endss ? endss : [];\n  let i = 0;\n  for (let j = 0, jj = coordinatesss.length; j < jj; ++j) {\n    const ends = deflateCoordinatesArray(\n      flatCoordinates,\n      offset,\n      coordinatesss[j],\n      stride,\n      endss[i]\n    );\n    if (ends.length === 0) {\n      ends[0] = offset;\n    }\n    endss[i++] = ends;\n    offset = ends[ends.length - 1];\n  }\n  endss.length = i;\n  return endss;\n}\n","/**\n * @module ol/geom/flat/inflate\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {Array<import(\"../../coordinate.js\").Coordinate>} [coordinates] Coordinates.\n * @return {Array<import(\"../../coordinate.js\").Coordinate>} Coordinates.\n */\nexport function inflateCoordinates(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  coordinates\n) {\n  coordinates = coordinates !== undefined ? coordinates : [];\n  let i = 0;\n  for (let j = offset; j < end; j += stride) {\n    coordinates[i++] = flatCoordinates.slice(j, j + stride);\n  }\n  coordinates.length = i;\n  return coordinates;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {Array<Array<import(\"../../coordinate.js\").Coordinate>>} [coordinatess] Coordinatess.\n * @return {Array<Array<import(\"../../coordinate.js\").Coordinate>>} Coordinatess.\n */\nexport function inflateCoordinatesArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  coordinatess\n) {\n  coordinatess = coordinatess !== undefined ? coordinatess : [];\n  let i = 0;\n  for (let j = 0, jj = ends.length; j < jj; ++j) {\n    const end = ends[j];\n    coordinatess[i++] = inflateCoordinates(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      coordinatess[i]\n    );\n    offset = end;\n  }\n  coordinatess.length = i;\n  return coordinatess;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {Array<Array<Array<import(\"../../coordinate.js\").Coordinate>>>} [coordinatesss]\n *     Coordinatesss.\n * @return {Array<Array<Array<import(\"../../coordinate.js\").Coordinate>>>} Coordinatesss.\n */\nexport function inflateMultiCoordinatesArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  coordinatesss\n) {\n  coordinatesss = coordinatesss !== undefined ? coordinatesss : [];\n  let i = 0;\n  for (let j = 0, jj = endss.length; j < jj; ++j) {\n    const ends = endss[j];\n    coordinatesss[i++] =\n      ends.length === 1 && ends[0] === offset\n        ? []\n        : inflateCoordinatesArray(\n            flatCoordinates,\n            offset,\n            ends,\n            stride,\n            coordinatesss[i]\n          );\n    offset = ends[ends.length - 1];\n  }\n  coordinatesss.length = i;\n  return coordinatesss;\n}\n","/**\n * @module ol/geom/flat/interiorpoint\n */\nimport {ascending} from '../../array.js';\nimport {linearRingsContainsXY} from './contains.js';\n\n/**\n * Calculates a point that is likely to lie in the interior of the linear rings.\n * Inspired by JTS's com.vividsolutions.jts.geom.Geometry#getInteriorPoint.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {Array<number>} flatCenters Flat centers.\n * @param {number} flatCentersOffset Flat center offset.\n * @param {Array<number>} [dest] Destination.\n * @return {Array<number>} Destination point as XYM coordinate, where M is the\n * length of the horizontal intersection that the point belongs to.\n */\nexport function getInteriorPointOfArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  flatCenters,\n  flatCentersOffset,\n  dest\n) {\n  let i, ii, x, x1, x2, y1, y2;\n  const y = flatCenters[flatCentersOffset + 1];\n  /** @type {Array<number>} */\n  const intersections = [];\n  // Calculate intersections with the horizontal line\n  for (let r = 0, rr = ends.length; r < rr; ++r) {\n    const end = ends[r];\n    x1 = flatCoordinates[end - stride];\n    y1 = flatCoordinates[end - stride + 1];\n    for (i = offset; i < end; i += stride) {\n      x2 = flatCoordinates[i];\n      y2 = flatCoordinates[i + 1];\n      if ((y <= y1 && y2 <= y) || (y1 <= y && y <= y2)) {\n        x = ((y - y1) / (y2 - y1)) * (x2 - x1) + x1;\n        intersections.push(x);\n      }\n      x1 = x2;\n      y1 = y2;\n    }\n  }\n  // Find the longest segment of the horizontal line that has its center point\n  // inside the linear ring.\n  let pointX = NaN;\n  let maxSegmentLength = -Infinity;\n  intersections.sort(ascending);\n  x1 = intersections[0];\n  for (i = 1, ii = intersections.length; i < ii; ++i) {\n    x2 = intersections[i];\n    const segmentLength = Math.abs(x2 - x1);\n    if (segmentLength > maxSegmentLength) {\n      x = (x1 + x2) / 2;\n      if (linearRingsContainsXY(flatCoordinates, offset, ends, stride, x, y)) {\n        pointX = x;\n        maxSegmentLength = segmentLength;\n      }\n    }\n    x1 = x2;\n  }\n  if (isNaN(pointX)) {\n    // There is no horizontal line that has its center point inside the linear\n    // ring.  Use the center of the the linear ring's extent.\n    pointX = flatCenters[flatCentersOffset];\n  }\n  if (dest) {\n    dest.push(pointX, y, maxSegmentLength);\n    return dest;\n  }\n  return [pointX, y, maxSegmentLength];\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {Array<number>} flatCenters Flat centers.\n * @return {Array<number>} Interior points as XYM coordinates, where M is the\n * length of the horizontal intersection that the point belongs to.\n */\nexport function getInteriorPointsOfMultiArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  flatCenters\n) {\n  let interiorPoints = [];\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    interiorPoints = getInteriorPointOfArray(\n      flatCoordinates,\n      offset,\n      ends,\n      stride,\n      flatCenters,\n      2 * i,\n      interiorPoints\n    );\n    offset = ends[ends.length - 1];\n  }\n  return interiorPoints;\n}\n","/**\n * @module ol/geom/flat/interpolate\n */\nimport {binarySearch} from '../../array.js';\nimport {lerp} from '../../math.js';\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} fraction Fraction.\n * @param {Array<number>} [dest] Destination.\n * @param {number} [dimension] Destination dimension (default is `2`)\n * @return {Array<number>} Destination.\n */\nexport function interpolatePoint(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  fraction,\n  dest,\n  dimension\n) {\n  let o, t;\n  const n = (end - offset) / stride;\n  if (n === 1) {\n    o = offset;\n  } else if (n === 2) {\n    o = offset;\n    t = fraction;\n  } else if (n !== 0) {\n    let x1 = flatCoordinates[offset];\n    let y1 = flatCoordinates[offset + 1];\n    let length = 0;\n    const cumulativeLengths = [0];\n    for (let i = offset + stride; i < end; i += stride) {\n      const x2 = flatCoordinates[i];\n      const y2 = flatCoordinates[i + 1];\n      length += Math.sqrt((x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1));\n      cumulativeLengths.push(length);\n      x1 = x2;\n      y1 = y2;\n    }\n    const target = fraction * length;\n    const index = binarySearch(cumulativeLengths, target);\n    if (index < 0) {\n      t =\n        (target - cumulativeLengths[-index - 2]) /\n        (cumulativeLengths[-index - 1] - cumulativeLengths[-index - 2]);\n      o = offset + (-index - 2) * stride;\n    } else {\n      o = offset + index * stride;\n    }\n  }\n  dimension = dimension > 1 ? dimension : 2;\n  dest = dest ? dest : new Array(dimension);\n  for (let i = 0; i < dimension; ++i) {\n    dest[i] =\n      o === undefined\n        ? NaN\n        : t === undefined\n        ? flatCoordinates[o + i]\n        : lerp(flatCoordinates[o + i], flatCoordinates[o + stride + i], t);\n  }\n  return dest;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} m M.\n * @param {boolean} extrapolate Extrapolate.\n * @return {import(\"../../coordinate.js\").Coordinate|null} Coordinate.\n */\nexport function lineStringCoordinateAtM(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  m,\n  extrapolate\n) {\n  if (end == offset) {\n    return null;\n  }\n  let coordinate;\n  if (m < flatCoordinates[offset + stride - 1]) {\n    if (extrapolate) {\n      coordinate = flatCoordinates.slice(offset, offset + stride);\n      coordinate[stride - 1] = m;\n      return coordinate;\n    }\n    return null;\n  } else if (flatCoordinates[end - 1] < m) {\n    if (extrapolate) {\n      coordinate = flatCoordinates.slice(end - stride, end);\n      coordinate[stride - 1] = m;\n      return coordinate;\n    }\n    return null;\n  }\n  // FIXME use O(1) search\n  if (m == flatCoordinates[offset + stride - 1]) {\n    return flatCoordinates.slice(offset, offset + stride);\n  }\n  let lo = offset / stride;\n  let hi = end / stride;\n  while (lo < hi) {\n    const mid = (lo + hi) >> 1;\n    if (m < flatCoordinates[(mid + 1) * stride - 1]) {\n      hi = mid;\n    } else {\n      lo = mid + 1;\n    }\n  }\n  const m0 = flatCoordinates[lo * stride - 1];\n  if (m == m0) {\n    return flatCoordinates.slice((lo - 1) * stride, (lo - 1) * stride + stride);\n  }\n  const m1 = flatCoordinates[(lo + 1) * stride - 1];\n  const t = (m - m0) / (m1 - m0);\n  coordinate = [];\n  for (let i = 0; i < stride - 1; ++i) {\n    coordinate.push(\n      lerp(\n        flatCoordinates[(lo - 1) * stride + i],\n        flatCoordinates[lo * stride + i],\n        t\n      )\n    );\n  }\n  coordinate.push(m);\n  return coordinate;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} m M.\n * @param {boolean} extrapolate Extrapolate.\n * @param {boolean} interpolate Interpolate.\n * @return {import(\"../../coordinate.js\").Coordinate|null} Coordinate.\n */\nexport function lineStringsCoordinateAtM(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  m,\n  extrapolate,\n  interpolate\n) {\n  if (interpolate) {\n    return lineStringCoordinateAtM(\n      flatCoordinates,\n      offset,\n      ends[ends.length - 1],\n      stride,\n      m,\n      extrapolate\n    );\n  }\n  let coordinate;\n  if (m < flatCoordinates[stride - 1]) {\n    if (extrapolate) {\n      coordinate = flatCoordinates.slice(0, stride);\n      coordinate[stride - 1] = m;\n      return coordinate;\n    }\n    return null;\n  }\n  if (flatCoordinates[flatCoordinates.length - 1] < m) {\n    if (extrapolate) {\n      coordinate = flatCoordinates.slice(flatCoordinates.length - stride);\n      coordinate[stride - 1] = m;\n      return coordinate;\n    }\n    return null;\n  }\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    if (offset == end) {\n      continue;\n    }\n    if (m < flatCoordinates[offset + stride - 1]) {\n      return null;\n    } else if (m <= flatCoordinates[end - 1]) {\n      return lineStringCoordinateAtM(\n        flatCoordinates,\n        offset,\n        end,\n        stride,\n        m,\n        false\n      );\n    }\n    offset = end;\n  }\n  return null;\n}\n","/**\n * @module ol/geom/flat/intersectsextent\n */\nimport {\n  containsExtent,\n  createEmpty,\n  extendFlatCoordinates,\n  intersects,\n  intersectsSegment,\n} from '../../extent.js';\nimport {forEach as forEachSegment} from './segments.js';\nimport {linearRingContainsExtent, linearRingContainsXY} from './contains.js';\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLineString(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  extent\n) {\n  const coordinatesExtent = extendFlatCoordinates(\n    createEmpty(),\n    flatCoordinates,\n    offset,\n    end,\n    stride\n  );\n  if (!intersects(extent, coordinatesExtent)) {\n    return false;\n  }\n  if (containsExtent(extent, coordinatesExtent)) {\n    return true;\n  }\n  if (coordinatesExtent[0] >= extent[0] && coordinatesExtent[2] <= extent[2]) {\n    return true;\n  }\n  if (coordinatesExtent[1] >= extent[1] && coordinatesExtent[3] <= extent[3]) {\n    return true;\n  }\n  return forEachSegment(\n    flatCoordinates,\n    offset,\n    end,\n    stride,\n    /**\n     * @param {import(\"../../coordinate.js\").Coordinate} point1 Start point.\n     * @param {import(\"../../coordinate.js\").Coordinate} point2 End point.\n     * @return {boolean} `true` if the segment and the extent intersect,\n     *     `false` otherwise.\n     */\n    function (point1, point2) {\n      return intersectsSegment(extent, point1, point2);\n    }\n  );\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLineStringArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  extent\n) {\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    if (\n      intersectsLineString(flatCoordinates, offset, ends[i], stride, extent)\n    ) {\n      return true;\n    }\n    offset = ends[i];\n  }\n  return false;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLinearRing(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  extent\n) {\n  if (intersectsLineString(flatCoordinates, offset, end, stride, extent)) {\n    return true;\n  }\n  if (\n    linearRingContainsXY(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      extent[0],\n      extent[1]\n    )\n  ) {\n    return true;\n  }\n  if (\n    linearRingContainsXY(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      extent[0],\n      extent[3]\n    )\n  ) {\n    return true;\n  }\n  if (\n    linearRingContainsXY(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      extent[2],\n      extent[1]\n    )\n  ) {\n    return true;\n  }\n  if (\n    linearRingContainsXY(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      extent[2],\n      extent[3]\n    )\n  ) {\n    return true;\n  }\n  return false;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLinearRingArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  extent\n) {\n  if (!intersectsLinearRing(flatCoordinates, offset, ends[0], stride, extent)) {\n    return false;\n  }\n  if (ends.length === 1) {\n    return true;\n  }\n  for (let i = 1, ii = ends.length; i < ii; ++i) {\n    if (\n      linearRingContainsExtent(\n        flatCoordinates,\n        ends[i - 1],\n        ends[i],\n        stride,\n        extent\n      )\n    ) {\n      if (\n        !intersectsLineString(\n          flatCoordinates,\n          ends[i - 1],\n          ends[i],\n          stride,\n          extent\n        )\n      ) {\n        return false;\n      }\n    }\n  }\n  return true;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLinearRingMultiArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  extent\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    if (\n      intersectsLinearRingArray(flatCoordinates, offset, ends, stride, extent)\n    ) {\n      return true;\n    }\n    offset = ends[ends.length - 1];\n  }\n  return false;\n}\n","/**\n * @module ol/geom/flat/length\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {number} Length.\n */\nexport function lineStringLength(flatCoordinates, offset, end, stride) {\n  let x1 = flatCoordinates[offset];\n  let y1 = flatCoordinates[offset + 1];\n  let length = 0;\n  for (let i = offset + stride; i < end; i += stride) {\n    const x2 = flatCoordinates[i];\n    const y2 = flatCoordinates[i + 1];\n    length += Math.sqrt((x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1));\n    x1 = x2;\n    y1 = y2;\n  }\n  return length;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {number} Perimeter.\n */\nexport function linearRingLength(flatCoordinates, offset, end, stride) {\n  let perimeter = lineStringLength(flatCoordinates, offset, end, stride);\n  const dx = flatCoordinates[end - stride] - flatCoordinates[offset];\n  const dy = flatCoordinates[end - stride + 1] - flatCoordinates[offset + 1];\n  perimeter += Math.sqrt(dx * dx + dy * dy);\n  return perimeter;\n}\n","/**\n * @module ol/geom/flat/reverse\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n */\nexport function coordinates(flatCoordinates, offset, end, stride) {\n  while (offset < end - stride) {\n    for (let i = 0; i < stride; ++i) {\n      const tmp = flatCoordinates[offset + i];\n      flatCoordinates[offset + i] = flatCoordinates[end - stride + i];\n      flatCoordinates[end - stride + i] = tmp;\n    }\n    offset += stride;\n    end -= stride;\n  }\n}\n","/**\n * @module ol/geom/flat/orient\n */\nimport {coordinates as reverseCoordinates} from './reverse.js';\n\n/**\n * Is the linear ring oriented clockwise in a coordinate system with a bottom-left\n * coordinate origin? For a coordinate system with a top-left coordinate origin,\n * the ring's orientation is clockwise when this function returns false.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {boolean} Is clockwise.\n */\nexport function linearRingIsClockwise(flatCoordinates, offset, end, stride) {\n  // https://stackoverflow.com/q/1165647/clockwise-method#1165943\n  // https://github.com/OSGeo/gdal/blob/master/gdal/ogr/ogrlinearring.cpp\n  let edge = 0;\n  let x1 = flatCoordinates[end - stride];\n  let y1 = flatCoordinates[end - stride + 1];\n  for (; offset < end; offset += stride) {\n    const x2 = flatCoordinates[offset];\n    const y2 = flatCoordinates[offset + 1];\n    edge += (x2 - x1) * (y2 + y1);\n    x1 = x2;\n    y1 = y2;\n  }\n  return edge === 0 ? undefined : edge > 0;\n}\n\n/**\n * Determines if linear rings are oriented.  By default, left-hand orientation\n * is tested (first ring must be clockwise, remaining rings counter-clockwise).\n * To test for right-hand orientation, use the `right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Array of end indexes.\n * @param {number} stride Stride.\n * @param {boolean} [right] Test for right-hand orientation\n *     (counter-clockwise exterior ring and clockwise interior rings).\n * @return {boolean} Rings are correctly oriented.\n */\nexport function linearRingsAreOriented(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  right\n) {\n  right = right !== undefined ? right : false;\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    const isClockwise = linearRingIsClockwise(\n      flatCoordinates,\n      offset,\n      end,\n      stride\n    );\n    if (i === 0) {\n      if ((right && isClockwise) || (!right && !isClockwise)) {\n        return false;\n      }\n    } else {\n      if ((right && !isClockwise) || (!right && isClockwise)) {\n        return false;\n      }\n    }\n    offset = end;\n  }\n  return true;\n}\n\n/**\n * Determines if linear rings are oriented.  By default, left-hand orientation\n * is tested (first ring must be clockwise, remaining rings counter-clockwise).\n * To test for right-hand orientation, use the `right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Array of array of end indexes.\n * @param {number} stride Stride.\n * @param {boolean} [right] Test for right-hand orientation\n *     (counter-clockwise exterior ring and clockwise interior rings).\n * @return {boolean} Rings are correctly oriented.\n */\nexport function linearRingssAreOriented(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  right\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    if (!linearRingsAreOriented(flatCoordinates, offset, ends, stride, right)) {\n      return false;\n    }\n    if (ends.length) {\n      offset = ends[ends.length - 1];\n    }\n  }\n  return true;\n}\n\n/**\n * Orient coordinates in a flat array of linear rings.  By default, rings\n * are oriented following the left-hand rule (clockwise for exterior and\n * counter-clockwise for interior rings).  To orient according to the\n * right-hand rule, use the `right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {boolean} [right] Follow the right-hand rule for orientation.\n * @return {number} End.\n */\nexport function orientLinearRings(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  right\n) {\n  right = right !== undefined ? right : false;\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    const isClockwise = linearRingIsClockwise(\n      flatCoordinates,\n      offset,\n      end,\n      stride\n    );\n    const reverse =\n      i === 0\n        ? (right && isClockwise) || (!right && !isClockwise)\n        : (right && !isClockwise) || (!right && isClockwise);\n    if (reverse) {\n      reverseCoordinates(flatCoordinates, offset, end, stride);\n    }\n    offset = end;\n  }\n  return offset;\n}\n\n/**\n * Orient coordinates in a flat array of linear rings.  By default, rings\n * are oriented following the left-hand rule (clockwise for exterior and\n * counter-clockwise for interior rings).  To orient according to the\n * right-hand rule, use the `right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Array of array of end indexes.\n * @param {number} stride Stride.\n * @param {boolean} [right] Follow the right-hand rule for orientation.\n * @return {number} End.\n */\nexport function orientLinearRingsArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  right\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    offset = orientLinearRings(\n      flatCoordinates,\n      offset,\n      endss[i],\n      stride,\n      right\n    );\n  }\n  return offset;\n}\n\n/**\n * Return a two-dimensional endss\n * @param {Array<number>} flatCoordinates Flat coordinates\n * @param {Array<number>} ends Linear ring end indexes\n * @return {Array<Array<number>>} Two dimensional endss array that can\n * be used to contruct a MultiPolygon\n */\nexport function inflateEnds(flatCoordinates, ends) {\n  const endss = [];\n  let offset = 0;\n  let prevEndIndex = 0;\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    // classifies an array of rings into polygons with outer rings and holes\n    if (!linearRingIsClockwise(flatCoordinates, offset, end, 2)) {\n      endss.push(ends.slice(prevEndIndex, i + 1));\n    } else {\n      if (endss.length === 0) {\n        continue;\n      }\n      endss[endss.length - 1].push(ends[prevEndIndex]);\n    }\n    prevEndIndex = i + 1;\n    offset = end;\n  }\n  return endss;\n}\n","/**\n * @module ol/geom/flat/segments\n */\n\n/**\n * This function calls `callback` for each segment of the flat coordinates\n * array. If the callback returns a truthy value the function returns that\n * value immediately. Otherwise the function returns `false`.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {function(import(\"../../coordinate.js\").Coordinate, import(\"../../coordinate.js\").Coordinate): T} callback Function\n *     called for each segment.\n * @return {T|boolean} Value.\n * @template T\n */\nexport function forEach(flatCoordinates, offset, end, stride, callback) {\n  let ret;\n  offset += stride;\n  for (; offset < end; offset += stride) {\n    ret = callback(\n      flatCoordinates.slice(offset - stride, offset),\n      flatCoordinates.slice(offset, offset + stride)\n    );\n    if (ret) {\n      return ret;\n    }\n  }\n  return false;\n}\n","/**\n * @module ol/geom/flat/simplify\n */\n// Based on simplify-js https://github.com/mourner/simplify-js\n// Copyright (c) 2012, Vladimir Agafonkin\n// All rights reserved.\n//\n// Redistribution and use in source and binary forms, with or without\n// modification, are permitted provided that the following conditions are met:\n//\n//    1. Redistributions of source code must retain the above copyright notice,\n//       this list of conditions and the following disclaimer.\n//\n//    2. Redistributions in binary form must reproduce the above copyright\n//       notice, this list of conditions and the following disclaimer in the\n//       documentation and/or other materials provided with the distribution.\n//\n// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n// AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n// IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n// ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE\n// LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n// CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n// SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\n// INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\n// CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n// ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n// POSSIBILITY OF SUCH DAMAGE.\n\nimport {squaredDistance, squaredSegmentDistance} from '../../math.js';\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {boolean} highQuality Highest quality.\n * @param {Array<number>} [simplifiedFlatCoordinates] Simplified flat\n *     coordinates.\n * @return {Array<number>} Simplified line string.\n */\nexport function simplifyLineString(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  squaredTolerance,\n  highQuality,\n  simplifiedFlatCoordinates\n) {\n  simplifiedFlatCoordinates =\n    simplifiedFlatCoordinates !== undefined ? simplifiedFlatCoordinates : [];\n  if (!highQuality) {\n    end = radialDistance(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      squaredTolerance,\n      simplifiedFlatCoordinates,\n      0\n    );\n    flatCoordinates = simplifiedFlatCoordinates;\n    offset = 0;\n    stride = 2;\n  }\n  simplifiedFlatCoordinates.length = douglasPeucker(\n    flatCoordinates,\n    offset,\n    end,\n    stride,\n    squaredTolerance,\n    simplifiedFlatCoordinates,\n    0\n  );\n  return simplifiedFlatCoordinates;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @return {number} Simplified offset.\n */\nexport function douglasPeucker(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  squaredTolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset\n) {\n  const n = (end - offset) / stride;\n  if (n < 3) {\n    for (; offset < end; offset += stride) {\n      simplifiedFlatCoordinates[simplifiedOffset++] = flatCoordinates[offset];\n      simplifiedFlatCoordinates[simplifiedOffset++] =\n        flatCoordinates[offset + 1];\n    }\n    return simplifiedOffset;\n  }\n  /** @type {Array<number>} */\n  const markers = new Array(n);\n  markers[0] = 1;\n  markers[n - 1] = 1;\n  /** @type {Array<number>} */\n  const stack = [offset, end - stride];\n  let index = 0;\n  while (stack.length > 0) {\n    const last = stack.pop();\n    const first = stack.pop();\n    let maxSquaredDistance = 0;\n    const x1 = flatCoordinates[first];\n    const y1 = flatCoordinates[first + 1];\n    const x2 = flatCoordinates[last];\n    const y2 = flatCoordinates[last + 1];\n    for (let i = first + stride; i < last; i += stride) {\n      const x = flatCoordinates[i];\n      const y = flatCoordinates[i + 1];\n      const squaredDistance = squaredSegmentDistance(x, y, x1, y1, x2, y2);\n      if (squaredDistance > maxSquaredDistance) {\n        index = i;\n        maxSquaredDistance = squaredDistance;\n      }\n    }\n    if (maxSquaredDistance > squaredTolerance) {\n      markers[(index - offset) / stride] = 1;\n      if (first + stride < index) {\n        stack.push(first, index);\n      }\n      if (index + stride < last) {\n        stack.push(index, last);\n      }\n    }\n  }\n  for (let i = 0; i < n; ++i) {\n    if (markers[i]) {\n      simplifiedFlatCoordinates[simplifiedOffset++] =\n        flatCoordinates[offset + i * stride];\n      simplifiedFlatCoordinates[simplifiedOffset++] =\n        flatCoordinates[offset + i * stride + 1];\n    }\n  }\n  return simplifiedOffset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<number>} simplifiedEnds Simplified ends.\n * @return {number} Simplified offset.\n */\nexport function douglasPeuckerArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  squaredTolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset,\n  simplifiedEnds\n) {\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    simplifiedOffset = douglasPeucker(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      squaredTolerance,\n      simplifiedFlatCoordinates,\n      simplifiedOffset\n    );\n    simplifiedEnds.push(simplifiedOffset);\n    offset = end;\n  }\n  return simplifiedOffset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<Array<number>>} simplifiedEndss Simplified endss.\n * @return {number} Simplified offset.\n */\nexport function douglasPeuckerMultiArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  squaredTolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset,\n  simplifiedEndss\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    const simplifiedEnds = [];\n    simplifiedOffset = douglasPeuckerArray(\n      flatCoordinates,\n      offset,\n      ends,\n      stride,\n      squaredTolerance,\n      simplifiedFlatCoordinates,\n      simplifiedOffset,\n      simplifiedEnds\n    );\n    simplifiedEndss.push(simplifiedEnds);\n    offset = ends[ends.length - 1];\n  }\n  return simplifiedOffset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @return {number} Simplified offset.\n */\nexport function radialDistance(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  squaredTolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset\n) {\n  if (end <= offset + stride) {\n    // zero or one point, no simplification possible, so copy and return\n    for (; offset < end; offset += stride) {\n      simplifiedFlatCoordinates[simplifiedOffset++] = flatCoordinates[offset];\n      simplifiedFlatCoordinates[simplifiedOffset++] =\n        flatCoordinates[offset + 1];\n    }\n    return simplifiedOffset;\n  }\n  let x1 = flatCoordinates[offset];\n  let y1 = flatCoordinates[offset + 1];\n  // copy first point\n  simplifiedFlatCoordinates[simplifiedOffset++] = x1;\n  simplifiedFlatCoordinates[simplifiedOffset++] = y1;\n  let x2 = x1;\n  let y2 = y1;\n  for (offset += stride; offset < end; offset += stride) {\n    x2 = flatCoordinates[offset];\n    y2 = flatCoordinates[offset + 1];\n    if (squaredDistance(x1, y1, x2, y2) > squaredTolerance) {\n      // copy point at offset\n      simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n      simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n      x1 = x2;\n      y1 = y2;\n    }\n  }\n  if (x2 != x1 || y2 != y1) {\n    // copy last point\n    simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n    simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n  }\n  return simplifiedOffset;\n}\n\n/**\n * @param {number} value Value.\n * @param {number} tolerance Tolerance.\n * @return {number} Rounded value.\n */\nexport function snap(value, tolerance) {\n  return tolerance * Math.round(value / tolerance);\n}\n\n/**\n * Simplifies a line string using an algorithm designed by Tim Schaub.\n * Coordinates are snapped to the nearest value in a virtual grid and\n * consecutive duplicate coordinates are discarded.  This effectively preserves\n * topology as the simplification of any subsection of a line string is\n * independent of the rest of the line string.  This means that, for examples,\n * the common edge between two polygons will be simplified to the same line\n * string independently in both polygons.  This implementation uses a single\n * pass over the coordinates and eliminates intermediate collinear points.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} tolerance Tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @return {number} Simplified offset.\n */\nexport function quantize(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  tolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset\n) {\n  // do nothing if the line is empty\n  if (offset == end) {\n    return simplifiedOffset;\n  }\n  // snap the first coordinate (P1)\n  let x1 = snap(flatCoordinates[offset], tolerance);\n  let y1 = snap(flatCoordinates[offset + 1], tolerance);\n  offset += stride;\n  // add the first coordinate to the output\n  simplifiedFlatCoordinates[simplifiedOffset++] = x1;\n  simplifiedFlatCoordinates[simplifiedOffset++] = y1;\n  // find the next coordinate that does not snap to the same value as the first\n  // coordinate (P2)\n  let x2, y2;\n  do {\n    x2 = snap(flatCoordinates[offset], tolerance);\n    y2 = snap(flatCoordinates[offset + 1], tolerance);\n    offset += stride;\n    if (offset == end) {\n      // all coordinates snap to the same value, the line collapses to a point\n      // push the last snapped value anyway to ensure that the output contains\n      // at least two points\n      // FIXME should we really return at least two points anyway?\n      simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n      simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n      return simplifiedOffset;\n    }\n  } while (x2 == x1 && y2 == y1);\n  while (offset < end) {\n    // snap the next coordinate (P3)\n    const x3 = snap(flatCoordinates[offset], tolerance);\n    const y3 = snap(flatCoordinates[offset + 1], tolerance);\n    offset += stride;\n    // skip P3 if it is equal to P2\n    if (x3 == x2 && y3 == y2) {\n      continue;\n    }\n    // calculate the delta between P1 and P2\n    const dx1 = x2 - x1;\n    const dy1 = y2 - y1;\n    // calculate the delta between P3 and P1\n    const dx2 = x3 - x1;\n    const dy2 = y3 - y1;\n    // if P1, P2, and P3 are colinear and P3 is further from P1 than P2 is from\n    // P1 in the same direction then P2 is on the straight line between P1 and\n    // P3\n    if (\n      dx1 * dy2 == dy1 * dx2 &&\n      ((dx1 < 0 && dx2 < dx1) || dx1 == dx2 || (dx1 > 0 && dx2 > dx1)) &&\n      ((dy1 < 0 && dy2 < dy1) || dy1 == dy2 || (dy1 > 0 && dy2 > dy1))\n    ) {\n      // discard P2 and set P2 = P3\n      x2 = x3;\n      y2 = y3;\n      continue;\n    }\n    // either P1, P2, and P3 are not colinear, or they are colinear but P3 is\n    // between P3 and P1 or on the opposite half of the line to P2.  add P2,\n    // and continue with P1 = P2 and P2 = P3\n    simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n    simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n    x1 = x2;\n    y1 = y2;\n    x2 = x3;\n    y2 = y3;\n  }\n  // add the last point (P2)\n  simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n  simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n  return simplifiedOffset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} tolerance Tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<number>} simplifiedEnds Simplified ends.\n * @return {number} Simplified offset.\n */\nexport function quantizeArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  tolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset,\n  simplifiedEnds\n) {\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    simplifiedOffset = quantize(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      tolerance,\n      simplifiedFlatCoordinates,\n      simplifiedOffset\n    );\n    simplifiedEnds.push(simplifiedOffset);\n    offset = end;\n  }\n  return simplifiedOffset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} tolerance Tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<Array<number>>} simplifiedEndss Simplified endss.\n * @return {number} Simplified offset.\n */\nexport function quantizeMultiArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  tolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset,\n  simplifiedEndss\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    const simplifiedEnds = [];\n    simplifiedOffset = quantizeArray(\n      flatCoordinates,\n      offset,\n      ends,\n      stride,\n      tolerance,\n      simplifiedFlatCoordinates,\n      simplifiedOffset,\n      simplifiedEnds\n    );\n    simplifiedEndss.push(simplifiedEnds);\n    offset = ends[ends.length - 1];\n  }\n  return simplifiedOffset;\n}\n","/**\n * @module ol/geom/flat/transform\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../transform.js\").Transform} transform Transform.\n * @param {Array<number>} [dest] Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function transform2D(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  transform,\n  dest\n) {\n  dest = dest ? dest : [];\n  let i = 0;\n  for (let j = offset; j < end; j += stride) {\n    const x = flatCoordinates[j];\n    const y = flatCoordinates[j + 1];\n    dest[i++] = transform[0] * x + transform[2] * y + transform[4];\n    dest[i++] = transform[1] * x + transform[3] * y + transform[5];\n  }\n  if (dest && dest.length != i) {\n    dest.length = i;\n  }\n  return dest;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} angle Angle.\n * @param {Array<number>} anchor Rotation anchor point.\n * @param {Array<number>} [dest] Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function rotate(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  angle,\n  anchor,\n  dest\n) {\n  dest = dest ? dest : [];\n  const cos = Math.cos(angle);\n  const sin = Math.sin(angle);\n  const anchorX = anchor[0];\n  const anchorY = anchor[1];\n  let i = 0;\n  for (let j = offset; j < end; j += stride) {\n    const deltaX = flatCoordinates[j] - anchorX;\n    const deltaY = flatCoordinates[j + 1] - anchorY;\n    dest[i++] = anchorX + deltaX * cos - deltaY * sin;\n    dest[i++] = anchorY + deltaX * sin + deltaY * cos;\n    for (let k = j + 2; k < j + stride; ++k) {\n      dest[i++] = flatCoordinates[k];\n    }\n  }\n  if (dest && dest.length != i) {\n    dest.length = i;\n  }\n  return dest;\n}\n\n/**\n * Scale the coordinates.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} sx Scale factor in the x-direction.\n * @param {number} sy Scale factor in the y-direction.\n * @param {Array<number>} anchor Scale anchor point.\n * @param {Array<number>} [dest] Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function scale(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  sx,\n  sy,\n  anchor,\n  dest\n) {\n  dest = dest ? dest : [];\n  const anchorX = anchor[0];\n  const anchorY = anchor[1];\n  let i = 0;\n  for (let j = offset; j < end; j += stride) {\n    const deltaX = flatCoordinates[j] - anchorX;\n    const deltaY = flatCoordinates[j + 1] - anchorY;\n    dest[i++] = anchorX + sx * deltaX;\n    dest[i++] = anchorY + sy * deltaY;\n    for (let k = j + 2; k < j + stride; ++k) {\n      dest[i++] = flatCoordinates[k];\n    }\n  }\n  if (dest && dest.length != i) {\n    dest.length = i;\n  }\n  return dest;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} deltaX Delta X.\n * @param {number} deltaY Delta Y.\n * @param {Array<number>} [dest] Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function translate(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  deltaX,\n  deltaY,\n  dest\n) {\n  dest = dest ? dest : [];\n  let i = 0;\n  for (let j = offset; j < end; j += stride) {\n    dest[i++] = flatCoordinates[j] + deltaX;\n    dest[i++] = flatCoordinates[j + 1] + deltaY;\n    for (let k = j + 2; k < j + stride; ++k) {\n      dest[i++] = flatCoordinates[k];\n    }\n  }\n  if (dest && dest.length != i) {\n    dest.length = i;\n  }\n  return dest;\n}\n","/**\n * @module ol/has\n */\n\nconst ua =\n  typeof navigator !== 'undefined' && typeof navigator.userAgent !== 'undefined'\n    ? navigator.userAgent.toLowerCase()\n    : '';\n\n/**\n * User agent string says we are dealing with Firefox as browser.\n * @type {boolean}\n */\nexport const FIREFOX = ua.includes('firefox');\n\n/**\n * User agent string says we are dealing with Safari as browser.\n * @type {boolean}\n */\nexport const SAFARI = ua.includes('safari') && !ua.includes('chrom');\n\n/**\n * https://bugs.webkit.org/show_bug.cgi?id=237906\n * @type {boolean}\n */\nexport const SAFARI_BUG_237906 =\n  SAFARI &&\n  (ua.includes('version/15.4') ||\n    /cpu (os|iphone os) 15_4 like mac os x/.test(ua));\n\n/**\n * User agent string says we are dealing with a WebKit engine.\n * @type {boolean}\n */\nexport const WEBKIT = ua.includes('webkit') && !ua.includes('edge');\n\n/**\n * User agent string says we are dealing with a Mac as platform.\n * @type {boolean}\n */\nexport const MAC = ua.includes('macintosh');\n\n/**\n * The ratio between physical pixels and device-independent pixels\n * (dips) on the device (`window.devicePixelRatio`).\n * @const\n * @type {number}\n * @api\n */\nexport const DEVICE_PIXEL_RATIO =\n  typeof devicePixelRatio !== 'undefined' ? devicePixelRatio : 1;\n\n/**\n * The execution context is a worker with OffscreenCanvas available.\n * @const\n * @type {boolean}\n */\nexport const WORKER_OFFSCREEN_CANVAS =\n  typeof WorkerGlobalScope !== 'undefined' &&\n  typeof OffscreenCanvas !== 'undefined' &&\n  self instanceof WorkerGlobalScope; //eslint-disable-line\n\n/**\n * Image.prototype.decode() is supported.\n * @type {boolean}\n */\nexport const IMAGE_DECODE =\n  typeof Image !== 'undefined' && Image.prototype.decode;\n\n/**\n * @type {boolean}\n */\nexport const PASSIVE_EVENT_LISTENERS = (function () {\n  let passive = false;\n  try {\n    const options = Object.defineProperty({}, 'passive', {\n      get: function () {\n        passive = true;\n      },\n    });\n\n    window.addEventListener('_', null, options);\n    window.removeEventListener('_', null, options);\n  } catch (error) {\n    // passive not supported\n  }\n  return passive;\n})();\n","/**\n * @module ol/layer/Base\n */\nimport BaseObject from '../Object.js';\nimport LayerProperty from './Property.js';\nimport {abstract} from '../util.js';\nimport {assert} from '../asserts.js';\nimport {clamp} from '../math.js';\n\n/**\n * A css color, or a function called with a view resolution returning a css color.\n *\n * @typedef {string|function(number):string} BackgroundColor\n * @api\n */\n\n/**\n * @typedef {import(\"../ObjectEventType\").Types|'change:extent'|'change:maxResolution'|'change:maxZoom'|\n *    'change:minResolution'|'change:minZoom'|'change:opacity'|'change:visible'|'change:zIndex'} BaseLayerObjectEventTypes\n */\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<BaseLayerObjectEventTypes, import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|BaseLayerObjectEventTypes, Return>} BaseLayerOnSignature\n */\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {BackgroundColor} [background] Background color for the layer. If not specified, no background\n * will be rendered.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Note that with {@link module:ol/layer/Base~BaseLayer} and all its subclasses, any property set in\n * the options is set as a {@link module:ol/Object~BaseObject} property on the layer object, so\n * is observable, and has get/set accessors.\n *\n * @api\n */\nclass BaseLayer extends BaseObject {\n  /**\n   * @param {Options} options Layer options.\n   */\n  constructor(options) {\n    super();\n\n    /***\n     * @type {BaseLayerOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {BaseLayerOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {BaseLayerOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @type {BackgroundColor|false}\n     * @private\n     */\n    this.background_ = options.background;\n\n    /**\n     * @type {Object<string, *>}\n     */\n    const properties = Object.assign({}, options);\n    if (typeof options.properties === 'object') {\n      delete properties.properties;\n      Object.assign(properties, options.properties);\n    }\n\n    properties[LayerProperty.OPACITY] =\n      options.opacity !== undefined ? options.opacity : 1;\n    assert(typeof properties[LayerProperty.OPACITY] === 'number', 64); // Layer opacity must be a number\n\n    properties[LayerProperty.VISIBLE] =\n      options.visible !== undefined ? options.visible : true;\n    properties[LayerProperty.Z_INDEX] = options.zIndex;\n    properties[LayerProperty.MAX_RESOLUTION] =\n      options.maxResolution !== undefined ? options.maxResolution : Infinity;\n    properties[LayerProperty.MIN_RESOLUTION] =\n      options.minResolution !== undefined ? options.minResolution : 0;\n    properties[LayerProperty.MIN_ZOOM] =\n      options.minZoom !== undefined ? options.minZoom : -Infinity;\n    properties[LayerProperty.MAX_ZOOM] =\n      options.maxZoom !== undefined ? options.maxZoom : Infinity;\n\n    /**\n     * @type {string}\n     * @private\n     */\n    this.className_ =\n      properties.className !== undefined ? properties.className : 'ol-layer';\n    delete properties.className;\n\n    this.setProperties(properties);\n\n    /**\n     * @type {import(\"./Layer.js\").State}\n     * @private\n     */\n    this.state_ = null;\n  }\n\n  /**\n   * Get the background for this layer.\n   * @return {BackgroundColor|false} Layer background.\n   */\n  getBackground() {\n    return this.background_;\n  }\n\n  /**\n   * @return {string} CSS class name.\n   */\n  getClassName() {\n    return this.className_;\n  }\n\n  /**\n   * This method is not meant to be called by layers or layer renderers because the state\n   * is incorrect if the layer is included in a layer group.\n   *\n   * @param {boolean} [managed] Layer is managed.\n   * @return {import(\"./Layer.js\").State} Layer state.\n   */\n  getLayerState(managed) {\n    /** @type {import(\"./Layer.js\").State} */\n    const state =\n      this.state_ ||\n      /** @type {?} */ ({\n        layer: this,\n        managed: managed === undefined ? true : managed,\n      });\n    const zIndex = this.getZIndex();\n    state.opacity = clamp(Math.round(this.getOpacity() * 100) / 100, 0, 1);\n    state.visible = this.getVisible();\n    state.extent = this.getExtent();\n    state.zIndex = zIndex === undefined && !state.managed ? Infinity : zIndex;\n    state.maxResolution = this.getMaxResolution();\n    state.minResolution = Math.max(this.getMinResolution(), 0);\n    state.minZoom = this.getMinZoom();\n    state.maxZoom = this.getMaxZoom();\n    this.state_ = state;\n\n    return state;\n  }\n\n  /**\n   * @abstract\n   * @param {Array<import(\"./Layer.js\").default>} [array] Array of layers (to be\n   *     modified in place).\n   * @return {Array<import(\"./Layer.js\").default>} Array of layers.\n   */\n  getLayersArray(array) {\n    return abstract();\n  }\n\n  /**\n   * @abstract\n   * @param {Array<import(\"./Layer.js\").State>} [states] Optional list of layer\n   *     states (to be modified in place).\n   * @return {Array<import(\"./Layer.js\").State>} List of layer states.\n   */\n  getLayerStatesArray(states) {\n    return abstract();\n  }\n\n  /**\n   * Return the {@link module:ol/extent~Extent extent} of the layer or `undefined` if it\n   * will be visible regardless of extent.\n   * @return {import(\"../extent.js\").Extent|undefined} The layer extent.\n   * @observable\n   * @api\n   */\n  getExtent() {\n    return /** @type {import(\"../extent.js\").Extent|undefined} */ (\n      this.get(LayerProperty.EXTENT)\n    );\n  }\n\n  /**\n   * Return the maximum resolution of the layer.\n   * @return {number} The maximum resolution of the layer.\n   * @observable\n   * @api\n   */\n  getMaxResolution() {\n    return /** @type {number} */ (this.get(LayerProperty.MAX_RESOLUTION));\n  }\n\n  /**\n   * Return the minimum resolution of the layer.\n   * @return {number} The minimum resolution of the layer.\n   * @observable\n   * @api\n   */\n  getMinResolution() {\n    return /** @type {number} */ (this.get(LayerProperty.MIN_RESOLUTION));\n  }\n\n  /**\n   * Return the minimum zoom level of the layer.\n   * @return {number} The minimum zoom level of the layer.\n   * @observable\n   * @api\n   */\n  getMinZoom() {\n    return /** @type {number} */ (this.get(LayerProperty.MIN_ZOOM));\n  }\n\n  /**\n   * Return the maximum zoom level of the layer.\n   * @return {number} The maximum zoom level of the layer.\n   * @observable\n   * @api\n   */\n  getMaxZoom() {\n    return /** @type {number} */ (this.get(LayerProperty.MAX_ZOOM));\n  }\n\n  /**\n   * Return the opacity of the layer (between 0 and 1).\n   * @return {number} The opacity of the layer.\n   * @observable\n   * @api\n   */\n  getOpacity() {\n    return /** @type {number} */ (this.get(LayerProperty.OPACITY));\n  }\n\n  /**\n   * @abstract\n   * @return {import(\"../source/Source.js\").State} Source state.\n   */\n  getSourceState() {\n    return abstract();\n  }\n\n  /**\n   * Return the visibility of the layer (`true` or `false`).\n   * @return {boolean} The visibility of the layer.\n   * @observable\n   * @api\n   */\n  getVisible() {\n    return /** @type {boolean} */ (this.get(LayerProperty.VISIBLE));\n  }\n\n  /**\n   * Return the Z-index of the layer, which is used to order layers before\n   * rendering. The default Z-index is 0.\n   * @return {number} The Z-index of the layer.\n   * @observable\n   * @api\n   */\n  getZIndex() {\n    return /** @type {number} */ (this.get(LayerProperty.Z_INDEX));\n  }\n\n  /**\n   * Sets the background color.\n   * @param {BackgroundColor} [background] Background color.\n   */\n  setBackground(background) {\n    this.background_ = background;\n    this.changed();\n  }\n\n  /**\n   * Set the extent at which the layer is visible.  If `undefined`, the layer\n   * will be visible at all extents.\n   * @param {import(\"../extent.js\").Extent|undefined} extent The extent of the layer.\n   * @observable\n   * @api\n   */\n  setExtent(extent) {\n    this.set(LayerProperty.EXTENT, extent);\n  }\n\n  /**\n   * Set the maximum resolution at which the layer is visible.\n   * @param {number} maxResolution The maximum resolution of the layer.\n   * @observable\n   * @api\n   */\n  setMaxResolution(maxResolution) {\n    this.set(LayerProperty.MAX_RESOLUTION, maxResolution);\n  }\n\n  /**\n   * Set the minimum resolution at which the layer is visible.\n   * @param {number} minResolution The minimum resolution of the layer.\n   * @observable\n   * @api\n   */\n  setMinResolution(minResolution) {\n    this.set(LayerProperty.MIN_RESOLUTION, minResolution);\n  }\n\n  /**\n   * Set the maximum zoom (exclusive) at which the layer is visible.\n   * Note that the zoom levels for layer visibility are based on the\n   * view zoom level, which may be different from a tile source zoom level.\n   * @param {number} maxZoom The maximum zoom of the layer.\n   * @observable\n   * @api\n   */\n  setMaxZoom(maxZoom) {\n    this.set(LayerProperty.MAX_ZOOM, maxZoom);\n  }\n\n  /**\n   * Set the minimum zoom (inclusive) at which the layer is visible.\n   * Note that the zoom levels for layer visibility are based on the\n   * view zoom level, which may be different from a tile source zoom level.\n   * @param {number} minZoom The minimum zoom of the layer.\n   * @observable\n   * @api\n   */\n  setMinZoom(minZoom) {\n    this.set(LayerProperty.MIN_ZOOM, minZoom);\n  }\n\n  /**\n   * Set the opacity of the layer, allowed values range from 0 to 1.\n   * @param {number} opacity The opacity of the layer.\n   * @observable\n   * @api\n   */\n  setOpacity(opacity) {\n    assert(typeof opacity === 'number', 64); // Layer opacity must be a number\n    this.set(LayerProperty.OPACITY, opacity);\n  }\n\n  /**\n   * Set the visibility of the layer (`true` or `false`).\n   * @param {boolean} visible The visibility of the layer.\n   * @observable\n   * @api\n   */\n  setVisible(visible) {\n    this.set(LayerProperty.VISIBLE, visible);\n  }\n\n  /**\n   * Set Z-index of the layer, which is used to order layers before rendering.\n   * The default Z-index is 0.\n   * @param {number} zindex The z-index of the layer.\n   * @observable\n   * @api\n   */\n  setZIndex(zindex) {\n    this.set(LayerProperty.Z_INDEX, zindex);\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    if (this.state_) {\n      this.state_.layer = null;\n      this.state_ = null;\n    }\n    super.disposeInternal();\n  }\n}\n\nexport default BaseLayer;\n","/**\n * @module ol/style/flat\n */\n\nimport Circle from '../style/Circle.js';\nimport Fill from './Fill.js';\nimport Icon from './Icon.js';\nimport RegularShape from './RegularShape.js';\nimport Stroke from './Stroke.js';\nimport Style from './Style.js';\nimport Text from './Text.js';\n\n/**\n * For static styling, the [layer.setStyle()]{@link module:ol/layer/Vector~VectorLayer#setStyle} method\n * can be called with an object literal that has fill, stroke, text, icon, regular shape, and/or circle properties.\n * @api\n *\n * @typedef {FlatFill & FlatStroke & FlatText & FlatIcon & FlatShape & FlatCircle} FlatStyle\n */\n\n/**\n * A flat style literal or an array of the same.\n *\n * @typedef {FlatStyle|Array<FlatStyle>} FlatStyleLike\n */\n\n/**\n * Fill style properties applied to polygon features.\n *\n * @typedef {Object} FlatFill\n * @property {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} [fill-color] The fill color.\n */\n\n/**\n * Stroke style properties applied to line strings and polygon boundaries.  To apply a stroke, at least one of\n * `stroke-color` or `stroke-width` must be provided.\n *\n * @typedef {Object} FlatStroke\n * @property {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} [stroke-color] The stroke color.\n * @property {number} [stroke-width] Stroke pixel width.\n * @property {CanvasLineCap} [stroke-line-cap='round'] Line cap style: `butt`, `round`, or `square`.\n * @property {CanvasLineJoin} [stroke-line-join='round'] Line join style: `bevel`, `round`, or `miter`.\n * @property {Array<number>} [stroke-line-dash] Line dash pattern.\n * @property {number} [stroke-line-dash-offset=0] Line dash offset.\n * @property {number} [stroke-miter-limit=10] Miter limit.\n */\n\n/**\n * Label style properties applied to all features.  At a minimum, a `text-value` must be provided.\n *\n * @typedef {Object} FlatText\n * @property {string|Array<string>} [text-value] Text content or rich text content. For plain text provide a string, which can\n * contain line breaks (`\\n`). For rich text provide an array of text/font tuples. A tuple consists of the text to\n * render and the font to use (or `''` to use the text style's font). A line break has to be a separate tuple (i.e. `'\\n', ''`).\n * **Example:** `['foo', 'bold 10px sans-serif', ' bar', 'italic 10px sans-serif', ' baz', '']` will yield \"**foo** *bar* baz\".\n * **Note:** Rich text is not supported for the immediate rendering API.\n * @property {string} [text-font] Font style as CSS `font` value, see:\n * https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/font. Default is `'10px sans-serif'`\n * @property {number} [text-max-angle=Math.PI/4] When `text-placement` is set to `'line'`, allow a maximum angle between adjacent characters.\n * The expected value is in radians, and the default is 45° (`Math.PI / 4`).\n * @property {number} [text-offset-x=0] Horizontal text offset in pixels. A positive will shift the text right.\n * @property {number} [text-offset-y=0] Vertical text offset in pixels. A positive will shift the text down.\n * @property {boolean} [text-overflow=false] For polygon labels or when `placement` is set to `'line'`, allow text to exceed\n * the width of the polygon at the label position or the length of the path that it follows.\n * @property {import(\"./Text.js\").TextPlacement} [text-placement='point'] Text placement.\n * @property {number} [text-repeat] Repeat interval in pixels. When set, the text will be repeated at this interval. Only available when\n * `text-placement` is set to `'line'`. Overrides `text-align`.\n * @property {number|import(\"../size.js\").Size} [text-scale] Scale.\n * @property {boolean} [text-rotate-with-view=false] Whether to rotate the text with the view.\n * @property {number} [text-rotation=0] Rotation in radians (positive rotation clockwise).\n * @property {CanvasTextAlign} [text-align] Text alignment. Possible values: `'left'`, `'right'`, `'center'`, `'end'` or `'start'`.\n * Default is `'center'` for `text-placement: 'point'`. For `text-placement: 'line'`, the default is to let the renderer choose a\n * placement where `text-max-angle` is not exceeded.\n * @property {import('./Text.js').TextJustify} [text-justify] Text justification within the text box.\n * If not set, text is justified towards the `textAlign` anchor.\n * Otherwise, use options `'left'`, `'center'`, or `'right'` to justify the text within the text box.\n * **Note:** `text-justify` is ignored for immediate rendering and also for `text-placement: 'line'`.\n * @property {CanvasTextBaseline} [text-baseline='middle'] Text base line. Possible values: `'bottom'`, `'top'`, `'middle'`, `'alphabetic'`,\n * `'hanging'`, `'ideographic'`.\n * @property {Array<number>} [text-padding=[0, 0, 0, 0]] Padding in pixels around the text for decluttering and background. The order of\n * values in the array is `[top, right, bottom, left]`.\n * @property {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} [text-fill-color] The fill color.\n * @property {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} [text-background-fill-color] The fill color.\n * @property {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} [text-stroke-color] The stroke color.\n * @property {CanvasLineCap} [text-stroke-line-cap='round'] Line cap style: `butt`, `round`, or `square`.\n * @property {CanvasLineJoin} [text-stroke-line-join='round'] Line join style: `bevel`, `round`, or `miter`.\n * @property {Array<number>} [text-stroke-line-dash] Line dash pattern.\n * @property {number} [text-stroke-line-dash-offset=0] Line dash offset.\n * @property {number} [text-stroke-miter-limit=10] Miter limit.\n * @property {number} [text-stroke-width] Stroke pixel width.\n * @property {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} [text-background-stroke-color] The stroke color.\n * @property {CanvasLineCap} [text-background-stroke-line-cap='round'] Line cap style: `butt`, `round`, or `square`.\n * @property {CanvasLineJoin} [text-background-stroke-line-join='round'] Line join style: `bevel`, `round`, or `miter`.\n * @property {Array<number>} [text-background-stroke-line-dash] Line dash pattern.\n * @property {number} [text-background-stroke-line-dash-offset=0] Line dash offset.\n * @property {number} [text-background-stroke-miter-limit=10] Miter limit.\n * @property {number} [text-background-stroke-width] Stroke pixel width.\n */\n\n/**\n * Icon style properties applied to point features.  One of `icon-src` or `icon-img` must be provided to render\n * points with an icon.\n *\n * @typedef {Object} FlatIcon\n * @property {string} [icon-src] Image source URI.\n * @property {HTMLImageElement|HTMLCanvasElement} [icon-img] Image object for the icon. If the `icon-src` option is not provided then the\n * provided image must already be loaded. And in that case, it is required\n * to provide the size of the image, with the `icon-img-size` option.\n * @property {import(\"../size.js\").Size} [icon-img-size] Image size in pixels. Only required if `icon-img` is set and `icon-src` is not.\n * The provided size needs to match the actual size of the image.\n * @property {Array<number>} [icon-anchor=[0.5, 0.5]] Anchor. Default value is the icon center.\n * @property {import(\"./Icon.js\").IconOrigin} [icon-anchor-origin='top-left'] Origin of the anchor: `bottom-left`, `bottom-right`,\n * `top-left` or `top-right`.\n * @property {import(\"./Icon.js\").IconAnchorUnits} [icon-anchor-x-units='fraction'] Units in which the anchor x value is\n * specified. A value of `'fraction'` indicates the x value is a fraction of the icon. A value of `'pixels'` indicates\n * the x value in pixels.\n * @property {import(\"./Icon.js\").IconAnchorUnits} [icon-anchor-y-units='fraction'] Units in which the anchor y value is\n * specified. A value of `'fraction'` indicates the y value is a fraction of the icon. A value of `'pixels'` indicates\n * the y value in pixels.\n * @property {import(\"../color.js\").Color|string} [icon-color] Color to tint the icon. If not specified,\n * the icon will be left as is.\n * @property {null|string} [icon-cross-origin] The `crossOrigin` attribute for loaded images. Note that you must provide a\n * `icon-cross-origin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {Array<number>} [icon-offset=[0, 0]] Offset, which, together with the size and the offset origin, define the\n * sub-rectangle to use from the original icon image.\n * @property {Array<number>} [icon-displacement=[0,0]] Displacement of the icon.\n * @property {import(\"./Icon.js\").IconOrigin} [icon-offset-origin='top-left'] Origin of the offset: `bottom-left`, `bottom-right`,\n * `top-left` or `top-right`.\n * @property {number} [icon-opacity=1] Opacity of the icon.\n * @property {number|import(\"../size.js\").Size} [icon-scale=1] Scale.\n * @property {number} [icon-rotation=0] Rotation in radians (positive rotation clockwise).\n * @property {boolean} [icon-rotate-with-view=false] Whether to rotate the icon with the view.\n * @property {import(\"../size.js\").Size} [icon-size] Icon size in pixel. Can be used together with `icon-offset` to define the\n * sub-rectangle to use from the origin (sprite) icon image.\n * @property {\"declutter\"|\"obstacle\"|\"none\"|undefined} [icon-declutter-mode] Declutter mode\n */\n\n/**\n * Regular shape style properties for rendering point features.  At least `shape-points` must be provided.\n *\n * @typedef {Object} FlatShape\n * @property {number} [shape-points] Number of points for stars and regular polygons. In case of a polygon, the number of points\n * is the number of sides.\n * @property {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} [shape-fill-color] The fill color.\n * @property {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} [shape-stroke-color] The stroke color.\n * @property {number} [shape-stroke-width] Stroke pixel width.\n * @property {CanvasLineCap} [shape-stroke-line-cap='round'] Line cap style: `butt`, `round`, or `square`.\n * @property {CanvasLineJoin} [shape-stroke-line-join='round'] Line join style: `bevel`, `round`, or `miter`.\n * @property {Array<number>} [shape-stroke-line-dash] Line dash pattern.\n * @property {number} [shape-stroke-line-dash-offset=0] Line dash offset.\n * @property {number} [shape-stroke-miter-limit=10] Miter limit.\n * @property {number} [shape-radius] Radius of a regular polygon.\n * @property {number} [shape-radius1] First radius of a star. Ignored if radius is set.\n * @property {number} [shape-radius2] Second radius of a star.\n * @property {number} [shape-angle=0] Shape's angle in radians. A value of 0 will have one of the shape's point facing up.\n * @property {Array<number>} [shape-displacement=[0,0]] Displacement of the shape\n * @property {number} [shape-rotation=0] Rotation in radians (positive rotation clockwise).\n * @property {boolean} [shape-rotate-with-view=false] Whether to rotate the shape with the view.\n * @property {number|import(\"../size.js\").Size} [shape-scale=1] Scale. Unless two dimensional scaling is required a better\n * result may be obtained with appropriate settings for `shape-radius`, `shape-radius1` and `shape-radius2`.\n * @property {\"declutter\"|\"obstacle\"|\"none\"|undefined} [shape-declutter-mode] Declutter mode.\n */\n\n/**\n * Circle style properties for rendering point features.  At least `circle-radius` must be provided.\n *\n * @typedef {Object} FlatCircle\n * @property {number} [circle-radius] Circle radius.\n * @property {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} [circle-fill-color] The fill color.\n * @property {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} [circle-stroke-color] The stroke color.\n * @property {number} [circle-stroke-width] Stroke pixel width.\n * @property {CanvasLineCap} [circle-stroke-line-cap='round'] Line cap style: `butt`, `round`, or `square`.\n * @property {CanvasLineJoin} [circle-stroke-line-join='round'] Line join style: `bevel`, `round`, or `miter`.\n * @property {Array<number>} [circle-stroke-line-dash] Line dash pattern.\n * @property {number} [circle-stroke-line-dash-offset=0] Line dash offset.\n * @property {number} [circle-stroke-miter-limit=10] Miter limit.\n * @property {Array<number>} [circle-displacement=[0,0]] displacement\n * @property {number|import(\"../size.js\").Size} [circle-scale=1] Scale. A two dimensional scale will produce an ellipse.\n * Unless two dimensional scaling is required a better result may be obtained with an appropriate setting for `circle-radius`.\n * @property {number} [circle-rotation=0] Rotation in radians\n * (positive rotation clockwise, meaningful only when used in conjunction with a two dimensional scale).\n * @property {boolean} [circle-rotate-with-view=false] Whether to rotate the shape with the view\n * (meaningful only when used in conjunction with a two dimensional scale).\n * @property {\"declutter\"|\"obstacle\"|\"none\"|undefined} [circle-declutter-mode] Declutter mode\n */\n\n/**\n * @param {FlatStyle} flatStyle A flat style literal.\n * @return {import(\"./Style.js\").default} A style instance.\n */\nexport function toStyle(flatStyle) {\n  const style = new Style({\n    fill: getFill(flatStyle, ''),\n    stroke: getStroke(flatStyle, ''),\n    text: getText(flatStyle),\n    image: getImage(flatStyle),\n  });\n\n  return style;\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} prefix The property prefix.\n * @return {Fill|undefined} The fill (if any).\n */\nfunction getFill(flatStyle, prefix) {\n  const color = flatStyle[prefix + 'fill-color'];\n  if (!color) {\n    return;\n  }\n\n  return new Fill({color: color});\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} prefix The property prefix.\n * @return {Stroke|undefined} The stroke (if any).\n */\nfunction getStroke(flatStyle, prefix) {\n  const width = flatStyle[prefix + 'stroke-width'];\n  const color = flatStyle[prefix + 'stroke-color'];\n  if (!width && !color) {\n    return;\n  }\n\n  return new Stroke({\n    width: width,\n    color: color,\n    lineCap: flatStyle[prefix + 'stroke-line-cap'],\n    lineJoin: flatStyle[prefix + 'stroke-line-join'],\n    lineDash: flatStyle[prefix + 'stroke-line-dash'],\n    lineDashOffset: flatStyle[prefix + 'stroke-line-dash-offset'],\n    miterLimit: flatStyle[prefix + 'stroke-miter-limit'],\n  });\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @return {Text|undefined} The text (if any).\n */\nfunction getText(flatStyle) {\n  const value = flatStyle['text-value'];\n  if (!value) {\n    return;\n  }\n\n  const text = new Text({\n    text: value,\n    font: flatStyle['text-font'],\n    maxAngle: flatStyle['text-max-angle'],\n    offsetX: flatStyle['text-offset-x'],\n    offsetY: flatStyle['text-offset-y'],\n    overflow: flatStyle['text-overflow'],\n    placement: flatStyle['text-placement'],\n    repeat: flatStyle['text-repeat'],\n    scale: flatStyle['text-scale'],\n    rotateWithView: flatStyle['text-rotate-with-view'],\n    rotation: flatStyle['text-rotation'],\n    textAlign: flatStyle['text-align'],\n    justify: flatStyle['text-justify'],\n    textBaseline: flatStyle['text-baseline'],\n    padding: flatStyle['text-padding'],\n    fill: getFill(flatStyle, 'text-'),\n    backgroundFill: getFill(flatStyle, 'text-background-'),\n    stroke: getStroke(flatStyle, 'text-'),\n    backgroundStroke: getStroke(flatStyle, 'text-background-'),\n  });\n\n  return text;\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @return {import(\"./Image.js\").default|undefined} The image (if any).\n */\nfunction getImage(flatStyle) {\n  const iconSrc = flatStyle['icon-src'];\n  const iconImg = flatStyle['icon-img'];\n  if (iconSrc || iconImg) {\n    const icon = new Icon({\n      src: iconSrc,\n      img: iconImg,\n      imgSize: flatStyle['icon-img-size'],\n      anchor: flatStyle['icon-anchor'],\n      anchorOrigin: flatStyle['icon-anchor-origin'],\n      anchorXUnits: flatStyle['icon-anchor-x-units'],\n      anchorYUnits: flatStyle['icon-anchor-y-units'],\n      color: flatStyle['icon-color'],\n      crossOrigin: flatStyle['icon-cross-origin'],\n      offset: flatStyle['icon-offset'],\n      displacement: flatStyle['icon-displacement'],\n      opacity: flatStyle['icon-opacity'],\n      scale: flatStyle['icon-scale'],\n      rotation: flatStyle['icon-rotation'],\n      rotateWithView: flatStyle['icon-rotate-with-view'],\n      size: flatStyle['icon-size'],\n      declutterMode: flatStyle['icon-declutter-mode'],\n    });\n    return icon;\n  }\n\n  const shapePoints = flatStyle['shape-points'];\n  if (shapePoints) {\n    const prefix = 'shape-';\n    const shape = new RegularShape({\n      points: shapePoints,\n      fill: getFill(flatStyle, prefix),\n      stroke: getStroke(flatStyle, prefix),\n      radius: flatStyle['shape-radius'],\n      radius1: flatStyle['shape-radius1'],\n      radius2: flatStyle['shape-radius2'],\n      angle: flatStyle['shape-angle'],\n      displacement: flatStyle['shape-displacement'],\n      rotation: flatStyle['shape-rotation'],\n      rotateWithView: flatStyle['shape-rotate-with-view'],\n      scale: flatStyle['shape-scale'],\n      declutterMode: flatStyle['shape-declutter-mode'],\n    });\n\n    return shape;\n  }\n\n  const circleRadius = flatStyle['circle-radius'];\n  if (circleRadius) {\n    const prefix = 'circle-';\n    const circle = new Circle({\n      radius: circleRadius,\n      fill: getFill(flatStyle, prefix),\n      stroke: getStroke(flatStyle, prefix),\n      displacement: flatStyle['circle-displacement'],\n      scale: flatStyle['circle-scale'],\n      rotation: flatStyle['circle-rotation'],\n      rotateWithView: flatStyle['circle-rotate-with-view'],\n      declutterMode: flatStyle['circle-declutter-mode'],\n    });\n\n    return circle;\n  }\n\n  return;\n}\n","/**\n * @module ol/layer/BaseVector\n */\nimport Layer from './Layer.js';\nimport RBush from 'rbush';\nimport Style, {\n  createDefaultStyle,\n  toFunction as toStyleFunction,\n} from '../style/Style.js';\nimport {toStyle} from '../style/flat.js';\n\n/**\n * @template {import(\"../source/Vector.js\").default|import(\"../source/VectorTile.js\").default} VectorSourceType\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {import(\"../render.js\").OrderFunction} [renderOrder] Render order. Function to be used when sorting\n * features before rendering. By default features are drawn in the order that they are created. Use\n * `null` to avoid the sort, but get an undefined draw order.\n * @property {number} [renderBuffer=100] The buffer in pixels around the viewport extent used by the\n * renderer when getting features from the vector source for the rendering or hit-detection.\n * Recommended value: the size of the largest symbol, line width or label.\n * @property {VectorSourceType} [source] Source.\n * @property {import(\"../Map.js\").default} [map] Sets the layer as overlay on a map. The map will not manage\n * this layer in its layers collection, and the layer will be rendered on top. This is useful for\n * temporary layers. The standard way to add a layer to a map and have it managed by the map is to\n * use [map.addLayer()]{@link import(\"../Map.js\").default#addLayer}.\n * @property {boolean} [declutter=false] Declutter images and text. Decluttering is applied to all\n * image and text styles of all Vector and VectorTile layers that have set this to `true`. The priority\n * is defined by the z-index of the layer, the `zIndex` of the style and the render order of features.\n * Higher z-index means higher priority. Within the same z-index, a feature rendered before another has\n * higher priority.\n *\n * As an optimization decluttered features from layers with the same `className` are rendered above\n * the fill and stroke styles of all of those layers regardless of z-index.  To opt out of this\n * behavior and place declutterd features with their own layer configure the layer with a `className`\n * other than `ol-layer`.\n * @property {import(\"../style/Style.js\").StyleLike|import(\"../style/flat.js\").FlatStyleLike|null} [style] Layer style. When set to `null`, only\n * features that have their own style will be rendered. See {@link module:ol/style/Style~Style} for the default style\n * which will be used if this is not set.\n * @property {import(\"./Base.js\").BackgroundColor} [background] Background color for the layer. If not specified, no background\n * will be rendered.\n * @property {boolean} [updateWhileAnimating=false] When set to `true`, feature batches will\n * be recreated during animations. This means that no vectors will be shown clipped, but the\n * setting will have a performance impact for large amounts of vector data. When set to `false`,\n * batches will be recreated when no animation is active.\n * @property {boolean} [updateWhileInteracting=false] When set to `true`, feature batches will\n * be recreated during interactions. See also `updateWhileAnimating`.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n */\n\n/**\n * @enum {string}\n * @private\n */\nconst Property = {\n  RENDER_ORDER: 'renderOrder',\n};\n\n/**\n * @classdesc\n * Vector data that is rendered client-side.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @template {import(\"../source/Vector.js\").default|import(\"../source/VectorTile.js\").default} VectorSourceType\n * @template {import(\"../renderer/canvas/VectorLayer.js\").default|import(\"../renderer/canvas/VectorTileLayer.js\").default|import(\"../renderer/canvas/VectorImageLayer.js\").default|import(\"../renderer/webgl/PointsLayer.js\").default} RendererType\n * @extends {Layer<VectorSourceType, RendererType>}\n * @api\n */\nclass BaseVectorLayer extends Layer {\n  /**\n   * @param {Options<VectorSourceType>} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    const baseOptions = Object.assign({}, options);\n\n    delete baseOptions.style;\n    delete baseOptions.renderBuffer;\n    delete baseOptions.updateWhileAnimating;\n    delete baseOptions.updateWhileInteracting;\n    super(baseOptions);\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.declutter_ =\n      options.declutter !== undefined ? options.declutter : false;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.renderBuffer_ =\n      options.renderBuffer !== undefined ? options.renderBuffer : 100;\n\n    /**\n     * User provided style.\n     * @type {import(\"../style/Style.js\").StyleLike}\n     * @private\n     */\n    this.style_ = null;\n\n    /**\n     * Style function for use within the library.\n     * @type {import(\"../style/Style.js\").StyleFunction|undefined}\n     * @private\n     */\n    this.styleFunction_ = undefined;\n\n    this.setStyle(options.style);\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.updateWhileAnimating_ =\n      options.updateWhileAnimating !== undefined\n        ? options.updateWhileAnimating\n        : false;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.updateWhileInteracting_ =\n      options.updateWhileInteracting !== undefined\n        ? options.updateWhileInteracting\n        : false;\n  }\n\n  /**\n   * @return {boolean} Declutter.\n   */\n  getDeclutter() {\n    return this.declutter_;\n  }\n\n  /**\n   * Get the topmost feature that intersects the given pixel on the viewport. Returns a promise\n   * that resolves with an array of features. The array will either contain the topmost feature\n   * when a hit was detected, or it will be empty.\n   *\n   * The hit detection algorithm used for this method is optimized for performance, but is less\n   * accurate than the one used in [map.getFeaturesAtPixel()]{@link import(\"../Map.js\").default#getFeaturesAtPixel}.\n   * Text is not considered, and icons are only represented by their bounding box instead of the exact\n   * image.\n   *\n   * @param {import(\"../pixel.js\").Pixel} pixel Pixel.\n   * @return {Promise<Array<import(\"../Feature\").FeatureLike>>} Promise that resolves with an array of features.\n   * @api\n   */\n  getFeatures(pixel) {\n    return super.getFeatures(pixel);\n  }\n\n  /**\n   * @return {number|undefined} Render buffer.\n   */\n  getRenderBuffer() {\n    return this.renderBuffer_;\n  }\n\n  /**\n   * @return {function(import(\"../Feature.js\").default, import(\"../Feature.js\").default): number|null|undefined} Render\n   *     order.\n   */\n  getRenderOrder() {\n    return /** @type {import(\"../render.js\").OrderFunction|null|undefined} */ (\n      this.get(Property.RENDER_ORDER)\n    );\n  }\n\n  /**\n   * Get the style for features.  This returns whatever was passed to the `style`\n   * option at construction or to the `setStyle` method.\n   * @return {import(\"../style/Style.js\").StyleLike|null|undefined} Layer style.\n   * @api\n   */\n  getStyle() {\n    return this.style_;\n  }\n\n  /**\n   * Get the style function.\n   * @return {import(\"../style/Style.js\").StyleFunction|undefined} Layer style function.\n   * @api\n   */\n  getStyleFunction() {\n    return this.styleFunction_;\n  }\n\n  /**\n   * @return {boolean} Whether the rendered layer should be updated while\n   *     animating.\n   */\n  getUpdateWhileAnimating() {\n    return this.updateWhileAnimating_;\n  }\n\n  /**\n   * @return {boolean} Whether the rendered layer should be updated while\n   *     interacting.\n   */\n  getUpdateWhileInteracting() {\n    return this.updateWhileInteracting_;\n  }\n\n  /**\n   * Render declutter items for this layer\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   */\n  renderDeclutter(frameState) {\n    if (!frameState.declutterTree) {\n      frameState.declutterTree = new RBush(9);\n    }\n    /** @type {*} */ (this.getRenderer()).renderDeclutter(frameState);\n  }\n\n  /**\n   * @param {import(\"../render.js\").OrderFunction|null|undefined} renderOrder\n   *     Render order.\n   */\n  setRenderOrder(renderOrder) {\n    this.set(Property.RENDER_ORDER, renderOrder);\n  }\n\n  /**\n   * Set the style for features.  This can be a single style object, an array\n   * of styles, or a function that takes a feature and resolution and returns\n   * an array of styles. If set to `null`, the layer has no style (a `null` style),\n   * so only features that have their own styles will be rendered in the layer. Call\n   * `setStyle()` without arguments to reset to the default style. See\n   * [the ol/style/Style module]{@link module:ol/style/Style~Style} for information on the default style.\n   *\n   * If your layer has a static style, you can use \"flat\" style object literals instead of\n   * using the `Style` and symbolizer constructors (`Fill`, `Stroke`, etc.).  See the documentation\n   * for the [flat style types]{@link module:ol/style/flat~FlatStyle} to see what properties are supported.\n   *\n   * @param {import(\"../style/Style.js\").StyleLike|import(\"../style/flat.js\").FlatStyleLike|null} [style] Layer style.\n   * @api\n   */\n  setStyle(style) {\n    /**\n     * @type {import(\"../style/Style.js\").StyleLike|null}\n     */\n    let styleLike;\n\n    if (style === undefined) {\n      styleLike = createDefaultStyle;\n    } else if (style === null) {\n      styleLike = null;\n    } else if (typeof style === 'function') {\n      styleLike = style;\n    } else if (style instanceof Style) {\n      styleLike = style;\n    } else if (Array.isArray(style)) {\n      const len = style.length;\n\n      /**\n       * @type {Array<Style>}\n       */\n      const styles = new Array(len);\n\n      for (let i = 0; i < len; ++i) {\n        const s = style[i];\n        if (s instanceof Style) {\n          styles[i] = s;\n        } else {\n          styles[i] = toStyle(s);\n        }\n      }\n      styleLike = styles;\n    } else {\n      styleLike = toStyle(style);\n    }\n\n    this.style_ = styleLike;\n    this.styleFunction_ =\n      style === null ? undefined : toStyleFunction(this.style_);\n    this.changed();\n  }\n}\n\nexport default BaseVectorLayer;\n","/**\n * @module ol/layer/Group\n */\nimport BaseLayer from './Base.js';\nimport Collection from '../Collection.js';\nimport CollectionEventType from '../CollectionEventType.js';\nimport Event from '../events/Event.js';\nimport EventType from '../events/EventType.js';\nimport ObjectEventType from '../ObjectEventType.js';\nimport {assert} from '../asserts.js';\nimport {clear} from '../obj.js';\nimport {getIntersection} from '../extent.js';\nimport {getUid} from '../util.js';\nimport {listen, unlistenByKey} from '../events.js';\n\n/**\n * @typedef {'addlayer'|'removelayer'} EventType\n */\n\n/**\n * @classdesc\n * A layer group triggers 'addlayer' and 'removelayer' events when layers are added to or removed from\n * the group or one of its child groups.  When a layer group is added to or removed from another layer group,\n * a single event will be triggered (instead of one per layer in the group added or removed).\n */\nexport class GroupEvent extends Event {\n  /**\n   * @param {EventType} type The event type.\n   * @param {BaseLayer} layer The layer.\n   */\n  constructor(type, layer) {\n    super(type);\n\n    /**\n     * The added or removed layer.\n     * @type {BaseLayer}\n     * @api\n     */\n    this.layer = layer;\n  }\n}\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"./Base\").BaseLayerObjectEventTypes|\n *     'change:layers', import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"./Base\").BaseLayerObjectEventTypes|'change:layers', Return>} GroupOnSignature\n */\n\n/**\n * @typedef {Object} Options\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {Array<import(\"./Base.js\").default>|Collection<import(\"./Base.js\").default>} [layers] Child layers.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n */\n\n/**\n * @enum {string}\n * @private\n */\nconst Property = {\n  LAYERS: 'layers',\n};\n\n/**\n * @classdesc\n * A {@link module:ol/Collection~Collection} of layers that are handled together.\n *\n * A generic `change` event is triggered when the group/Collection changes.\n *\n * @api\n */\nclass LayerGroup extends BaseLayer {\n  /**\n   * @param {Options} [options] Layer options.\n   */\n  constructor(options) {\n    options = options || {};\n    const baseOptions = /** @type {Options} */ (Object.assign({}, options));\n    delete baseOptions.layers;\n\n    let layers = options.layers;\n\n    super(baseOptions);\n\n    /***\n     * @type {GroupOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {GroupOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {GroupOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @private\n     * @type {Array<import(\"../events.js\").EventsKey>}\n     */\n    this.layersListenerKeys_ = [];\n\n    /**\n     * @private\n     * @type {Object<string, Array<import(\"../events.js\").EventsKey>>}\n     */\n    this.listenerKeys_ = {};\n\n    this.addChangeListener(Property.LAYERS, this.handleLayersChanged_);\n\n    if (layers) {\n      if (Array.isArray(layers)) {\n        layers = new Collection(layers.slice(), {unique: true});\n      } else {\n        assert(typeof (/** @type {?} */ (layers).getArray) === 'function', 43); // Expected `layers` to be an array or a `Collection`\n      }\n    } else {\n      layers = new Collection(undefined, {unique: true});\n    }\n\n    this.setLayers(layers);\n  }\n\n  /**\n   * @private\n   */\n  handleLayerChange_() {\n    this.changed();\n  }\n\n  /**\n   * @private\n   */\n  handleLayersChanged_() {\n    this.layersListenerKeys_.forEach(unlistenByKey);\n    this.layersListenerKeys_.length = 0;\n\n    const layers = this.getLayers();\n    this.layersListenerKeys_.push(\n      listen(layers, CollectionEventType.ADD, this.handleLayersAdd_, this),\n      listen(layers, CollectionEventType.REMOVE, this.handleLayersRemove_, this)\n    );\n\n    for (const id in this.listenerKeys_) {\n      this.listenerKeys_[id].forEach(unlistenByKey);\n    }\n    clear(this.listenerKeys_);\n\n    const layersArray = layers.getArray();\n    for (let i = 0, ii = layersArray.length; i < ii; i++) {\n      const layer = layersArray[i];\n      this.registerLayerListeners_(layer);\n      this.dispatchEvent(new GroupEvent('addlayer', layer));\n    }\n    this.changed();\n  }\n\n  /**\n   * @param {BaseLayer} layer The layer.\n   */\n  registerLayerListeners_(layer) {\n    const listenerKeys = [\n      listen(\n        layer,\n        ObjectEventType.PROPERTYCHANGE,\n        this.handleLayerChange_,\n        this\n      ),\n      listen(layer, EventType.CHANGE, this.handleLayerChange_, this),\n    ];\n\n    if (layer instanceof LayerGroup) {\n      listenerKeys.push(\n        listen(layer, 'addlayer', this.handleLayerGroupAdd_, this),\n        listen(layer, 'removelayer', this.handleLayerGroupRemove_, this)\n      );\n    }\n\n    this.listenerKeys_[getUid(layer)] = listenerKeys;\n  }\n\n  /**\n   * @param {GroupEvent} event The layer group event.\n   */\n  handleLayerGroupAdd_(event) {\n    this.dispatchEvent(new GroupEvent('addlayer', event.layer));\n  }\n\n  /**\n   * @param {GroupEvent} event The layer group event.\n   */\n  handleLayerGroupRemove_(event) {\n    this.dispatchEvent(new GroupEvent('removelayer', event.layer));\n  }\n\n  /**\n   * @param {import(\"../Collection.js\").CollectionEvent<import(\"./Base.js\").default>} collectionEvent CollectionEvent.\n   * @private\n   */\n  handleLayersAdd_(collectionEvent) {\n    const layer = collectionEvent.element;\n    this.registerLayerListeners_(layer);\n    this.dispatchEvent(new GroupEvent('addlayer', layer));\n    this.changed();\n  }\n\n  /**\n   * @param {import(\"../Collection.js\").CollectionEvent<import(\"./Base.js\").default>} collectionEvent CollectionEvent.\n   * @private\n   */\n  handleLayersRemove_(collectionEvent) {\n    const layer = collectionEvent.element;\n    const key = getUid(layer);\n    this.listenerKeys_[key].forEach(unlistenByKey);\n    delete this.listenerKeys_[key];\n    this.dispatchEvent(new GroupEvent('removelayer', layer));\n    this.changed();\n  }\n\n  /**\n   * Returns the {@link module:ol/Collection~Collection collection} of {@link module:ol/layer/Layer~Layer layers}\n   * in this group.\n   * @return {!Collection<import(\"./Base.js\").default>} Collection of\n   *   {@link module:ol/layer/Base~BaseLayer layers} that are part of this group.\n   * @observable\n   * @api\n   */\n  getLayers() {\n    return /** @type {!Collection<import(\"./Base.js\").default>} */ (\n      this.get(Property.LAYERS)\n    );\n  }\n\n  /**\n   * Set the {@link module:ol/Collection~Collection collection} of {@link module:ol/layer/Layer~Layer layers}\n   * in this group.\n   * @param {!Collection<import(\"./Base.js\").default>} layers Collection of\n   *   {@link module:ol/layer/Base~BaseLayer layers} that are part of this group.\n   * @observable\n   * @api\n   */\n  setLayers(layers) {\n    const collection = this.getLayers();\n    if (collection) {\n      const currentLayers = collection.getArray();\n      for (let i = 0, ii = currentLayers.length; i < ii; ++i) {\n        this.dispatchEvent(new GroupEvent('removelayer', currentLayers[i]));\n      }\n    }\n\n    this.set(Property.LAYERS, layers);\n  }\n\n  /**\n   * @param {Array<import(\"./Layer.js\").default>} [array] Array of layers (to be modified in place).\n   * @return {Array<import(\"./Layer.js\").default>} Array of layers.\n   */\n  getLayersArray(array) {\n    array = array !== undefined ? array : [];\n    this.getLayers().forEach(function (layer) {\n      layer.getLayersArray(array);\n    });\n    return array;\n  }\n\n  /**\n   * Get the layer states list and use this groups z-index as the default\n   * for all layers in this and nested groups, if it is unset at this point.\n   * If dest is not provided and this group's z-index is undefined\n   * 0 is used a the default z-index.\n   * @param {Array<import(\"./Layer.js\").State>} [dest] Optional list\n   * of layer states (to be modified in place).\n   * @return {Array<import(\"./Layer.js\").State>} List of layer states.\n   */\n  getLayerStatesArray(dest) {\n    const states = dest !== undefined ? dest : [];\n    const pos = states.length;\n\n    this.getLayers().forEach(function (layer) {\n      layer.getLayerStatesArray(states);\n    });\n\n    const ownLayerState = this.getLayerState();\n    let defaultZIndex = ownLayerState.zIndex;\n    if (!dest && ownLayerState.zIndex === undefined) {\n      defaultZIndex = 0;\n    }\n    for (let i = pos, ii = states.length; i < ii; i++) {\n      const layerState = states[i];\n      layerState.opacity *= ownLayerState.opacity;\n      layerState.visible = layerState.visible && ownLayerState.visible;\n      layerState.maxResolution = Math.min(\n        layerState.maxResolution,\n        ownLayerState.maxResolution\n      );\n      layerState.minResolution = Math.max(\n        layerState.minResolution,\n        ownLayerState.minResolution\n      );\n      layerState.minZoom = Math.max(layerState.minZoom, ownLayerState.minZoom);\n      layerState.maxZoom = Math.min(layerState.maxZoom, ownLayerState.maxZoom);\n      if (ownLayerState.extent !== undefined) {\n        if (layerState.extent !== undefined) {\n          layerState.extent = getIntersection(\n            layerState.extent,\n            ownLayerState.extent\n          );\n        } else {\n          layerState.extent = ownLayerState.extent;\n        }\n      }\n      if (layerState.zIndex === undefined) {\n        layerState.zIndex = defaultZIndex;\n      }\n    }\n\n    return states;\n  }\n\n  /**\n   * @return {import(\"../source/Source.js\").State} Source state.\n   */\n  getSourceState() {\n    return 'ready';\n  }\n}\n\nexport default LayerGroup;\n","/**\n * @module ol/layer/Layer\n */\nimport BaseLayer from './Base.js';\nimport EventType from '../events/EventType.js';\nimport LayerProperty from './Property.js';\nimport RenderEventType from '../render/EventType.js';\nimport {assert} from '../asserts.js';\nimport {listen, unlistenByKey} from '../events.js';\n\n/**\n * @typedef {function(import(\"../Map.js\").FrameState):HTMLElement} RenderFunction\n */\n\n/**\n * @typedef {'sourceready'|'change:source'} LayerEventType\n */\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"./Base\").BaseLayerObjectEventTypes|\n *     LayerEventType, import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../render/EventType\").LayerRenderEventTypes, import(\"../render/Event\").default, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"./Base\").BaseLayerObjectEventTypes|LayerEventType|\n *     import(\"../render/EventType\").LayerRenderEventTypes, Return>} LayerOnSignature\n */\n\n/**\n * @template {import(\"../source/Source.js\").default} [SourceType=import(\"../source/Source.js\").default]\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {SourceType} [source] Source for this layer.  If not provided to the constructor,\n * the source can be set by calling {@link module:ol/layer/Layer~Layer#setSource layer.setSource(source)} after\n * construction.\n * @property {import(\"../Map.js\").default|null} [map] Map.\n * @property {RenderFunction} [render] Render function. Takes the frame state as input and is expected to return an\n * HTML element. Will overwrite the default rendering for the layer.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n */\n\n/**\n * @typedef {Object} State\n * @property {import(\"./Layer.js\").default} layer Layer.\n * @property {number} opacity Opacity, the value is rounded to two digits to appear after the decimal point.\n * @property {boolean} visible Visible.\n * @property {boolean} managed Managed.\n * @property {import(\"../extent.js\").Extent} [extent] Extent.\n * @property {number} zIndex ZIndex.\n * @property {number} maxResolution Maximum resolution.\n * @property {number} minResolution Minimum resolution.\n * @property {number} minZoom Minimum zoom.\n * @property {number} maxZoom Maximum zoom.\n */\n\n/**\n * @classdesc\n * Base class from which all layer types are derived. This should only be instantiated\n * in the case where a custom layer is added to the map with a custom `render` function.\n * Such a function can be specified in the `options` object, and is expected to return an HTML element.\n *\n * A visual representation of raster or vector map data.\n * Layers group together those properties that pertain to how the data is to be\n * displayed, irrespective of the source of that data.\n *\n * Layers are usually added to a map with [map.addLayer()]{@link import(\"../Map.js\").default#addLayer}.\n * Components like {@link module:ol/interaction/Draw~Draw} use unmanaged layers\n * internally. These unmanaged layers are associated with the map using\n * [layer.setMap()]{@link module:ol/layer/Layer~Layer#setMap} instead.\n *\n * A generic `change` event is fired when the state of the source changes.\n * A `sourceready` event is fired when the layer's source is ready.\n *\n * @fires import(\"../render/Event.js\").RenderEvent#prerender\n * @fires import(\"../render/Event.js\").RenderEvent#postrender\n * @fires import(\"../events/Event.js\").BaseEvent#sourceready\n *\n * @template {import(\"../source/Source.js\").default} [SourceType=import(\"../source/Source.js\").default]\n * @template {import(\"../renderer/Layer.js\").default} [RendererType=import(\"../renderer/Layer.js\").default]\n * @api\n */\nclass Layer extends BaseLayer {\n  /**\n   * @param {Options<SourceType>} options Layer options.\n   */\n  constructor(options) {\n    const baseOptions = Object.assign({}, options);\n    delete baseOptions.source;\n\n    super(baseOptions);\n\n    /***\n     * @type {LayerOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {LayerOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {LayerOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @private\n     * @type {?import(\"../events.js\").EventsKey}\n     */\n    this.mapPrecomposeKey_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../events.js\").EventsKey}\n     */\n    this.mapRenderKey_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../events.js\").EventsKey}\n     */\n    this.sourceChangeKey_ = null;\n\n    /**\n     * @private\n     * @type {RendererType}\n     */\n    this.renderer_ = null;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.sourceReady_ = false;\n\n    /**\n     * @protected\n     * @type {boolean}\n     */\n    this.rendered = false;\n\n    // Overwrite default render method with a custom one\n    if (options.render) {\n      this.render = options.render;\n    }\n\n    if (options.map) {\n      this.setMap(options.map);\n    }\n\n    this.addChangeListener(\n      LayerProperty.SOURCE,\n      this.handleSourcePropertyChange_\n    );\n\n    const source = options.source\n      ? /** @type {SourceType} */ (options.source)\n      : null;\n    this.setSource(source);\n  }\n\n  /**\n   * @param {Array<import(\"./Layer.js\").default>} [array] Array of layers (to be modified in place).\n   * @return {Array<import(\"./Layer.js\").default>} Array of layers.\n   */\n  getLayersArray(array) {\n    array = array ? array : [];\n    array.push(this);\n    return array;\n  }\n\n  /**\n   * @param {Array<import(\"./Layer.js\").State>} [states] Optional list of layer states (to be modified in place).\n   * @return {Array<import(\"./Layer.js\").State>} List of layer states.\n   */\n  getLayerStatesArray(states) {\n    states = states ? states : [];\n    states.push(this.getLayerState());\n    return states;\n  }\n\n  /**\n   * Get the layer source.\n   * @return {SourceType|null} The layer source (or `null` if not yet set).\n   * @observable\n   * @api\n   */\n  getSource() {\n    return /** @type {SourceType} */ (this.get(LayerProperty.SOURCE)) || null;\n  }\n\n  /**\n   * @return {SourceType|null} The source being rendered.\n   */\n  getRenderSource() {\n    return this.getSource();\n  }\n\n  /**\n   * @return {import(\"../source/Source.js\").State} Source state.\n   */\n  getSourceState() {\n    const source = this.getSource();\n    return !source ? 'undefined' : source.getState();\n  }\n\n  /**\n   * @private\n   */\n  handleSourceChange_() {\n    this.changed();\n    if (this.sourceReady_ || this.getSource().getState() !== 'ready') {\n      return;\n    }\n    this.sourceReady_ = true;\n    this.dispatchEvent('sourceready');\n  }\n\n  /**\n   * @private\n   */\n  handleSourcePropertyChange_() {\n    if (this.sourceChangeKey_) {\n      unlistenByKey(this.sourceChangeKey_);\n      this.sourceChangeKey_ = null;\n    }\n    this.sourceReady_ = false;\n    const source = this.getSource();\n    if (source) {\n      this.sourceChangeKey_ = listen(\n        source,\n        EventType.CHANGE,\n        this.handleSourceChange_,\n        this\n      );\n      if (source.getState() === 'ready') {\n        this.sourceReady_ = true;\n        setTimeout(() => {\n          this.dispatchEvent('sourceready');\n        }, 0);\n      }\n    }\n    this.changed();\n  }\n\n  /**\n   * @param {import(\"../pixel\").Pixel} pixel Pixel.\n   * @return {Promise<Array<import(\"../Feature\").FeatureLike>>} Promise that resolves with\n   * an array of features.\n   */\n  getFeatures(pixel) {\n    if (!this.renderer_) {\n      return Promise.resolve([]);\n    }\n    return this.renderer_.getFeatures(pixel);\n  }\n\n  /**\n   * @param {import(\"../pixel\").Pixel} pixel Pixel.\n   * @return {Uint8ClampedArray|Uint8Array|Float32Array|DataView|null} Pixel data.\n   */\n  getData(pixel) {\n    if (!this.renderer_ || !this.rendered) {\n      return null;\n    }\n    return this.renderer_.getData(pixel);\n  }\n\n  /**\n   * In charge to manage the rendering of the layer. One layer type is\n   * bounded with one layer renderer.\n   * @param {?import(\"../Map.js\").FrameState} frameState Frame state.\n   * @param {HTMLElement} target Target which the renderer may (but need not) use\n   * for rendering its content.\n   * @return {HTMLElement} The rendered element.\n   */\n  render(frameState, target) {\n    const layerRenderer = this.getRenderer();\n\n    if (layerRenderer.prepareFrame(frameState)) {\n      this.rendered = true;\n      return layerRenderer.renderFrame(frameState, target);\n    }\n  }\n\n  /**\n   * Called when a layer is not visible during a map render.\n   */\n  unrender() {\n    this.rendered = false;\n  }\n\n  /**\n   * For use inside the library only.\n   * @param {import(\"../Map.js\").default|null} map Map.\n   */\n  setMapInternal(map) {\n    if (!map) {\n      this.unrender();\n    }\n    this.set(LayerProperty.MAP, map);\n  }\n\n  /**\n   * For use inside the library only.\n   * @return {import(\"../Map.js\").default|null} Map.\n   */\n  getMapInternal() {\n    return this.get(LayerProperty.MAP);\n  }\n\n  /**\n   * Sets the layer to be rendered on top of other layers on a map. The map will\n   * not manage this layer in its layers collection. This\n   * is useful for temporary layers. To remove an unmanaged layer from the map,\n   * use `#setMap(null)`.\n   *\n   * To add the layer to a map and have it managed by the map, use\n   * {@link module:ol/Map~Map#addLayer} instead.\n   * @param {import(\"../Map.js\").default|null} map Map.\n   * @api\n   */\n  setMap(map) {\n    if (this.mapPrecomposeKey_) {\n      unlistenByKey(this.mapPrecomposeKey_);\n      this.mapPrecomposeKey_ = null;\n    }\n    if (!map) {\n      this.changed();\n    }\n    if (this.mapRenderKey_) {\n      unlistenByKey(this.mapRenderKey_);\n      this.mapRenderKey_ = null;\n    }\n    if (map) {\n      this.mapPrecomposeKey_ = listen(\n        map,\n        RenderEventType.PRECOMPOSE,\n        function (evt) {\n          const renderEvent =\n            /** @type {import(\"../render/Event.js\").default} */ (evt);\n          const layerStatesArray = renderEvent.frameState.layerStatesArray;\n          const layerState = this.getLayerState(false);\n          // A layer can only be added to the map once. Use either `layer.setMap()` or `map.addLayer()`, not both.\n          assert(\n            !layerStatesArray.some(function (arrayLayerState) {\n              return arrayLayerState.layer === layerState.layer;\n            }),\n            67\n          );\n          layerStatesArray.push(layerState);\n        },\n        this\n      );\n      this.mapRenderKey_ = listen(this, EventType.CHANGE, map.render, map);\n      this.changed();\n    }\n  }\n\n  /**\n   * Set the layer source.\n   * @param {SourceType|null} source The layer source.\n   * @observable\n   * @api\n   */\n  setSource(source) {\n    this.set(LayerProperty.SOURCE, source);\n  }\n\n  /**\n   * Get the renderer for this layer.\n   * @return {RendererType|null} The layer renderer.\n   */\n  getRenderer() {\n    if (!this.renderer_) {\n      this.renderer_ = this.createRenderer();\n    }\n    return this.renderer_;\n  }\n\n  /**\n   * @return {boolean} The layer has a renderer.\n   */\n  hasRenderer() {\n    return !!this.renderer_;\n  }\n\n  /**\n   * Create a renderer for this layer.\n   * @return {RendererType} A layer renderer.\n   * @protected\n   */\n  createRenderer() {\n    return null;\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    if (this.renderer_) {\n      this.renderer_.dispose();\n      delete this.renderer_;\n    }\n\n    this.setSource(null);\n    super.disposeInternal();\n  }\n}\n\n/**\n * Return `true` if the layer is visible and if the provided view state\n * has resolution and zoom levels that are in range of the layer's min/max.\n * @param {State} layerState Layer state.\n * @param {import(\"../View.js\").State} viewState View state.\n * @return {boolean} The layer is visible at the given view state.\n */\nexport function inView(layerState, viewState) {\n  if (!layerState.visible) {\n    return false;\n  }\n  const resolution = viewState.resolution;\n  if (\n    resolution < layerState.minResolution ||\n    resolution >= layerState.maxResolution\n  ) {\n    return false;\n  }\n  const zoom = viewState.zoom;\n  return zoom > layerState.minZoom && zoom <= layerState.maxZoom;\n}\n\nexport default Layer;\n","/**\n * @module ol/layer/Property\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  OPACITY: 'opacity',\n  VISIBLE: 'visible',\n  EXTENT: 'extent',\n  Z_INDEX: 'zIndex',\n  MAX_RESOLUTION: 'maxResolution',\n  MIN_RESOLUTION: 'minResolution',\n  MAX_ZOOM: 'maxZoom',\n  MIN_ZOOM: 'minZoom',\n  SOURCE: 'source',\n  MAP: 'map',\n};\n","/**\n * @module ol/layer/TileProperty\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  PRELOAD: 'preload',\n  USE_INTERIM_TILES_ON_ERROR: 'useInterimTilesOnError',\n};\n","/**\n * @module ol/renderer/canvas/VectorLayer\n */\nimport CanvasBuilderGroup from '../../render/canvas/BuilderGroup.js';\nimport CanvasLayerRenderer, {canvasPool} from './Layer.js';\nimport ExecutorGroup from '../../render/canvas/ExecutorGroup.js';\nimport ViewHint from '../../ViewHint.js';\nimport {\n  HIT_DETECT_RESOLUTION,\n  createHitDetectionImageData,\n  hitDetect,\n} from '../../render/canvas/hitdetect.js';\nimport {\n  apply,\n  makeInverse,\n  makeScale,\n  toString as transformToString,\n} from '../../transform.js';\nimport {\n  buffer,\n  containsExtent,\n  createEmpty,\n  getWidth,\n  intersects as intersectsExtent,\n  wrapX as wrapExtentX,\n} from '../../extent.js';\nimport {createCanvasContext2D, releaseCanvas} from '../../dom.js';\nimport {\n  defaultOrder as defaultRenderOrder,\n  getTolerance as getRenderTolerance,\n  getSquaredTolerance as getSquaredRenderTolerance,\n  renderFeature,\n} from '../vector.js';\nimport {equals} from '../../array.js';\nimport {\n  fromUserExtent,\n  getTransformFromProjections,\n  getUserProjection,\n  toUserExtent,\n  toUserResolution,\n} from '../../proj.js';\nimport {getUid} from '../../util.js';\nimport {wrapX as wrapCoordinateX} from '../../coordinate.js';\n\n/**\n * @classdesc\n * Canvas renderer for vector layers.\n * @api\n */\nclass CanvasVectorLayerRenderer extends CanvasLayerRenderer {\n  /**\n   * @param {import(\"../../layer/BaseVector.js\").default} vectorLayer Vector layer.\n   */\n  constructor(vectorLayer) {\n    super(vectorLayer);\n\n    /** @private */\n    this.boundHandleStyleImageChange_ = this.handleStyleImageChange_.bind(this);\n\n    /**\n     * @type {boolean}\n     */\n    this.animatingOrInteracting_;\n\n    /**\n     * @type {ImageData|null}\n     */\n    this.hitDetectionImageData_ = null;\n\n    /**\n     * @type {Array<import(\"../../Feature.js\").default>}\n     */\n    this.renderedFeatures_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.renderedRevision_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.renderedResolution_ = NaN;\n\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.renderedExtent_ = createEmpty();\n\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.wrappedRenderedExtent_ = createEmpty();\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.renderedRotation_;\n\n    /**\n     * @private\n     * @type {import(\"../../coordinate\").Coordinate}\n     */\n    this.renderedCenter_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../../proj/Projection\").default}\n     */\n    this.renderedProjection_ = null;\n\n    /**\n     * @private\n     * @type {function(import(\"../../Feature.js\").default, import(\"../../Feature.js\").default): number|null}\n     */\n    this.renderedRenderOrder_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../../render/canvas/ExecutorGroup\").default}\n     */\n    this.replayGroup_ = null;\n\n    /**\n     * A new replay group had to be created by `prepareFrame()`\n     * @type {boolean}\n     */\n    this.replayGroupChanged = true;\n\n    /**\n     * @type {import(\"../../render/canvas/ExecutorGroup\").default}\n     */\n    this.declutterExecutorGroup = null;\n\n    /**\n     * Clipping to be performed by `renderFrame()`\n     * @type {boolean}\n     */\n    this.clipping = true;\n\n    /**\n     * @private\n     * @type {CanvasRenderingContext2D}\n     */\n    this.compositionContext_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.opacity_ = 1;\n  }\n\n  /**\n   * @param {ExecutorGroup} executorGroup Executor group.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {import(\"rbush\").default} [declutterTree] Declutter tree.\n   */\n  renderWorlds(executorGroup, frameState, declutterTree) {\n    const extent = frameState.extent;\n    const viewState = frameState.viewState;\n    const center = viewState.center;\n    const resolution = viewState.resolution;\n    const projection = viewState.projection;\n    const rotation = viewState.rotation;\n    const projectionExtent = projection.getExtent();\n    const vectorSource = this.getLayer().getSource();\n    const pixelRatio = frameState.pixelRatio;\n    const viewHints = frameState.viewHints;\n    const snapToPixel = !(\n      viewHints[ViewHint.ANIMATING] || viewHints[ViewHint.INTERACTING]\n    );\n    const context = this.compositionContext_;\n    const width = Math.round(frameState.size[0] * pixelRatio);\n    const height = Math.round(frameState.size[1] * pixelRatio);\n\n    const multiWorld = vectorSource.getWrapX() && projection.canWrapX();\n    const worldWidth = multiWorld ? getWidth(projectionExtent) : null;\n    const endWorld = multiWorld\n      ? Math.ceil((extent[2] - projectionExtent[2]) / worldWidth) + 1\n      : 1;\n    let world = multiWorld\n      ? Math.floor((extent[0] - projectionExtent[0]) / worldWidth)\n      : 0;\n    do {\n      const transform = this.getRenderTransform(\n        center,\n        resolution,\n        rotation,\n        pixelRatio,\n        width,\n        height,\n        world * worldWidth\n      );\n      executorGroup.execute(\n        context,\n        1,\n        transform,\n        rotation,\n        snapToPixel,\n        undefined,\n        declutterTree\n      );\n    } while (++world < endWorld);\n  }\n\n  setupCompositionContext_() {\n    if (this.opacity_ !== 1) {\n      const compositionContext = createCanvasContext2D(\n        this.context.canvas.width,\n        this.context.canvas.height,\n        canvasPool\n      );\n      this.compositionContext_ = compositionContext;\n    } else {\n      this.compositionContext_ = this.context;\n    }\n  }\n\n  releaseCompositionContext_() {\n    if (this.opacity_ !== 1) {\n      const alpha = this.context.globalAlpha;\n      this.context.globalAlpha = this.opacity_;\n      this.context.drawImage(this.compositionContext_.canvas, 0, 0);\n      this.context.globalAlpha = alpha;\n      releaseCanvas(this.compositionContext_);\n      canvasPool.push(this.compositionContext_.canvas);\n      this.compositionContext_ = null;\n    }\n  }\n\n  /**\n   * Render declutter items for this layer\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   */\n  renderDeclutter(frameState) {\n    if (this.declutterExecutorGroup) {\n      this.setupCompositionContext_();\n      this.renderWorlds(\n        this.declutterExecutorGroup,\n        frameState,\n        frameState.declutterTree\n      );\n      this.releaseCompositionContext_();\n    }\n  }\n\n  /**\n   * Render the layer.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {HTMLElement} target Target that may be used to render content to.\n   * @return {HTMLElement} The rendered element.\n   */\n  renderFrame(frameState, target) {\n    const pixelRatio = frameState.pixelRatio;\n    const layerState = frameState.layerStatesArray[frameState.layerIndex];\n\n    // set forward and inverse pixel transforms\n    makeScale(this.pixelTransform, 1 / pixelRatio, 1 / pixelRatio);\n    makeInverse(this.inversePixelTransform, this.pixelTransform);\n\n    const canvasTransform = transformToString(this.pixelTransform);\n\n    this.useContainer(target, canvasTransform, this.getBackground(frameState));\n    const context = this.context;\n    const canvas = context.canvas;\n\n    const replayGroup = this.replayGroup_;\n    const declutterExecutorGroup = this.declutterExecutorGroup;\n    if (\n      (!replayGroup || replayGroup.isEmpty()) &&\n      (!declutterExecutorGroup || declutterExecutorGroup.isEmpty())\n    ) {\n      return null;\n    }\n\n    // resize and clear\n    const width = Math.round(frameState.size[0] * pixelRatio);\n    const height = Math.round(frameState.size[1] * pixelRatio);\n    if (canvas.width != width || canvas.height != height) {\n      canvas.width = width;\n      canvas.height = height;\n      if (canvas.style.transform !== canvasTransform) {\n        canvas.style.transform = canvasTransform;\n      }\n    } else if (!this.containerReused) {\n      context.clearRect(0, 0, width, height);\n    }\n\n    this.preRender(context, frameState);\n\n    const viewState = frameState.viewState;\n    const projection = viewState.projection;\n\n    this.opacity_ = layerState.opacity;\n    this.setupCompositionContext_();\n\n    // clipped rendering if layer extent is set\n    let clipped = false;\n    let render = true;\n    if (layerState.extent && this.clipping) {\n      const layerExtent = fromUserExtent(layerState.extent, projection);\n      render = intersectsExtent(layerExtent, frameState.extent);\n      clipped = render && !containsExtent(layerExtent, frameState.extent);\n      if (clipped) {\n        this.clipUnrotated(this.compositionContext_, frameState, layerExtent);\n      }\n    }\n\n    if (render) {\n      this.renderWorlds(replayGroup, frameState);\n    }\n\n    if (clipped) {\n      this.compositionContext_.restore();\n    }\n\n    this.releaseCompositionContext_();\n\n    this.postRender(context, frameState);\n\n    if (this.renderedRotation_ !== viewState.rotation) {\n      this.renderedRotation_ = viewState.rotation;\n      this.hitDetectionImageData_ = null;\n    }\n    return this.container;\n  }\n\n  /**\n   * Asynchronous layer level hit detection.\n   * @param {import(\"../../pixel.js\").Pixel} pixel Pixel.\n   * @return {Promise<Array<import(\"../../Feature\").default>>} Promise\n   * that resolves with an array of features.\n   */\n  getFeatures(pixel) {\n    return new Promise((resolve) => {\n      if (!this.hitDetectionImageData_ && !this.animatingOrInteracting_) {\n        const size = [this.context.canvas.width, this.context.canvas.height];\n        apply(this.pixelTransform, size);\n        const center = this.renderedCenter_;\n        const resolution = this.renderedResolution_;\n        const rotation = this.renderedRotation_;\n        const projection = this.renderedProjection_;\n        const extent = this.wrappedRenderedExtent_;\n        const layer = this.getLayer();\n        const transforms = [];\n        const width = size[0] * HIT_DETECT_RESOLUTION;\n        const height = size[1] * HIT_DETECT_RESOLUTION;\n        transforms.push(\n          this.getRenderTransform(\n            center,\n            resolution,\n            rotation,\n            HIT_DETECT_RESOLUTION,\n            width,\n            height,\n            0\n          ).slice()\n        );\n        const source = layer.getSource();\n        const projectionExtent = projection.getExtent();\n        if (\n          source.getWrapX() &&\n          projection.canWrapX() &&\n          !containsExtent(projectionExtent, extent)\n        ) {\n          let startX = extent[0];\n          const worldWidth = getWidth(projectionExtent);\n          let world = 0;\n          let offsetX;\n          while (startX < projectionExtent[0]) {\n            --world;\n            offsetX = worldWidth * world;\n            transforms.push(\n              this.getRenderTransform(\n                center,\n                resolution,\n                rotation,\n                HIT_DETECT_RESOLUTION,\n                width,\n                height,\n                offsetX\n              ).slice()\n            );\n            startX += worldWidth;\n          }\n          world = 0;\n          startX = extent[2];\n          while (startX > projectionExtent[2]) {\n            ++world;\n            offsetX = worldWidth * world;\n            transforms.push(\n              this.getRenderTransform(\n                center,\n                resolution,\n                rotation,\n                HIT_DETECT_RESOLUTION,\n                width,\n                height,\n                offsetX\n              ).slice()\n            );\n            startX -= worldWidth;\n          }\n        }\n\n        this.hitDetectionImageData_ = createHitDetectionImageData(\n          size,\n          transforms,\n          this.renderedFeatures_,\n          layer.getStyleFunction(),\n          extent,\n          resolution,\n          rotation\n        );\n      }\n      resolve(\n        hitDetect(pixel, this.renderedFeatures_, this.hitDetectionImageData_)\n      );\n    });\n  }\n\n  /**\n   * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {import(\"../vector.js\").FeatureCallback<T>} callback Feature callback.\n   * @param {Array<import(\"../Map.js\").HitMatch<T>>} matches The hit detected matches with tolerance.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  forEachFeatureAtCoordinate(\n    coordinate,\n    frameState,\n    hitTolerance,\n    callback,\n    matches\n  ) {\n    if (!this.replayGroup_) {\n      return undefined;\n    }\n    const resolution = frameState.viewState.resolution;\n    const rotation = frameState.viewState.rotation;\n    const layer = this.getLayer();\n\n    /** @type {!Object<string, import(\"../Map.js\").HitMatch<T>|true>} */\n    const features = {};\n\n    /**\n     * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n     * @param {import(\"../../geom/SimpleGeometry.js\").default} geometry Geometry.\n     * @param {number} distanceSq The squared distance to the click position\n     * @return {T|undefined} Callback result.\n     */\n    const featureCallback = function (feature, geometry, distanceSq) {\n      const key = getUid(feature);\n      const match = features[key];\n      if (!match) {\n        if (distanceSq === 0) {\n          features[key] = true;\n          return callback(feature, layer, geometry);\n        }\n        matches.push(\n          (features[key] = {\n            feature: feature,\n            layer: layer,\n            geometry: geometry,\n            distanceSq: distanceSq,\n            callback: callback,\n          })\n        );\n      } else if (match !== true && distanceSq < match.distanceSq) {\n        if (distanceSq === 0) {\n          features[key] = true;\n          matches.splice(matches.lastIndexOf(match), 1);\n          return callback(feature, layer, geometry);\n        }\n        match.geometry = geometry;\n        match.distanceSq = distanceSq;\n      }\n      return undefined;\n    };\n\n    let result;\n    const executorGroups = [this.replayGroup_];\n    if (this.declutterExecutorGroup) {\n      executorGroups.push(this.declutterExecutorGroup);\n    }\n    executorGroups.some((executorGroup) => {\n      return (result = executorGroup.forEachFeatureAtCoordinate(\n        coordinate,\n        resolution,\n        rotation,\n        hitTolerance,\n        featureCallback,\n        executorGroup === this.declutterExecutorGroup &&\n          frameState.declutterTree\n          ? frameState.declutterTree.all().map((item) => item.value)\n          : null\n      ));\n    });\n\n    return result;\n  }\n\n  /**\n   * Perform action necessary to get the layer rendered after new fonts have loaded\n   */\n  handleFontsChanged() {\n    const layer = this.getLayer();\n    if (layer.getVisible() && this.replayGroup_) {\n      layer.changed();\n    }\n  }\n\n  /**\n   * Handle changes in image style state.\n   * @param {import(\"../../events/Event.js\").default} event Image style change event.\n   * @private\n   */\n  handleStyleImageChange_(event) {\n    this.renderIfReadyAndVisible();\n  }\n\n  /**\n   * Determine whether render should be called.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @return {boolean} Layer is ready to be rendered.\n   */\n  prepareFrame(frameState) {\n    const vectorLayer = this.getLayer();\n    const vectorSource = vectorLayer.getSource();\n    if (!vectorSource) {\n      return false;\n    }\n\n    const animating = frameState.viewHints[ViewHint.ANIMATING];\n    const interacting = frameState.viewHints[ViewHint.INTERACTING];\n    const updateWhileAnimating = vectorLayer.getUpdateWhileAnimating();\n    const updateWhileInteracting = vectorLayer.getUpdateWhileInteracting();\n\n    if (\n      (this.ready && !updateWhileAnimating && animating) ||\n      (!updateWhileInteracting && interacting)\n    ) {\n      this.animatingOrInteracting_ = true;\n      return true;\n    }\n    this.animatingOrInteracting_ = false;\n\n    const frameStateExtent = frameState.extent;\n    const viewState = frameState.viewState;\n    const projection = viewState.projection;\n    const resolution = viewState.resolution;\n    const pixelRatio = frameState.pixelRatio;\n    const vectorLayerRevision = vectorLayer.getRevision();\n    const vectorLayerRenderBuffer = vectorLayer.getRenderBuffer();\n    let vectorLayerRenderOrder = vectorLayer.getRenderOrder();\n\n    if (vectorLayerRenderOrder === undefined) {\n      vectorLayerRenderOrder = defaultRenderOrder;\n    }\n\n    const center = viewState.center.slice();\n    const extent = buffer(\n      frameStateExtent,\n      vectorLayerRenderBuffer * resolution\n    );\n    const renderedExtent = extent.slice();\n    const loadExtents = [extent.slice()];\n    const projectionExtent = projection.getExtent();\n\n    if (\n      vectorSource.getWrapX() &&\n      projection.canWrapX() &&\n      !containsExtent(projectionExtent, frameState.extent)\n    ) {\n      // For the replay group, we need an extent that intersects the real world\n      // (-180° to +180°). To support geometries in a coordinate range from -540°\n      // to +540°, we add at least 1 world width on each side of the projection\n      // extent. If the viewport is wider than the world, we need to add half of\n      // the viewport width to make sure we cover the whole viewport.\n      const worldWidth = getWidth(projectionExtent);\n      const gutter = Math.max(getWidth(extent) / 2, worldWidth);\n      extent[0] = projectionExtent[0] - gutter;\n      extent[2] = projectionExtent[2] + gutter;\n      wrapCoordinateX(center, projection);\n      const loadExtent = wrapExtentX(loadExtents[0], projection);\n      // If the extent crosses the date line, we load data for both edges of the worlds\n      if (\n        loadExtent[0] < projectionExtent[0] &&\n        loadExtent[2] < projectionExtent[2]\n      ) {\n        loadExtents.push([\n          loadExtent[0] + worldWidth,\n          loadExtent[1],\n          loadExtent[2] + worldWidth,\n          loadExtent[3],\n        ]);\n      } else if (\n        loadExtent[0] > projectionExtent[0] &&\n        loadExtent[2] > projectionExtent[2]\n      ) {\n        loadExtents.push([\n          loadExtent[0] - worldWidth,\n          loadExtent[1],\n          loadExtent[2] - worldWidth,\n          loadExtent[3],\n        ]);\n      }\n    }\n\n    if (\n      this.ready &&\n      this.renderedResolution_ == resolution &&\n      this.renderedRevision_ == vectorLayerRevision &&\n      this.renderedRenderOrder_ == vectorLayerRenderOrder &&\n      containsExtent(this.wrappedRenderedExtent_, extent)\n    ) {\n      if (!equals(this.renderedExtent_, renderedExtent)) {\n        this.hitDetectionImageData_ = null;\n        this.renderedExtent_ = renderedExtent;\n      }\n      this.renderedCenter_ = center;\n      this.replayGroupChanged = false;\n      return true;\n    }\n\n    this.replayGroup_ = null;\n\n    const replayGroup = new CanvasBuilderGroup(\n      getRenderTolerance(resolution, pixelRatio),\n      extent,\n      resolution,\n      pixelRatio\n    );\n\n    let declutterBuilderGroup;\n    if (this.getLayer().getDeclutter()) {\n      declutterBuilderGroup = new CanvasBuilderGroup(\n        getRenderTolerance(resolution, pixelRatio),\n        extent,\n        resolution,\n        pixelRatio\n      );\n    }\n\n    const userProjection = getUserProjection();\n    let userTransform;\n    if (userProjection) {\n      for (let i = 0, ii = loadExtents.length; i < ii; ++i) {\n        const extent = loadExtents[i];\n        const userExtent = toUserExtent(extent, projection);\n        vectorSource.loadFeatures(\n          userExtent,\n          toUserResolution(resolution, projection),\n          userProjection\n        );\n      }\n      userTransform = getTransformFromProjections(userProjection, projection);\n    } else {\n      for (let i = 0, ii = loadExtents.length; i < ii; ++i) {\n        vectorSource.loadFeatures(loadExtents[i], resolution, projection);\n      }\n    }\n\n    const squaredTolerance = getSquaredRenderTolerance(resolution, pixelRatio);\n    let ready = true;\n    const render =\n      /**\n       * @param {import(\"../../Feature.js\").default} feature Feature.\n       */\n      (feature) => {\n        let styles;\n        const styleFunction =\n          feature.getStyleFunction() || vectorLayer.getStyleFunction();\n        if (styleFunction) {\n          styles = styleFunction(feature, resolution);\n        }\n        if (styles) {\n          const dirty = this.renderFeature(\n            feature,\n            squaredTolerance,\n            styles,\n            replayGroup,\n            userTransform,\n            declutterBuilderGroup\n          );\n          ready = ready && !dirty;\n        }\n      };\n\n    const userExtent = toUserExtent(extent, projection);\n    /** @type {Array<import(\"../../Feature.js\").default>} */\n    const features = vectorSource.getFeaturesInExtent(userExtent);\n    if (vectorLayerRenderOrder) {\n      features.sort(vectorLayerRenderOrder);\n    }\n    for (let i = 0, ii = features.length; i < ii; ++i) {\n      render(features[i]);\n    }\n    this.renderedFeatures_ = features;\n    this.ready = ready;\n\n    const replayGroupInstructions = replayGroup.finish();\n    const executorGroup = new ExecutorGroup(\n      extent,\n      resolution,\n      pixelRatio,\n      vectorSource.getOverlaps(),\n      replayGroupInstructions,\n      vectorLayer.getRenderBuffer()\n    );\n\n    if (declutterBuilderGroup) {\n      this.declutterExecutorGroup = new ExecutorGroup(\n        extent,\n        resolution,\n        pixelRatio,\n        vectorSource.getOverlaps(),\n        declutterBuilderGroup.finish(),\n        vectorLayer.getRenderBuffer()\n      );\n    }\n\n    this.renderedResolution_ = resolution;\n    this.renderedRevision_ = vectorLayerRevision;\n    this.renderedRenderOrder_ = vectorLayerRenderOrder;\n    this.renderedExtent_ = renderedExtent;\n    this.wrappedRenderedExtent_ = extent;\n    this.renderedCenter_ = center;\n    this.renderedProjection_ = projection;\n    this.replayGroup_ = executorGroup;\n    this.hitDetectionImageData_ = null;\n\n    this.replayGroupChanged = true;\n    return true;\n  }\n\n  /**\n   * @param {import(\"../../Feature.js\").default} feature Feature.\n   * @param {number} squaredTolerance Squared render tolerance.\n   * @param {import(\"../../style/Style.js\").default|Array<import(\"../../style/Style.js\").default>} styles The style or array of styles.\n   * @param {import(\"../../render/canvas/BuilderGroup.js\").default} builderGroup Builder group.\n   * @param {import(\"../../proj.js\").TransformFunction} [transform] Transform from user to view projection.\n   * @param {import(\"../../render/canvas/BuilderGroup.js\").default} [declutterBuilderGroup] Builder for decluttering.\n   * @return {boolean} `true` if an image is loading.\n   */\n  renderFeature(\n    feature,\n    squaredTolerance,\n    styles,\n    builderGroup,\n    transform,\n    declutterBuilderGroup\n  ) {\n    if (!styles) {\n      return false;\n    }\n    let loading = false;\n    if (Array.isArray(styles)) {\n      for (let i = 0, ii = styles.length; i < ii; ++i) {\n        loading =\n          renderFeature(\n            builderGroup,\n            feature,\n            styles[i],\n            squaredTolerance,\n            this.boundHandleStyleImageChange_,\n            transform,\n            declutterBuilderGroup\n          ) || loading;\n      }\n    } else {\n      loading = renderFeature(\n        builderGroup,\n        feature,\n        styles,\n        squaredTolerance,\n        this.boundHandleStyleImageChange_,\n        transform,\n        declutterBuilderGroup\n      );\n    }\n    return loading;\n  }\n}\n\nexport default CanvasVectorLayerRenderer;\n","/**\n * @module ol/layer/Vector\n */\nimport BaseVectorLayer from './BaseVector.js';\nimport CanvasVectorLayerRenderer from '../renderer/canvas/VectorLayer.js';\n\n/**\n * @classdesc\n * Vector data is rendered client-side, as vectors. This layer type provides most accurate rendering\n * even during animations. Points and labels stay upright on rotated views. For very large\n * amounts of vector data, performance may suffer during pan and zoom animations. In this case,\n * try {@link module:ol/layer/VectorImage~VectorImageLayer}.\n *\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @template {import(\"../source/Vector.js\").default} VectorSourceType\n * @extends {BaseVectorLayer<VectorSourceType, CanvasVectorLayerRenderer>}\n * @api\n */\nclass VectorLayer extends BaseVectorLayer {\n  /**\n   * @param {import(\"./BaseVector.js\").Options<VectorSourceType>} [options] Options.\n   */\n  constructor(options) {\n    super(options);\n  }\n\n  createRenderer() {\n    return new CanvasVectorLayerRenderer(this);\n  }\n}\n\nexport default VectorLayer;\n","/**\n * @module ol/renderer/canvas/VectorTileLayer\n */\nimport CanvasBuilderGroup from '../../render/canvas/BuilderGroup.js';\nimport CanvasExecutorGroup from '../../render/canvas/ExecutorGroup.js';\nimport CanvasTileLayerRenderer from './TileLayer.js';\nimport TileState from '../../TileState.js';\nimport ViewHint from '../../ViewHint.js';\nimport {\n  HIT_DETECT_RESOLUTION,\n  createHitDetectionImageData,\n  hitDetect,\n} from '../../render/canvas/hitdetect.js';\nimport {\n  apply as applyTransform,\n  create as createTransform,\n  multiply,\n  reset as resetTransform,\n  scale,\n  scale as scaleTransform,\n  translate as translateTransform,\n} from '../../transform.js';\nimport {\n  boundingExtent,\n  buffer,\n  containsExtent,\n  equals,\n  getIntersection,\n  getTopLeft,\n  intersects,\n} from '../../extent.js';\nimport {\n  getSquaredTolerance as getSquaredRenderTolerance,\n  renderFeature,\n} from '../vector.js';\nimport {getUid} from '../../util.js';\nimport {toSize} from '../../size.js';\nimport {wrapX} from '../../coordinate.js';\n\n/**\n * @type {!Object<string, Array<import(\"../../render/canvas.js\").BuilderType>>}\n */\nconst IMAGE_REPLAYS = {\n  'image': ['Polygon', 'Circle', 'LineString', 'Image', 'Text'],\n  'hybrid': ['Polygon', 'LineString'],\n  'vector': [],\n};\n\n/**\n * @type {!Object<string, Array<import(\"../../render/canvas.js\").BuilderType>>}\n */\nconst VECTOR_REPLAYS = {\n  'hybrid': ['Image', 'Text', 'Default'],\n  'vector': ['Polygon', 'Circle', 'LineString', 'Image', 'Text', 'Default'],\n};\n\n/**\n * @classdesc\n * Canvas renderer for vector tile layers.\n * @api\n * @extends {CanvasTileLayerRenderer<import(\"../../layer/VectorTile.js\").default>}\n */\nclass CanvasVectorTileLayerRenderer extends CanvasTileLayerRenderer {\n  /**\n   * @param {import(\"../../layer/VectorTile.js\").default} layer VectorTile layer.\n   */\n  constructor(layer) {\n    super(layer);\n\n    /** @private */\n    this.boundHandleStyleImageChange_ = this.handleStyleImageChange_.bind(this);\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.renderedLayerRevision_;\n\n    /**\n     * @private\n     * @type {import(\"../../transform\").Transform}\n     */\n    this.renderedPixelToCoordinateTransform_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.renderedRotation_;\n\n    /**\n     * @private\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.tmpTransform_ = createTransform();\n  }\n\n  /**\n   * @param {import(\"../../VectorRenderTile.js\").default} tile Tile.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../../proj/Projection\").default} projection Projection.\n   * @return {boolean|undefined} Tile needs to be rendered.\n   */\n  prepareTile(tile, pixelRatio, projection) {\n    let render;\n    const state = tile.getState();\n    if (state === TileState.LOADED || state === TileState.ERROR) {\n      this.updateExecutorGroup_(tile, pixelRatio, projection);\n      if (this.tileImageNeedsRender_(tile)) {\n        render = true;\n      }\n    }\n    return render;\n  }\n\n  /**\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @return {!import(\"../../Tile.js\").default} Tile.\n   */\n  getTile(z, x, y, frameState) {\n    const pixelRatio = frameState.pixelRatio;\n    const viewState = frameState.viewState;\n    const resolution = viewState.resolution;\n    const projection = viewState.projection;\n    const layer = this.getLayer();\n    const tile = layer.getSource().getTile(z, x, y, pixelRatio, projection);\n    const viewHints = frameState.viewHints;\n    const hifi = !(\n      viewHints[ViewHint.ANIMATING] || viewHints[ViewHint.INTERACTING]\n    );\n    if (hifi || !tile.wantedResolution) {\n      tile.wantedResolution = resolution;\n    }\n    const render = this.prepareTile(tile, pixelRatio, projection);\n    if (\n      render &&\n      (hifi || Date.now() - frameState.time < 8) &&\n      layer.getRenderMode() !== 'vector'\n    ) {\n      this.renderTileImage_(tile, frameState);\n    }\n    return super.getTile(z, x, y, frameState);\n  }\n\n  /**\n   * @param {import(\"../../VectorRenderTile.js\").default} tile Tile.\n   * @return {boolean} Tile is drawable.\n   */\n  isDrawableTile(tile) {\n    const layer = this.getLayer();\n    return (\n      super.isDrawableTile(tile) &&\n      (layer.getRenderMode() === 'vector'\n        ? getUid(layer) in tile.executorGroups\n        : tile.hasContext(layer))\n    );\n  }\n\n  /**\n   * @inheritDoc\n   */\n  getTileImage(tile) {\n    return tile.getImage(this.getLayer());\n  }\n\n  /**\n   * Determine whether render should be called.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @return {boolean} Layer is ready to be rendered.\n   */\n  prepareFrame(frameState) {\n    const layerRevision = this.getLayer().getRevision();\n    if (this.renderedLayerRevision_ !== layerRevision) {\n      this.renderedLayerRevision_ = layerRevision;\n      this.renderedTiles.length = 0;\n    }\n    return super.prepareFrame(frameState);\n  }\n\n  /**\n   * @param {import(\"../../VectorRenderTile.js\").default} tile Tile.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../../proj/Projection.js\").default} projection Projection.\n   * @private\n   */\n  updateExecutorGroup_(tile, pixelRatio, projection) {\n    const layer = /** @type {import(\"../../layer/VectorTile.js\").default} */ (\n      this.getLayer()\n    );\n    const revision = layer.getRevision();\n    const renderOrder = layer.getRenderOrder() || null;\n\n    const resolution = tile.wantedResolution;\n    const builderState = tile.getReplayState(layer);\n    if (\n      !builderState.dirty &&\n      builderState.renderedResolution === resolution &&\n      builderState.renderedRevision == revision &&\n      builderState.renderedRenderOrder == renderOrder\n    ) {\n      return;\n    }\n\n    const source = layer.getSource();\n    const declutter = layer.getDeclutter();\n    const sourceTileGrid = source.getTileGrid();\n    const tileGrid = source.getTileGridForProjection(projection);\n    const tileExtent = tileGrid.getTileCoordExtent(tile.wrappedTileCoord);\n\n    const sourceTiles = source.getSourceTiles(pixelRatio, projection, tile);\n    const layerUid = getUid(layer);\n    delete tile.hitDetectionImageData[layerUid];\n    tile.executorGroups[layerUid] = [];\n    if (declutter) {\n      tile.declutterExecutorGroups[layerUid] = [];\n    }\n    builderState.dirty = false;\n    for (let t = 0, tt = sourceTiles.length; t < tt; ++t) {\n      const sourceTile = sourceTiles[t];\n      if (sourceTile.getState() != TileState.LOADED) {\n        continue;\n      }\n      const sourceTileCoord = sourceTile.tileCoord;\n      const sourceTileExtent =\n        sourceTileGrid.getTileCoordExtent(sourceTileCoord);\n      const sharedExtent = getIntersection(tileExtent, sourceTileExtent);\n      const builderExtent = buffer(\n        sharedExtent,\n        layer.getRenderBuffer() * resolution,\n        this.tmpExtent\n      );\n      const bufferedExtent = equals(sourceTileExtent, sharedExtent)\n        ? null\n        : builderExtent;\n      const builderGroup = new CanvasBuilderGroup(\n        0,\n        builderExtent,\n        resolution,\n        pixelRatio\n      );\n      const declutterBuilderGroup = declutter\n        ? new CanvasBuilderGroup(0, sharedExtent, resolution, pixelRatio)\n        : undefined;\n      const squaredTolerance = getSquaredRenderTolerance(\n        resolution,\n        pixelRatio\n      );\n\n      /**\n       * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n       * @this {CanvasVectorTileLayerRenderer}\n       */\n      const render = function (feature) {\n        let styles;\n        const styleFunction =\n          feature.getStyleFunction() || layer.getStyleFunction();\n        if (styleFunction) {\n          styles = styleFunction(feature, resolution);\n        }\n        if (styles) {\n          const dirty = this.renderFeature(\n            feature,\n            squaredTolerance,\n            styles,\n            builderGroup,\n            declutterBuilderGroup\n          );\n          builderState.dirty = builderState.dirty || dirty;\n        }\n      };\n\n      const features = sourceTile.getFeatures();\n      if (renderOrder && renderOrder !== builderState.renderedRenderOrder) {\n        features.sort(renderOrder);\n      }\n      for (let i = 0, ii = features.length; i < ii; ++i) {\n        const feature = features[i];\n        if (\n          !bufferedExtent ||\n          intersects(bufferedExtent, feature.getGeometry().getExtent())\n        ) {\n          render.call(this, feature);\n        }\n      }\n      const executorGroupInstructions = builderGroup.finish();\n      // no need to clip when the render tile is covered by a single source tile\n      const replayExtent =\n        layer.getRenderMode() !== 'vector' &&\n        declutter &&\n        sourceTiles.length === 1\n          ? null\n          : sharedExtent;\n      const renderingReplayGroup = new CanvasExecutorGroup(\n        replayExtent,\n        resolution,\n        pixelRatio,\n        source.getOverlaps(),\n        executorGroupInstructions,\n        layer.getRenderBuffer()\n      );\n      tile.executorGroups[layerUid].push(renderingReplayGroup);\n      if (declutterBuilderGroup) {\n        const declutterExecutorGroup = new CanvasExecutorGroup(\n          null,\n          resolution,\n          pixelRatio,\n          source.getOverlaps(),\n          declutterBuilderGroup.finish(),\n          layer.getRenderBuffer()\n        );\n        tile.declutterExecutorGroups[layerUid].push(declutterExecutorGroup);\n      }\n    }\n    builderState.renderedRevision = revision;\n    builderState.renderedRenderOrder = renderOrder;\n    builderState.renderedResolution = resolution;\n  }\n\n  /**\n   * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {import(\"../vector.js\").FeatureCallback<T>} callback Feature callback.\n   * @param {Array<import(\"../Map.js\").HitMatch<T>>} matches The hit detected matches with tolerance.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  forEachFeatureAtCoordinate(\n    coordinate,\n    frameState,\n    hitTolerance,\n    callback,\n    matches\n  ) {\n    const resolution = frameState.viewState.resolution;\n    const rotation = frameState.viewState.rotation;\n    hitTolerance = hitTolerance == undefined ? 0 : hitTolerance;\n    const layer = this.getLayer();\n    const source = layer.getSource();\n    const tileGrid = source.getTileGridForProjection(\n      frameState.viewState.projection\n    );\n\n    const hitExtent = boundingExtent([coordinate]);\n    buffer(hitExtent, resolution * hitTolerance, hitExtent);\n\n    /** @type {!Object<string, import(\"../Map.js\").HitMatch<T>|true>} */\n    const features = {};\n\n    /**\n     * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n     * @param {import(\"../../geom/SimpleGeometry.js\").default} geometry Geometry.\n     * @param {number} distanceSq The squared distance to the click position.\n     * @return {T|undefined} Callback result.\n     */\n    const featureCallback = function (feature, geometry, distanceSq) {\n      let key = feature.getId();\n      if (key === undefined) {\n        key = getUid(feature);\n      }\n      const match = features[key];\n      if (!match) {\n        if (distanceSq === 0) {\n          features[key] = true;\n          return callback(feature, layer, geometry);\n        }\n        matches.push(\n          (features[key] = {\n            feature: feature,\n            layer: layer,\n            geometry: geometry,\n            distanceSq: distanceSq,\n            callback: callback,\n          })\n        );\n      } else if (match !== true && distanceSq < match.distanceSq) {\n        if (distanceSq === 0) {\n          features[key] = true;\n          matches.splice(matches.lastIndexOf(match), 1);\n          return callback(feature, layer, geometry);\n        }\n        match.geometry = geometry;\n        match.distanceSq = distanceSq;\n      }\n      return undefined;\n    };\n\n    const renderedTiles =\n      /** @type {Array<import(\"../../VectorRenderTile.js\").default>} */ (\n        this.renderedTiles\n      );\n\n    let found;\n    for (let i = 0, ii = renderedTiles.length; !found && i < ii; ++i) {\n      const tile = renderedTiles[i];\n      const tileExtent = tileGrid.getTileCoordExtent(tile.wrappedTileCoord);\n      if (!intersects(tileExtent, hitExtent)) {\n        continue;\n      }\n\n      const layerUid = getUid(layer);\n      const executorGroups = [tile.executorGroups[layerUid]];\n      const declutterExecutorGroups = tile.declutterExecutorGroups[layerUid];\n      if (declutterExecutorGroups) {\n        executorGroups.push(declutterExecutorGroups);\n      }\n      executorGroups.some((executorGroups) => {\n        const declutteredFeatures =\n          executorGroups === declutterExecutorGroups\n            ? frameState.declutterTree.all().map((item) => item.value)\n            : null;\n        for (let t = 0, tt = executorGroups.length; t < tt; ++t) {\n          const executorGroup = executorGroups[t];\n          found = executorGroup.forEachFeatureAtCoordinate(\n            coordinate,\n            resolution,\n            rotation,\n            hitTolerance,\n            featureCallback,\n            declutteredFeatures\n          );\n          if (found) {\n            return true;\n          }\n        }\n      });\n    }\n    return found;\n  }\n\n  /**\n   * Asynchronous layer level hit detection.\n   * @param {import(\"../../pixel.js\").Pixel} pixel Pixel.\n   * @return {Promise<Array<import(\"../../Feature.js\").FeatureLike>>} Promise that resolves with an array of features.\n   */\n  getFeatures(pixel) {\n    return new Promise((resolve, reject) => {\n      const layer = this.getLayer();\n      const layerUid = getUid(layer);\n      const source = layer.getSource();\n      const projection = this.renderedProjection;\n      const projectionExtent = projection.getExtent();\n      const resolution = this.renderedResolution;\n      const tileGrid = source.getTileGridForProjection(projection);\n      const coordinate = applyTransform(\n        this.renderedPixelToCoordinateTransform_,\n        pixel.slice()\n      );\n      const tileCoord = tileGrid.getTileCoordForCoordAndResolution(\n        coordinate,\n        resolution\n      );\n      /** @type {import(\"../../VectorRenderTile.js\").default|undefined} */\n      let tile;\n      for (let i = 0, ii = this.renderedTiles.length; i < ii; ++i) {\n        if (\n          tileCoord.toString() === this.renderedTiles[i].tileCoord.toString()\n        ) {\n          tile = /** @type {import(\"../../VectorRenderTile.js\").default} */ (\n            this.renderedTiles[i]\n          );\n          if (tile.getState() === TileState.LOADED) {\n            const extent = tileGrid.getTileCoordExtent(tile.tileCoord);\n            if (\n              source.getWrapX() &&\n              projection.canWrapX() &&\n              !containsExtent(projectionExtent, extent)\n            ) {\n              wrapX(coordinate, projection);\n            }\n            break;\n          }\n          tile = undefined;\n        }\n      }\n      if (!tile || tile.loadingSourceTiles > 0) {\n        resolve([]);\n        return;\n      }\n      const extent = tileGrid.getTileCoordExtent(tile.wrappedTileCoord);\n      const corner = getTopLeft(extent);\n      const tilePixel = [\n        (coordinate[0] - corner[0]) / resolution,\n        (corner[1] - coordinate[1]) / resolution,\n      ];\n      /** @type {Array<import(\"../../Feature.js\").FeatureLike>} */\n      const features = tile\n        .getSourceTiles()\n        .reduce(function (accumulator, sourceTile) {\n          return accumulator.concat(sourceTile.getFeatures());\n        }, []);\n      /** @type {ImageData|undefined} */\n      let hitDetectionImageData = tile.hitDetectionImageData[layerUid];\n      if (!hitDetectionImageData) {\n        const tileSize = toSize(\n          tileGrid.getTileSize(\n            tileGrid.getZForResolution(resolution, source.zDirection)\n          )\n        );\n        const rotation = this.renderedRotation_;\n        const transforms = [\n          this.getRenderTransform(\n            tileGrid.getTileCoordCenter(tile.wrappedTileCoord),\n            resolution,\n            0,\n            HIT_DETECT_RESOLUTION,\n            tileSize[0] * HIT_DETECT_RESOLUTION,\n            tileSize[1] * HIT_DETECT_RESOLUTION,\n            0\n          ),\n        ];\n        hitDetectionImageData = createHitDetectionImageData(\n          tileSize,\n          transforms,\n          features,\n          layer.getStyleFunction(),\n          tileGrid.getTileCoordExtent(tile.wrappedTileCoord),\n          tile.getReplayState(layer).renderedResolution,\n          rotation\n        );\n        tile.hitDetectionImageData[layerUid] = hitDetectionImageData;\n      }\n      resolve(hitDetect(tilePixel, features, hitDetectionImageData));\n    });\n  }\n\n  /**\n   * Perform action necessary to get the layer rendered after new fonts have loaded\n   */\n  handleFontsChanged() {\n    const layer = this.getLayer();\n    if (layer.getVisible() && this.renderedLayerRevision_ !== undefined) {\n      layer.changed();\n    }\n  }\n\n  /**\n   * Handle changes in image style state.\n   * @param {import(\"../../events/Event.js\").default} event Image style change event.\n   * @private\n   */\n  handleStyleImageChange_(event) {\n    this.renderIfReadyAndVisible();\n  }\n\n  /**\n   * Render declutter items for this layer\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   */\n  renderDeclutter(frameState) {\n    const context = this.context;\n    const alpha = context.globalAlpha;\n    context.globalAlpha = this.getLayer().getOpacity();\n    const viewHints = frameState.viewHints;\n    const hifi = !(\n      viewHints[ViewHint.ANIMATING] || viewHints[ViewHint.INTERACTING]\n    );\n    const tiles =\n      /** @type {Array<import(\"../../VectorRenderTile.js\").default>} */ (\n        this.renderedTiles\n      );\n    for (let i = 0, ii = tiles.length; i < ii; ++i) {\n      const tile = tiles[i];\n      const declutterExecutorGroups =\n        tile.declutterExecutorGroups[getUid(this.getLayer())];\n      if (declutterExecutorGroups) {\n        for (let j = declutterExecutorGroups.length - 1; j >= 0; --j) {\n          declutterExecutorGroups[j].execute(\n            this.context,\n            1,\n            this.getTileRenderTransform(tile, frameState),\n            frameState.viewState.rotation,\n            hifi,\n            undefined,\n            frameState.declutterTree\n          );\n        }\n      }\n    }\n    context.globalAlpha = alpha;\n  }\n\n  getTileRenderTransform(tile, frameState) {\n    const pixelRatio = frameState.pixelRatio;\n    const viewState = frameState.viewState;\n    const center = viewState.center;\n    const resolution = viewState.resolution;\n    const rotation = viewState.rotation;\n    const size = frameState.size;\n    const width = Math.round(size[0] * pixelRatio);\n    const height = Math.round(size[1] * pixelRatio);\n\n    const source = this.getLayer().getSource();\n    const tileGrid = source.getTileGridForProjection(\n      frameState.viewState.projection\n    );\n    const tileCoord = tile.tileCoord;\n    const tileExtent = tileGrid.getTileCoordExtent(tile.wrappedTileCoord);\n    const worldOffset =\n      tileGrid.getTileCoordExtent(tileCoord, this.tmpExtent)[0] - tileExtent[0];\n    const transform = multiply(\n      scale(this.inversePixelTransform.slice(), 1 / pixelRatio, 1 / pixelRatio),\n      this.getRenderTransform(\n        center,\n        resolution,\n        rotation,\n        pixelRatio,\n        width,\n        height,\n        worldOffset\n      )\n    );\n    return transform;\n  }\n\n  /**\n   * Render the vectors for this layer.\n   * @param {CanvasRenderingContext2D} context Target context.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   */\n  postRender(context, frameState) {\n    const viewHints = frameState.viewHints;\n    const hifi = !(\n      viewHints[ViewHint.ANIMATING] || viewHints[ViewHint.INTERACTING]\n    );\n\n    this.renderedPixelToCoordinateTransform_ =\n      frameState.pixelToCoordinateTransform.slice();\n    this.renderedRotation_ = frameState.viewState.rotation;\n\n    const layer = /** @type {import(\"../../layer/VectorTile.js\").default} */ (\n      this.getLayer()\n    );\n    const renderMode = layer.getRenderMode();\n    const alpha = context.globalAlpha;\n    context.globalAlpha = layer.getOpacity();\n    const replayTypes = VECTOR_REPLAYS[renderMode];\n    const viewState = frameState.viewState;\n    const rotation = viewState.rotation;\n    const tileSource = layer.getSource();\n    const tileGrid = tileSource.getTileGridForProjection(viewState.projection);\n    const z = tileGrid.getZForResolution(\n      viewState.resolution,\n      tileSource.zDirection\n    );\n\n    const tiles = this.renderedTiles;\n    const clips = [];\n    const clipZs = [];\n    let ready = true;\n    for (let i = tiles.length - 1; i >= 0; --i) {\n      const tile = /** @type {import(\"../../VectorRenderTile.js\").default} */ (\n        tiles[i]\n      );\n      ready = ready && !tile.getReplayState(layer).dirty;\n      const executorGroups = tile.executorGroups[getUid(layer)].filter(\n        (group) => group.hasExecutors(replayTypes)\n      );\n      if (executorGroups.length === 0) {\n        continue;\n      }\n      const transform = this.getTileRenderTransform(tile, frameState);\n      const currentZ = tile.tileCoord[0];\n      let contextSaved = false;\n      // Clip mask for regions in this tile that already filled by a higher z tile\n      const currentClip = executorGroups[0].getClipCoords(transform);\n      if (currentClip) {\n        for (let j = 0, jj = clips.length; j < jj; ++j) {\n          if (z !== currentZ && currentZ < clipZs[j]) {\n            const clip = clips[j];\n            if (\n              intersects(\n                [\n                  currentClip[0],\n                  currentClip[3],\n                  currentClip[4],\n                  currentClip[7],\n                ],\n                [clip[0], clip[3], clip[4], clip[7]]\n              )\n            ) {\n              if (!contextSaved) {\n                context.save();\n                contextSaved = true;\n              }\n              context.beginPath();\n              // counter-clockwise (outer ring) for current tile\n              context.moveTo(currentClip[0], currentClip[1]);\n              context.lineTo(currentClip[2], currentClip[3]);\n              context.lineTo(currentClip[4], currentClip[5]);\n              context.lineTo(currentClip[6], currentClip[7]);\n              // clockwise (inner ring) for higher z tile\n              context.moveTo(clip[6], clip[7]);\n              context.lineTo(clip[4], clip[5]);\n              context.lineTo(clip[2], clip[3]);\n              context.lineTo(clip[0], clip[1]);\n              context.clip();\n            }\n          }\n        }\n        clips.push(currentClip);\n        clipZs.push(currentZ);\n      }\n      for (let t = 0, tt = executorGroups.length; t < tt; ++t) {\n        const executorGroup = executorGroups[t];\n        executorGroup.execute(\n          context,\n          1,\n          transform,\n          rotation,\n          hifi,\n          replayTypes\n        );\n      }\n      if (contextSaved) {\n        context.restore();\n      }\n    }\n    context.globalAlpha = alpha;\n    this.ready = ready;\n\n    super.postRender(context, frameState);\n  }\n\n  /**\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   * @param {number} squaredTolerance Squared tolerance.\n   * @param {import(\"../../style/Style.js\").default|Array<import(\"../../style/Style.js\").default>} styles The style or array of styles.\n   * @param {import(\"../../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n   * @param {import(\"../../render/canvas/BuilderGroup.js\").default} [declutterBuilderGroup] Builder group for decluttering.\n   * @return {boolean} `true` if an image is loading.\n   */\n  renderFeature(\n    feature,\n    squaredTolerance,\n    styles,\n    builderGroup,\n    declutterBuilderGroup\n  ) {\n    if (!styles) {\n      return false;\n    }\n    let loading = false;\n    if (Array.isArray(styles)) {\n      for (let i = 0, ii = styles.length; i < ii; ++i) {\n        loading =\n          renderFeature(\n            builderGroup,\n            feature,\n            styles[i],\n            squaredTolerance,\n            this.boundHandleStyleImageChange_,\n            undefined,\n            declutterBuilderGroup\n          ) || loading;\n      }\n    } else {\n      loading = renderFeature(\n        builderGroup,\n        feature,\n        styles,\n        squaredTolerance,\n        this.boundHandleStyleImageChange_,\n        undefined,\n        declutterBuilderGroup\n      );\n    }\n    return loading;\n  }\n\n  /**\n   * @param {import(\"../../VectorRenderTile.js\").default} tile Tile.\n   * @return {boolean} A new tile image was rendered.\n   * @private\n   */\n  tileImageNeedsRender_(tile) {\n    const layer = /** @type {import(\"../../layer/VectorTile.js\").default} */ (\n      this.getLayer()\n    );\n    if (layer.getRenderMode() === 'vector') {\n      return false;\n    }\n    const replayState = tile.getReplayState(layer);\n    const revision = layer.getRevision();\n    const resolution = tile.wantedResolution;\n    return (\n      replayState.renderedTileResolution !== resolution ||\n      replayState.renderedTileRevision !== revision\n    );\n  }\n\n  /**\n   * @param {import(\"../../VectorRenderTile.js\").default} tile Tile.\n   * @param {import(\"../../Map\").FrameState} frameState Frame state.\n   * @private\n   */\n  renderTileImage_(tile, frameState) {\n    const layer = /** @type {import(\"../../layer/VectorTile.js\").default} */ (\n      this.getLayer()\n    );\n    const replayState = tile.getReplayState(layer);\n    const revision = layer.getRevision();\n    const executorGroups = tile.executorGroups[getUid(layer)];\n    replayState.renderedTileRevision = revision;\n\n    const tileCoord = tile.wrappedTileCoord;\n    const z = tileCoord[0];\n    const source = layer.getSource();\n    let pixelRatio = frameState.pixelRatio;\n    const viewState = frameState.viewState;\n    const projection = viewState.projection;\n    const tileGrid = source.getTileGridForProjection(projection);\n    const tileResolution = tileGrid.getResolution(tile.tileCoord[0]);\n    const renderPixelRatio =\n      (frameState.pixelRatio / tile.wantedResolution) * tileResolution;\n    const resolution = tileGrid.getResolution(z);\n    const context = tile.getContext(layer);\n\n    // Increase tile size when overzooming for low pixel ratio, to avoid blurry tiles\n    pixelRatio = Math.round(\n      Math.max(pixelRatio, renderPixelRatio / pixelRatio)\n    );\n    const size = source.getTilePixelSize(z, pixelRatio, projection);\n    context.canvas.width = size[0];\n    context.canvas.height = size[1];\n    const renderScale = pixelRatio / renderPixelRatio;\n    if (renderScale !== 1) {\n      const canvasTransform = resetTransform(this.tmpTransform_);\n      scaleTransform(canvasTransform, renderScale, renderScale);\n      context.setTransform.apply(context, canvasTransform);\n    }\n    const tileExtent = tileGrid.getTileCoordExtent(tileCoord, this.tmpExtent);\n    const pixelScale = renderPixelRatio / resolution;\n    const transform = resetTransform(this.tmpTransform_);\n    scaleTransform(transform, pixelScale, -pixelScale);\n    translateTransform(transform, -tileExtent[0], -tileExtent[3]);\n    for (let i = 0, ii = executorGroups.length; i < ii; ++i) {\n      const executorGroup = executorGroups[i];\n      executorGroup.execute(\n        context,\n        renderScale,\n        transform,\n        0,\n        true,\n        IMAGE_REPLAYS[layer.getRenderMode()]\n      );\n    }\n    replayState.renderedTileResolution = tile.wantedResolution;\n  }\n}\n\nexport default CanvasVectorTileLayerRenderer;\n","/**\n * @module ol/layer/VectorTile\n */\nimport BaseVectorLayer from './BaseVector.js';\nimport CanvasVectorTileLayerRenderer from '../renderer/canvas/VectorTileLayer.js';\nimport TileProperty from './TileProperty.js';\nimport {assert} from '../asserts.js';\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"./Base\").BaseLayerObjectEventTypes|\n *     import(\"./Layer.js\").LayerEventType|'change:preload'|'change:useInterimTilesOnError', import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../render/EventType\").LayerRenderEventTypes, import(\"../render/Event\").default, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"./Base\").BaseLayerObjectEventTypes|\n *     import(\"./Layer.js\").LayerEventType|'change:preload'|'change:useInterimTilesOnError'|import(\"../render/EventType\").LayerRenderEventTypes, Return>} VectorTileLayerOnSignature\n */\n\n/**\n * @typedef {'hybrid' | 'vector'} VectorTileRenderType\n */\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {import(\"../render.js\").OrderFunction} [renderOrder] Render order. Function to be used when sorting\n * features before rendering. By default features are drawn in the order that they are created. Use\n * `null` to avoid the sort, but get an undefined draw order.\n * @property {number} [renderBuffer=100] The buffer in pixels around the tile extent used by the\n * renderer when getting features from the vector tile for the rendering or hit-detection.\n * Recommended value: Vector tiles are usually generated with a buffer, so this value should match\n * the largest possible buffer of the used tiles. It should be at least the size of the largest\n * point symbol or line width.\n * @property {VectorTileRenderType} [renderMode='hybrid'] Render mode for vector tiles:\n *  * `'hybrid'`: Polygon and line elements are rendered as images, so pixels are scaled during zoom\n *    animations. Point symbols and texts are accurately rendered as vectors and can stay upright on\n *    rotated views.\n *  * `'vector'`: Everything is rendered as vectors. Use this mode for improved performance on vector\n *    tile layers with only a few rendered features (e.g. for highlighting a subset of features of\n *    another layer with the same source).\n * @property {import(\"../source/VectorTile.js\").default} [source] Source.\n * @property {import(\"../Map.js\").default} [map] Sets the layer as overlay on a map. The map will not manage\n * this layer in its layers collection, and the layer will be rendered on top. This is useful for\n * temporary layers. The standard way to add a layer to a map and have it managed by the map is to\n * use [map.addLayer()]{@link import(\"../Map.js\").default#addLayer}.\n * @property {boolean} [declutter=false] Declutter images and text. Decluttering is applied to all\n * image and text styles of all Vector and VectorTile layers that have set this to `true`. The priority\n * is defined by the z-index of the layer, the `zIndex` of the style and the render order of features.\n * Higher z-index means higher priority. Within the same z-index, a feature rendered before another has\n * higher priority.\n *\n * As an optimization decluttered features from layers with the same `className` are rendered above\n * the fill and stroke styles of all of those layers regardless of z-index.  To opt out of this\n * behavior and place declutterd features with their own layer configure the layer with a `className`\n * other than `ol-layer`.\n * @property {import(\"../style/Style.js\").StyleLike|null} [style] Layer style. When set to `null`, only\n * features that have their own style will be rendered. See {@link module:ol/style/Style~Style} for the default style\n * which will be used if this is not set.\n * @property {import(\"./Base.js\").BackgroundColor|false} [background] Background color for the layer. If not specified, no\n * background will be rendered.\n * @property {boolean} [updateWhileAnimating=false] When set to `true`, feature batches will be\n * recreated during animations. This means that no vectors will be shown clipped, but the setting\n * will have a performance impact for large amounts of vector data. When set to `false`, batches\n * will be recreated when no animation is active.\n * @property {boolean} [updateWhileInteracting=false] When set to `true`, feature batches will be\n * recreated during interactions. See also `updateWhileAnimating`.\n * @property {number} [preload=0] Preload. Load low-resolution tiles up to `preload` levels. `0`\n * means no preloading.\n * @property {boolean} [useInterimTilesOnError=true] Use interim tiles on error.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n */\n\n/**\n * @classdesc\n * Layer for vector tile data that is rendered client-side.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @param {Options} [options] Options.\n * @extends {BaseVectorLayer<import(\"../source/VectorTile.js\").default, CanvasVectorTileLayerRenderer>}\n * @api\n */\nclass VectorTileLayer extends BaseVectorLayer {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    const baseOptions = /** @type {Object} */ (Object.assign({}, options));\n    delete baseOptions.preload;\n    delete baseOptions.useInterimTilesOnError;\n\n    super(\n      /** @type {import(\"./BaseVector.js\").Options<import(\"../source/VectorTile.js\").default>} */ (\n        baseOptions\n      )\n    );\n\n    /***\n     * @type {VectorTileLayerOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {VectorTileLayerOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {VectorTileLayerOnSignature<void>}\n     */\n    this.un;\n\n    const renderMode = options.renderMode || 'hybrid';\n    // `renderMode` must be `'hybrid'` or `'vector'`.\n    assert(renderMode == 'hybrid' || renderMode == 'vector', 28);\n\n    /**\n     * @private\n     * @type {VectorTileRenderType}\n     */\n    this.renderMode_ = renderMode;\n\n    this.setPreload(options.preload ? options.preload : 0);\n    this.setUseInterimTilesOnError(\n      options.useInterimTilesOnError !== undefined\n        ? options.useInterimTilesOnError\n        : true\n    );\n\n    /**\n     * @return {import(\"./Base.js\").BackgroundColor} Background color.\n     * @function\n     * @api\n     */\n    this.getBackground;\n\n    /**\n     * @param {import(\"./Base.js\").BackgroundColor} background Background color.\n     * @function\n     * @api\n     */\n    this.setBackground;\n  }\n\n  createRenderer() {\n    return new CanvasVectorTileLayerRenderer(this);\n  }\n\n  /**\n   * Get the topmost feature that intersects the given pixel on the viewport. Returns a promise\n   * that resolves with an array of features. The array will either contain the topmost feature\n   * when a hit was detected, or it will be empty.\n   *\n   * The hit detection algorithm used for this method is optimized for performance, but is less\n   * accurate than the one used in [map.getFeaturesAtPixel()]{@link import(\"../Map.js\").default#getFeaturesAtPixel}.\n   * Text is not considered, and icons are only represented by their bounding box instead of the exact\n   * image.\n   *\n   * @param {import(\"../pixel.js\").Pixel} pixel Pixel.\n   * @return {Promise<Array<import(\"../Feature\").FeatureLike>>} Promise that resolves with an array of features.\n   * @api\n   */\n  getFeatures(pixel) {\n    return super.getFeatures(pixel);\n  }\n\n  /**\n   * @return {VectorTileRenderType} The render mode.\n   */\n  getRenderMode() {\n    return this.renderMode_;\n  }\n\n  /**\n   * Return the level as number to which we will preload tiles up to.\n   * @return {number} The level to preload tiles up to.\n   * @observable\n   * @api\n   */\n  getPreload() {\n    return /** @type {number} */ (this.get(TileProperty.PRELOAD));\n  }\n\n  /**\n   * Whether we use interim tiles on error.\n   * @return {boolean} Use interim tiles on error.\n   * @observable\n   * @api\n   */\n  getUseInterimTilesOnError() {\n    return /** @type {boolean} */ (\n      this.get(TileProperty.USE_INTERIM_TILES_ON_ERROR)\n    );\n  }\n\n  /**\n   * Set the level as number to which we will preload tiles up to.\n   * @param {number} preload The level to preload tiles up to.\n   * @observable\n   * @api\n   */\n  setPreload(preload) {\n    this.set(TileProperty.PRELOAD, preload);\n  }\n\n  /**\n   * Set whether we use interim tiles on error.\n   * @param {boolean} useInterimTilesOnError Use interim tiles on error.\n   * @observable\n   * @api\n   */\n  setUseInterimTilesOnError(useInterimTilesOnError) {\n    this.set(TileProperty.USE_INTERIM_TILES_ON_ERROR, useInterimTilesOnError);\n  }\n}\n\nexport default VectorTileLayer;\n","/**\n * @module ol/loadingstrategy\n */\n\nimport {fromUserExtent, fromUserResolution, toUserExtent} from './proj.js';\n\n/**\n * Strategy function for loading all features with a single request.\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number} resolution Resolution.\n * @return {Array<import(\"./extent.js\").Extent>} Extents.\n * @api\n */\nexport function all(extent, resolution) {\n  return [[-Infinity, -Infinity, Infinity, Infinity]];\n}\n\n/**\n * Strategy function for loading features based on the view's extent and\n * resolution.\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number} resolution Resolution.\n * @return {Array<import(\"./extent.js\").Extent>} Extents.\n * @api\n */\nexport function bbox(extent, resolution) {\n  return [extent];\n}\n\n/**\n * Creates a strategy function for loading features based on a tile grid.\n * @param {import(\"./tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n * @return {function(import(\"./extent.js\").Extent, number, import(\"./proj.js\").Projection): Array<import(\"./extent.js\").Extent>} Loading strategy.\n * @api\n */\nexport function tile(tileGrid) {\n  return (\n    /**\n     * @param {import(\"./extent.js\").Extent} extent Extent.\n     * @param {number} resolution Resolution.\n     * @param {import(\"./proj.js\").Projection} projection Projection.\n     * @return {Array<import(\"./extent.js\").Extent>} Extents.\n     */\n    function (extent, resolution, projection) {\n      const z = tileGrid.getZForResolution(\n        fromUserResolution(resolution, projection)\n      );\n      const tileRange = tileGrid.getTileRangeForExtentAndZ(\n        fromUserExtent(extent, projection),\n        z\n      );\n      /** @type {Array<import(\"./extent.js\").Extent>} */\n      const extents = [];\n      /** @type {import(\"./tilecoord.js\").TileCoord} */\n      const tileCoord = [z, 0, 0];\n      for (\n        tileCoord[1] = tileRange.minX;\n        tileCoord[1] <= tileRange.maxX;\n        ++tileCoord[1]\n      ) {\n        for (\n          tileCoord[2] = tileRange.minY;\n          tileCoord[2] <= tileRange.maxY;\n          ++tileCoord[2]\n        ) {\n          extents.push(\n            toUserExtent(tileGrid.getTileCoordExtent(tileCoord), projection)\n          );\n        }\n      }\n      return extents;\n    }\n  );\n}\n","/**\n * @module ol/math\n */\n\n/**\n * Takes a number and clamps it to within the provided bounds.\n * @param {number} value The input number.\n * @param {number} min The minimum value to return.\n * @param {number} max The maximum value to return.\n * @return {number} The input number if it is within bounds, or the nearest\n *     number within the bounds.\n */\nexport function clamp(value, min, max) {\n  return Math.min(Math.max(value, min), max);\n}\n\n/**\n * Returns the square of the closest distance between the point (x, y) and the\n * line segment (x1, y1) to (x2, y2).\n * @param {number} x X.\n * @param {number} y Y.\n * @param {number} x1 X1.\n * @param {number} y1 Y1.\n * @param {number} x2 X2.\n * @param {number} y2 Y2.\n * @return {number} Squared distance.\n */\nexport function squaredSegmentDistance(x, y, x1, y1, x2, y2) {\n  const dx = x2 - x1;\n  const dy = y2 - y1;\n  if (dx !== 0 || dy !== 0) {\n    const t = ((x - x1) * dx + (y - y1) * dy) / (dx * dx + dy * dy);\n    if (t > 1) {\n      x1 = x2;\n      y1 = y2;\n    } else if (t > 0) {\n      x1 += dx * t;\n      y1 += dy * t;\n    }\n  }\n  return squaredDistance(x, y, x1, y1);\n}\n\n/**\n * Returns the square of the distance between the points (x1, y1) and (x2, y2).\n * @param {number} x1 X1.\n * @param {number} y1 Y1.\n * @param {number} x2 X2.\n * @param {number} y2 Y2.\n * @return {number} Squared distance.\n */\nexport function squaredDistance(x1, y1, x2, y2) {\n  const dx = x2 - x1;\n  const dy = y2 - y1;\n  return dx * dx + dy * dy;\n}\n\n/**\n * Solves system of linear equations using Gaussian elimination method.\n *\n * @param {Array<Array<number>>} mat Augmented matrix (n x n + 1 column)\n *                                     in row-major order.\n * @return {Array<number>} The resulting vector.\n */\nexport function solveLinearSystem(mat) {\n  const n = mat.length;\n\n  for (let i = 0; i < n; i++) {\n    // Find max in the i-th column (ignoring i - 1 first rows)\n    let maxRow = i;\n    let maxEl = Math.abs(mat[i][i]);\n    for (let r = i + 1; r < n; r++) {\n      const absValue = Math.abs(mat[r][i]);\n      if (absValue > maxEl) {\n        maxEl = absValue;\n        maxRow = r;\n      }\n    }\n\n    if (maxEl === 0) {\n      return null; // matrix is singular\n    }\n\n    // Swap max row with i-th (current) row\n    const tmp = mat[maxRow];\n    mat[maxRow] = mat[i];\n    mat[i] = tmp;\n\n    // Subtract the i-th row to make all the remaining rows 0 in the i-th column\n    for (let j = i + 1; j < n; j++) {\n      const coef = -mat[j][i] / mat[i][i];\n      for (let k = i; k < n + 1; k++) {\n        if (i == k) {\n          mat[j][k] = 0;\n        } else {\n          mat[j][k] += coef * mat[i][k];\n        }\n      }\n    }\n  }\n\n  // Solve Ax=b for upper triangular matrix A (mat)\n  const x = new Array(n);\n  for (let l = n - 1; l >= 0; l--) {\n    x[l] = mat[l][n] / mat[l][l];\n    for (let m = l - 1; m >= 0; m--) {\n      mat[m][n] -= mat[m][l] * x[l];\n    }\n  }\n  return x;\n}\n\n/**\n * Converts radians to to degrees.\n *\n * @param {number} angleInRadians Angle in radians.\n * @return {number} Angle in degrees.\n */\nexport function toDegrees(angleInRadians) {\n  return (angleInRadians * 180) / Math.PI;\n}\n\n/**\n * Converts degrees to radians.\n *\n * @param {number} angleInDegrees Angle in degrees.\n * @return {number} Angle in radians.\n */\nexport function toRadians(angleInDegrees) {\n  return (angleInDegrees * Math.PI) / 180;\n}\n\n/**\n * Returns the modulo of a / b, depending on the sign of b.\n *\n * @param {number} a Dividend.\n * @param {number} b Divisor.\n * @return {number} Modulo.\n */\nexport function modulo(a, b) {\n  const r = a % b;\n  return r * b < 0 ? r + b : r;\n}\n\n/**\n * Calculates the linearly interpolated value of x between a and b.\n *\n * @param {number} a Number\n * @param {number} b Number\n * @param {number} x Value to be interpolated.\n * @return {number} Interpolated value.\n */\nexport function lerp(a, b, x) {\n  return a + x * (b - a);\n}\n\n/**\n * Returns a number with a limited number of decimal digits.\n * @param {number} n The input number.\n * @param {number} decimals The maximum number of decimal digits.\n * @return {number} The input number with a limited number of decimal digits.\n */\nexport function toFixed(n, decimals) {\n  const factor = Math.pow(10, decimals);\n  return Math.round(n * factor) / factor;\n}\n\n/**\n * Rounds a number to the nearest integer value considering only the given number\n * of decimal digits (with rounding on the final digit).\n * @param {number} n The input number.\n * @param {number} decimals The maximum number of decimal digits.\n * @return {number} The nearest integer.\n */\nexport function round(n, decimals) {\n  return Math.round(toFixed(n, decimals));\n}\n\n/**\n * Rounds a number to the next smaller integer considering only the given number\n * of decimal digits (with rounding on the final digit).\n * @param {number} n The input number.\n * @param {number} decimals The maximum number of decimal digits.\n * @return {number} The next smaller integer.\n */\nexport function floor(n, decimals) {\n  return Math.floor(toFixed(n, decimals));\n}\n\n/**\n * Rounds a number to the next bigger integer considering only the given number\n * of decimal digits (with rounding on the final digit).\n * @param {number} n The input number.\n * @param {number} decimals The maximum number of decimal digits.\n * @return {number} The next bigger integer.\n */\nexport function ceil(n, decimals) {\n  return Math.ceil(toFixed(n, decimals));\n}\n","/**\n * @module ol/obj\n */\n\n/**\n * Removes all properties from an object.\n * @param {Object} object The object to clear.\n */\nexport function clear(object) {\n  for (const property in object) {\n    delete object[property];\n  }\n}\n\n/**\n * Determine if an object has any properties.\n * @param {Object} object The object to check.\n * @return {boolean} The object is empty.\n */\nexport function isEmpty(object) {\n  let property;\n  for (property in object) {\n    return false;\n  }\n  return !property;\n}\n","/**\n * @module ol/proj/epsg3857\n */\nimport Projection from './Projection.js';\n\n/**\n * Radius of WGS84 sphere\n *\n * @const\n * @type {number}\n */\nexport const RADIUS = 6378137;\n\n/**\n * @const\n * @type {number}\n */\nexport const HALF_SIZE = Math.PI * RADIUS;\n\n/**\n * @const\n * @type {import(\"../extent.js\").Extent}\n */\nexport const EXTENT = [-HALF_SIZE, -HALF_SIZE, HALF_SIZE, HALF_SIZE];\n\n/**\n * @const\n * @type {import(\"../extent.js\").Extent}\n */\nexport const WORLD_EXTENT = [-180, -85, 180, 85];\n\n/**\n * Maximum safe value in y direction\n * @const\n * @type {number}\n */\nexport const MAX_SAFE_Y = RADIUS * Math.log(Math.tan(Math.PI / 2));\n\n/**\n * @classdesc\n * Projection object for web/spherical Mercator (EPSG:3857).\n */\nclass EPSG3857Projection extends Projection {\n  /**\n   * @param {string} code Code.\n   */\n  constructor(code) {\n    super({\n      code: code,\n      units: 'm',\n      extent: EXTENT,\n      global: true,\n      worldExtent: WORLD_EXTENT,\n      getPointResolution: function (resolution, point) {\n        return resolution / Math.cosh(point[1] / RADIUS);\n      },\n    });\n  }\n}\n\n/**\n * Projections equal to EPSG:3857.\n *\n * @const\n * @type {Array<import(\"./Projection.js\").default>}\n */\nexport const PROJECTIONS = [\n  new EPSG3857Projection('EPSG:3857'),\n  new EPSG3857Projection('EPSG:102100'),\n  new EPSG3857Projection('EPSG:102113'),\n  new EPSG3857Projection('EPSG:900913'),\n  new EPSG3857Projection('http://www.opengis.net/def/crs/EPSG/0/3857'),\n  new EPSG3857Projection('http://www.opengis.net/gml/srs/epsg.xml#3857'),\n];\n\n/**\n * Transformation from EPSG:4326 to EPSG:3857.\n *\n * @param {Array<number>} input Input array of coordinate values.\n * @param {Array<number>} [output] Output array of coordinate values.\n * @param {number} [dimension] Dimension (default is `2`).\n * @return {Array<number>} Output array of coordinate values.\n */\nexport function fromEPSG4326(input, output, dimension) {\n  const length = input.length;\n  dimension = dimension > 1 ? dimension : 2;\n  if (output === undefined) {\n    if (dimension > 2) {\n      // preserve values beyond second dimension\n      output = input.slice();\n    } else {\n      output = new Array(length);\n    }\n  }\n  for (let i = 0; i < length; i += dimension) {\n    output[i] = (HALF_SIZE * input[i]) / 180;\n    let y = RADIUS * Math.log(Math.tan((Math.PI * (+input[i + 1] + 90)) / 360));\n    if (y > MAX_SAFE_Y) {\n      y = MAX_SAFE_Y;\n    } else if (y < -MAX_SAFE_Y) {\n      y = -MAX_SAFE_Y;\n    }\n    output[i + 1] = y;\n  }\n  return output;\n}\n\n/**\n * Transformation from EPSG:3857 to EPSG:4326.\n *\n * @param {Array<number>} input Input array of coordinate values.\n * @param {Array<number>} [output] Output array of coordinate values.\n * @param {number} [dimension] Dimension (default is `2`).\n * @return {Array<number>} Output array of coordinate values.\n */\nexport function toEPSG4326(input, output, dimension) {\n  const length = input.length;\n  dimension = dimension > 1 ? dimension : 2;\n  if (output === undefined) {\n    if (dimension > 2) {\n      // preserve values beyond second dimension\n      output = input.slice();\n    } else {\n      output = new Array(length);\n    }\n  }\n  for (let i = 0; i < length; i += dimension) {\n    output[i] = (180 * input[i]) / HALF_SIZE;\n    output[i + 1] =\n      (360 * Math.atan(Math.exp(input[i + 1] / RADIUS))) / Math.PI - 90;\n  }\n  return output;\n}\n","/**\n * @module ol/proj/epsg4326\n */\nimport Projection from './Projection.js';\n\n/**\n * Semi-major radius of the WGS84 ellipsoid.\n *\n * @const\n * @type {number}\n */\nexport const RADIUS = 6378137;\n\n/**\n * Extent of the EPSG:4326 projection which is the whole world.\n *\n * @const\n * @type {import(\"../extent.js\").Extent}\n */\nexport const EXTENT = [-180, -90, 180, 90];\n\n/**\n * @const\n * @type {number}\n */\nexport const METERS_PER_UNIT = (Math.PI * RADIUS) / 180;\n\n/**\n * @classdesc\n * Projection object for WGS84 geographic coordinates (EPSG:4326).\n *\n * Note that OpenLayers does not strictly comply with the EPSG definition.\n * The EPSG registry defines 4326 as a CRS for Latitude,Longitude (y,x).\n * OpenLayers treats EPSG:4326 as a pseudo-projection, with x,y coordinates.\n */\nclass EPSG4326Projection extends Projection {\n  /**\n   * @param {string} code Code.\n   * @param {string} [axisOrientation] Axis orientation.\n   */\n  constructor(code, axisOrientation) {\n    super({\n      code: code,\n      units: 'degrees',\n      extent: EXTENT,\n      axisOrientation: axisOrientation,\n      global: true,\n      metersPerUnit: METERS_PER_UNIT,\n      worldExtent: EXTENT,\n    });\n  }\n}\n\n/**\n * Projections equal to EPSG:4326.\n *\n * @const\n * @type {Array<import(\"./Projection.js\").default>}\n */\nexport const PROJECTIONS = [\n  new EPSG4326Projection('CRS:84'),\n  new EPSG4326Projection('EPSG:4326', 'neu'),\n  new EPSG4326Projection('urn:ogc:def:crs:OGC:1.3:CRS84'),\n  new EPSG4326Projection('urn:ogc:def:crs:OGC:2:84'),\n  new EPSG4326Projection('http://www.opengis.net/def/crs/OGC/1.3/CRS84'),\n  new EPSG4326Projection('http://www.opengis.net/gml/srs/epsg.xml#4326', 'neu'),\n  new EPSG4326Projection('http://www.opengis.net/def/crs/EPSG/0/4326', 'neu'),\n];\n","/**\n * @module ol/proj/projections\n */\n\n/**\n * @type {Object<string, import(\"./Projection.js\").default>}\n */\nlet cache = {};\n\n/**\n * Clear the projections cache.\n */\nexport function clear() {\n  cache = {};\n}\n\n/**\n * Get a cached projection by code.\n * @param {string} code The code for the projection.\n * @return {import(\"./Projection.js\").default} The projection (if cached).\n */\nexport function get(code) {\n  return (\n    cache[code] ||\n    cache[code.replace(/urn:(x-)?ogc:def:crs:EPSG:(.*:)?(\\w+)$/, 'EPSG:$3')] ||\n    null\n  );\n}\n\n/**\n * Add a projection to the cache.\n * @param {string} code The projection code.\n * @param {import(\"./Projection.js\").default} projection The projection to cache.\n */\nexport function add(code, projection) {\n  cache[code] = projection;\n}\n","/**\n * @module ol/proj/transforms\n */\nimport {isEmpty} from '../obj.js';\n\n/**\n * @private\n * @type {!Object<string, Object<string, import(\"../proj.js\").TransformFunction>>}\n */\nlet transforms = {};\n\n/**\n * Clear the transform cache.\n */\nexport function clear() {\n  transforms = {};\n}\n\n/**\n * Registers a conversion function to convert coordinates from the source\n * projection to the destination projection.\n *\n * @param {import(\"./Projection.js\").default} source Source.\n * @param {import(\"./Projection.js\").default} destination Destination.\n * @param {import(\"../proj.js\").TransformFunction} transformFn Transform.\n */\nexport function add(source, destination, transformFn) {\n  const sourceCode = source.getCode();\n  const destinationCode = destination.getCode();\n  if (!(sourceCode in transforms)) {\n    transforms[sourceCode] = {};\n  }\n  transforms[sourceCode][destinationCode] = transformFn;\n}\n\n/**\n * Unregisters the conversion function to convert coordinates from the source\n * projection to the destination projection.  This method is used to clean up\n * cached transforms during testing.\n *\n * @param {import(\"./Projection.js\").default} source Source projection.\n * @param {import(\"./Projection.js\").default} destination Destination projection.\n * @return {import(\"../proj.js\").TransformFunction} transformFn The unregistered transform.\n */\nexport function remove(source, destination) {\n  const sourceCode = source.getCode();\n  const destinationCode = destination.getCode();\n  const transform = transforms[sourceCode][destinationCode];\n  delete transforms[sourceCode][destinationCode];\n  if (isEmpty(transforms[sourceCode])) {\n    delete transforms[sourceCode];\n  }\n  return transform;\n}\n\n/**\n * Get a transform given a source code and a destination code.\n * @param {string} sourceCode The code for the source projection.\n * @param {string} destinationCode The code for the destination projection.\n * @return {import(\"../proj.js\").TransformFunction|undefined} The transform function (if found).\n */\nexport function get(sourceCode, destinationCode) {\n  let transform;\n  if (sourceCode in transforms && destinationCode in transforms[sourceCode]) {\n    transform = transforms[sourceCode][destinationCode];\n  }\n  return transform;\n}\n","/**\n * @module ol/sphere\n */\nimport {toDegrees, toRadians} from './math.js';\n\n/**\n * Object literal with options for the {@link getLength} or {@link getArea}\n * functions.\n * @typedef {Object} SphereMetricOptions\n * @property {import(\"./proj.js\").ProjectionLike} [projection='EPSG:3857']\n * Projection of the  geometry.  By default, the geometry is assumed to be in\n * Web Mercator.\n * @property {number} [radius=6371008.8] Sphere radius.  By default, the\n * [mean Earth radius](https://en.wikipedia.org/wiki/Earth_radius#Mean_radius)\n * for the WGS84 ellipsoid is used.\n */\n\n/**\n * The mean Earth radius (1/3 * (2a + b)) for the WGS84 ellipsoid.\n * https://en.wikipedia.org/wiki/Earth_radius#Mean_radius\n * @type {number}\n */\nexport const DEFAULT_RADIUS = 6371008.8;\n\n/**\n * Get the great circle distance (in meters) between two geographic coordinates.\n * @param {Array} c1 Starting coordinate.\n * @param {Array} c2 Ending coordinate.\n * @param {number} [radius] The sphere radius to use.  Defaults to the Earth's\n *     mean radius using the WGS84 ellipsoid.\n * @return {number} The great circle distance between the points (in meters).\n * @api\n */\nexport function getDistance(c1, c2, radius) {\n  radius = radius || DEFAULT_RADIUS;\n  const lat1 = toRadians(c1[1]);\n  const lat2 = toRadians(c2[1]);\n  const deltaLatBy2 = (lat2 - lat1) / 2;\n  const deltaLonBy2 = toRadians(c2[0] - c1[0]) / 2;\n  const a =\n    Math.sin(deltaLatBy2) * Math.sin(deltaLatBy2) +\n    Math.sin(deltaLonBy2) *\n      Math.sin(deltaLonBy2) *\n      Math.cos(lat1) *\n      Math.cos(lat2);\n  return 2 * radius * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a));\n}\n\n/**\n * Get the cumulative great circle length of linestring coordinates (geographic).\n * @param {Array} coordinates Linestring coordinates.\n * @param {number} radius The sphere radius to use.\n * @return {number} The length (in meters).\n */\nfunction getLengthInternal(coordinates, radius) {\n  let length = 0;\n  for (let i = 0, ii = coordinates.length; i < ii - 1; ++i) {\n    length += getDistance(coordinates[i], coordinates[i + 1], radius);\n  }\n  return length;\n}\n\n/**\n * Get the spherical length of a geometry.  This length is the sum of the\n * great circle distances between coordinates.  For polygons, the length is\n * the sum of all rings.  For points, the length is zero.  For multi-part\n * geometries, the length is the sum of the length of each part.\n * @param {import(\"./geom/Geometry.js\").default} geometry A geometry.\n * @param {SphereMetricOptions} [options] Options for the\n * length calculation.  By default, geometries are assumed to be in 'EPSG:3857'.\n * You can change this by providing a `projection` option.\n * @return {number} The spherical length (in meters).\n * @api\n */\nexport function getLength(geometry, options) {\n  options = options || {};\n  const radius = options.radius || DEFAULT_RADIUS;\n  const projection = options.projection || 'EPSG:3857';\n  const type = geometry.getType();\n  if (type !== 'GeometryCollection') {\n    geometry = geometry.clone().transform(projection, 'EPSG:4326');\n  }\n  let length = 0;\n  let coordinates, coords, i, ii, j, jj;\n  switch (type) {\n    case 'Point':\n    case 'MultiPoint': {\n      break;\n    }\n    case 'LineString':\n    case 'LinearRing': {\n      coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (\n        geometry\n      ).getCoordinates();\n      length = getLengthInternal(coordinates, radius);\n      break;\n    }\n    case 'MultiLineString':\n    case 'Polygon': {\n      coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (\n        geometry\n      ).getCoordinates();\n      for (i = 0, ii = coordinates.length; i < ii; ++i) {\n        length += getLengthInternal(coordinates[i], radius);\n      }\n      break;\n    }\n    case 'MultiPolygon': {\n      coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (\n        geometry\n      ).getCoordinates();\n      for (i = 0, ii = coordinates.length; i < ii; ++i) {\n        coords = coordinates[i];\n        for (j = 0, jj = coords.length; j < jj; ++j) {\n          length += getLengthInternal(coords[j], radius);\n        }\n      }\n      break;\n    }\n    case 'GeometryCollection': {\n      const geometries =\n        /** @type {import(\"./geom/GeometryCollection.js\").default} */ (\n          geometry\n        ).getGeometries();\n      for (i = 0, ii = geometries.length; i < ii; ++i) {\n        length += getLength(geometries[i], options);\n      }\n      break;\n    }\n    default: {\n      throw new Error('Unsupported geometry type: ' + type);\n    }\n  }\n  return length;\n}\n\n/**\n * Returns the spherical area for a list of coordinates.\n *\n * [Reference](https://trs.jpl.nasa.gov/handle/2014/40409)\n * Robert. G. Chamberlain and William H. Duquette, \"Some Algorithms for\n * Polygons on a Sphere\", JPL Publication 07-03, Jet Propulsion\n * Laboratory, Pasadena, CA, June 2007\n *\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates List of coordinates of a linear\n * ring. If the ring is oriented clockwise, the area will be positive,\n * otherwise it will be negative.\n * @param {number} radius The sphere radius.\n * @return {number} Area (in square meters).\n */\nfunction getAreaInternal(coordinates, radius) {\n  let area = 0;\n  const len = coordinates.length;\n  let x1 = coordinates[len - 1][0];\n  let y1 = coordinates[len - 1][1];\n  for (let i = 0; i < len; i++) {\n    const x2 = coordinates[i][0];\n    const y2 = coordinates[i][1];\n    area +=\n      toRadians(x2 - x1) *\n      (2 + Math.sin(toRadians(y1)) + Math.sin(toRadians(y2)));\n    x1 = x2;\n    y1 = y2;\n  }\n  return (area * radius * radius) / 2.0;\n}\n\n/**\n * Get the spherical area of a geometry.  This is the area (in meters) assuming\n * that polygon edges are segments of great circles on a sphere.\n * @param {import(\"./geom/Geometry.js\").default} geometry A geometry.\n * @param {SphereMetricOptions} [options] Options for the area\n *     calculation.  By default, geometries are assumed to be in 'EPSG:3857'.\n *     You can change this by providing a `projection` option.\n * @return {number} The spherical area (in square meters).\n * @api\n */\nexport function getArea(geometry, options) {\n  options = options || {};\n  const radius = options.radius || DEFAULT_RADIUS;\n  const projection = options.projection || 'EPSG:3857';\n  const type = geometry.getType();\n  if (type !== 'GeometryCollection') {\n    geometry = geometry.clone().transform(projection, 'EPSG:4326');\n  }\n  let area = 0;\n  let coordinates, coords, i, ii, j, jj;\n  switch (type) {\n    case 'Point':\n    case 'MultiPoint':\n    case 'LineString':\n    case 'MultiLineString':\n    case 'LinearRing': {\n      break;\n    }\n    case 'Polygon': {\n      coordinates = /** @type {import(\"./geom/Polygon.js\").default} */ (\n        geometry\n      ).getCoordinates();\n      area = Math.abs(getAreaInternal(coordinates[0], radius));\n      for (i = 1, ii = coordinates.length; i < ii; ++i) {\n        area -= Math.abs(getAreaInternal(coordinates[i], radius));\n      }\n      break;\n    }\n    case 'MultiPolygon': {\n      coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (\n        geometry\n      ).getCoordinates();\n      for (i = 0, ii = coordinates.length; i < ii; ++i) {\n        coords = coordinates[i];\n        area += Math.abs(getAreaInternal(coords[0], radius));\n        for (j = 1, jj = coords.length; j < jj; ++j) {\n          area -= Math.abs(getAreaInternal(coords[j], radius));\n        }\n      }\n      break;\n    }\n    case 'GeometryCollection': {\n      const geometries =\n        /** @type {import(\"./geom/GeometryCollection.js\").default} */ (\n          geometry\n        ).getGeometries();\n      for (i = 0, ii = geometries.length; i < ii; ++i) {\n        area += getArea(geometries[i], options);\n      }\n      break;\n    }\n    default: {\n      throw new Error('Unsupported geometry type: ' + type);\n    }\n  }\n  return area;\n}\n\n/**\n * Returns the coordinate at the given distance and bearing from `c1`.\n *\n * @param {import(\"./coordinate.js\").Coordinate} c1 The origin point (`[lon, lat]` in degrees).\n * @param {number} distance The great-circle distance between the origin\n *     point and the target point.\n * @param {number} bearing The bearing (in radians).\n * @param {number} [radius] The sphere radius to use.  Defaults to the Earth's\n *     mean radius using the WGS84 ellipsoid.\n * @return {import(\"./coordinate.js\").Coordinate} The target point.\n */\nexport function offset(c1, distance, bearing, radius) {\n  radius = radius || DEFAULT_RADIUS;\n  const lat1 = toRadians(c1[1]);\n  const lon1 = toRadians(c1[0]);\n  const dByR = distance / radius;\n  const lat = Math.asin(\n    Math.sin(lat1) * Math.cos(dByR) +\n      Math.cos(lat1) * Math.sin(dByR) * Math.cos(bearing)\n  );\n  const lon =\n    lon1 +\n    Math.atan2(\n      Math.sin(bearing) * Math.sin(dByR) * Math.cos(lat1),\n      Math.cos(dByR) - Math.sin(lat1) * Math.sin(lat)\n    );\n  return [toDegrees(lon), toDegrees(lat)];\n}\n","/**\n * @module ol/proj\n */\n\n/**\n * The ol/proj module stores:\n * * a list of {@link module:ol/proj/Projection~Projection}\n * objects, one for each projection supported by the application\n * * a list of transform functions needed to convert coordinates in one projection\n * into another.\n *\n * The static functions are the methods used to maintain these.\n * Each transform function can handle not only simple coordinate pairs, but also\n * large arrays of coordinates such as vector geometries.\n *\n * When loaded, the library adds projection objects for EPSG:4326 (WGS84\n * geographic coordinates) and EPSG:3857 (Web or Spherical Mercator, as used\n * for example by Bing Maps or OpenStreetMap), together with the relevant\n * transform functions.\n *\n * Additional transforms may be added by using the http://proj4js.org/\n * library (version 2.2 or later). You can use the full build supplied by\n * Proj4js, or create a custom build to support those projections you need; see\n * the Proj4js website for how to do this. You also need the Proj4js definitions\n * for the required projections. These definitions can be obtained from\n * https://epsg.io/, and are a JS function, so can be loaded in a script\n * tag (as in the examples) or pasted into your application.\n *\n * After all required projection definitions are added to proj4's registry (by\n * using `proj4.defs()`), simply call `register(proj4)` from the `ol/proj/proj4`\n * package. Existing transforms are not changed by this function. See\n * examples/wms-image-custom-proj for an example of this.\n *\n * Additional projection definitions can be registered with `proj4.defs()` any\n * time. Just make sure to call `register(proj4)` again; for example, with user-supplied data where you don't\n * know in advance what projections are needed, you can initially load minimal\n * support and then load whichever are requested.\n *\n * Note that Proj4js does not support projection extents. If you want to add\n * one for creating default tile grids, you can add it after the Projection\n * object has been created with `setExtent`, for example,\n * `get('EPSG:1234').setExtent(extent)`.\n *\n * In addition to Proj4js support, any transform functions can be added with\n * {@link module:ol/proj.addCoordinateTransforms}. To use this, you must first create\n * a {@link module:ol/proj/Projection~Projection} object for the new projection and add it with\n * {@link module:ol/proj.addProjection}. You can then add the forward and inverse\n * functions with {@link module:ol/proj.addCoordinateTransforms}. See\n * examples/wms-custom-proj for an example of this.\n *\n * Note that if no transforms are needed and you only need to define the\n * projection, just add a {@link module:ol/proj/Projection~Projection} with\n * {@link module:ol/proj.addProjection}. See examples/wms-no-proj for an example of\n * this.\n */\nimport Projection from './proj/Projection.js';\nimport {\n  PROJECTIONS as EPSG3857_PROJECTIONS,\n  fromEPSG4326,\n  toEPSG4326,\n} from './proj/epsg3857.js';\nimport {PROJECTIONS as EPSG4326_PROJECTIONS} from './proj/epsg4326.js';\nimport {METERS_PER_UNIT} from './proj/Units.js';\nimport {\n  add as addProj,\n  clear as clearProj,\n  get as getProj,\n} from './proj/projections.js';\nimport {\n  add as addTransformFunc,\n  clear as clearTransformFuncs,\n  get as getTransformFunc,\n} from './proj/transforms.js';\nimport {applyTransform, getWidth} from './extent.js';\nimport {clamp, modulo} from './math.js';\nimport {equals, getWorldsAway} from './coordinate.js';\nimport {getDistance} from './sphere.js';\nimport {warn} from './console.js';\n\n/**\n * A projection as {@link module:ol/proj/Projection~Projection}, SRS identifier\n * string or undefined.\n * @typedef {Projection|string|undefined} ProjectionLike\n * @api\n */\n\n/**\n * A transform function accepts an array of input coordinate values, an optional\n * output array, and an optional dimension (default should be 2).  The function\n * transforms the input coordinate values, populates the output array, and\n * returns the output array.\n *\n * @typedef {function(Array<number>, Array<number>=, number=): Array<number>} TransformFunction\n * @api\n */\n\nexport {METERS_PER_UNIT};\n\nexport {Projection};\n\nlet showCoordinateWarning = true;\n\n/**\n * @param {boolean} [disable = true] Disable console info about `useGeographic()`\n */\nexport function disableCoordinateWarning(disable) {\n  const hide = disable === undefined ? true : disable;\n  showCoordinateWarning = !hide;\n}\n\n/**\n * @param {Array<number>} input Input coordinate array.\n * @param {Array<number>} [output] Output array of coordinate values.\n * @return {Array<number>} Output coordinate array (new array, same coordinate\n *     values).\n */\nexport function cloneTransform(input, output) {\n  if (output !== undefined) {\n    for (let i = 0, ii = input.length; i < ii; ++i) {\n      output[i] = input[i];\n    }\n    output = output;\n  } else {\n    output = input.slice();\n  }\n  return output;\n}\n\n/**\n * @param {Array<number>} input Input coordinate array.\n * @param {Array<number>} [output] Output array of coordinate values.\n * @return {Array<number>} Input coordinate array (same array as input).\n */\nexport function identityTransform(input, output) {\n  if (output !== undefined && input !== output) {\n    for (let i = 0, ii = input.length; i < ii; ++i) {\n      output[i] = input[i];\n    }\n    input = output;\n  }\n  return input;\n}\n\n/**\n * Add a Projection object to the list of supported projections that can be\n * looked up by their code.\n *\n * @param {Projection} projection Projection instance.\n * @api\n */\nexport function addProjection(projection) {\n  addProj(projection.getCode(), projection);\n  addTransformFunc(projection, projection, cloneTransform);\n}\n\n/**\n * @param {Array<Projection>} projections Projections.\n */\nexport function addProjections(projections) {\n  projections.forEach(addProjection);\n}\n\n/**\n * Fetches a Projection object for the code specified.\n *\n * @param {ProjectionLike} projectionLike Either a code string which is\n *     a combination of authority and identifier such as \"EPSG:4326\", or an\n *     existing projection object, or undefined.\n * @return {Projection|null} Projection object, or null if not in list.\n * @api\n */\nexport function get(projectionLike) {\n  return typeof projectionLike === 'string'\n    ? getProj(/** @type {string} */ (projectionLike))\n    : /** @type {Projection} */ (projectionLike) || null;\n}\n\n/**\n * Get the resolution of the point in degrees or distance units.\n * For projections with degrees as the unit this will simply return the\n * provided resolution. For other projections the point resolution is\n * by default estimated by transforming the `point` pixel to EPSG:4326,\n * measuring its width and height on the normal sphere,\n * and taking the average of the width and height.\n * A custom function can be provided for a specific projection, either\n * by setting the `getPointResolution` option in the\n * {@link module:ol/proj/Projection~Projection} constructor or by using\n * {@link module:ol/proj/Projection~Projection#setGetPointResolution} to change an existing\n * projection object.\n * @param {ProjectionLike} projection The projection.\n * @param {number} resolution Nominal resolution in projection units.\n * @param {import(\"./coordinate.js\").Coordinate} point Point to find adjusted resolution at.\n * @param {import(\"./proj/Units.js\").Units} [units] Units to get the point resolution in.\n * Default is the projection's units.\n * @return {number} Point resolution.\n * @api\n */\nexport function getPointResolution(projection, resolution, point, units) {\n  projection = get(projection);\n  let pointResolution;\n  const getter = projection.getPointResolutionFunc();\n  if (getter) {\n    pointResolution = getter(resolution, point);\n    if (units && units !== projection.getUnits()) {\n      const metersPerUnit = projection.getMetersPerUnit();\n      if (metersPerUnit) {\n        pointResolution =\n          (pointResolution * metersPerUnit) / METERS_PER_UNIT[units];\n      }\n    }\n  } else {\n    const projUnits = projection.getUnits();\n    if ((projUnits == 'degrees' && !units) || units == 'degrees') {\n      pointResolution = resolution;\n    } else {\n      // Estimate point resolution by transforming the center pixel to EPSG:4326,\n      // measuring its width and height on the normal sphere, and taking the\n      // average of the width and height.\n      const toEPSG4326 = getTransformFromProjections(\n        projection,\n        get('EPSG:4326')\n      );\n      if (toEPSG4326 === identityTransform && projUnits !== 'degrees') {\n        // no transform is available\n        pointResolution = resolution * projection.getMetersPerUnit();\n      } else {\n        let vertices = [\n          point[0] - resolution / 2,\n          point[1],\n          point[0] + resolution / 2,\n          point[1],\n          point[0],\n          point[1] - resolution / 2,\n          point[0],\n          point[1] + resolution / 2,\n        ];\n        vertices = toEPSG4326(vertices, vertices, 2);\n        const width = getDistance(vertices.slice(0, 2), vertices.slice(2, 4));\n        const height = getDistance(vertices.slice(4, 6), vertices.slice(6, 8));\n        pointResolution = (width + height) / 2;\n      }\n      const metersPerUnit = units\n        ? METERS_PER_UNIT[units]\n        : projection.getMetersPerUnit();\n      if (metersPerUnit !== undefined) {\n        pointResolution /= metersPerUnit;\n      }\n    }\n  }\n  return pointResolution;\n}\n\n/**\n * Registers transformation functions that don't alter coordinates. Those allow\n * to transform between projections with equal meaning.\n *\n * @param {Array<Projection>} projections Projections.\n * @api\n */\nexport function addEquivalentProjections(projections) {\n  addProjections(projections);\n  projections.forEach(function (source) {\n    projections.forEach(function (destination) {\n      if (source !== destination) {\n        addTransformFunc(source, destination, cloneTransform);\n      }\n    });\n  });\n}\n\n/**\n * Registers transformation functions to convert coordinates in any projection\n * in projection1 to any projection in projection2.\n *\n * @param {Array<Projection>} projections1 Projections with equal\n *     meaning.\n * @param {Array<Projection>} projections2 Projections with equal\n *     meaning.\n * @param {TransformFunction} forwardTransform Transformation from any\n *   projection in projection1 to any projection in projection2.\n * @param {TransformFunction} inverseTransform Transform from any projection\n *   in projection2 to any projection in projection1..\n */\nexport function addEquivalentTransforms(\n  projections1,\n  projections2,\n  forwardTransform,\n  inverseTransform\n) {\n  projections1.forEach(function (projection1) {\n    projections2.forEach(function (projection2) {\n      addTransformFunc(projection1, projection2, forwardTransform);\n      addTransformFunc(projection2, projection1, inverseTransform);\n    });\n  });\n}\n\n/**\n * Clear all cached projections and transforms.\n */\nexport function clearAllProjections() {\n  clearProj();\n  clearTransformFuncs();\n}\n\n/**\n * @param {Projection|string|undefined} projection Projection.\n * @param {string} defaultCode Default code.\n * @return {Projection} Projection.\n */\nexport function createProjection(projection, defaultCode) {\n  if (!projection) {\n    return get(defaultCode);\n  } else if (typeof projection === 'string') {\n    return get(projection);\n  }\n  return /** @type {Projection} */ (projection);\n}\n\n/**\n * Creates a {@link module:ol/proj~TransformFunction} from a simple 2D coordinate transform\n * function.\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} coordTransform Coordinate\n *     transform.\n * @return {TransformFunction} Transform function.\n */\nexport function createTransformFromCoordinateTransform(coordTransform) {\n  return (\n    /**\n     * @param {Array<number>} input Input.\n     * @param {Array<number>} [output] Output.\n     * @param {number} [dimension] Dimension.\n     * @return {Array<number>} Output.\n     */\n    function (input, output, dimension) {\n      const length = input.length;\n      dimension = dimension !== undefined ? dimension : 2;\n      output = output !== undefined ? output : new Array(length);\n      for (let i = 0; i < length; i += dimension) {\n        const point = coordTransform(input.slice(i, i + dimension));\n        const pointLength = point.length;\n        for (let j = 0, jj = dimension; j < jj; ++j) {\n          output[i + j] = j >= pointLength ? input[i + j] : point[j];\n        }\n      }\n      return output;\n    }\n  );\n}\n\n/**\n * Registers coordinate transform functions to convert coordinates between the\n * source projection and the destination projection.\n * The forward and inverse functions convert coordinate pairs; this function\n * converts these into the functions used internally which also handle\n * extents and coordinate arrays.\n *\n * @param {ProjectionLike} source Source projection.\n * @param {ProjectionLike} destination Destination projection.\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} forward The forward transform\n *     function (that is, from the source projection to the destination\n *     projection) that takes a {@link module:ol/coordinate~Coordinate} as argument and returns\n *     the transformed {@link module:ol/coordinate~Coordinate}.\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} inverse The inverse transform\n *     function (that is, from the destination projection to the source\n *     projection) that takes a {@link module:ol/coordinate~Coordinate} as argument and returns\n *     the transformed {@link module:ol/coordinate~Coordinate}. If the transform function can only\n *     transform less dimensions than the input coordinate, it is supposeed to return a coordinate\n *     with only the length it can transform. The other dimensions will be taken unchanged from the\n *     source.\n * @api\n */\nexport function addCoordinateTransforms(source, destination, forward, inverse) {\n  const sourceProj = get(source);\n  const destProj = get(destination);\n  addTransformFunc(\n    sourceProj,\n    destProj,\n    createTransformFromCoordinateTransform(forward)\n  );\n  addTransformFunc(\n    destProj,\n    sourceProj,\n    createTransformFromCoordinateTransform(inverse)\n  );\n}\n\n/**\n * Transforms a coordinate from longitude/latitude to a different projection.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate as longitude and latitude, i.e.\n *     an array with longitude as 1st and latitude as 2nd element.\n * @param {ProjectionLike} [projection] Target projection. The\n *     default is Web Mercator, i.e. 'EPSG:3857'.\n * @return {import(\"./coordinate.js\").Coordinate} Coordinate projected to the target projection.\n * @api\n */\nexport function fromLonLat(coordinate, projection) {\n  disableCoordinateWarning();\n  return transform(\n    coordinate,\n    'EPSG:4326',\n    projection !== undefined ? projection : 'EPSG:3857'\n  );\n}\n\n/**\n * Transforms a coordinate to longitude/latitude.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Projected coordinate.\n * @param {ProjectionLike} [projection] Projection of the coordinate.\n *     The default is Web Mercator, i.e. 'EPSG:3857'.\n * @return {import(\"./coordinate.js\").Coordinate} Coordinate as longitude and latitude, i.e. an array\n *     with longitude as 1st and latitude as 2nd element.\n * @api\n */\nexport function toLonLat(coordinate, projection) {\n  const lonLat = transform(\n    coordinate,\n    projection !== undefined ? projection : 'EPSG:3857',\n    'EPSG:4326'\n  );\n  const lon = lonLat[0];\n  if (lon < -180 || lon > 180) {\n    lonLat[0] = modulo(lon + 180, 360) - 180;\n  }\n  return lonLat;\n}\n\n/**\n * Checks if two projections are the same, that is every coordinate in one\n * projection does represent the same geographic point as the same coordinate in\n * the other projection.\n *\n * @param {Projection} projection1 Projection 1.\n * @param {Projection} projection2 Projection 2.\n * @return {boolean} Equivalent.\n * @api\n */\nexport function equivalent(projection1, projection2) {\n  if (projection1 === projection2) {\n    return true;\n  }\n  const equalUnits = projection1.getUnits() === projection2.getUnits();\n  if (projection1.getCode() === projection2.getCode()) {\n    return equalUnits;\n  }\n  const transformFunc = getTransformFromProjections(projection1, projection2);\n  return transformFunc === cloneTransform && equalUnits;\n}\n\n/**\n * Searches in the list of transform functions for the function for converting\n * coordinates from the source projection to the destination projection.\n *\n * @param {Projection} sourceProjection Source Projection object.\n * @param {Projection} destinationProjection Destination Projection\n *     object.\n * @return {TransformFunction} Transform function.\n */\nexport function getTransformFromProjections(\n  sourceProjection,\n  destinationProjection\n) {\n  const sourceCode = sourceProjection.getCode();\n  const destinationCode = destinationProjection.getCode();\n  let transformFunc = getTransformFunc(sourceCode, destinationCode);\n  if (!transformFunc) {\n    transformFunc = identityTransform;\n  }\n  return transformFunc;\n}\n\n/**\n * Given the projection-like objects, searches for a transformation\n * function to convert a coordinates array from the source projection to the\n * destination projection.\n *\n * @param {ProjectionLike} source Source.\n * @param {ProjectionLike} destination Destination.\n * @return {TransformFunction} Transform function.\n * @api\n */\nexport function getTransform(source, destination) {\n  const sourceProjection = get(source);\n  const destinationProjection = get(destination);\n  return getTransformFromProjections(sourceProjection, destinationProjection);\n}\n\n/**\n * Transforms a coordinate from source projection to destination projection.\n * This returns a new coordinate (and does not modify the original).\n *\n * See {@link module:ol/proj.transformExtent} for extent transformation.\n * See the transform method of {@link module:ol/geom/Geometry~Geometry} and its\n * subclasses for geometry transforms.\n *\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {ProjectionLike} source Source projection-like.\n * @param {ProjectionLike} destination Destination projection-like.\n * @return {import(\"./coordinate.js\").Coordinate} Coordinate.\n * @api\n */\nexport function transform(coordinate, source, destination) {\n  const transformFunc = getTransform(source, destination);\n  return transformFunc(coordinate, undefined, coordinate.length);\n}\n\n/**\n * Transforms an extent from source projection to destination projection.  This\n * returns a new extent (and does not modify the original).\n *\n * @param {import(\"./extent.js\").Extent} extent The extent to transform.\n * @param {ProjectionLike} source Source projection-like.\n * @param {ProjectionLike} destination Destination projection-like.\n * @param {number} [stops] Number of stops per side used for the transform.\n * By default only the corners are used.\n * @return {import(\"./extent.js\").Extent} The transformed extent.\n * @api\n */\nexport function transformExtent(extent, source, destination, stops) {\n  const transformFunc = getTransform(source, destination);\n  return applyTransform(extent, transformFunc, undefined, stops);\n}\n\n/**\n * Transforms the given point to the destination projection.\n *\n * @param {import(\"./coordinate.js\").Coordinate} point Point.\n * @param {Projection} sourceProjection Source projection.\n * @param {Projection} destinationProjection Destination projection.\n * @return {import(\"./coordinate.js\").Coordinate} Point.\n */\nexport function transformWithProjections(\n  point,\n  sourceProjection,\n  destinationProjection\n) {\n  const transformFunc = getTransformFromProjections(\n    sourceProjection,\n    destinationProjection\n  );\n  return transformFunc(point);\n}\n\n/**\n * @type {Projection|null}\n */\nlet userProjection = null;\n\n/**\n * Set the projection for coordinates supplied from and returned by API methods.\n * This includes all API methods except for those interacting with tile grids.\n * @param {ProjectionLike} projection The user projection.\n * @api\n */\nexport function setUserProjection(projection) {\n  userProjection = get(projection);\n}\n\n/**\n * Clear the user projection if set.\n * @api\n */\nexport function clearUserProjection() {\n  userProjection = null;\n}\n\n/**\n * Get the projection for coordinates supplied from and returned by API methods.\n * Note that this method is not yet a part of the stable API.  Support for user\n * projections is not yet complete and should be considered experimental.\n * @return {Projection|null} The user projection (or null if not set).\n * @api\n */\nexport function getUserProjection() {\n  return userProjection;\n}\n\n/**\n * Use geographic coordinates (WGS-84 datum) in API methods.  This includes all API\n * methods except for those interacting with tile grids.\n * @api\n */\nexport function useGeographic() {\n  setUserProjection('EPSG:4326');\n}\n\n/**\n * Return a coordinate transformed into the user projection.  If no user projection\n * is set, the original coordinate is returned.\n * @param {Array<number>} coordinate Input coordinate.\n * @param {ProjectionLike} sourceProjection The input coordinate projection.\n * @return {Array<number>} The input coordinate in the user projection.\n */\nexport function toUserCoordinate(coordinate, sourceProjection) {\n  if (!userProjection) {\n    return coordinate;\n  }\n  return transform(coordinate, sourceProjection, userProjection);\n}\n\n/**\n * Return a coordinate transformed from the user projection.  If no user projection\n * is set, the original coordinate is returned.\n * @param {Array<number>} coordinate Input coordinate.\n * @param {ProjectionLike} destProjection The destination projection.\n * @return {Array<number>} The input coordinate transformed.\n */\nexport function fromUserCoordinate(coordinate, destProjection) {\n  if (!userProjection) {\n    if (\n      showCoordinateWarning &&\n      !equals(coordinate, [0, 0]) &&\n      coordinate[0] >= -180 &&\n      coordinate[0] <= 180 &&\n      coordinate[1] >= -90 &&\n      coordinate[1] <= 90\n    ) {\n      showCoordinateWarning = false;\n      warn(\n        'Call useGeographic() from ol/proj once to work with [longitude, latitude] coordinates.'\n      );\n    }\n    return coordinate;\n  }\n  return transform(coordinate, userProjection, destProjection);\n}\n\n/**\n * Return an extent transformed into the user projection.  If no user projection\n * is set, the original extent is returned.\n * @param {import(\"./extent.js\").Extent} extent Input extent.\n * @param {ProjectionLike} sourceProjection The input extent projection.\n * @return {import(\"./extent.js\").Extent} The input extent in the user projection.\n */\nexport function toUserExtent(extent, sourceProjection) {\n  if (!userProjection) {\n    return extent;\n  }\n  return transformExtent(extent, sourceProjection, userProjection);\n}\n\n/**\n * Return an extent transformed from the user projection.  If no user projection\n * is set, the original extent is returned.\n * @param {import(\"./extent.js\").Extent} extent Input extent.\n * @param {ProjectionLike} destProjection The destination projection.\n * @return {import(\"./extent.js\").Extent} The input extent transformed.\n */\nexport function fromUserExtent(extent, destProjection) {\n  if (!userProjection) {\n    return extent;\n  }\n  return transformExtent(extent, userProjection, destProjection);\n}\n\n/**\n * Return the resolution in user projection units per pixel. If no user projection\n * is set, or source or user projection are missing units, the original resolution\n * is returned.\n * @param {number} resolution Resolution in input projection units per pixel.\n * @param {ProjectionLike} sourceProjection The input projection.\n * @return {number} Resolution in user projection units per pixel.\n */\nexport function toUserResolution(resolution, sourceProjection) {\n  if (!userProjection) {\n    return resolution;\n  }\n  const sourceUnits = get(sourceProjection).getUnits();\n  const userUnits = userProjection.getUnits();\n  return sourceUnits && userUnits\n    ? (resolution * METERS_PER_UNIT[sourceUnits]) / METERS_PER_UNIT[userUnits]\n    : resolution;\n}\n\n/**\n * Return the resolution in user projection units per pixel. If no user projection\n * is set, or source or user projection are missing units, the original resolution\n * is returned.\n * @param {number} resolution Resolution in user projection units per pixel.\n * @param {ProjectionLike} destProjection The destination projection.\n * @return {number} Resolution in destination projection units per pixel.\n */\nexport function fromUserResolution(resolution, destProjection) {\n  if (!userProjection) {\n    return resolution;\n  }\n  const sourceUnits = get(destProjection).getUnits();\n  const userUnits = userProjection.getUnits();\n  return sourceUnits && userUnits\n    ? (resolution * METERS_PER_UNIT[userUnits]) / METERS_PER_UNIT[sourceUnits]\n    : resolution;\n}\n\n/**\n * Creates a safe coordinate transform function from a coordinate transform function.\n * \"Safe\" means that it can handle wrapping of x-coordinates for global projections,\n * and that coordinates exceeding the source projection validity extent's range will be\n * clamped to the validity range.\n * @param {Projection} sourceProj Source projection.\n * @param {Projection} destProj Destination projection.\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} transform Transform function (source to destiation).\n * @return {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} Safe transform function (source to destiation).\n */\nexport function createSafeCoordinateTransform(sourceProj, destProj, transform) {\n  return function (coord) {\n    let transformed, worldsAway;\n    if (sourceProj.canWrapX()) {\n      const sourceExtent = sourceProj.getExtent();\n      const sourceExtentWidth = getWidth(sourceExtent);\n      coord = coord.slice(0);\n      worldsAway = getWorldsAway(coord, sourceProj, sourceExtentWidth);\n      if (worldsAway) {\n        // Move x to the real world\n        coord[0] = coord[0] - worldsAway * sourceExtentWidth;\n      }\n      coord[0] = clamp(coord[0], sourceExtent[0], sourceExtent[2]);\n      coord[1] = clamp(coord[1], sourceExtent[1], sourceExtent[3]);\n      transformed = transform(coord);\n    } else {\n      transformed = transform(coord);\n    }\n    if (worldsAway && destProj.canWrapX()) {\n      // Move transformed coordinate back to the offset world\n      transformed[0] += worldsAway * getWidth(destProj.getExtent());\n    }\n    return transformed;\n  };\n}\n\n/**\n * Add transforms to and from EPSG:4326 and EPSG:3857.  This function is called\n * by when this module is executed and should only need to be called again after\n * `clearAllProjections()` is called (e.g. in tests).\n */\nexport function addCommon() {\n  // Add transformations that don't alter coordinates to convert within set of\n  // projections with equal meaning.\n  addEquivalentProjections(EPSG3857_PROJECTIONS);\n  addEquivalentProjections(EPSG4326_PROJECTIONS);\n  // Add transformations to convert EPSG:4326 like coordinates to EPSG:3857 like\n  // coordinates and back.\n  addEquivalentTransforms(\n    EPSG4326_PROJECTIONS,\n    EPSG3857_PROJECTIONS,\n    fromEPSG4326,\n    toEPSG4326\n  );\n}\n\naddCommon();\n","/**\n * @module ol/proj/Projection\n */\nimport {METERS_PER_UNIT} from './Units.js';\n\n/**\n * @typedef {Object} Options\n * @property {string} code The SRS identifier code, e.g. `EPSG:4326`.\n * @property {import(\"./Units.js\").Units} [units] Units. Required unless a\n * proj4 projection is defined for `code`.\n * @property {import(\"../extent.js\").Extent} [extent] The validity extent for the SRS.\n * @property {string} [axisOrientation='enu'] The axis orientation as specified in Proj4.\n * @property {boolean} [global=false] Whether the projection is valid for the whole globe.\n * @property {number} [metersPerUnit] The meters per unit for the SRS.\n * If not provided, the `units` are used to get the meters per unit from the {@link METERS_PER_UNIT}\n * lookup table.\n * @property {import(\"../extent.js\").Extent} [worldExtent] The world extent for the SRS.\n * @property {function(number, import(\"../coordinate.js\").Coordinate):number} [getPointResolution]\n * Function to determine resolution at a point. The function is called with a\n * `number` view resolution and a {@link module:ol/coordinate~Coordinate} as arguments, and returns\n * the `number` resolution in projection units at the passed coordinate. If this is `undefined`,\n * the default {@link module:ol/proj.getPointResolution} function will be used.\n */\n\n/**\n * @classdesc\n * Projection definition class. One of these is created for each projection\n * supported in the application and stored in the {@link module:ol/proj} namespace.\n * You can use these in applications, but this is not required, as API params\n * and options use {@link module:ol/proj~ProjectionLike} which means the simple string\n * code will suffice.\n *\n * You can use {@link module:ol/proj.get} to retrieve the object for a particular\n * projection.\n *\n * The library includes definitions for `EPSG:4326` and `EPSG:3857`, together\n * with the following aliases:\n * * `EPSG:4326`: CRS:84, urn:ogc:def:crs:EPSG:6.6:4326,\n *     urn:ogc:def:crs:OGC:1.3:CRS84, urn:ogc:def:crs:OGC:2:84,\n *     http://www.opengis.net/gml/srs/epsg.xml#4326,\n *     urn:x-ogc:def:crs:EPSG:4326\n * * `EPSG:3857`: EPSG:102100, EPSG:102113, EPSG:900913,\n *     urn:ogc:def:crs:EPSG:6.18:3:3857,\n *     http://www.opengis.net/gml/srs/epsg.xml#3857\n *\n * If you use [proj4js](https://github.com/proj4js/proj4js), aliases can\n * be added using `proj4.defs()`. After all required projection definitions are\n * added, call the {@link module:ol/proj/proj4.register} function.\n *\n * @api\n */\nclass Projection {\n  /**\n   * @param {Options} options Projection options.\n   */\n  constructor(options) {\n    /**\n     * @private\n     * @type {string}\n     */\n    this.code_ = options.code;\n\n    /**\n     * Units of projected coordinates. When set to `TILE_PIXELS`, a\n     * `this.extent_` and `this.worldExtent_` must be configured properly for each\n     * tile.\n     * @private\n     * @type {import(\"./Units.js\").Units}\n     */\n    this.units_ = /** @type {import(\"./Units.js\").Units} */ (options.units);\n\n    /**\n     * Validity extent of the projection in projected coordinates. For projections\n     * with `TILE_PIXELS` units, this is the extent of the tile in\n     * tile pixel space.\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.extent_ = options.extent !== undefined ? options.extent : null;\n\n    /**\n     * Extent of the world in EPSG:4326. For projections with\n     * `TILE_PIXELS` units, this is the extent of the tile in\n     * projected coordinate space.\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.worldExtent_ =\n      options.worldExtent !== undefined ? options.worldExtent : null;\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.axisOrientation_ =\n      options.axisOrientation !== undefined ? options.axisOrientation : 'enu';\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.global_ = options.global !== undefined ? options.global : false;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.canWrapX_ = !!(this.global_ && this.extent_);\n\n    /**\n     * @private\n     * @type {function(number, import(\"../coordinate.js\").Coordinate):number|undefined}\n     */\n    this.getPointResolutionFunc_ = options.getPointResolution;\n\n    /**\n     * @private\n     * @type {import(\"../tilegrid/TileGrid.js\").default}\n     */\n    this.defaultTileGrid_ = null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.metersPerUnit_ = options.metersPerUnit;\n  }\n\n  /**\n   * @return {boolean} The projection is suitable for wrapping the x-axis\n   */\n  canWrapX() {\n    return this.canWrapX_;\n  }\n\n  /**\n   * Get the code for this projection, e.g. 'EPSG:4326'.\n   * @return {string} Code.\n   * @api\n   */\n  getCode() {\n    return this.code_;\n  }\n\n  /**\n   * Get the validity extent for this projection.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   * @api\n   */\n  getExtent() {\n    return this.extent_;\n  }\n\n  /**\n   * Get the units of this projection.\n   * @return {import(\"./Units.js\").Units} Units.\n   * @api\n   */\n  getUnits() {\n    return this.units_;\n  }\n\n  /**\n   * Get the amount of meters per unit of this projection.  If the projection is\n   * not configured with `metersPerUnit` or a units identifier, the return is\n   * `undefined`.\n   * @return {number|undefined} Meters.\n   * @api\n   */\n  getMetersPerUnit() {\n    return this.metersPerUnit_ || METERS_PER_UNIT[this.units_];\n  }\n\n  /**\n   * Get the world extent for this projection.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   * @api\n   */\n  getWorldExtent() {\n    return this.worldExtent_;\n  }\n\n  /**\n   * Get the axis orientation of this projection.\n   * Example values are:\n   * enu - the default easting, northing, elevation.\n   * neu - northing, easting, up - useful for \"lat/long\" geographic coordinates,\n   *     or south orientated transverse mercator.\n   * wnu - westing, northing, up - some planetary coordinate systems have\n   *     \"west positive\" coordinate systems\n   * @return {string} Axis orientation.\n   * @api\n   */\n  getAxisOrientation() {\n    return this.axisOrientation_;\n  }\n\n  /**\n   * Is this projection a global projection which spans the whole world?\n   * @return {boolean} Whether the projection is global.\n   * @api\n   */\n  isGlobal() {\n    return this.global_;\n  }\n\n  /**\n   * Set if the projection is a global projection which spans the whole world\n   * @param {boolean} global Whether the projection is global.\n   * @api\n   */\n  setGlobal(global) {\n    this.global_ = global;\n    this.canWrapX_ = !!(global && this.extent_);\n  }\n\n  /**\n   * @return {import(\"../tilegrid/TileGrid.js\").default} The default tile grid.\n   */\n  getDefaultTileGrid() {\n    return this.defaultTileGrid_;\n  }\n\n  /**\n   * @param {import(\"../tilegrid/TileGrid.js\").default} tileGrid The default tile grid.\n   */\n  setDefaultTileGrid(tileGrid) {\n    this.defaultTileGrid_ = tileGrid;\n  }\n\n  /**\n   * Set the validity extent for this projection.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @api\n   */\n  setExtent(extent) {\n    this.extent_ = extent;\n    this.canWrapX_ = !!(this.global_ && extent);\n  }\n\n  /**\n   * Set the world extent for this projection.\n   * @param {import(\"../extent.js\").Extent} worldExtent World extent\n   *     [minlon, minlat, maxlon, maxlat].\n   * @api\n   */\n  setWorldExtent(worldExtent) {\n    this.worldExtent_ = worldExtent;\n  }\n\n  /**\n   * Set the getPointResolution function (see {@link module:ol/proj.getPointResolution}\n   * for this projection.\n   * @param {function(number, import(\"../coordinate.js\").Coordinate):number} func Function\n   * @api\n   */\n  setGetPointResolution(func) {\n    this.getPointResolutionFunc_ = func;\n  }\n\n  /**\n   * Get the custom point resolution function for this projection (if set).\n   * @return {function(number, import(\"../coordinate.js\").Coordinate):number|undefined} The custom point\n   * resolution function (if set).\n   */\n  getPointResolutionFunc() {\n    return this.getPointResolutionFunc_;\n  }\n}\n\nexport default Projection;\n","/**\n * @module ol/proj/Units\n */\n\n/**\n * @typedef {'radians' | 'degrees' | 'ft' | 'm' | 'pixels' | 'tile-pixels' | 'us-ft'} Units\n * Projection units.\n */\n\n/**\n * See http://duff.ess.washington.edu/data/raster/drg/docs/geotiff.txt\n * @type {Object<number, Units>}\n */\nconst unitByCode = {\n  '9001': 'm',\n  '9002': 'ft',\n  '9003': 'us-ft',\n  '9101': 'radians',\n  '9102': 'degrees',\n};\n\n/**\n * @param {number} code Unit code.\n * @return {Units} Units.\n */\nexport function fromCode(code) {\n  return unitByCode[code];\n}\n\n/**\n * @typedef {Object} MetersPerUnitLookup\n * @property {number} radians Radians\n * @property {number} degrees Degrees\n * @property {number} ft  Feet\n * @property {number} m Meters\n * @property {number} us-ft US feet\n */\n\n/**\n * Meters per unit lookup table.\n * @const\n * @type {MetersPerUnitLookup}\n * @api\n */\nexport const METERS_PER_UNIT = {\n  // use the radius of the Normal sphere\n  'radians': 6370997 / (2 * Math.PI),\n  'degrees': (2 * Math.PI * 6370997) / 360,\n  'ft': 0.3048,\n  'm': 1,\n  'us-ft': 1200 / 3937,\n};\n","/**\n * @module ol/render/Event\n */\n\nimport Event from '../events/Event.js';\n\nclass RenderEvent extends Event {\n  /**\n   * @param {import(\"./EventType.js\").default} type Type.\n   * @param {import(\"../transform.js\").Transform} [inversePixelTransform] Transform for\n   *     CSS pixels to rendered pixels.\n   * @param {import(\"../Map.js\").FrameState} [frameState] Frame state.\n   * @param {?(CanvasRenderingContext2D|WebGLRenderingContext)} [context] Context.\n   */\n  constructor(type, inversePixelTransform, frameState, context) {\n    super(type);\n\n    /**\n     * Transform from CSS pixels (relative to the top-left corner of the map viewport)\n     * to rendered pixels on this event's `context`. Only available when a Canvas renderer is used, null otherwise.\n     * @type {import(\"../transform.js\").Transform|undefined}\n     * @api\n     */\n    this.inversePixelTransform = inversePixelTransform;\n\n    /**\n     * An object representing the current render frame state.\n     * @type {import(\"../Map.js\").FrameState|undefined}\n     * @api\n     */\n    this.frameState = frameState;\n\n    /**\n     * Canvas context. Not available when the event is dispatched by the map. For Canvas 2D layers,\n     * the context will be the 2D rendering context.  For WebGL layers, the context will be the WebGL\n     * context.\n     * @type {CanvasRenderingContext2D|WebGLRenderingContext|undefined}\n     * @api\n     */\n    this.context = context;\n  }\n}\n\nexport default RenderEvent;\n","/**\n * @module ol/render/EventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered before a layer is rendered.\n   * @event module:ol/render/Event~RenderEvent#prerender\n   * @api\n   */\n  PRERENDER: 'prerender',\n\n  /**\n   * Triggered after a layer is rendered.\n   * @event module:ol/render/Event~RenderEvent#postrender\n   * @api\n   */\n  POSTRENDER: 'postrender',\n\n  /**\n   * Triggered before layers are composed.  When dispatched by the map, the event object will not have\n   * a `context` set.  When dispatched by a layer, the event object will have a `context` set.  Only\n   * WebGL layers currently dispatch this event.\n   * @event module:ol/render/Event~RenderEvent#precompose\n   * @api\n   */\n  PRECOMPOSE: 'precompose',\n\n  /**\n   * Triggered after layers are composed.  When dispatched by the map, the event object will not have\n   * a `context` set.  When dispatched by a layer, the event object will have a `context` set.  Only\n   * WebGL layers currently dispatch this event.\n   * @event module:ol/render/Event~RenderEvent#postcompose\n   * @api\n   */\n  POSTCOMPOSE: 'postcompose',\n\n  /**\n   * Triggered when rendering is complete, i.e. all sources and tiles have\n   * finished loading for the current viewport, and all tiles are faded in.\n   * The event object will not have a `context` set.\n   * @event module:ol/render/Event~RenderEvent#rendercomplete\n   * @api\n   */\n  RENDERCOMPLETE: 'rendercomplete',\n};\n\n/**\n * @typedef {'postrender'|'precompose'|'postcompose'|'rendercomplete'} MapRenderEventTypes\n */\n\n/**\n * @typedef {'postrender'|'prerender'} LayerRenderEventTypes\n */\n","/**\n * @module ol/render/VectorContext\n */\n\n/**\n * @classdesc\n * Context for drawing geometries.  A vector context is available on render\n * events and does not need to be constructed directly.\n * @api\n */\nclass VectorContext {\n  /**\n   * Render a geometry with a custom renderer.\n   *\n   * @param {import(\"../geom/SimpleGeometry.js\").default} geometry Geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   * @param {Function} renderer Renderer.\n   * @param {Function} hitDetectionRenderer Renderer.\n   */\n  drawCustom(geometry, feature, renderer, hitDetectionRenderer) {}\n\n  /**\n   * Render a geometry.\n   *\n   * @param {import(\"../geom/Geometry.js\").default} geometry The geometry to render.\n   */\n  drawGeometry(geometry) {}\n\n  /**\n   * Set the rendering style.\n   *\n   * @param {import(\"../style/Style.js\").default} style The rendering style.\n   */\n  setStyle(style) {}\n\n  /**\n   * @param {import(\"../geom/Circle.js\").default} circleGeometry Circle geometry.\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   */\n  drawCircle(circleGeometry, feature) {}\n\n  /**\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   * @param {import(\"../style/Style.js\").default} style Style.\n   */\n  drawFeature(feature, style) {}\n\n  /**\n   * @param {import(\"../geom/GeometryCollection.js\").default} geometryCollectionGeometry Geometry collection.\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   */\n  drawGeometryCollection(geometryCollectionGeometry, feature) {}\n\n  /**\n   * @param {import(\"../geom/LineString.js\").default|import(\"./Feature.js\").default} lineStringGeometry Line string geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawLineString(lineStringGeometry, feature) {}\n\n  /**\n   * @param {import(\"../geom/MultiLineString.js\").default|import(\"./Feature.js\").default} multiLineStringGeometry MultiLineString geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawMultiLineString(multiLineStringGeometry, feature) {}\n\n  /**\n   * @param {import(\"../geom/MultiPoint.js\").default|import(\"./Feature.js\").default} multiPointGeometry MultiPoint geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawMultiPoint(multiPointGeometry, feature) {}\n\n  /**\n   * @param {import(\"../geom/MultiPolygon.js\").default} multiPolygonGeometry MultiPolygon geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawMultiPolygon(multiPolygonGeometry, feature) {}\n\n  /**\n   * @param {import(\"../geom/Point.js\").default|import(\"./Feature.js\").default} pointGeometry Point geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawPoint(pointGeometry, feature) {}\n\n  /**\n   * @param {import(\"../geom/Polygon.js\").default|import(\"./Feature.js\").default} polygonGeometry Polygon geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawPolygon(polygonGeometry, feature) {}\n\n  /**\n   * @param {import(\"../geom/SimpleGeometry.js\").default|import(\"./Feature.js\").default} geometry Geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawText(geometry, feature) {}\n\n  /**\n   * @param {import(\"../style/Fill.js\").default} fillStyle Fill style.\n   * @param {import(\"../style/Stroke.js\").default} strokeStyle Stroke style.\n   */\n  setFillStrokeStyle(fillStyle, strokeStyle) {}\n\n  /**\n   * @param {import(\"../style/Image.js\").default} imageStyle Image style.\n   * @param {import(\"../render/canvas.js\").DeclutterImageWithText} [declutterImageWithText] Shared data for combined decluttering with a text style.\n   */\n  setImageStyle(imageStyle, declutterImageWithText) {}\n\n  /**\n   * @param {import(\"../style/Text.js\").default} textStyle Text style.\n   * @param {import(\"../render/canvas.js\").DeclutterImageWithText} [declutterImageWithText] Shared data for combined decluttering with an image style.\n   */\n  setTextStyle(textStyle, declutterImageWithText) {}\n}\n\nexport default VectorContext;\n","/**\n * @module ol/render/canvas\n */\nimport BaseObject from '../Object.js';\nimport {WORKER_OFFSCREEN_CANVAS} from '../has.js';\nimport {clear} from '../obj.js';\nimport {createCanvasContext2D} from '../dom.js';\nimport {getFontParameters} from '../css.js';\n\n/**\n * @typedef {'Circle' | 'Image' | 'LineString' | 'Polygon' | 'Text' | 'Default'} BuilderType\n */\n\n/**\n * @typedef {Object} FillState\n * @property {import(\"../colorlike.js\").ColorLike} fillStyle FillStyle.\n */\n\n/**\n * @typedef Label\n * @property {number} width Width.\n * @property {number} height Height.\n * @property {Array<string|number>} contextInstructions ContextInstructions.\n */\n\n/**\n * @typedef {Object} FillStrokeState\n * @property {import(\"../colorlike.js\").ColorLike} [currentFillStyle] Current FillStyle.\n * @property {import(\"../colorlike.js\").ColorLike} [currentStrokeStyle] Current StrokeStyle.\n * @property {CanvasLineCap} [currentLineCap] Current LineCap.\n * @property {Array<number>} currentLineDash Current LineDash.\n * @property {number} [currentLineDashOffset] Current LineDashOffset.\n * @property {CanvasLineJoin} [currentLineJoin] Current LineJoin.\n * @property {number} [currentLineWidth] Current LineWidth.\n * @property {number} [currentMiterLimit] Current MiterLimit.\n * @property {number} [lastStroke] Last stroke.\n * @property {import(\"../colorlike.js\").ColorLike} [fillStyle] FillStyle.\n * @property {import(\"../colorlike.js\").ColorLike} [strokeStyle] StrokeStyle.\n * @property {CanvasLineCap} [lineCap] LineCap.\n * @property {Array<number>} lineDash LineDash.\n * @property {number} [lineDashOffset] LineDashOffset.\n * @property {CanvasLineJoin} [lineJoin] LineJoin.\n * @property {number} [lineWidth] LineWidth.\n * @property {number} [miterLimit] MiterLimit.\n */\n\n/**\n * @typedef {Object} StrokeState\n * @property {CanvasLineCap} lineCap LineCap.\n * @property {Array<number>} lineDash LineDash.\n * @property {number} lineDashOffset LineDashOffset.\n * @property {CanvasLineJoin} lineJoin LineJoin.\n * @property {number} lineWidth LineWidth.\n * @property {number} miterLimit MiterLimit.\n * @property {import(\"../colorlike.js\").ColorLike} strokeStyle StrokeStyle.\n */\n\n/**\n * @typedef {Object} TextState\n * @property {string} font Font.\n * @property {CanvasTextAlign} [textAlign] TextAlign.\n * @property {number} [repeat] Repeat.\n * @property {import(\"../style/Text.js\").TextJustify} [justify] Justify.\n * @property {CanvasTextBaseline} textBaseline TextBaseline.\n * @property {import(\"../style/Text.js\").TextPlacement} [placement] Placement.\n * @property {number} [maxAngle] MaxAngle.\n * @property {boolean} [overflow] Overflow.\n * @property {import(\"../style/Fill.js\").default} [backgroundFill] BackgroundFill.\n * @property {import(\"../style/Stroke.js\").default} [backgroundStroke] BackgroundStroke.\n * @property {import(\"../size.js\").Size} [scale] Scale.\n * @property {Array<number>} [padding] Padding.\n */\n\n/**\n * @typedef {Object} SerializableInstructions\n * @property {Array<*>} instructions The rendering instructions.\n * @property {Array<*>} hitDetectionInstructions The rendering hit detection instructions.\n * @property {Array<number>} coordinates The array of all coordinates.\n * @property {!Object<string, TextState>} [textStates] The text states (decluttering).\n * @property {!Object<string, FillState>} [fillStates] The fill states (decluttering).\n * @property {!Object<string, StrokeState>} [strokeStates] The stroke states (decluttering).\n */\n\n/**\n * @typedef {Object<number, import(\"./canvas/Executor.js\").ReplayImageOrLabelArgs>} DeclutterImageWithText\n */\n\n/**\n * @const\n * @type {string}\n */\nexport const defaultFont = '10px sans-serif';\n\n/**\n * @const\n * @type {import(\"../colorlike.js\").ColorLike}\n */\nexport const defaultFillStyle = '#000';\n\n/**\n * @const\n * @type {CanvasLineCap}\n */\nexport const defaultLineCap = 'round';\n\n/**\n * @const\n * @type {Array<number>}\n */\nexport const defaultLineDash = [];\n\n/**\n * @const\n * @type {number}\n */\nexport const defaultLineDashOffset = 0;\n\n/**\n * @const\n * @type {CanvasLineJoin}\n */\nexport const defaultLineJoin = 'round';\n\n/**\n * @const\n * @type {number}\n */\nexport const defaultMiterLimit = 10;\n\n/**\n * @const\n * @type {import(\"../colorlike.js\").ColorLike}\n */\nexport const defaultStrokeStyle = '#000';\n\n/**\n * @const\n * @type {CanvasTextAlign}\n */\nexport const defaultTextAlign = 'center';\n\n/**\n * @const\n * @type {CanvasTextBaseline}\n */\nexport const defaultTextBaseline = 'middle';\n\n/**\n * @const\n * @type {Array<number>}\n */\nexport const defaultPadding = [0, 0, 0, 0];\n\n/**\n * @const\n * @type {number}\n */\nexport const defaultLineWidth = 1;\n\n/**\n * @type {BaseObject}\n */\nexport const checkedFonts = new BaseObject();\n\n/**\n * @type {CanvasRenderingContext2D}\n */\nlet measureContext = null;\n\n/**\n * @type {string}\n */\nlet measureFont;\n\n/**\n * @type {!Object<string, number>}\n */\nexport const textHeights = {};\n\n/**\n * Clears the label cache when a font becomes available.\n * @param {string} fontSpec CSS font spec.\n */\nexport const registerFont = (function () {\n  const retries = 100;\n  const size = '32px ';\n  const referenceFonts = ['monospace', 'serif'];\n  const len = referenceFonts.length;\n  const text = 'wmytzilWMYTZIL@#/&?$%10\\uF013';\n  let interval, referenceWidth;\n\n  /**\n   * @param {string} fontStyle Css font-style\n   * @param {string} fontWeight Css font-weight\n   * @param {*} fontFamily Css font-family\n   * @return {boolean} Font with style and weight is available\n   */\n  function isAvailable(fontStyle, fontWeight, fontFamily) {\n    let available = true;\n    for (let i = 0; i < len; ++i) {\n      const referenceFont = referenceFonts[i];\n      referenceWidth = measureTextWidth(\n        fontStyle + ' ' + fontWeight + ' ' + size + referenceFont,\n        text\n      );\n      if (fontFamily != referenceFont) {\n        const width = measureTextWidth(\n          fontStyle +\n            ' ' +\n            fontWeight +\n            ' ' +\n            size +\n            fontFamily +\n            ',' +\n            referenceFont,\n          text\n        );\n        // If width and referenceWidth are the same, then the fallback was used\n        // instead of the font we wanted, so the font is not available.\n        available = available && width != referenceWidth;\n      }\n    }\n    if (available) {\n      return true;\n    }\n    return false;\n  }\n\n  function check() {\n    let done = true;\n    const fonts = checkedFonts.getKeys();\n    for (let i = 0, ii = fonts.length; i < ii; ++i) {\n      const font = fonts[i];\n      if (checkedFonts.get(font) < retries) {\n        if (isAvailable.apply(this, font.split('\\n'))) {\n          clear(textHeights);\n          // Make sure that loaded fonts are picked up by Safari\n          measureContext = null;\n          measureFont = undefined;\n          checkedFonts.set(font, retries);\n        } else {\n          checkedFonts.set(font, checkedFonts.get(font) + 1, true);\n          done = false;\n        }\n      }\n    }\n    if (done) {\n      clearInterval(interval);\n      interval = undefined;\n    }\n  }\n\n  return function (fontSpec) {\n    const font = getFontParameters(fontSpec);\n    if (!font) {\n      return;\n    }\n    const families = font.families;\n    for (let i = 0, ii = families.length; i < ii; ++i) {\n      const family = families[i];\n      const key = font.style + '\\n' + font.weight + '\\n' + family;\n      if (checkedFonts.get(key) === undefined) {\n        checkedFonts.set(key, retries, true);\n        if (!isAvailable(font.style, font.weight, family)) {\n          checkedFonts.set(key, 0, true);\n          if (interval === undefined) {\n            interval = setInterval(check, 32);\n          }\n        }\n      }\n    }\n  };\n})();\n\n/**\n * @param {string} font Font to use for measuring.\n * @return {import(\"../size.js\").Size} Measurement.\n */\nexport const measureTextHeight = (function () {\n  /**\n   * @type {HTMLDivElement}\n   */\n  let measureElement;\n  return function (fontSpec) {\n    let height = textHeights[fontSpec];\n    if (height == undefined) {\n      if (WORKER_OFFSCREEN_CANVAS) {\n        const font = getFontParameters(fontSpec);\n        const metrics = measureText(fontSpec, 'Žg');\n        const lineHeight = isNaN(Number(font.lineHeight))\n          ? 1.2\n          : Number(font.lineHeight);\n        height =\n          lineHeight *\n          (metrics.actualBoundingBoxAscent + metrics.actualBoundingBoxDescent);\n      } else {\n        if (!measureElement) {\n          measureElement = document.createElement('div');\n          measureElement.innerHTML = 'M';\n          measureElement.style.minHeight = '0';\n          measureElement.style.maxHeight = 'none';\n          measureElement.style.height = 'auto';\n          measureElement.style.padding = '0';\n          measureElement.style.border = 'none';\n          measureElement.style.position = 'absolute';\n          measureElement.style.display = 'block';\n          measureElement.style.left = '-99999px';\n        }\n        measureElement.style.font = fontSpec;\n        document.body.appendChild(measureElement);\n        height = measureElement.offsetHeight;\n        document.body.removeChild(measureElement);\n      }\n      textHeights[fontSpec] = height;\n    }\n    return height;\n  };\n})();\n\n/**\n * @param {string} font Font.\n * @param {string} text Text.\n * @return {TextMetrics} Text metrics.\n */\nfunction measureText(font, text) {\n  if (!measureContext) {\n    measureContext = createCanvasContext2D(1, 1);\n  }\n  if (font != measureFont) {\n    measureContext.font = font;\n    measureFont = measureContext.font;\n  }\n  return measureContext.measureText(text);\n}\n\n/**\n * @param {string} font Font.\n * @param {string} text Text.\n * @return {number} Width.\n */\nexport function measureTextWidth(font, text) {\n  return measureText(font, text).width;\n}\n\n/**\n * Measure text width using a cache.\n * @param {string} font The font.\n * @param {string} text The text to measure.\n * @param {Object<string, number>} cache A lookup of cached widths by text.\n * @return {number} The text width.\n */\nexport function measureAndCacheTextWidth(font, text, cache) {\n  if (text in cache) {\n    return cache[text];\n  }\n  const width = text\n    .split('\\n')\n    .reduce((prev, curr) => Math.max(prev, measureTextWidth(font, curr)), 0);\n  cache[text] = width;\n  return width;\n}\n\n/**\n * @param {TextState} baseStyle Base style.\n * @param {Array<string>} chunks Text chunks to measure.\n * @return {{width: number, height: number, widths: Array<number>, heights: Array<number>, lineWidths: Array<number>}}} Text metrics.\n */\nexport function getTextDimensions(baseStyle, chunks) {\n  const widths = [];\n  const heights = [];\n  const lineWidths = [];\n  let width = 0;\n  let lineWidth = 0;\n  let height = 0;\n  let lineHeight = 0;\n  for (let i = 0, ii = chunks.length; i <= ii; i += 2) {\n    const text = chunks[i];\n    if (text === '\\n' || i === ii) {\n      width = Math.max(width, lineWidth);\n      lineWidths.push(lineWidth);\n      lineWidth = 0;\n      height += lineHeight;\n      continue;\n    }\n    const font = chunks[i + 1] || baseStyle.font;\n    const currentWidth = measureTextWidth(font, text);\n    widths.push(currentWidth);\n    lineWidth += currentWidth;\n    const currentHeight = measureTextHeight(font);\n    heights.push(currentHeight);\n    lineHeight = Math.max(lineHeight, currentHeight);\n  }\n  return {width, height, widths, heights, lineWidths};\n}\n\n/**\n * @param {CanvasRenderingContext2D} context Context.\n * @param {number} rotation Rotation.\n * @param {number} offsetX X offset.\n * @param {number} offsetY Y offset.\n */\nexport function rotateAtOffset(context, rotation, offsetX, offsetY) {\n  if (rotation !== 0) {\n    context.translate(offsetX, offsetY);\n    context.rotate(rotation);\n    context.translate(-offsetX, -offsetY);\n  }\n}\n\n/**\n * @param {CanvasRenderingContext2D} context Context.\n * @param {import(\"../transform.js\").Transform|null} transform Transform.\n * @param {number} opacity Opacity.\n * @param {Label|HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} labelOrImage Label.\n * @param {number} originX Origin X.\n * @param {number} originY Origin Y.\n * @param {number} w Width.\n * @param {number} h Height.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {import(\"../size.js\").Size} scale Scale.\n */\nexport function drawImageOrLabel(\n  context,\n  transform,\n  opacity,\n  labelOrImage,\n  originX,\n  originY,\n  w,\n  h,\n  x,\n  y,\n  scale\n) {\n  context.save();\n\n  if (opacity !== 1) {\n    context.globalAlpha *= opacity;\n  }\n  if (transform) {\n    context.setTransform.apply(context, transform);\n  }\n\n  if (/** @type {*} */ (labelOrImage).contextInstructions) {\n    // label\n    context.translate(x, y);\n    context.scale(scale[0], scale[1]);\n    executeLabelInstructions(/** @type {Label} */ (labelOrImage), context);\n  } else if (scale[0] < 0 || scale[1] < 0) {\n    // flipped image\n    context.translate(x, y);\n    context.scale(scale[0], scale[1]);\n    context.drawImage(\n      /** @type {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} */ (\n        labelOrImage\n      ),\n      originX,\n      originY,\n      w,\n      h,\n      0,\n      0,\n      w,\n      h\n    );\n  } else {\n    // if image not flipped translate and scale can be avoided\n    context.drawImage(\n      /** @type {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} */ (\n        labelOrImage\n      ),\n      originX,\n      originY,\n      w,\n      h,\n      x,\n      y,\n      w * scale[0],\n      h * scale[1]\n    );\n  }\n\n  context.restore();\n}\n\n/**\n * @param {Label} label Label.\n * @param {CanvasRenderingContext2D} context Context.\n */\nfunction executeLabelInstructions(label, context) {\n  const contextInstructions = label.contextInstructions;\n  for (let i = 0, ii = contextInstructions.length; i < ii; i += 2) {\n    if (Array.isArray(contextInstructions[i + 1])) {\n      context[contextInstructions[i]].apply(\n        context,\n        contextInstructions[i + 1]\n      );\n    } else {\n      context[contextInstructions[i]] = contextInstructions[i + 1];\n    }\n  }\n}\n","/**\n * @module ol/render/canvas/Builder\n */\nimport CanvasInstruction from './Instruction.js';\nimport Relationship from '../../extent/Relationship.js';\nimport VectorContext from '../VectorContext.js';\nimport {asColorLike} from '../../colorlike.js';\nimport {\n  buffer,\n  clone,\n  containsCoordinate,\n  coordinateRelationship,\n} from '../../extent.js';\nimport {\n  defaultFillStyle,\n  defaultLineCap,\n  defaultLineDash,\n  defaultLineDashOffset,\n  defaultLineJoin,\n  defaultLineWidth,\n  defaultMiterLimit,\n  defaultStrokeStyle,\n} from '../canvas.js';\nimport {equals, reverseSubArray} from '../../array.js';\nimport {\n  inflateCoordinates,\n  inflateCoordinatesArray,\n  inflateMultiCoordinatesArray,\n} from '../../geom/flat/inflate.js';\n\nclass CanvasBuilder extends VectorContext {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    super();\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.tolerance = tolerance;\n\n    /**\n     * @protected\n     * @const\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.maxExtent = maxExtent;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.pixelRatio = pixelRatio;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.maxLineWidth = 0;\n\n    /**\n     * @protected\n     * @const\n     * @type {number}\n     */\n    this.resolution = resolution;\n\n    /**\n     * @private\n     * @type {Array<*>}\n     */\n    this.beginGeometryInstruction1_ = null;\n\n    /**\n     * @private\n     * @type {Array<*>}\n     */\n    this.beginGeometryInstruction2_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.bufferedMaxExtent_ = null;\n\n    /**\n     * @protected\n     * @type {Array<*>}\n     */\n    this.instructions = [];\n\n    /**\n     * @protected\n     * @type {Array<number>}\n     */\n    this.coordinates = [];\n\n    /**\n     * @private\n     * @type {import(\"../../coordinate.js\").Coordinate}\n     */\n    this.tmpCoordinate_ = [];\n\n    /**\n     * @protected\n     * @type {Array<*>}\n     */\n    this.hitDetectionInstructions = [];\n\n    /**\n     * @protected\n     * @type {import(\"../canvas.js\").FillStrokeState}\n     */\n    this.state = /** @type {import(\"../canvas.js\").FillStrokeState} */ ({});\n  }\n\n  /**\n   * @protected\n   * @param {Array<number>} dashArray Dash array.\n   * @return {Array<number>} Dash array with pixel ratio applied\n   */\n  applyPixelRatio(dashArray) {\n    const pixelRatio = this.pixelRatio;\n    return pixelRatio == 1\n      ? dashArray\n      : dashArray.map(function (dash) {\n          return dash * pixelRatio;\n        });\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} stride Stride.\n   * @protected\n   * @return {number} My end\n   */\n  appendFlatPointCoordinates(flatCoordinates, stride) {\n    const extent = this.getBufferedMaxExtent();\n    const tmpCoord = this.tmpCoordinate_;\n    const coordinates = this.coordinates;\n    let myEnd = coordinates.length;\n    for (let i = 0, ii = flatCoordinates.length; i < ii; i += stride) {\n      tmpCoord[0] = flatCoordinates[i];\n      tmpCoord[1] = flatCoordinates[i + 1];\n      if (containsCoordinate(extent, tmpCoord)) {\n        coordinates[myEnd++] = tmpCoord[0];\n        coordinates[myEnd++] = tmpCoord[1];\n      }\n    }\n    return myEnd;\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @param {boolean} closed Last input coordinate equals first.\n   * @param {boolean} skipFirst Skip first coordinate.\n   * @protected\n   * @return {number} My end.\n   */\n  appendFlatLineCoordinates(\n    flatCoordinates,\n    offset,\n    end,\n    stride,\n    closed,\n    skipFirst\n  ) {\n    const coordinates = this.coordinates;\n    let myEnd = coordinates.length;\n    const extent = this.getBufferedMaxExtent();\n    if (skipFirst) {\n      offset += stride;\n    }\n    let lastXCoord = flatCoordinates[offset];\n    let lastYCoord = flatCoordinates[offset + 1];\n    const nextCoord = this.tmpCoordinate_;\n    let skipped = true;\n\n    let i, lastRel, nextRel;\n    for (i = offset + stride; i < end; i += stride) {\n      nextCoord[0] = flatCoordinates[i];\n      nextCoord[1] = flatCoordinates[i + 1];\n      nextRel = coordinateRelationship(extent, nextCoord);\n      if (nextRel !== lastRel) {\n        if (skipped) {\n          coordinates[myEnd++] = lastXCoord;\n          coordinates[myEnd++] = lastYCoord;\n          skipped = false;\n        }\n        coordinates[myEnd++] = nextCoord[0];\n        coordinates[myEnd++] = nextCoord[1];\n      } else if (nextRel === Relationship.INTERSECTING) {\n        coordinates[myEnd++] = nextCoord[0];\n        coordinates[myEnd++] = nextCoord[1];\n        skipped = false;\n      } else {\n        skipped = true;\n      }\n      lastXCoord = nextCoord[0];\n      lastYCoord = nextCoord[1];\n      lastRel = nextRel;\n    }\n\n    // Last coordinate equals first or only one point to append:\n    if ((closed && skipped) || i === offset + stride) {\n      coordinates[myEnd++] = lastXCoord;\n      coordinates[myEnd++] = lastYCoord;\n    }\n    return myEnd;\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {Array<number>} ends Ends.\n   * @param {number} stride Stride.\n   * @param {Array<number>} builderEnds Builder ends.\n   * @return {number} Offset.\n   */\n  drawCustomCoordinates_(flatCoordinates, offset, ends, stride, builderEnds) {\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\n      const end = ends[i];\n      const builderEnd = this.appendFlatLineCoordinates(\n        flatCoordinates,\n        offset,\n        end,\n        stride,\n        false,\n        false\n      );\n      builderEnds.push(builderEnd);\n      offset = end;\n    }\n    return offset;\n  }\n\n  /**\n   * @param {import(\"../../geom/SimpleGeometry.js\").default} geometry Geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   * @param {Function} renderer Renderer.\n   * @param {Function} hitDetectionRenderer Renderer.\n   */\n  drawCustom(geometry, feature, renderer, hitDetectionRenderer) {\n    this.beginGeometry(geometry, feature);\n\n    const type = geometry.getType();\n    const stride = geometry.getStride();\n    const builderBegin = this.coordinates.length;\n\n    let flatCoordinates, builderEnd, builderEnds, builderEndss;\n    let offset;\n\n    switch (type) {\n      case 'MultiPolygon':\n        flatCoordinates =\n          /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (\n            geometry\n          ).getOrientedFlatCoordinates();\n        builderEndss = [];\n        const endss =\n          /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (\n            geometry\n          ).getEndss();\n        offset = 0;\n        for (let i = 0, ii = endss.length; i < ii; ++i) {\n          const myEnds = [];\n          offset = this.drawCustomCoordinates_(\n            flatCoordinates,\n            offset,\n            endss[i],\n            stride,\n            myEnds\n          );\n          builderEndss.push(myEnds);\n        }\n        this.instructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEndss,\n          geometry,\n          renderer,\n          inflateMultiCoordinatesArray,\n        ]);\n        this.hitDetectionInstructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEndss,\n          geometry,\n          hitDetectionRenderer || renderer,\n          inflateMultiCoordinatesArray,\n        ]);\n        break;\n      case 'Polygon':\n      case 'MultiLineString':\n        builderEnds = [];\n        flatCoordinates =\n          type == 'Polygon'\n            ? /** @type {import(\"../../geom/Polygon.js\").default} */ (\n                geometry\n              ).getOrientedFlatCoordinates()\n            : geometry.getFlatCoordinates();\n        offset = this.drawCustomCoordinates_(\n          flatCoordinates,\n          0,\n          /** @type {import(\"../../geom/Polygon.js\").default|import(\"../../geom/MultiLineString.js\").default} */ (\n            geometry\n          ).getEnds(),\n          stride,\n          builderEnds\n        );\n        this.instructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEnds,\n          geometry,\n          renderer,\n          inflateCoordinatesArray,\n        ]);\n        this.hitDetectionInstructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEnds,\n          geometry,\n          hitDetectionRenderer || renderer,\n          inflateCoordinatesArray,\n        ]);\n        break;\n      case 'LineString':\n      case 'Circle':\n        flatCoordinates = geometry.getFlatCoordinates();\n        builderEnd = this.appendFlatLineCoordinates(\n          flatCoordinates,\n          0,\n          flatCoordinates.length,\n          stride,\n          false,\n          false\n        );\n        this.instructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEnd,\n          geometry,\n          renderer,\n          inflateCoordinates,\n        ]);\n        this.hitDetectionInstructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEnd,\n          geometry,\n          hitDetectionRenderer || renderer,\n          inflateCoordinates,\n        ]);\n        break;\n      case 'MultiPoint':\n        flatCoordinates = geometry.getFlatCoordinates();\n        builderEnd = this.appendFlatPointCoordinates(flatCoordinates, stride);\n\n        if (builderEnd > builderBegin) {\n          this.instructions.push([\n            CanvasInstruction.CUSTOM,\n            builderBegin,\n            builderEnd,\n            geometry,\n            renderer,\n            inflateCoordinates,\n          ]);\n          this.hitDetectionInstructions.push([\n            CanvasInstruction.CUSTOM,\n            builderBegin,\n            builderEnd,\n            geometry,\n            hitDetectionRenderer || renderer,\n            inflateCoordinates,\n          ]);\n        }\n        break;\n      case 'Point':\n        flatCoordinates = geometry.getFlatCoordinates();\n        this.coordinates.push(flatCoordinates[0], flatCoordinates[1]);\n        builderEnd = this.coordinates.length;\n\n        this.instructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEnd,\n          geometry,\n          renderer,\n        ]);\n        this.hitDetectionInstructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEnd,\n          geometry,\n          hitDetectionRenderer || renderer,\n        ]);\n        break;\n      default:\n    }\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @protected\n   * @param {import(\"../../geom/Geometry\").default|import(\"../Feature.js\").default} geometry The geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  beginGeometry(geometry, feature) {\n    this.beginGeometryInstruction1_ = [\n      CanvasInstruction.BEGIN_GEOMETRY,\n      feature,\n      0,\n      geometry,\n    ];\n    this.instructions.push(this.beginGeometryInstruction1_);\n    this.beginGeometryInstruction2_ = [\n      CanvasInstruction.BEGIN_GEOMETRY,\n      feature,\n      0,\n      geometry,\n    ];\n    this.hitDetectionInstructions.push(this.beginGeometryInstruction2_);\n  }\n\n  /**\n   * @return {import(\"../canvas.js\").SerializableInstructions} the serializable instructions.\n   */\n  finish() {\n    return {\n      instructions: this.instructions,\n      hitDetectionInstructions: this.hitDetectionInstructions,\n      coordinates: this.coordinates,\n    };\n  }\n\n  /**\n   * Reverse the hit detection instructions.\n   */\n  reverseHitDetectionInstructions() {\n    const hitDetectionInstructions = this.hitDetectionInstructions;\n    // step 1 - reverse array\n    hitDetectionInstructions.reverse();\n    // step 2 - reverse instructions within geometry blocks\n    let i;\n    const n = hitDetectionInstructions.length;\n    let instruction;\n    let type;\n    let begin = -1;\n    for (i = 0; i < n; ++i) {\n      instruction = hitDetectionInstructions[i];\n      type = /** @type {import(\"./Instruction.js\").default} */ (instruction[0]);\n      if (type == CanvasInstruction.END_GEOMETRY) {\n        begin = i;\n      } else if (type == CanvasInstruction.BEGIN_GEOMETRY) {\n        instruction[2] = i;\n        reverseSubArray(this.hitDetectionInstructions, begin, i);\n        begin = -1;\n      }\n    }\n  }\n\n  /**\n   * @param {import(\"../../style/Fill.js\").default} fillStyle Fill style.\n   * @param {import(\"../../style/Stroke.js\").default} strokeStyle Stroke style.\n   */\n  setFillStrokeStyle(fillStyle, strokeStyle) {\n    const state = this.state;\n    if (fillStyle) {\n      const fillStyleColor = fillStyle.getColor();\n      state.fillStyle = asColorLike(\n        fillStyleColor ? fillStyleColor : defaultFillStyle\n      );\n    } else {\n      state.fillStyle = undefined;\n    }\n    if (strokeStyle) {\n      const strokeStyleColor = strokeStyle.getColor();\n      state.strokeStyle = asColorLike(\n        strokeStyleColor ? strokeStyleColor : defaultStrokeStyle\n      );\n      const strokeStyleLineCap = strokeStyle.getLineCap();\n      state.lineCap =\n        strokeStyleLineCap !== undefined ? strokeStyleLineCap : defaultLineCap;\n      const strokeStyleLineDash = strokeStyle.getLineDash();\n      state.lineDash = strokeStyleLineDash\n        ? strokeStyleLineDash.slice()\n        : defaultLineDash;\n      const strokeStyleLineDashOffset = strokeStyle.getLineDashOffset();\n      state.lineDashOffset = strokeStyleLineDashOffset\n        ? strokeStyleLineDashOffset\n        : defaultLineDashOffset;\n      const strokeStyleLineJoin = strokeStyle.getLineJoin();\n      state.lineJoin =\n        strokeStyleLineJoin !== undefined\n          ? strokeStyleLineJoin\n          : defaultLineJoin;\n      const strokeStyleWidth = strokeStyle.getWidth();\n      state.lineWidth =\n        strokeStyleWidth !== undefined ? strokeStyleWidth : defaultLineWidth;\n      const strokeStyleMiterLimit = strokeStyle.getMiterLimit();\n      state.miterLimit =\n        strokeStyleMiterLimit !== undefined\n          ? strokeStyleMiterLimit\n          : defaultMiterLimit;\n\n      if (state.lineWidth > this.maxLineWidth) {\n        this.maxLineWidth = state.lineWidth;\n        // invalidate the buffered max extent cache\n        this.bufferedMaxExtent_ = null;\n      }\n    } else {\n      state.strokeStyle = undefined;\n      state.lineCap = undefined;\n      state.lineDash = null;\n      state.lineDashOffset = undefined;\n      state.lineJoin = undefined;\n      state.lineWidth = undefined;\n      state.miterLimit = undefined;\n    }\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   * @return {Array<*>} Fill instruction.\n   */\n  createFill(state) {\n    const fillStyle = state.fillStyle;\n    /** @type {Array<*>} */\n    const fillInstruction = [CanvasInstruction.SET_FILL_STYLE, fillStyle];\n    if (typeof fillStyle !== 'string') {\n      // Fill is a pattern or gradient - align it!\n      fillInstruction.push(true);\n    }\n    return fillInstruction;\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   */\n  applyStroke(state) {\n    this.instructions.push(this.createStroke(state));\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   * @return {Array<*>} Stroke instruction.\n   */\n  createStroke(state) {\n    return [\n      CanvasInstruction.SET_STROKE_STYLE,\n      state.strokeStyle,\n      state.lineWidth * this.pixelRatio,\n      state.lineCap,\n      state.lineJoin,\n      state.miterLimit,\n      this.applyPixelRatio(state.lineDash),\n      state.lineDashOffset * this.pixelRatio,\n    ];\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   * @param {function(this:CanvasBuilder, import(\"../canvas.js\").FillStrokeState):Array<*>} createFill Create fill.\n   */\n  updateFillStyle(state, createFill) {\n    const fillStyle = state.fillStyle;\n    if (typeof fillStyle !== 'string' || state.currentFillStyle != fillStyle) {\n      if (fillStyle !== undefined) {\n        this.instructions.push(createFill.call(this, state));\n      }\n      state.currentFillStyle = fillStyle;\n    }\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   * @param {function(this:CanvasBuilder, import(\"../canvas.js\").FillStrokeState): void} applyStroke Apply stroke.\n   */\n  updateStrokeStyle(state, applyStroke) {\n    const strokeStyle = state.strokeStyle;\n    const lineCap = state.lineCap;\n    const lineDash = state.lineDash;\n    const lineDashOffset = state.lineDashOffset;\n    const lineJoin = state.lineJoin;\n    const lineWidth = state.lineWidth;\n    const miterLimit = state.miterLimit;\n    if (\n      state.currentStrokeStyle != strokeStyle ||\n      state.currentLineCap != lineCap ||\n      (lineDash != state.currentLineDash &&\n        !equals(state.currentLineDash, lineDash)) ||\n      state.currentLineDashOffset != lineDashOffset ||\n      state.currentLineJoin != lineJoin ||\n      state.currentLineWidth != lineWidth ||\n      state.currentMiterLimit != miterLimit\n    ) {\n      if (strokeStyle !== undefined) {\n        applyStroke.call(this, state);\n      }\n      state.currentStrokeStyle = strokeStyle;\n      state.currentLineCap = lineCap;\n      state.currentLineDash = lineDash;\n      state.currentLineDashOffset = lineDashOffset;\n      state.currentLineJoin = lineJoin;\n      state.currentLineWidth = lineWidth;\n      state.currentMiterLimit = miterLimit;\n    }\n  }\n\n  /**\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  endGeometry(feature) {\n    this.beginGeometryInstruction1_[2] = this.instructions.length;\n    this.beginGeometryInstruction1_ = null;\n    this.beginGeometryInstruction2_[2] = this.hitDetectionInstructions.length;\n    this.beginGeometryInstruction2_ = null;\n    const endGeometryInstruction = [CanvasInstruction.END_GEOMETRY, feature];\n    this.instructions.push(endGeometryInstruction);\n    this.hitDetectionInstructions.push(endGeometryInstruction);\n  }\n\n  /**\n   * Get the buffered rendering extent.  Rendering will be clipped to the extent\n   * provided to the constructor.  To account for symbolizers that may intersect\n   * this extent, we calculate a buffered extent (e.g. based on stroke width).\n   * @return {import(\"../../extent.js\").Extent} The buffered rendering extent.\n   * @protected\n   */\n  getBufferedMaxExtent() {\n    if (!this.bufferedMaxExtent_) {\n      this.bufferedMaxExtent_ = clone(this.maxExtent);\n      if (this.maxLineWidth > 0) {\n        const width = (this.resolution * (this.maxLineWidth + 1)) / 2;\n        buffer(this.bufferedMaxExtent_, width, this.bufferedMaxExtent_);\n      }\n    }\n    return this.bufferedMaxExtent_;\n  }\n}\n\nexport default CanvasBuilder;\n","/**\n * @module ol/render/canvas/ImageBuilder\n */\nimport CanvasBuilder from './Builder.js';\nimport CanvasInstruction from './Instruction.js';\n\nclass CanvasImageBuilder extends CanvasBuilder {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    super(tolerance, maxExtent, resolution, pixelRatio);\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement}\n     */\n    this.hitDetectionImage_ = null;\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement}\n     */\n    this.image_ = null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.imagePixelRatio_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.anchorX_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.anchorY_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.height_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.opacity_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.originX_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.originY_ = undefined;\n\n    /**\n     * @private\n     * @type {boolean|undefined}\n     */\n    this.rotateWithView_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.rotation_ = undefined;\n\n    /**\n     * @private\n     * @type {import(\"../../size.js\").Size|undefined}\n     */\n    this.scale_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.width_ = undefined;\n\n    /**\n     * @private\n     * @type {\"declutter\"|\"obstacle\"|\"none\"|undefined}\n     */\n    this.declutterMode_ = undefined;\n\n    /**\n     * Data shared with a text builder for combined decluttering.\n     * @private\n     * @type {import(\"../canvas.js\").DeclutterImageWithText}\n     */\n    this.declutterImageWithText_ = undefined;\n  }\n\n  /**\n   * @param {import(\"../../geom/Point.js\").default|import(\"../Feature.js\").default} pointGeometry Point geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawPoint(pointGeometry, feature) {\n    if (!this.image_) {\n      return;\n    }\n    this.beginGeometry(pointGeometry, feature);\n    const flatCoordinates = pointGeometry.getFlatCoordinates();\n    const stride = pointGeometry.getStride();\n    const myBegin = this.coordinates.length;\n    const myEnd = this.appendFlatPointCoordinates(flatCoordinates, stride);\n    this.instructions.push([\n      CanvasInstruction.DRAW_IMAGE,\n      myBegin,\n      myEnd,\n      this.image_,\n      // Remaining arguments to DRAW_IMAGE are in alphabetical order\n      this.anchorX_ * this.imagePixelRatio_,\n      this.anchorY_ * this.imagePixelRatio_,\n      Math.ceil(this.height_ * this.imagePixelRatio_),\n      this.opacity_,\n      this.originX_ * this.imagePixelRatio_,\n      this.originY_ * this.imagePixelRatio_,\n      this.rotateWithView_,\n      this.rotation_,\n      [\n        (this.scale_[0] * this.pixelRatio) / this.imagePixelRatio_,\n        (this.scale_[1] * this.pixelRatio) / this.imagePixelRatio_,\n      ],\n      Math.ceil(this.width_ * this.imagePixelRatio_),\n      this.declutterMode_,\n      this.declutterImageWithText_,\n    ]);\n    this.hitDetectionInstructions.push([\n      CanvasInstruction.DRAW_IMAGE,\n      myBegin,\n      myEnd,\n      this.hitDetectionImage_,\n      // Remaining arguments to DRAW_IMAGE are in alphabetical order\n      this.anchorX_,\n      this.anchorY_,\n      this.height_,\n      this.opacity_,\n      this.originX_,\n      this.originY_,\n      this.rotateWithView_,\n      this.rotation_,\n      this.scale_,\n      this.width_,\n      this.declutterMode_,\n      this.declutterImageWithText_,\n    ]);\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @param {import(\"../../geom/MultiPoint.js\").default|import(\"../Feature.js\").default} multiPointGeometry MultiPoint geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawMultiPoint(multiPointGeometry, feature) {\n    if (!this.image_) {\n      return;\n    }\n    this.beginGeometry(multiPointGeometry, feature);\n    const flatCoordinates = multiPointGeometry.getFlatCoordinates();\n    const stride = multiPointGeometry.getStride();\n    const myBegin = this.coordinates.length;\n    const myEnd = this.appendFlatPointCoordinates(flatCoordinates, stride);\n    this.instructions.push([\n      CanvasInstruction.DRAW_IMAGE,\n      myBegin,\n      myEnd,\n      this.image_,\n      // Remaining arguments to DRAW_IMAGE are in alphabetical order\n      this.anchorX_ * this.imagePixelRatio_,\n      this.anchorY_ * this.imagePixelRatio_,\n      Math.ceil(this.height_ * this.imagePixelRatio_),\n      this.opacity_,\n      this.originX_ * this.imagePixelRatio_,\n      this.originY_ * this.imagePixelRatio_,\n      this.rotateWithView_,\n      this.rotation_,\n      [\n        (this.scale_[0] * this.pixelRatio) / this.imagePixelRatio_,\n        (this.scale_[1] * this.pixelRatio) / this.imagePixelRatio_,\n      ],\n      Math.ceil(this.width_ * this.imagePixelRatio_),\n      this.declutterMode_,\n      this.declutterImageWithText_,\n    ]);\n    this.hitDetectionInstructions.push([\n      CanvasInstruction.DRAW_IMAGE,\n      myBegin,\n      myEnd,\n      this.hitDetectionImage_,\n      // Remaining arguments to DRAW_IMAGE are in alphabetical order\n      this.anchorX_,\n      this.anchorY_,\n      this.height_,\n      this.opacity_,\n      this.originX_,\n      this.originY_,\n      this.rotateWithView_,\n      this.rotation_,\n      this.scale_,\n      this.width_,\n      this.declutterMode_,\n      this.declutterImageWithText_,\n    ]);\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @return {import(\"../canvas.js\").SerializableInstructions} the serializable instructions.\n   */\n  finish() {\n    this.reverseHitDetectionInstructions();\n    // FIXME this doesn't really protect us against further calls to draw*Geometry\n    this.anchorX_ = undefined;\n    this.anchorY_ = undefined;\n    this.hitDetectionImage_ = null;\n    this.image_ = null;\n    this.imagePixelRatio_ = undefined;\n    this.height_ = undefined;\n    this.scale_ = undefined;\n    this.opacity_ = undefined;\n    this.originX_ = undefined;\n    this.originY_ = undefined;\n    this.rotateWithView_ = undefined;\n    this.rotation_ = undefined;\n    this.width_ = undefined;\n    return super.finish();\n  }\n\n  /**\n   * @param {import(\"../../style/Image.js\").default} imageStyle Image style.\n   * @param {Object} [sharedData] Shared data.\n   */\n  setImageStyle(imageStyle, sharedData) {\n    const anchor = imageStyle.getAnchor();\n    const size = imageStyle.getSize();\n    const origin = imageStyle.getOrigin();\n    this.imagePixelRatio_ = imageStyle.getPixelRatio(this.pixelRatio);\n    this.anchorX_ = anchor[0];\n    this.anchorY_ = anchor[1];\n    this.hitDetectionImage_ = imageStyle.getHitDetectionImage();\n    this.image_ = imageStyle.getImage(this.pixelRatio);\n    this.height_ = size[1];\n    this.opacity_ = imageStyle.getOpacity();\n    this.originX_ = origin[0];\n    this.originY_ = origin[1];\n    this.rotateWithView_ = imageStyle.getRotateWithView();\n    this.rotation_ = imageStyle.getRotation();\n    this.scale_ = imageStyle.getScaleArray();\n    this.width_ = size[0];\n    this.declutterMode_ = imageStyle.getDeclutterMode();\n    this.declutterImageWithText_ = sharedData;\n  }\n}\n\nexport default CanvasImageBuilder;\n","/**\n * @module ol/render/canvas/LineStringBuilder\n */\nimport CanvasBuilder from './Builder.js';\nimport CanvasInstruction, {\n  beginPathInstruction,\n  strokeInstruction,\n} from './Instruction.js';\nimport {defaultLineDash, defaultLineDashOffset} from '../canvas.js';\n\nclass CanvasLineStringBuilder extends CanvasBuilder {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    super(tolerance, maxExtent, resolution, pixelRatio);\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @private\n   * @return {number} end.\n   */\n  drawFlatCoordinates_(flatCoordinates, offset, end, stride) {\n    const myBegin = this.coordinates.length;\n    const myEnd = this.appendFlatLineCoordinates(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      false,\n      false\n    );\n    const moveToLineToInstruction = [\n      CanvasInstruction.MOVE_TO_LINE_TO,\n      myBegin,\n      myEnd,\n    ];\n    this.instructions.push(moveToLineToInstruction);\n    this.hitDetectionInstructions.push(moveToLineToInstruction);\n    return end;\n  }\n\n  /**\n   * @param {import(\"../../geom/LineString.js\").default|import(\"../Feature.js\").default} lineStringGeometry Line string geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawLineString(lineStringGeometry, feature) {\n    const state = this.state;\n    const strokeStyle = state.strokeStyle;\n    const lineWidth = state.lineWidth;\n    if (strokeStyle === undefined || lineWidth === undefined) {\n      return;\n    }\n    this.updateStrokeStyle(state, this.applyStroke);\n    this.beginGeometry(lineStringGeometry, feature);\n    this.hitDetectionInstructions.push(\n      [\n        CanvasInstruction.SET_STROKE_STYLE,\n        state.strokeStyle,\n        state.lineWidth,\n        state.lineCap,\n        state.lineJoin,\n        state.miterLimit,\n        defaultLineDash,\n        defaultLineDashOffset,\n      ],\n      beginPathInstruction\n    );\n    const flatCoordinates = lineStringGeometry.getFlatCoordinates();\n    const stride = lineStringGeometry.getStride();\n    this.drawFlatCoordinates_(\n      flatCoordinates,\n      0,\n      flatCoordinates.length,\n      stride\n    );\n    this.hitDetectionInstructions.push(strokeInstruction);\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @param {import(\"../../geom/MultiLineString.js\").default|import(\"../Feature.js\").default} multiLineStringGeometry MultiLineString geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawMultiLineString(multiLineStringGeometry, feature) {\n    const state = this.state;\n    const strokeStyle = state.strokeStyle;\n    const lineWidth = state.lineWidth;\n    if (strokeStyle === undefined || lineWidth === undefined) {\n      return;\n    }\n    this.updateStrokeStyle(state, this.applyStroke);\n    this.beginGeometry(multiLineStringGeometry, feature);\n    this.hitDetectionInstructions.push(\n      [\n        CanvasInstruction.SET_STROKE_STYLE,\n        state.strokeStyle,\n        state.lineWidth,\n        state.lineCap,\n        state.lineJoin,\n        state.miterLimit,\n        state.lineDash,\n        state.lineDashOffset,\n      ],\n      beginPathInstruction\n    );\n    const ends = multiLineStringGeometry.getEnds();\n    const flatCoordinates = multiLineStringGeometry.getFlatCoordinates();\n    const stride = multiLineStringGeometry.getStride();\n    let offset = 0;\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\n      offset = this.drawFlatCoordinates_(\n        flatCoordinates,\n        offset,\n        /** @type {number} */ (ends[i]),\n        stride\n      );\n    }\n    this.hitDetectionInstructions.push(strokeInstruction);\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @return {import(\"../canvas.js\").SerializableInstructions} the serializable instructions.\n   */\n  finish() {\n    const state = this.state;\n    if (\n      state.lastStroke != undefined &&\n      state.lastStroke != this.coordinates.length\n    ) {\n      this.instructions.push(strokeInstruction);\n    }\n    this.reverseHitDetectionInstructions();\n    this.state = null;\n    return super.finish();\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   */\n  applyStroke(state) {\n    if (\n      state.lastStroke != undefined &&\n      state.lastStroke != this.coordinates.length\n    ) {\n      this.instructions.push(strokeInstruction);\n      state.lastStroke = this.coordinates.length;\n    }\n    state.lastStroke = 0;\n    super.applyStroke(state);\n    this.instructions.push(beginPathInstruction);\n  }\n}\n\nexport default CanvasLineStringBuilder;\n","/**\n * @module ol/render/canvas/PolygonBuilder\n */\nimport CanvasBuilder from './Builder.js';\nimport CanvasInstruction, {\n  beginPathInstruction,\n  closePathInstruction,\n  fillInstruction,\n  strokeInstruction,\n} from './Instruction.js';\nimport {defaultFillStyle} from '../canvas.js';\nimport {snap} from '../../geom/flat/simplify.js';\n\nclass CanvasPolygonBuilder extends CanvasBuilder {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    super(tolerance, maxExtent, resolution, pixelRatio);\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {Array<number>} ends Ends.\n   * @param {number} stride Stride.\n   * @private\n   * @return {number} End.\n   */\n  drawFlatCoordinatess_(flatCoordinates, offset, ends, stride) {\n    const state = this.state;\n    const fill = state.fillStyle !== undefined;\n    const stroke = state.strokeStyle !== undefined;\n    const numEnds = ends.length;\n    this.instructions.push(beginPathInstruction);\n    this.hitDetectionInstructions.push(beginPathInstruction);\n    for (let i = 0; i < numEnds; ++i) {\n      const end = ends[i];\n      const myBegin = this.coordinates.length;\n      const myEnd = this.appendFlatLineCoordinates(\n        flatCoordinates,\n        offset,\n        end,\n        stride,\n        true,\n        !stroke\n      );\n      const moveToLineToInstruction = [\n        CanvasInstruction.MOVE_TO_LINE_TO,\n        myBegin,\n        myEnd,\n      ];\n      this.instructions.push(moveToLineToInstruction);\n      this.hitDetectionInstructions.push(moveToLineToInstruction);\n      if (stroke) {\n        // Performance optimization: only call closePath() when we have a stroke.\n        // Otherwise the ring is closed already (see appendFlatLineCoordinates above).\n        this.instructions.push(closePathInstruction);\n        this.hitDetectionInstructions.push(closePathInstruction);\n      }\n      offset = end;\n    }\n    if (fill) {\n      this.instructions.push(fillInstruction);\n      this.hitDetectionInstructions.push(fillInstruction);\n    }\n    if (stroke) {\n      this.instructions.push(strokeInstruction);\n      this.hitDetectionInstructions.push(strokeInstruction);\n    }\n    return offset;\n  }\n\n  /**\n   * @param {import(\"../../geom/Circle.js\").default} circleGeometry Circle geometry.\n   * @param {import(\"../../Feature.js\").default} feature Feature.\n   */\n  drawCircle(circleGeometry, feature) {\n    const state = this.state;\n    const fillStyle = state.fillStyle;\n    const strokeStyle = state.strokeStyle;\n    if (fillStyle === undefined && strokeStyle === undefined) {\n      return;\n    }\n    this.setFillStrokeStyles_();\n    this.beginGeometry(circleGeometry, feature);\n    if (state.fillStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_FILL_STYLE,\n        defaultFillStyle,\n      ]);\n    }\n    if (state.strokeStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_STROKE_STYLE,\n        state.strokeStyle,\n        state.lineWidth,\n        state.lineCap,\n        state.lineJoin,\n        state.miterLimit,\n        state.lineDash,\n        state.lineDashOffset,\n      ]);\n    }\n    const flatCoordinates = circleGeometry.getFlatCoordinates();\n    const stride = circleGeometry.getStride();\n    const myBegin = this.coordinates.length;\n    this.appendFlatLineCoordinates(\n      flatCoordinates,\n      0,\n      flatCoordinates.length,\n      stride,\n      false,\n      false\n    );\n    const circleInstruction = [CanvasInstruction.CIRCLE, myBegin];\n    this.instructions.push(beginPathInstruction, circleInstruction);\n    this.hitDetectionInstructions.push(beginPathInstruction, circleInstruction);\n    if (state.fillStyle !== undefined) {\n      this.instructions.push(fillInstruction);\n      this.hitDetectionInstructions.push(fillInstruction);\n    }\n    if (state.strokeStyle !== undefined) {\n      this.instructions.push(strokeInstruction);\n      this.hitDetectionInstructions.push(strokeInstruction);\n    }\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @param {import(\"../../geom/Polygon.js\").default|import(\"../Feature.js\").default} polygonGeometry Polygon geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawPolygon(polygonGeometry, feature) {\n    const state = this.state;\n    const fillStyle = state.fillStyle;\n    const strokeStyle = state.strokeStyle;\n    if (fillStyle === undefined && strokeStyle === undefined) {\n      return;\n    }\n    this.setFillStrokeStyles_();\n    this.beginGeometry(polygonGeometry, feature);\n    if (state.fillStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_FILL_STYLE,\n        defaultFillStyle,\n      ]);\n    }\n    if (state.strokeStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_STROKE_STYLE,\n        state.strokeStyle,\n        state.lineWidth,\n        state.lineCap,\n        state.lineJoin,\n        state.miterLimit,\n        state.lineDash,\n        state.lineDashOffset,\n      ]);\n    }\n    const ends = polygonGeometry.getEnds();\n    const flatCoordinates = polygonGeometry.getOrientedFlatCoordinates();\n    const stride = polygonGeometry.getStride();\n    this.drawFlatCoordinatess_(\n      flatCoordinates,\n      0,\n      /** @type {Array<number>} */ (ends),\n      stride\n    );\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @param {import(\"../../geom/MultiPolygon.js\").default} multiPolygonGeometry MultiPolygon geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawMultiPolygon(multiPolygonGeometry, feature) {\n    const state = this.state;\n    const fillStyle = state.fillStyle;\n    const strokeStyle = state.strokeStyle;\n    if (fillStyle === undefined && strokeStyle === undefined) {\n      return;\n    }\n    this.setFillStrokeStyles_();\n    this.beginGeometry(multiPolygonGeometry, feature);\n    if (state.fillStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_FILL_STYLE,\n        defaultFillStyle,\n      ]);\n    }\n    if (state.strokeStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_STROKE_STYLE,\n        state.strokeStyle,\n        state.lineWidth,\n        state.lineCap,\n        state.lineJoin,\n        state.miterLimit,\n        state.lineDash,\n        state.lineDashOffset,\n      ]);\n    }\n    const endss = multiPolygonGeometry.getEndss();\n    const flatCoordinates = multiPolygonGeometry.getOrientedFlatCoordinates();\n    const stride = multiPolygonGeometry.getStride();\n    let offset = 0;\n    for (let i = 0, ii = endss.length; i < ii; ++i) {\n      offset = this.drawFlatCoordinatess_(\n        flatCoordinates,\n        offset,\n        endss[i],\n        stride\n      );\n    }\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @return {import(\"../canvas.js\").SerializableInstructions} the serializable instructions.\n   */\n  finish() {\n    this.reverseHitDetectionInstructions();\n    this.state = null;\n    // We want to preserve topology when drawing polygons.  Polygons are\n    // simplified using quantization and point elimination. However, we might\n    // have received a mix of quantized and non-quantized geometries, so ensure\n    // that all are quantized by quantizing all coordinates in the batch.\n    const tolerance = this.tolerance;\n    if (tolerance !== 0) {\n      const coordinates = this.coordinates;\n      for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n        coordinates[i] = snap(coordinates[i], tolerance);\n      }\n    }\n    return super.finish();\n  }\n\n  /**\n   * @private\n   */\n  setFillStrokeStyles_() {\n    const state = this.state;\n    const fillStyle = state.fillStyle;\n    if (fillStyle !== undefined) {\n      this.updateFillStyle(state, this.createFill);\n    }\n    if (state.strokeStyle !== undefined) {\n      this.updateStrokeStyle(state, this.applyStroke);\n    }\n  }\n}\n\nexport default CanvasPolygonBuilder;\n","/**\n * @module ol/render/canvas/BuilderGroup\n */\n\nimport Builder from './Builder.js';\nimport ImageBuilder from './ImageBuilder.js';\nimport LineStringBuilder from './LineStringBuilder.js';\nimport PolygonBuilder from './PolygonBuilder.js';\nimport TextBuilder from './TextBuilder.js';\n\n/**\n * @type {Object<import(\"../canvas.js\").BuilderType, typeof Builder>}\n */\nconst BATCH_CONSTRUCTORS = {\n  'Circle': PolygonBuilder,\n  'Default': Builder,\n  'Image': ImageBuilder,\n  'LineString': LineStringBuilder,\n  'Polygon': PolygonBuilder,\n  'Text': TextBuilder,\n};\n\nclass BuilderGroup {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Max extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    /**\n     * @private\n     * @type {number}\n     */\n    this.tolerance_ = tolerance;\n\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.maxExtent_ = maxExtent;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = pixelRatio;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.resolution_ = resolution;\n\n    /**\n     * @private\n     * @type {!Object<string, !Object<import(\"../canvas.js\").BuilderType, Builder>>}\n     */\n    this.buildersByZIndex_ = {};\n  }\n\n  /**\n   * @return {!Object<string, !Object<import(\"../canvas.js\").BuilderType, import(\"./Builder.js\").SerializableInstructions>>} The serializable instructions\n   */\n  finish() {\n    const builderInstructions = {};\n    for (const zKey in this.buildersByZIndex_) {\n      builderInstructions[zKey] = builderInstructions[zKey] || {};\n      const builders = this.buildersByZIndex_[zKey];\n      for (const builderKey in builders) {\n        const builderInstruction = builders[builderKey].finish();\n        builderInstructions[zKey][builderKey] = builderInstruction;\n      }\n    }\n    return builderInstructions;\n  }\n\n  /**\n   * @param {number|undefined} zIndex Z index.\n   * @param {import(\"../canvas.js\").BuilderType} builderType Replay type.\n   * @return {import(\"../VectorContext.js\").default} Replay.\n   */\n  getBuilder(zIndex, builderType) {\n    const zIndexKey = zIndex !== undefined ? zIndex.toString() : '0';\n    let replays = this.buildersByZIndex_[zIndexKey];\n    if (replays === undefined) {\n      replays = {};\n      this.buildersByZIndex_[zIndexKey] = replays;\n    }\n    let replay = replays[builderType];\n    if (replay === undefined) {\n      const Constructor = BATCH_CONSTRUCTORS[builderType];\n      replay = new Constructor(\n        this.tolerance_,\n        this.maxExtent_,\n        this.resolution_,\n        this.pixelRatio_\n      );\n      replays[builderType] = replay;\n    }\n    return replay;\n  }\n}\n\nexport default BuilderGroup;\n","/**\n * @module ol/geom/flat/textpath\n */\nimport {lerp} from '../../math.js';\nimport {rotate} from './transform.js';\n\n/**\n * @param {Array<number>} flatCoordinates Path to put text on.\n * @param {number} offset Start offset of the `flatCoordinates`.\n * @param {number} end End offset of the `flatCoordinates`.\n * @param {number} stride Stride.\n * @param {string} text Text to place on the path.\n * @param {number} startM m along the path where the text starts.\n * @param {number} maxAngle Max angle between adjacent chars in radians.\n * @param {number} scale The product of the text scale and the device pixel ratio.\n * @param {function(string, string, Object<string, number>):number} measureAndCacheTextWidth Measure and cache text width.\n * @param {string} font The font.\n * @param {Object<string, number>} cache A cache of measured widths.\n * @param {number} rotation Rotation to apply to the flatCoordinates to determine whether text needs to be reversed.\n * @return {Array<Array<*>>|null} The result array (or null if `maxAngle` was\n * exceeded). Entries of the array are x, y, anchorX, angle, chunk.\n */\nexport function drawTextOnPath(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  text,\n  startM,\n  maxAngle,\n  scale,\n  measureAndCacheTextWidth,\n  font,\n  cache,\n  rotation\n) {\n  let x2 = flatCoordinates[offset];\n  let y2 = flatCoordinates[offset + 1];\n  let x1 = 0;\n  let y1 = 0;\n  let segmentLength = 0;\n  let segmentM = 0;\n\n  function advance() {\n    x1 = x2;\n    y1 = y2;\n    offset += stride;\n    x2 = flatCoordinates[offset];\n    y2 = flatCoordinates[offset + 1];\n    segmentM += segmentLength;\n    segmentLength = Math.sqrt((x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1));\n  }\n  do {\n    advance();\n  } while (offset < end - stride && segmentM + segmentLength < startM);\n\n  let interpolate =\n    segmentLength === 0 ? 0 : (startM - segmentM) / segmentLength;\n  const beginX = lerp(x1, x2, interpolate);\n  const beginY = lerp(y1, y2, interpolate);\n\n  const startOffset = offset - stride;\n  const startLength = segmentM;\n  const endM = startM + scale * measureAndCacheTextWidth(font, text, cache);\n  while (offset < end - stride && segmentM + segmentLength < endM) {\n    advance();\n  }\n  interpolate = segmentLength === 0 ? 0 : (endM - segmentM) / segmentLength;\n  const endX = lerp(x1, x2, interpolate);\n  const endY = lerp(y1, y2, interpolate);\n\n  // Keep text upright\n  let reverse;\n  if (rotation) {\n    const flat = [beginX, beginY, endX, endY];\n    rotate(flat, 0, 4, 2, rotation, flat, flat);\n    reverse = flat[0] > flat[2];\n  } else {\n    reverse = beginX > endX;\n  }\n\n  const PI = Math.PI;\n  const result = [];\n  const singleSegment = startOffset + stride === offset;\n\n  offset = startOffset;\n  segmentLength = 0;\n  segmentM = startLength;\n  x2 = flatCoordinates[offset];\n  y2 = flatCoordinates[offset + 1];\n\n  let previousAngle;\n  // All on the same segment\n  if (singleSegment) {\n    advance();\n\n    previousAngle = Math.atan2(y2 - y1, x2 - x1);\n    if (reverse) {\n      previousAngle += previousAngle > 0 ? -PI : PI;\n    }\n    const x = (endX + beginX) / 2;\n    const y = (endY + beginY) / 2;\n    result[0] = [x, y, (endM - startM) / 2, previousAngle, text];\n    return result;\n  }\n\n  // rendering across line segments\n  text = text.replace(/\\n/g, ' '); // ensure rendering in single-line as all calculations below don't handle multi-lines\n\n  for (let i = 0, ii = text.length; i < ii; ) {\n    advance();\n    let angle = Math.atan2(y2 - y1, x2 - x1);\n    if (reverse) {\n      angle += angle > 0 ? -PI : PI;\n    }\n    if (previousAngle !== undefined) {\n      let delta = angle - previousAngle;\n      delta += delta > PI ? -2 * PI : delta < -PI ? 2 * PI : 0;\n      if (Math.abs(delta) > maxAngle) {\n        return null;\n      }\n    }\n    previousAngle = angle;\n\n    const iStart = i;\n    let charLength = 0;\n    for (; i < ii; ++i) {\n      const index = reverse ? ii - i - 1 : i;\n      const len = scale * measureAndCacheTextWidth(font, text[index], cache);\n      if (\n        offset + stride < end &&\n        segmentM + segmentLength < startM + charLength + len / 2\n      ) {\n        break;\n      }\n      charLength += len;\n    }\n    if (i === iStart) {\n      continue;\n    }\n    const chars = reverse\n      ? text.substring(ii - iStart, ii - i)\n      : text.substring(iStart, i);\n    interpolate =\n      segmentLength === 0\n        ? 0\n        : (startM + charLength / 2 - segmentM) / segmentLength;\n    const x = lerp(x1, x2, interpolate);\n    const y = lerp(y1, y2, interpolate);\n    result.push([x, y, charLength / 2, angle, chars]);\n    startM += charLength;\n  }\n  return result;\n}\n","/**\n * @module ol/render/canvas/Executor\n */\nimport CanvasInstruction from './Instruction.js';\nimport {TEXT_ALIGN} from './TextBuilder.js';\nimport {\n  apply as applyTransform,\n  compose as composeTransform,\n  create as createTransform,\n  setFromArray as transformSetFromArray,\n} from '../../transform.js';\nimport {createEmpty, createOrUpdate, intersects} from '../../extent.js';\nimport {\n  defaultPadding,\n  defaultTextAlign,\n  defaultTextBaseline,\n  drawImageOrLabel,\n  getTextDimensions,\n  measureAndCacheTextWidth,\n} from '../canvas.js';\nimport {drawTextOnPath} from '../../geom/flat/textpath.js';\nimport {equals} from '../../array.js';\nimport {lineStringLength} from '../../geom/flat/length.js';\nimport {transform2D} from '../../geom/flat/transform.js';\n\n/**\n * @typedef {Object} BBox\n * @property {number} minX Minimal x.\n * @property {number} minY Minimal y.\n * @property {number} maxX Maximal x.\n * @property {number} maxY Maximal y\n * @property {*} value Value.\n */\n\n/**\n * @typedef {Object} ImageOrLabelDimensions\n * @property {number} drawImageX DrawImageX.\n * @property {number} drawImageY DrawImageY.\n * @property {number} drawImageW DrawImageW.\n * @property {number} drawImageH DrawImageH.\n * @property {number} originX OriginX.\n * @property {number} originY OriginY.\n * @property {Array<number>} scale Scale.\n * @property {BBox} declutterBox DeclutterBox.\n * @property {import(\"../../transform.js\").Transform} canvasTransform CanvasTransform.\n */\n\n/**\n * @typedef {{0: CanvasRenderingContext2D, 1: number, 2: import(\"../canvas.js\").Label|HTMLImageElement|HTMLCanvasElement|HTMLVideoElement, 3: ImageOrLabelDimensions, 4: number, 5: Array<*>, 6: Array<*>}} ReplayImageOrLabelArgs\n */\n\n/**\n * @template T\n * @typedef {function(import(\"../../Feature.js\").FeatureLike, import(\"../../geom/SimpleGeometry.js\").default): T} FeatureCallback\n */\n\n/**\n * @type {import(\"../../extent.js\").Extent}\n */\nconst tmpExtent = createEmpty();\n\n/** @type {import(\"../../coordinate.js\").Coordinate} */\nconst p1 = [];\n/** @type {import(\"../../coordinate.js\").Coordinate} */\nconst p2 = [];\n/** @type {import(\"../../coordinate.js\").Coordinate} */\nconst p3 = [];\n/** @type {import(\"../../coordinate.js\").Coordinate} */\nconst p4 = [];\n\n/**\n * @param {ReplayImageOrLabelArgs} replayImageOrLabelArgs Arguments to replayImageOrLabel\n * @return {BBox} Declutter bbox.\n */\nfunction getDeclutterBox(replayImageOrLabelArgs) {\n  return replayImageOrLabelArgs[3].declutterBox;\n}\n\nconst rtlRegEx = new RegExp(\n  /* eslint-disable prettier/prettier */\n  '[' +\n    String.fromCharCode(0x00591) + '-' + String.fromCharCode(0x008ff) +\n    String.fromCharCode(0x0fb1d) + '-' + String.fromCharCode(0x0fdff) +\n    String.fromCharCode(0x0fe70) + '-' + String.fromCharCode(0x0fefc) +\n    String.fromCharCode(0x10800) + '-' + String.fromCharCode(0x10fff) +\n    String.fromCharCode(0x1e800) + '-' + String.fromCharCode(0x1efff) +\n  ']'\n  /* eslint-enable prettier/prettier */\n);\n\n/**\n * @param {string} text Text.\n * @param {CanvasTextAlign} align Alignment.\n * @return {number} Text alignment.\n */\nfunction horizontalTextAlign(text, align) {\n  if ((align === 'start' || align === 'end') && !rtlRegEx.test(text)) {\n    align = align === 'start' ? 'left' : 'right';\n  }\n  return TEXT_ALIGN[align];\n}\n\n/**\n * @param {Array<string>} acc Accumulator.\n * @param {string} line Line of text.\n * @param {number} i Index\n * @return {Array<string>} Accumulator.\n */\nfunction createTextChunks(acc, line, i) {\n  if (i > 0) {\n    acc.push('\\n', '');\n  }\n  acc.push(line, '');\n  return acc;\n}\n\nclass Executor {\n  /**\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {boolean} overlaps The replay can have overlapping geometries.\n   * @param {import(\"../canvas.js\").SerializableInstructions} instructions The serializable instructions\n   */\n  constructor(resolution, pixelRatio, overlaps, instructions) {\n    /**\n     * @protected\n     * @type {boolean}\n     */\n    this.overlaps = overlaps;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.pixelRatio = pixelRatio;\n\n    /**\n     * @protected\n     * @const\n     * @type {number}\n     */\n    this.resolution = resolution;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.alignFill_;\n\n    /**\n     * @protected\n     * @type {Array<*>}\n     */\n    this.instructions = instructions.instructions;\n\n    /**\n     * @protected\n     * @type {Array<number>}\n     */\n    this.coordinates = instructions.coordinates;\n\n    /**\n     * @private\n     * @type {!Object<number,import(\"../../coordinate.js\").Coordinate|Array<import(\"../../coordinate.js\").Coordinate>|Array<Array<import(\"../../coordinate.js\").Coordinate>>>}\n     */\n    this.coordinateCache_ = {};\n\n    /**\n     * @private\n     * @type {!import(\"../../transform.js\").Transform}\n     */\n    this.renderedTransform_ = createTransform();\n\n    /**\n     * @protected\n     * @type {Array<*>}\n     */\n    this.hitDetectionInstructions = instructions.hitDetectionInstructions;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.pixelCoordinates_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.viewRotation_ = 0;\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").FillState>}\n     */\n    this.fillStates = instructions.fillStates || {};\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").StrokeState>}\n     */\n    this.strokeStates = instructions.strokeStates || {};\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").TextState>}\n     */\n    this.textStates = instructions.textStates || {};\n\n    /**\n     * @private\n     * @type {Object<string, Object<string, number>>}\n     */\n    this.widths_ = {};\n\n    /**\n     * @private\n     * @type {Object<string, import(\"../canvas.js\").Label>}\n     */\n    this.labels_ = {};\n  }\n\n  /**\n   * @param {string|Array<string>} text Text.\n   * @param {string} textKey Text style key.\n   * @param {string} fillKey Fill style key.\n   * @param {string} strokeKey Stroke style key.\n   * @return {import(\"../canvas.js\").Label} Label.\n   */\n  createLabel(text, textKey, fillKey, strokeKey) {\n    const key = text + textKey + fillKey + strokeKey;\n    if (this.labels_[key]) {\n      return this.labels_[key];\n    }\n    const strokeState = strokeKey ? this.strokeStates[strokeKey] : null;\n    const fillState = fillKey ? this.fillStates[fillKey] : null;\n    const textState = this.textStates[textKey];\n    const pixelRatio = this.pixelRatio;\n    const scale = [\n      textState.scale[0] * pixelRatio,\n      textState.scale[1] * pixelRatio,\n    ];\n    const textIsArray = Array.isArray(text);\n    const align = textState.justify\n      ? TEXT_ALIGN[textState.justify]\n      : horizontalTextAlign(\n          Array.isArray(text) ? text[0] : text,\n          textState.textAlign || defaultTextAlign\n        );\n    const strokeWidth =\n      strokeKey && strokeState.lineWidth ? strokeState.lineWidth : 0;\n\n    const chunks = textIsArray\n      ? text\n      : text.split('\\n').reduce(createTextChunks, []);\n\n    const {width, height, widths, heights, lineWidths} = getTextDimensions(\n      textState,\n      chunks\n    );\n    const renderWidth = width + strokeWidth;\n    const contextInstructions = [];\n    // make canvas 2 pixels wider to account for italic text width measurement errors\n    const w = (renderWidth + 2) * scale[0];\n    const h = (height + strokeWidth) * scale[1];\n    /** @type {import(\"../canvas.js\").Label} */\n    const label = {\n      width: w < 0 ? Math.floor(w) : Math.ceil(w),\n      height: h < 0 ? Math.floor(h) : Math.ceil(h),\n      contextInstructions: contextInstructions,\n    };\n    if (scale[0] != 1 || scale[1] != 1) {\n      contextInstructions.push('scale', scale);\n    }\n    if (strokeKey) {\n      contextInstructions.push('strokeStyle', strokeState.strokeStyle);\n      contextInstructions.push('lineWidth', strokeWidth);\n      contextInstructions.push('lineCap', strokeState.lineCap);\n      contextInstructions.push('lineJoin', strokeState.lineJoin);\n      contextInstructions.push('miterLimit', strokeState.miterLimit);\n      contextInstructions.push('setLineDash', [strokeState.lineDash]);\n      contextInstructions.push('lineDashOffset', strokeState.lineDashOffset);\n    }\n    if (fillKey) {\n      contextInstructions.push('fillStyle', fillState.fillStyle);\n    }\n    contextInstructions.push('textBaseline', 'middle');\n    contextInstructions.push('textAlign', 'center');\n    const leftRight = 0.5 - align;\n    let x = align * renderWidth + leftRight * strokeWidth;\n    const strokeInstructions = [];\n    const fillInstructions = [];\n    let lineHeight = 0;\n    let lineOffset = 0;\n    let widthHeightIndex = 0;\n    let lineWidthIndex = 0;\n    let previousFont;\n    for (let i = 0, ii = chunks.length; i < ii; i += 2) {\n      const text = chunks[i];\n      if (text === '\\n') {\n        lineOffset += lineHeight;\n        lineHeight = 0;\n        x = align * renderWidth + leftRight * strokeWidth;\n        ++lineWidthIndex;\n        continue;\n      }\n      const font = chunks[i + 1] || textState.font;\n      if (font !== previousFont) {\n        if (strokeKey) {\n          strokeInstructions.push('font', font);\n        }\n        if (fillKey) {\n          fillInstructions.push('font', font);\n        }\n        previousFont = font;\n      }\n      lineHeight = Math.max(lineHeight, heights[widthHeightIndex]);\n      const fillStrokeArgs = [\n        text,\n        x +\n          leftRight * widths[widthHeightIndex] +\n          align * (widths[widthHeightIndex] - lineWidths[lineWidthIndex]),\n        0.5 * (strokeWidth + lineHeight) + lineOffset,\n      ];\n      x += widths[widthHeightIndex];\n      if (strokeKey) {\n        strokeInstructions.push('strokeText', fillStrokeArgs);\n      }\n      if (fillKey) {\n        fillInstructions.push('fillText', fillStrokeArgs);\n      }\n      ++widthHeightIndex;\n    }\n    Array.prototype.push.apply(contextInstructions, strokeInstructions);\n    Array.prototype.push.apply(contextInstructions, fillInstructions);\n    this.labels_[key] = label;\n    return label;\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../coordinate.js\").Coordinate} p1 1st point of the background box.\n   * @param {import(\"../../coordinate.js\").Coordinate} p2 2nd point of the background box.\n   * @param {import(\"../../coordinate.js\").Coordinate} p3 3rd point of the background box.\n   * @param {import(\"../../coordinate.js\").Coordinate} p4 4th point of the background box.\n   * @param {Array<*>} fillInstruction Fill instruction.\n   * @param {Array<*>} strokeInstruction Stroke instruction.\n   */\n  replayTextBackground_(\n    context,\n    p1,\n    p2,\n    p3,\n    p4,\n    fillInstruction,\n    strokeInstruction\n  ) {\n    context.beginPath();\n    context.moveTo.apply(context, p1);\n    context.lineTo.apply(context, p2);\n    context.lineTo.apply(context, p3);\n    context.lineTo.apply(context, p4);\n    context.lineTo.apply(context, p1);\n    if (fillInstruction) {\n      this.alignFill_ = /** @type {boolean} */ (fillInstruction[2]);\n      this.fill_(context);\n    }\n    if (strokeInstruction) {\n      this.setStrokeStyle_(\n        context,\n        /** @type {Array<*>} */ (strokeInstruction)\n      );\n      context.stroke();\n    }\n  }\n\n  /**\n   * @private\n   * @param {number} sheetWidth Width of the sprite sheet.\n   * @param {number} sheetHeight Height of the sprite sheet.\n   * @param {number} centerX X.\n   * @param {number} centerY Y.\n   * @param {number} width Width.\n   * @param {number} height Height.\n   * @param {number} anchorX Anchor X.\n   * @param {number} anchorY Anchor Y.\n   * @param {number} originX Origin X.\n   * @param {number} originY Origin Y.\n   * @param {number} rotation Rotation.\n   * @param {import(\"../../size.js\").Size} scale Scale.\n   * @param {boolean} snapToPixel Snap to pixel.\n   * @param {Array<number>} padding Padding.\n   * @param {boolean} fillStroke Background fill or stroke.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   * @return {ImageOrLabelDimensions} Dimensions for positioning and decluttering the image or label.\n   */\n  calculateImageOrLabelDimensions_(\n    sheetWidth,\n    sheetHeight,\n    centerX,\n    centerY,\n    width,\n    height,\n    anchorX,\n    anchorY,\n    originX,\n    originY,\n    rotation,\n    scale,\n    snapToPixel,\n    padding,\n    fillStroke,\n    feature\n  ) {\n    anchorX *= scale[0];\n    anchorY *= scale[1];\n    let x = centerX - anchorX;\n    let y = centerY - anchorY;\n\n    const w = width + originX > sheetWidth ? sheetWidth - originX : width;\n    const h = height + originY > sheetHeight ? sheetHeight - originY : height;\n    const boxW = padding[3] + w * scale[0] + padding[1];\n    const boxH = padding[0] + h * scale[1] + padding[2];\n    const boxX = x - padding[3];\n    const boxY = y - padding[0];\n\n    if (fillStroke || rotation !== 0) {\n      p1[0] = boxX;\n      p4[0] = boxX;\n      p1[1] = boxY;\n      p2[1] = boxY;\n      p2[0] = boxX + boxW;\n      p3[0] = p2[0];\n      p3[1] = boxY + boxH;\n      p4[1] = p3[1];\n    }\n\n    let transform;\n    if (rotation !== 0) {\n      transform = composeTransform(\n        createTransform(),\n        centerX,\n        centerY,\n        1,\n        1,\n        rotation,\n        -centerX,\n        -centerY\n      );\n\n      applyTransform(transform, p1);\n      applyTransform(transform, p2);\n      applyTransform(transform, p3);\n      applyTransform(transform, p4);\n      createOrUpdate(\n        Math.min(p1[0], p2[0], p3[0], p4[0]),\n        Math.min(p1[1], p2[1], p3[1], p4[1]),\n        Math.max(p1[0], p2[0], p3[0], p4[0]),\n        Math.max(p1[1], p2[1], p3[1], p4[1]),\n        tmpExtent\n      );\n    } else {\n      createOrUpdate(\n        Math.min(boxX, boxX + boxW),\n        Math.min(boxY, boxY + boxH),\n        Math.max(boxX, boxX + boxW),\n        Math.max(boxY, boxY + boxH),\n        tmpExtent\n      );\n    }\n    if (snapToPixel) {\n      x = Math.round(x);\n      y = Math.round(y);\n    }\n    return {\n      drawImageX: x,\n      drawImageY: y,\n      drawImageW: w,\n      drawImageH: h,\n      originX: originX,\n      originY: originY,\n      declutterBox: {\n        minX: tmpExtent[0],\n        minY: tmpExtent[1],\n        maxX: tmpExtent[2],\n        maxY: tmpExtent[3],\n        value: feature,\n      },\n      canvasTransform: transform,\n      scale: scale,\n    };\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {number} contextScale Scale of the context.\n   * @param {import(\"../canvas.js\").Label|HTMLImageElement|HTMLCanvasElement|HTMLVideoElement} imageOrLabel Image.\n   * @param {ImageOrLabelDimensions} dimensions Dimensions.\n   * @param {number} opacity Opacity.\n   * @param {Array<*>} fillInstruction Fill instruction.\n   * @param {Array<*>} strokeInstruction Stroke instruction.\n   * @return {boolean} The image or label was rendered.\n   */\n  replayImageOrLabel_(\n    context,\n    contextScale,\n    imageOrLabel,\n    dimensions,\n    opacity,\n    fillInstruction,\n    strokeInstruction\n  ) {\n    const fillStroke = !!(fillInstruction || strokeInstruction);\n\n    const box = dimensions.declutterBox;\n    const canvas = context.canvas;\n    const strokePadding = strokeInstruction\n      ? (strokeInstruction[2] * dimensions.scale[0]) / 2\n      : 0;\n    const intersects =\n      box.minX - strokePadding <= canvas.width / contextScale &&\n      box.maxX + strokePadding >= 0 &&\n      box.minY - strokePadding <= canvas.height / contextScale &&\n      box.maxY + strokePadding >= 0;\n\n    if (intersects) {\n      if (fillStroke) {\n        this.replayTextBackground_(\n          context,\n          p1,\n          p2,\n          p3,\n          p4,\n          /** @type {Array<*>} */ (fillInstruction),\n          /** @type {Array<*>} */ (strokeInstruction)\n        );\n      }\n      drawImageOrLabel(\n        context,\n        dimensions.canvasTransform,\n        opacity,\n        imageOrLabel,\n        dimensions.originX,\n        dimensions.originY,\n        dimensions.drawImageW,\n        dimensions.drawImageH,\n        dimensions.drawImageX,\n        dimensions.drawImageY,\n        dimensions.scale\n      );\n    }\n    return true;\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} context Context.\n   */\n  fill_(context) {\n    if (this.alignFill_) {\n      const origin = applyTransform(this.renderedTransform_, [0, 0]);\n      const repeatSize = 512 * this.pixelRatio;\n      context.save();\n      context.translate(origin[0] % repeatSize, origin[1] % repeatSize);\n      context.rotate(this.viewRotation_);\n    }\n    context.fill();\n    if (this.alignFill_) {\n      context.restore();\n    }\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {Array<*>} instruction Instruction.\n   */\n  setStrokeStyle_(context, instruction) {\n    context['strokeStyle'] =\n      /** @type {import(\"../../colorlike.js\").ColorLike} */ (instruction[1]);\n    context.lineWidth = /** @type {number} */ (instruction[2]);\n    context.lineCap = /** @type {CanvasLineCap} */ (instruction[3]);\n    context.lineJoin = /** @type {CanvasLineJoin} */ (instruction[4]);\n    context.miterLimit = /** @type {number} */ (instruction[5]);\n    context.lineDashOffset = /** @type {number} */ (instruction[7]);\n    context.setLineDash(/** @type {Array<number>} */ (instruction[6]));\n  }\n\n  /**\n   * @private\n   * @param {string|Array<string>} text The text to draw.\n   * @param {string} textKey The key of the text state.\n   * @param {string} strokeKey The key for the stroke state.\n   * @param {string} fillKey The key for the fill state.\n   * @return {{label: import(\"../canvas.js\").Label, anchorX: number, anchorY: number}} The text image and its anchor.\n   */\n  drawLabelWithPointPlacement_(text, textKey, strokeKey, fillKey) {\n    const textState = this.textStates[textKey];\n\n    const label = this.createLabel(text, textKey, fillKey, strokeKey);\n\n    const strokeState = this.strokeStates[strokeKey];\n    const pixelRatio = this.pixelRatio;\n    const align = horizontalTextAlign(\n      Array.isArray(text) ? text[0] : text,\n      textState.textAlign || defaultTextAlign\n    );\n    const baseline = TEXT_ALIGN[textState.textBaseline || defaultTextBaseline];\n    const strokeWidth =\n      strokeState && strokeState.lineWidth ? strokeState.lineWidth : 0;\n\n    // Remove the 2 pixels we added in createLabel() for the anchor\n    const width = label.width / pixelRatio - 2 * textState.scale[0];\n    const anchorX = align * width + 2 * (0.5 - align) * strokeWidth;\n    const anchorY =\n      (baseline * label.height) / pixelRatio +\n      2 * (0.5 - baseline) * strokeWidth;\n\n    return {\n      label: label,\n      anchorX: anchorX,\n      anchorY: anchorY,\n    };\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {number} contextScale Scale of the context.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @param {Array<*>} instructions Instructions array.\n   * @param {boolean} snapToPixel Snap point symbols and text to integer pixels.\n   * @param {FeatureCallback<T>} [featureCallback] Feature callback.\n   * @param {import(\"../../extent.js\").Extent} [hitExtent] Only check\n   *     features that intersect this extent.\n   * @param {import(\"rbush\").default} [declutterTree] Declutter tree.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  execute_(\n    context,\n    contextScale,\n    transform,\n    instructions,\n    snapToPixel,\n    featureCallback,\n    hitExtent,\n    declutterTree\n  ) {\n    /** @type {Array<number>} */\n    let pixelCoordinates;\n    if (this.pixelCoordinates_ && equals(transform, this.renderedTransform_)) {\n      pixelCoordinates = this.pixelCoordinates_;\n    } else {\n      if (!this.pixelCoordinates_) {\n        this.pixelCoordinates_ = [];\n      }\n      pixelCoordinates = transform2D(\n        this.coordinates,\n        0,\n        this.coordinates.length,\n        2,\n        transform,\n        this.pixelCoordinates_\n      );\n      transformSetFromArray(this.renderedTransform_, transform);\n    }\n    let i = 0; // instruction index\n    const ii = instructions.length; // end of instructions\n    let d = 0; // data index\n    let dd; // end of per-instruction data\n    let anchorX,\n      anchorY,\n      prevX,\n      prevY,\n      roundX,\n      roundY,\n      image,\n      text,\n      textKey,\n      strokeKey,\n      fillKey;\n    let pendingFill = 0;\n    let pendingStroke = 0;\n    let lastFillInstruction = null;\n    let lastStrokeInstruction = null;\n    const coordinateCache = this.coordinateCache_;\n    const viewRotation = this.viewRotation_;\n    const viewRotationFromTransform =\n      Math.round(Math.atan2(-transform[1], transform[0]) * 1e12) / 1e12;\n\n    const state = /** @type {import(\"../../render.js\").State} */ ({\n      context: context,\n      pixelRatio: this.pixelRatio,\n      resolution: this.resolution,\n      rotation: viewRotation,\n    });\n\n    // When the batch size gets too big, performance decreases. 200 is a good\n    // balance between batch size and number of fill/stroke instructions.\n    const batchSize =\n      this.instructions != instructions || this.overlaps ? 0 : 200;\n    let /** @type {import(\"../../Feature.js\").FeatureLike} */ feature;\n    let x, y, currentGeometry;\n    while (i < ii) {\n      const instruction = instructions[i];\n      const type = /** @type {import(\"./Instruction.js\").default} */ (\n        instruction[0]\n      );\n      switch (type) {\n        case CanvasInstruction.BEGIN_GEOMETRY:\n          feature = /** @type {import(\"../../Feature.js\").FeatureLike} */ (\n            instruction[1]\n          );\n          currentGeometry = instruction[3];\n          if (!feature.getGeometry()) {\n            i = /** @type {number} */ (instruction[2]);\n          } else if (\n            hitExtent !== undefined &&\n            !intersects(hitExtent, currentGeometry.getExtent())\n          ) {\n            i = /** @type {number} */ (instruction[2]) + 1;\n          } else {\n            ++i;\n          }\n          break;\n        case CanvasInstruction.BEGIN_PATH:\n          if (pendingFill > batchSize) {\n            this.fill_(context);\n            pendingFill = 0;\n          }\n          if (pendingStroke > batchSize) {\n            context.stroke();\n            pendingStroke = 0;\n          }\n          if (!pendingFill && !pendingStroke) {\n            context.beginPath();\n            prevX = NaN;\n            prevY = NaN;\n          }\n          ++i;\n          break;\n        case CanvasInstruction.CIRCLE:\n          d = /** @type {number} */ (instruction[1]);\n          const x1 = pixelCoordinates[d];\n          const y1 = pixelCoordinates[d + 1];\n          const x2 = pixelCoordinates[d + 2];\n          const y2 = pixelCoordinates[d + 3];\n          const dx = x2 - x1;\n          const dy = y2 - y1;\n          const r = Math.sqrt(dx * dx + dy * dy);\n          context.moveTo(x1 + r, y1);\n          context.arc(x1, y1, r, 0, 2 * Math.PI, true);\n          ++i;\n          break;\n        case CanvasInstruction.CLOSE_PATH:\n          context.closePath();\n          ++i;\n          break;\n        case CanvasInstruction.CUSTOM:\n          d = /** @type {number} */ (instruction[1]);\n          dd = instruction[2];\n          const geometry =\n            /** @type {import(\"../../geom/SimpleGeometry.js\").default} */ (\n              instruction[3]\n            );\n          const renderer = instruction[4];\n          const fn = instruction.length == 6 ? instruction[5] : undefined;\n          state.geometry = geometry;\n          state.feature = feature;\n          if (!(i in coordinateCache)) {\n            coordinateCache[i] = [];\n          }\n          const coords = coordinateCache[i];\n          if (fn) {\n            fn(pixelCoordinates, d, dd, 2, coords);\n          } else {\n            coords[0] = pixelCoordinates[d];\n            coords[1] = pixelCoordinates[d + 1];\n            coords.length = 2;\n          }\n          renderer(coords, state);\n          ++i;\n          break;\n        case CanvasInstruction.DRAW_IMAGE:\n          d = /** @type {number} */ (instruction[1]);\n          dd = /** @type {number} */ (instruction[2]);\n          image =\n            /** @type {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement} */ (\n              instruction[3]\n            );\n\n          // Remaining arguments in DRAW_IMAGE are in alphabetical order\n          anchorX = /** @type {number} */ (instruction[4]);\n          anchorY = /** @type {number} */ (instruction[5]);\n          let height = /** @type {number} */ (instruction[6]);\n          const opacity = /** @type {number} */ (instruction[7]);\n          const originX = /** @type {number} */ (instruction[8]);\n          const originY = /** @type {number} */ (instruction[9]);\n          const rotateWithView = /** @type {boolean} */ (instruction[10]);\n          let rotation = /** @type {number} */ (instruction[11]);\n          const scale = /** @type {import(\"../../size.js\").Size} */ (\n            instruction[12]\n          );\n          let width = /** @type {number} */ (instruction[13]);\n          const declutterMode =\n            /** @type {\"declutter\"|\"obstacle\"|\"none\"|undefined} */ (\n              instruction[14]\n            );\n          const declutterImageWithText =\n            /** @type {import(\"../canvas.js\").DeclutterImageWithText} */ (\n              instruction[15]\n            );\n\n          if (!image && instruction.length >= 20) {\n            // create label images\n            text = /** @type {string} */ (instruction[19]);\n            textKey = /** @type {string} */ (instruction[20]);\n            strokeKey = /** @type {string} */ (instruction[21]);\n            fillKey = /** @type {string} */ (instruction[22]);\n            const labelWithAnchor = this.drawLabelWithPointPlacement_(\n              text,\n              textKey,\n              strokeKey,\n              fillKey\n            );\n            image = labelWithAnchor.label;\n            instruction[3] = image;\n            const textOffsetX = /** @type {number} */ (instruction[23]);\n            anchorX = (labelWithAnchor.anchorX - textOffsetX) * this.pixelRatio;\n            instruction[4] = anchorX;\n            const textOffsetY = /** @type {number} */ (instruction[24]);\n            anchorY = (labelWithAnchor.anchorY - textOffsetY) * this.pixelRatio;\n            instruction[5] = anchorY;\n            height = image.height;\n            instruction[6] = height;\n            width = image.width;\n            instruction[13] = width;\n          }\n\n          let geometryWidths;\n          if (instruction.length > 25) {\n            geometryWidths = /** @type {number} */ (instruction[25]);\n          }\n\n          let padding, backgroundFill, backgroundStroke;\n          if (instruction.length > 17) {\n            padding = /** @type {Array<number>} */ (instruction[16]);\n            backgroundFill = /** @type {boolean} */ (instruction[17]);\n            backgroundStroke = /** @type {boolean} */ (instruction[18]);\n          } else {\n            padding = defaultPadding;\n            backgroundFill = false;\n            backgroundStroke = false;\n          }\n\n          if (rotateWithView && viewRotationFromTransform) {\n            // Canvas is expected to be rotated to reverse view rotation.\n            rotation += viewRotation;\n          } else if (!rotateWithView && !viewRotationFromTransform) {\n            // Canvas is not rotated, images need to be rotated back to be north-up.\n            rotation -= viewRotation;\n          }\n          let widthIndex = 0;\n          for (; d < dd; d += 2) {\n            if (\n              geometryWidths &&\n              geometryWidths[widthIndex++] < width / this.pixelRatio\n            ) {\n              continue;\n            }\n            const dimensions = this.calculateImageOrLabelDimensions_(\n              image.width,\n              image.height,\n              pixelCoordinates[d],\n              pixelCoordinates[d + 1],\n              width,\n              height,\n              anchorX,\n              anchorY,\n              originX,\n              originY,\n              rotation,\n              scale,\n              snapToPixel,\n              padding,\n              backgroundFill || backgroundStroke,\n              feature\n            );\n            /** @type {ReplayImageOrLabelArgs} */\n            const args = [\n              context,\n              contextScale,\n              image,\n              dimensions,\n              opacity,\n              backgroundFill\n                ? /** @type {Array<*>} */ (lastFillInstruction)\n                : null,\n              backgroundStroke\n                ? /** @type {Array<*>} */ (lastStrokeInstruction)\n                : null,\n            ];\n            if (declutterTree) {\n              if (declutterMode === 'none') {\n                // not rendered in declutter group\n                continue;\n              } else if (declutterMode === 'obstacle') {\n                // will always be drawn, thus no collision detection, but insert as obstacle\n                declutterTree.insert(dimensions.declutterBox);\n                continue;\n              } else {\n                let imageArgs;\n                let imageDeclutterBox;\n                if (declutterImageWithText) {\n                  const index = dd - d;\n                  if (!declutterImageWithText[index]) {\n                    // We now have the image for an image+text combination.\n                    declutterImageWithText[index] = args;\n                    // Don't render anything for now, wait for the text.\n                    continue;\n                  }\n                  imageArgs = declutterImageWithText[index];\n                  delete declutterImageWithText[index];\n                  imageDeclutterBox = getDeclutterBox(imageArgs);\n                  if (declutterTree.collides(imageDeclutterBox)) {\n                    continue;\n                  }\n                }\n                if (declutterTree.collides(dimensions.declutterBox)) {\n                  continue;\n                }\n                if (imageArgs) {\n                  // We now have image and text for an image+text combination.\n                  declutterTree.insert(imageDeclutterBox);\n                  // Render the image before we render the text.\n                  this.replayImageOrLabel_.apply(this, imageArgs);\n                }\n                declutterTree.insert(dimensions.declutterBox);\n              }\n            }\n            this.replayImageOrLabel_.apply(this, args);\n          }\n          ++i;\n          break;\n        case CanvasInstruction.DRAW_CHARS:\n          const begin = /** @type {number} */ (instruction[1]);\n          const end = /** @type {number} */ (instruction[2]);\n          const baseline = /** @type {number} */ (instruction[3]);\n          const overflow = /** @type {number} */ (instruction[4]);\n          fillKey = /** @type {string} */ (instruction[5]);\n          const maxAngle = /** @type {number} */ (instruction[6]);\n          const measurePixelRatio = /** @type {number} */ (instruction[7]);\n          const offsetY = /** @type {number} */ (instruction[8]);\n          strokeKey = /** @type {string} */ (instruction[9]);\n          const strokeWidth = /** @type {number} */ (instruction[10]);\n          text = /** @type {string} */ (instruction[11]);\n          textKey = /** @type {string} */ (instruction[12]);\n          const pixelRatioScale = [\n            /** @type {number} */ (instruction[13]),\n            /** @type {number} */ (instruction[13]),\n          ];\n\n          const textState = this.textStates[textKey];\n          const font = textState.font;\n          const textScale = [\n            textState.scale[0] * measurePixelRatio,\n            textState.scale[1] * measurePixelRatio,\n          ];\n\n          let cachedWidths;\n          if (font in this.widths_) {\n            cachedWidths = this.widths_[font];\n          } else {\n            cachedWidths = {};\n            this.widths_[font] = cachedWidths;\n          }\n\n          const pathLength = lineStringLength(pixelCoordinates, begin, end, 2);\n          const textLength =\n            Math.abs(textScale[0]) *\n            measureAndCacheTextWidth(font, text, cachedWidths);\n          if (overflow || textLength <= pathLength) {\n            const textAlign = this.textStates[textKey].textAlign;\n            const startM = (pathLength - textLength) * TEXT_ALIGN[textAlign];\n            const parts = drawTextOnPath(\n              pixelCoordinates,\n              begin,\n              end,\n              2,\n              text,\n              startM,\n              maxAngle,\n              Math.abs(textScale[0]),\n              measureAndCacheTextWidth,\n              font,\n              cachedWidths,\n              viewRotationFromTransform ? 0 : this.viewRotation_\n            );\n            drawChars: if (parts) {\n              /** @type {Array<ReplayImageOrLabelArgs>} */\n              const replayImageOrLabelArgs = [];\n              let c, cc, chars, label, part;\n              if (strokeKey) {\n                for (c = 0, cc = parts.length; c < cc; ++c) {\n                  part = parts[c]; // x, y, anchorX, rotation, chunk\n                  chars = /** @type {string} */ (part[4]);\n                  label = this.createLabel(chars, textKey, '', strokeKey);\n                  anchorX =\n                    /** @type {number} */ (part[2]) +\n                    (textScale[0] < 0 ? -strokeWidth : strokeWidth);\n                  anchorY =\n                    baseline * label.height +\n                    ((0.5 - baseline) * 2 * strokeWidth * textScale[1]) /\n                      textScale[0] -\n                    offsetY;\n                  const dimensions = this.calculateImageOrLabelDimensions_(\n                    label.width,\n                    label.height,\n                    part[0],\n                    part[1],\n                    label.width,\n                    label.height,\n                    anchorX,\n                    anchorY,\n                    0,\n                    0,\n                    part[3],\n                    pixelRatioScale,\n                    false,\n                    defaultPadding,\n                    false,\n                    feature\n                  );\n                  if (\n                    declutterTree &&\n                    declutterTree.collides(dimensions.declutterBox)\n                  ) {\n                    break drawChars;\n                  }\n                  replayImageOrLabelArgs.push([\n                    context,\n                    contextScale,\n                    label,\n                    dimensions,\n                    1,\n                    null,\n                    null,\n                  ]);\n                }\n              }\n              if (fillKey) {\n                for (c = 0, cc = parts.length; c < cc; ++c) {\n                  part = parts[c]; // x, y, anchorX, rotation, chunk\n                  chars = /** @type {string} */ (part[4]);\n                  label = this.createLabel(chars, textKey, fillKey, '');\n                  anchorX = /** @type {number} */ (part[2]);\n                  anchorY = baseline * label.height - offsetY;\n                  const dimensions = this.calculateImageOrLabelDimensions_(\n                    label.width,\n                    label.height,\n                    part[0],\n                    part[1],\n                    label.width,\n                    label.height,\n                    anchorX,\n                    anchorY,\n                    0,\n                    0,\n                    part[3],\n                    pixelRatioScale,\n                    false,\n                    defaultPadding,\n                    false,\n                    feature\n                  );\n                  if (\n                    declutterTree &&\n                    declutterTree.collides(dimensions.declutterBox)\n                  ) {\n                    break drawChars;\n                  }\n                  replayImageOrLabelArgs.push([\n                    context,\n                    contextScale,\n                    label,\n                    dimensions,\n                    1,\n                    null,\n                    null,\n                  ]);\n                }\n              }\n              if (declutterTree) {\n                declutterTree.load(replayImageOrLabelArgs.map(getDeclutterBox));\n              }\n              for (let i = 0, ii = replayImageOrLabelArgs.length; i < ii; ++i) {\n                this.replayImageOrLabel_.apply(this, replayImageOrLabelArgs[i]);\n              }\n            }\n          }\n          ++i;\n          break;\n        case CanvasInstruction.END_GEOMETRY:\n          if (featureCallback !== undefined) {\n            feature = /** @type {import(\"../../Feature.js\").FeatureLike} */ (\n              instruction[1]\n            );\n            const result = featureCallback(feature, currentGeometry);\n            if (result) {\n              return result;\n            }\n          }\n          ++i;\n          break;\n        case CanvasInstruction.FILL:\n          if (batchSize) {\n            pendingFill++;\n          } else {\n            this.fill_(context);\n          }\n          ++i;\n          break;\n        case CanvasInstruction.MOVE_TO_LINE_TO:\n          d = /** @type {number} */ (instruction[1]);\n          dd = /** @type {number} */ (instruction[2]);\n          x = pixelCoordinates[d];\n          y = pixelCoordinates[d + 1];\n          roundX = (x + 0.5) | 0;\n          roundY = (y + 0.5) | 0;\n          if (roundX !== prevX || roundY !== prevY) {\n            context.moveTo(x, y);\n            prevX = roundX;\n            prevY = roundY;\n          }\n          for (d += 2; d < dd; d += 2) {\n            x = pixelCoordinates[d];\n            y = pixelCoordinates[d + 1];\n            roundX = (x + 0.5) | 0;\n            roundY = (y + 0.5) | 0;\n            if (d == dd - 2 || roundX !== prevX || roundY !== prevY) {\n              context.lineTo(x, y);\n              prevX = roundX;\n              prevY = roundY;\n            }\n          }\n          ++i;\n          break;\n        case CanvasInstruction.SET_FILL_STYLE:\n          lastFillInstruction = instruction;\n          this.alignFill_ = instruction[2];\n\n          if (pendingFill) {\n            this.fill_(context);\n            pendingFill = 0;\n            if (pendingStroke) {\n              context.stroke();\n              pendingStroke = 0;\n            }\n          }\n\n          context.fillStyle =\n            /** @type {import(\"../../colorlike.js\").ColorLike} */ (\n              instruction[1]\n            );\n          ++i;\n          break;\n        case CanvasInstruction.SET_STROKE_STYLE:\n          lastStrokeInstruction = instruction;\n          if (pendingStroke) {\n            context.stroke();\n            pendingStroke = 0;\n          }\n          this.setStrokeStyle_(context, /** @type {Array<*>} */ (instruction));\n          ++i;\n          break;\n        case CanvasInstruction.STROKE:\n          if (batchSize) {\n            pendingStroke++;\n          } else {\n            context.stroke();\n          }\n          ++i;\n          break;\n        default: // consume the instruction anyway, to avoid an infinite loop\n          ++i;\n          break;\n      }\n    }\n    if (pendingFill) {\n      this.fill_(context);\n    }\n    if (pendingStroke) {\n      context.stroke();\n    }\n    return undefined;\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {number} contextScale Scale of the context.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @param {number} viewRotation View rotation.\n   * @param {boolean} snapToPixel Snap point symbols and text to integer pixels.\n   * @param {import(\"rbush\").default} [declutterTree] Declutter tree.\n   */\n  execute(\n    context,\n    contextScale,\n    transform,\n    viewRotation,\n    snapToPixel,\n    declutterTree\n  ) {\n    this.viewRotation_ = viewRotation;\n    this.execute_(\n      context,\n      contextScale,\n      transform,\n      this.instructions,\n      snapToPixel,\n      undefined,\n      undefined,\n      declutterTree\n    );\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @param {number} viewRotation View rotation.\n   * @param {FeatureCallback<T>} [featureCallback] Feature callback.\n   * @param {import(\"../../extent.js\").Extent} [hitExtent] Only check\n   *     features that intersect this extent.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  executeHitDetection(\n    context,\n    transform,\n    viewRotation,\n    featureCallback,\n    hitExtent\n  ) {\n    this.viewRotation_ = viewRotation;\n    return this.execute_(\n      context,\n      1,\n      transform,\n      this.hitDetectionInstructions,\n      true,\n      featureCallback,\n      hitExtent\n    );\n  }\n}\n\nexport default Executor;\n","/**\n * @module ol/render/canvas/ExecutorGroup\n */\n\nimport Executor from './Executor.js';\nimport {ascending} from '../../array.js';\nimport {buffer, createEmpty, extendCoordinate} from '../../extent.js';\nimport {\n  compose as composeTransform,\n  create as createTransform,\n} from '../../transform.js';\nimport {createCanvasContext2D} from '../../dom.js';\nimport {isEmpty} from '../../obj.js';\nimport {transform2D} from '../../geom/flat/transform.js';\n\n/**\n * @const\n * @type {Array<import(\"../canvas.js\").BuilderType>}\n */\nconst ORDER = ['Polygon', 'Circle', 'LineString', 'Image', 'Text', 'Default'];\n\nclass ExecutorGroup {\n  /**\n   * @param {import(\"../../extent.js\").Extent} maxExtent Max extent for clipping. When a\n   * `maxExtent` was set on the Builder for this executor group, the same `maxExtent`\n   * should be set here, unless the target context does not exceed that extent (which\n   * can be the case when rendering to tiles).\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {boolean} overlaps The executor group can have overlapping geometries.\n   * @param {!Object<string, !Object<import(\"../canvas.js\").BuilderType, import(\"../canvas.js\").SerializableInstructions>>} allInstructions\n   * The serializable instructions.\n   * @param {number} [renderBuffer] Optional rendering buffer.\n   */\n  constructor(\n    maxExtent,\n    resolution,\n    pixelRatio,\n    overlaps,\n    allInstructions,\n    renderBuffer\n  ) {\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.maxExtent_ = maxExtent;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.overlaps_ = overlaps;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = pixelRatio;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.resolution_ = resolution;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.renderBuffer_ = renderBuffer;\n\n    /**\n     * @private\n     * @type {!Object<string, !Object<import(\"../canvas.js\").BuilderType, import(\"./Executor\").default>>}\n     */\n    this.executorsByZIndex_ = {};\n\n    /**\n     * @private\n     * @type {CanvasRenderingContext2D}\n     */\n    this.hitDetectionContext_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.hitDetectionTransform_ = createTransform();\n\n    this.createExecutors_(allInstructions);\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   */\n  clip(context, transform) {\n    const flatClipCoords = this.getClipCoords(transform);\n    context.beginPath();\n    context.moveTo(flatClipCoords[0], flatClipCoords[1]);\n    context.lineTo(flatClipCoords[2], flatClipCoords[3]);\n    context.lineTo(flatClipCoords[4], flatClipCoords[5]);\n    context.lineTo(flatClipCoords[6], flatClipCoords[7]);\n    context.clip();\n  }\n\n  /**\n   * Create executors and populate them using the provided instructions.\n   * @private\n   * @param {!Object<string, !Object<import(\"../canvas.js\").BuilderType, import(\"../canvas.js\").SerializableInstructions>>} allInstructions The serializable instructions\n   */\n  createExecutors_(allInstructions) {\n    for (const zIndex in allInstructions) {\n      let executors = this.executorsByZIndex_[zIndex];\n      if (executors === undefined) {\n        executors = {};\n        this.executorsByZIndex_[zIndex] = executors;\n      }\n      const instructionByZindex = allInstructions[zIndex];\n      for (const builderType in instructionByZindex) {\n        const instructions = instructionByZindex[builderType];\n        executors[builderType] = new Executor(\n          this.resolution_,\n          this.pixelRatio_,\n          this.overlaps_,\n          instructions\n        );\n      }\n    }\n  }\n\n  /**\n   * @param {Array<import(\"../canvas.js\").BuilderType>} executors Executors.\n   * @return {boolean} Has executors of the provided types.\n   */\n  hasExecutors(executors) {\n    for (const zIndex in this.executorsByZIndex_) {\n      const candidates = this.executorsByZIndex_[zIndex];\n      for (let i = 0, ii = executors.length; i < ii; ++i) {\n        if (executors[i] in candidates) {\n          return true;\n        }\n      }\n    }\n    return false;\n  }\n\n  /**\n   * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {number} resolution Resolution.\n   * @param {number} rotation Rotation.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {function(import(\"../../Feature.js\").FeatureLike, import(\"../../geom/SimpleGeometry.js\").default, number): T} callback Feature callback.\n   * @param {Array<import(\"../../Feature.js\").FeatureLike>} declutteredFeatures Decluttered features.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  forEachFeatureAtCoordinate(\n    coordinate,\n    resolution,\n    rotation,\n    hitTolerance,\n    callback,\n    declutteredFeatures\n  ) {\n    hitTolerance = Math.round(hitTolerance);\n    const contextSize = hitTolerance * 2 + 1;\n    const transform = composeTransform(\n      this.hitDetectionTransform_,\n      hitTolerance + 0.5,\n      hitTolerance + 0.5,\n      1 / resolution,\n      -1 / resolution,\n      -rotation,\n      -coordinate[0],\n      -coordinate[1]\n    );\n\n    const newContext = !this.hitDetectionContext_;\n    if (newContext) {\n      this.hitDetectionContext_ = createCanvasContext2D(\n        contextSize,\n        contextSize,\n        undefined,\n        {willReadFrequently: true}\n      );\n    }\n    const context = this.hitDetectionContext_;\n\n    if (\n      context.canvas.width !== contextSize ||\n      context.canvas.height !== contextSize\n    ) {\n      context.canvas.width = contextSize;\n      context.canvas.height = contextSize;\n    } else if (!newContext) {\n      context.clearRect(0, 0, contextSize, contextSize);\n    }\n\n    /**\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    let hitExtent;\n    if (this.renderBuffer_ !== undefined) {\n      hitExtent = createEmpty();\n      extendCoordinate(hitExtent, coordinate);\n      buffer(\n        hitExtent,\n        resolution * (this.renderBuffer_ + hitTolerance),\n        hitExtent\n      );\n    }\n\n    const indexes = getPixelIndexArray(hitTolerance);\n\n    let builderType;\n\n    /**\n     * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n     * @param {import(\"../../geom/SimpleGeometry.js\").default} geometry Geometry.\n     * @return {T|undefined} Callback result.\n     */\n    function featureCallback(feature, geometry) {\n      const imageData = context.getImageData(\n        0,\n        0,\n        contextSize,\n        contextSize\n      ).data;\n      for (let i = 0, ii = indexes.length; i < ii; i++) {\n        if (imageData[indexes[i]] > 0) {\n          if (\n            !declutteredFeatures ||\n            (builderType !== 'Image' && builderType !== 'Text') ||\n            declutteredFeatures.includes(feature)\n          ) {\n            const idx = (indexes[i] - 3) / 4;\n            const x = hitTolerance - (idx % contextSize);\n            const y = hitTolerance - ((idx / contextSize) | 0);\n            const result = callback(feature, geometry, x * x + y * y);\n            if (result) {\n              return result;\n            }\n          }\n          context.clearRect(0, 0, contextSize, contextSize);\n          break;\n        }\n      }\n      return undefined;\n    }\n\n    /** @type {Array<number>} */\n    const zs = Object.keys(this.executorsByZIndex_).map(Number);\n    zs.sort(ascending);\n\n    let i, j, executors, executor, result;\n    for (i = zs.length - 1; i >= 0; --i) {\n      const zIndexKey = zs[i].toString();\n      executors = this.executorsByZIndex_[zIndexKey];\n      for (j = ORDER.length - 1; j >= 0; --j) {\n        builderType = ORDER[j];\n        executor = executors[builderType];\n        if (executor !== undefined) {\n          result = executor.executeHitDetection(\n            context,\n            transform,\n            rotation,\n            featureCallback,\n            hitExtent\n          );\n          if (result) {\n            return result;\n          }\n        }\n      }\n    }\n    return undefined;\n  }\n\n  /**\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @return {Array<number>|null} Clip coordinates.\n   */\n  getClipCoords(transform) {\n    const maxExtent = this.maxExtent_;\n    if (!maxExtent) {\n      return null;\n    }\n    const minX = maxExtent[0];\n    const minY = maxExtent[1];\n    const maxX = maxExtent[2];\n    const maxY = maxExtent[3];\n    const flatClipCoords = [minX, minY, minX, maxY, maxX, maxY, maxX, minY];\n    transform2D(flatClipCoords, 0, 8, 2, transform, flatClipCoords);\n    return flatClipCoords;\n  }\n\n  /**\n   * @return {boolean} Is empty.\n   */\n  isEmpty() {\n    return isEmpty(this.executorsByZIndex_);\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {number} contextScale Scale of the context.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @param {number} viewRotation View rotation.\n   * @param {boolean} snapToPixel Snap point symbols and test to integer pixel.\n   * @param {Array<import(\"../canvas.js\").BuilderType>} [builderTypes] Ordered replay types to replay.\n   *     Default is {@link module:ol/render/replay~ORDER}\n   * @param {import(\"rbush\").default} [declutterTree] Declutter tree.\n   */\n  execute(\n    context,\n    contextScale,\n    transform,\n    viewRotation,\n    snapToPixel,\n    builderTypes,\n    declutterTree\n  ) {\n    /** @type {Array<number>} */\n    const zs = Object.keys(this.executorsByZIndex_).map(Number);\n    zs.sort(ascending);\n\n    // setup clipping so that the parts of over-simplified geometries are not\n    // visible outside the current extent when panning\n    if (this.maxExtent_) {\n      context.save();\n      this.clip(context, transform);\n    }\n\n    builderTypes = builderTypes ? builderTypes : ORDER;\n    let i, ii, j, jj, replays, replay;\n    if (declutterTree) {\n      zs.reverse();\n    }\n    for (i = 0, ii = zs.length; i < ii; ++i) {\n      const zIndexKey = zs[i].toString();\n      replays = this.executorsByZIndex_[zIndexKey];\n      for (j = 0, jj = builderTypes.length; j < jj; ++j) {\n        const builderType = builderTypes[j];\n        replay = replays[builderType];\n        if (replay !== undefined) {\n          replay.execute(\n            context,\n            contextScale,\n            transform,\n            viewRotation,\n            snapToPixel,\n            declutterTree\n          );\n        }\n      }\n    }\n\n    if (this.maxExtent_) {\n      context.restore();\n    }\n  }\n}\n\n/**\n * This cache is used to store arrays of indexes for calculated pixel circles\n * to increase performance.\n * It is a static property to allow each Replaygroup to access it.\n * @type {Object<number, Array<number>>}\n */\nconst circlePixelIndexArrayCache = {};\n\n/**\n * This methods creates an array with indexes of all pixels within a circle,\n * ordered by how close they are to the center.\n * A cache is used to increase performance.\n * @param {number} radius Radius.\n * @return {Array<number>} An array with indexes within a circle.\n */\nexport function getPixelIndexArray(radius) {\n  if (circlePixelIndexArrayCache[radius] !== undefined) {\n    return circlePixelIndexArrayCache[radius];\n  }\n\n  const size = radius * 2 + 1;\n  const maxDistanceSq = radius * radius;\n  const distances = new Array(maxDistanceSq + 1);\n  for (let i = 0; i <= radius; ++i) {\n    for (let j = 0; j <= radius; ++j) {\n      const distanceSq = i * i + j * j;\n      if (distanceSq > maxDistanceSq) {\n        break;\n      }\n      let distance = distances[distanceSq];\n      if (!distance) {\n        distance = [];\n        distances[distanceSq] = distance;\n      }\n      distance.push(((radius + i) * size + (radius + j)) * 4 + 3);\n      if (i > 0) {\n        distance.push(((radius - i) * size + (radius + j)) * 4 + 3);\n      }\n      if (j > 0) {\n        distance.push(((radius + i) * size + (radius - j)) * 4 + 3);\n        if (i > 0) {\n          distance.push(((radius - i) * size + (radius - j)) * 4 + 3);\n        }\n      }\n    }\n  }\n\n  const pixelIndex = [];\n  for (let i = 0, ii = distances.length; i < ii; ++i) {\n    if (distances[i]) {\n      pixelIndex.push(...distances[i]);\n    }\n  }\n\n  circlePixelIndexArrayCache[radius] = pixelIndex;\n  return pixelIndex;\n}\n\nexport default ExecutorGroup;\n","/**\n * @module ol/render/canvas/Instruction\n */\n\n/**\n * @enum {number}\n */\nconst Instruction = {\n  BEGIN_GEOMETRY: 0,\n  BEGIN_PATH: 1,\n  CIRCLE: 2,\n  CLOSE_PATH: 3,\n  CUSTOM: 4,\n  DRAW_CHARS: 5,\n  DRAW_IMAGE: 6,\n  END_GEOMETRY: 7,\n  FILL: 8,\n  MOVE_TO_LINE_TO: 9,\n  SET_FILL_STYLE: 10,\n  SET_STROKE_STYLE: 11,\n  STROKE: 12,\n};\n\n/**\n * @type {Array<Instruction>}\n */\nexport const fillInstruction = [Instruction.FILL];\n\n/**\n * @type {Array<Instruction>}\n */\nexport const strokeInstruction = [Instruction.STROKE];\n\n/**\n * @type {Array<Instruction>}\n */\nexport const beginPathInstruction = [Instruction.BEGIN_PATH];\n\n/**\n * @type {Array<Instruction>}\n */\nexport const closePathInstruction = [Instruction.CLOSE_PATH];\n\nexport default Instruction;\n","import {lerp} from '../../math.js';\n\n/**\n * Creates chunks of equal length from a linestring\n * @param {number} chunkLength Length of each chunk.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Start offset of the `flatCoordinates`.\n * @param {number} end End offset of the `flatCoordinates`.\n * @param {number} stride Stride.\n * @return {Array<Array<number>>} Chunks of linestrings with stride 2.\n */\nexport function lineChunk(chunkLength, flatCoordinates, offset, end, stride) {\n  const chunks = [];\n  let cursor = offset;\n  let chunkM = 0;\n  let currentChunk = flatCoordinates.slice(offset, 2);\n  while (chunkM < chunkLength && cursor + stride < end) {\n    const [x1, y1] = currentChunk.slice(-2);\n    const x2 = flatCoordinates[cursor + stride];\n    const y2 = flatCoordinates[cursor + stride + 1];\n    const segmentLength = Math.sqrt(\n      (x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1)\n    );\n    chunkM += segmentLength;\n    if (chunkM >= chunkLength) {\n      const m = (chunkLength - chunkM + segmentLength) / segmentLength;\n      const x = lerp(x1, x2, m);\n      const y = lerp(y1, y2, m);\n      currentChunk.push(x, y);\n      chunks.push(currentChunk);\n      currentChunk = [x, y];\n      if (chunkM == chunkLength) {\n        cursor += stride;\n      }\n      chunkM = 0;\n    } else if (chunkM < chunkLength) {\n      currentChunk.push(\n        flatCoordinates[cursor + stride],\n        flatCoordinates[cursor + stride + 1]\n      );\n      cursor += stride;\n    } else {\n      const missing = segmentLength - chunkM;\n      const x = lerp(x1, x2, missing / segmentLength);\n      const y = lerp(y1, y2, missing / segmentLength);\n      currentChunk.push(x, y);\n      chunks.push(currentChunk);\n      currentChunk = [x, y];\n      chunkM = 0;\n      cursor += stride;\n    }\n  }\n  if (chunkM > 0) {\n    chunks.push(currentChunk);\n  }\n  return chunks;\n}\n","/**\n * @module ol/geom/flat/straightchunk\n */\n\n/**\n * @param {number} maxAngle Maximum acceptable angle delta between segments.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {Array<number>} Start and end of the first suitable chunk of the\n * given `flatCoordinates`.\n */\nexport function matchingChunk(maxAngle, flatCoordinates, offset, end, stride) {\n  let chunkStart = offset;\n  let chunkEnd = offset;\n  let chunkM = 0;\n  let m = 0;\n  let start = offset;\n  let acos, i, m12, m23, x1, y1, x12, y12, x23, y23;\n  for (i = offset; i < end; i += stride) {\n    const x2 = flatCoordinates[i];\n    const y2 = flatCoordinates[i + 1];\n    if (x1 !== undefined) {\n      x23 = x2 - x1;\n      y23 = y2 - y1;\n      m23 = Math.sqrt(x23 * x23 + y23 * y23);\n      if (x12 !== undefined) {\n        m += m12;\n        acos = Math.acos((x12 * x23 + y12 * y23) / (m12 * m23));\n        if (acos > maxAngle) {\n          if (m > chunkM) {\n            chunkM = m;\n            chunkStart = start;\n            chunkEnd = i;\n          }\n          m = 0;\n          start = i - stride;\n        }\n      }\n      m12 = m23;\n      x12 = x23;\n      y12 = y23;\n    }\n    x1 = x2;\n    y1 = y2;\n  }\n  m += m23;\n  return m > chunkM ? [start, i] : [chunkStart, chunkEnd];\n}\n","/**\n * @module ol/render/canvas/TextBuilder\n */\nimport CanvasBuilder from './Builder.js';\nimport CanvasInstruction from './Instruction.js';\nimport {asColorLike} from '../../colorlike.js';\nimport {\n  defaultFillStyle,\n  defaultFont,\n  defaultLineCap,\n  defaultLineDash,\n  defaultLineDashOffset,\n  defaultLineJoin,\n  defaultLineWidth,\n  defaultMiterLimit,\n  defaultPadding,\n  defaultStrokeStyle,\n  defaultTextAlign,\n  defaultTextBaseline,\n  registerFont,\n} from '../canvas.js';\nimport {getUid} from '../../util.js';\nimport {intersects} from '../../extent.js';\nimport {lineChunk} from '../../geom/flat/linechunk.js';\nimport {matchingChunk} from '../../geom/flat/straightchunk.js';\n/**\n * @const\n * @enum {number}\n */\nexport const TEXT_ALIGN = {\n  'left': 0,\n  'end': 0,\n  'center': 0.5,\n  'right': 1,\n  'start': 1,\n  'top': 0,\n  'middle': 0.5,\n  'hanging': 0.2,\n  'alphabetic': 0.8,\n  'ideographic': 0.8,\n  'bottom': 1,\n};\n\nclass CanvasTextBuilder extends CanvasBuilder {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    super(tolerance, maxExtent, resolution, pixelRatio);\n\n    /**\n     * @private\n     * @type {Array<HTMLCanvasElement>}\n     */\n    this.labels_ = null;\n\n    /**\n     * @private\n     * @type {string|Array<string>}\n     */\n    this.text_ = '';\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textOffsetX_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textOffsetY_ = 0;\n\n    /**\n     * @private\n     * @type {boolean|undefined}\n     */\n    this.textRotateWithView_ = undefined;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textRotation_ = 0;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").FillState}\n     */\n    this.textFillState_ = null;\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").FillState>}\n     */\n    this.fillStates = {};\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").StrokeState}\n     */\n    this.textStrokeState_ = null;\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").StrokeState>}\n     */\n    this.strokeStates = {};\n\n    /**\n     * @private\n     * @type {import(\"../canvas.js\").TextState}\n     */\n    this.textState_ = /** @type {import(\"../canvas.js\").TextState} */ ({});\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").TextState>}\n     */\n    this.textStates = {};\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.textKey_ = '';\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.fillKey_ = '';\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.strokeKey_ = '';\n\n    /**\n     * Data shared with an image builder for combined decluttering.\n     * @private\n     * @type {import(\"../canvas.js\").DeclutterImageWithText}\n     */\n    this.declutterImageWithText_ = undefined;\n  }\n\n  /**\n   * @return {import(\"../canvas.js\").SerializableInstructions} the serializable instructions.\n   */\n  finish() {\n    const instructions = super.finish();\n    instructions.textStates = this.textStates;\n    instructions.fillStates = this.fillStates;\n    instructions.strokeStates = this.strokeStates;\n    return instructions;\n  }\n\n  /**\n   * @param {import(\"../../geom/SimpleGeometry.js\").default|import(\"../Feature.js\").default} geometry Geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawText(geometry, feature) {\n    const fillState = this.textFillState_;\n    const strokeState = this.textStrokeState_;\n    const textState = this.textState_;\n    if (this.text_ === '' || !textState || (!fillState && !strokeState)) {\n      return;\n    }\n\n    const coordinates = this.coordinates;\n    let begin = coordinates.length;\n\n    const geometryType = geometry.getType();\n    let flatCoordinates = null;\n    let stride = geometry.getStride();\n\n    if (\n      textState.placement === 'line' &&\n      (geometryType == 'LineString' ||\n        geometryType == 'MultiLineString' ||\n        geometryType == 'Polygon' ||\n        geometryType == 'MultiPolygon')\n    ) {\n      if (!intersects(this.getBufferedMaxExtent(), geometry.getExtent())) {\n        return;\n      }\n      let ends;\n      flatCoordinates = geometry.getFlatCoordinates();\n      if (geometryType == 'LineString') {\n        ends = [flatCoordinates.length];\n      } else if (geometryType == 'MultiLineString') {\n        ends = /** @type {import(\"../../geom/MultiLineString.js\").default} */ (\n          geometry\n        ).getEnds();\n      } else if (geometryType == 'Polygon') {\n        ends = /** @type {import(\"../../geom/Polygon.js\").default} */ (geometry)\n          .getEnds()\n          .slice(0, 1);\n      } else if (geometryType == 'MultiPolygon') {\n        const endss =\n          /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (\n            geometry\n          ).getEndss();\n        ends = [];\n        for (let i = 0, ii = endss.length; i < ii; ++i) {\n          ends.push(endss[i][0]);\n        }\n      }\n      this.beginGeometry(geometry, feature);\n      const repeat = textState.repeat;\n      const textAlign = repeat ? undefined : textState.textAlign;\n      // No `justify` support for line placement.\n      let flatOffset = 0;\n      for (let o = 0, oo = ends.length; o < oo; ++o) {\n        let chunks;\n        if (repeat) {\n          chunks = lineChunk(\n            repeat * this.resolution,\n            flatCoordinates,\n            flatOffset,\n            ends[o],\n            stride\n          );\n        } else {\n          chunks = [flatCoordinates.slice(flatOffset, ends[o])];\n        }\n        for (let c = 0, cc = chunks.length; c < cc; ++c) {\n          const chunk = chunks[c];\n          let chunkBegin = 0;\n          let chunkEnd = chunk.length;\n          if (textAlign == undefined) {\n            const range = matchingChunk(\n              textState.maxAngle,\n              chunk,\n              0,\n              chunk.length,\n              2\n            );\n            chunkBegin = range[0];\n            chunkEnd = range[1];\n          }\n          for (let i = chunkBegin; i < chunkEnd; i += stride) {\n            coordinates.push(chunk[i], chunk[i + 1]);\n          }\n          const end = coordinates.length;\n          flatOffset = ends[o];\n          this.drawChars_(begin, end);\n          begin = end;\n        }\n      }\n      this.endGeometry(feature);\n    } else {\n      let geometryWidths = textState.overflow ? null : [];\n      switch (geometryType) {\n        case 'Point':\n        case 'MultiPoint':\n          flatCoordinates =\n            /** @type {import(\"../../geom/MultiPoint.js\").default} */ (\n              geometry\n            ).getFlatCoordinates();\n          break;\n        case 'LineString':\n          flatCoordinates =\n            /** @type {import(\"../../geom/LineString.js\").default} */ (\n              geometry\n            ).getFlatMidpoint();\n          break;\n        case 'Circle':\n          flatCoordinates =\n            /** @type {import(\"../../geom/Circle.js\").default} */ (\n              geometry\n            ).getCenter();\n          break;\n        case 'MultiLineString':\n          flatCoordinates =\n            /** @type {import(\"../../geom/MultiLineString.js\").default} */ (\n              geometry\n            ).getFlatMidpoints();\n          stride = 2;\n          break;\n        case 'Polygon':\n          flatCoordinates =\n            /** @type {import(\"../../geom/Polygon.js\").default} */ (\n              geometry\n            ).getFlatInteriorPoint();\n          if (!textState.overflow) {\n            geometryWidths.push(flatCoordinates[2] / this.resolution);\n          }\n          stride = 3;\n          break;\n        case 'MultiPolygon':\n          const interiorPoints =\n            /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (\n              geometry\n            ).getFlatInteriorPoints();\n          flatCoordinates = [];\n          for (let i = 0, ii = interiorPoints.length; i < ii; i += 3) {\n            if (!textState.overflow) {\n              geometryWidths.push(interiorPoints[i + 2] / this.resolution);\n            }\n            flatCoordinates.push(interiorPoints[i], interiorPoints[i + 1]);\n          }\n          if (flatCoordinates.length === 0) {\n            return;\n          }\n          stride = 2;\n          break;\n        default:\n      }\n      const end = this.appendFlatPointCoordinates(flatCoordinates, stride);\n      if (end === begin) {\n        return;\n      }\n      if (\n        geometryWidths &&\n        (end - begin) / 2 !== flatCoordinates.length / stride\n      ) {\n        let beg = begin / 2;\n        geometryWidths = geometryWidths.filter((w, i) => {\n          const keep =\n            coordinates[(beg + i) * 2] === flatCoordinates[i * stride] &&\n            coordinates[(beg + i) * 2 + 1] === flatCoordinates[i * stride + 1];\n          if (!keep) {\n            --beg;\n          }\n          return keep;\n        });\n      }\n\n      this.saveTextStates_();\n\n      if (textState.backgroundFill || textState.backgroundStroke) {\n        this.setFillStrokeStyle(\n          textState.backgroundFill,\n          textState.backgroundStroke\n        );\n        if (textState.backgroundFill) {\n          this.updateFillStyle(this.state, this.createFill);\n          this.hitDetectionInstructions.push(this.createFill(this.state));\n        }\n        if (textState.backgroundStroke) {\n          this.updateStrokeStyle(this.state, this.applyStroke);\n          this.hitDetectionInstructions.push(this.createStroke(this.state));\n        }\n      }\n\n      this.beginGeometry(geometry, feature);\n\n      // adjust padding for negative scale\n      let padding = textState.padding;\n      if (\n        padding != defaultPadding &&\n        (textState.scale[0] < 0 || textState.scale[1] < 0)\n      ) {\n        let p0 = textState.padding[0];\n        let p1 = textState.padding[1];\n        let p2 = textState.padding[2];\n        let p3 = textState.padding[3];\n        if (textState.scale[0] < 0) {\n          p1 = -p1;\n          p3 = -p3;\n        }\n        if (textState.scale[1] < 0) {\n          p0 = -p0;\n          p2 = -p2;\n        }\n        padding = [p0, p1, p2, p3];\n      }\n\n      // The image is unknown at this stage so we pass null; it will be computed at render time.\n      // For clarity, we pass NaN for offsetX, offsetY, width and height, which will be computed at\n      // render time.\n      const pixelRatio = this.pixelRatio;\n      this.instructions.push([\n        CanvasInstruction.DRAW_IMAGE,\n        begin,\n        end,\n        null,\n        NaN,\n        NaN,\n        NaN,\n        1,\n        0,\n        0,\n        this.textRotateWithView_,\n        this.textRotation_,\n        [1, 1],\n        NaN,\n        undefined,\n        this.declutterImageWithText_,\n        padding == defaultPadding\n          ? defaultPadding\n          : padding.map(function (p) {\n              return p * pixelRatio;\n            }),\n        !!textState.backgroundFill,\n        !!textState.backgroundStroke,\n        this.text_,\n        this.textKey_,\n        this.strokeKey_,\n        this.fillKey_,\n        this.textOffsetX_,\n        this.textOffsetY_,\n        geometryWidths,\n      ]);\n      const scale = 1 / pixelRatio;\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.DRAW_IMAGE,\n        begin,\n        end,\n        null,\n        NaN,\n        NaN,\n        NaN,\n        1,\n        0,\n        0,\n        this.textRotateWithView_,\n        this.textRotation_,\n        [scale, scale],\n        NaN,\n        undefined,\n        this.declutterImageWithText_,\n        padding,\n        !!textState.backgroundFill,\n        !!textState.backgroundStroke,\n        this.text_,\n        this.textKey_,\n        this.strokeKey_,\n        this.fillKey_,\n        this.textOffsetX_,\n        this.textOffsetY_,\n        geometryWidths,\n      ]);\n\n      this.endGeometry(feature);\n    }\n  }\n\n  /**\n   * @private\n   */\n  saveTextStates_() {\n    const strokeState = this.textStrokeState_;\n    const textState = this.textState_;\n    const fillState = this.textFillState_;\n\n    const strokeKey = this.strokeKey_;\n    if (strokeState) {\n      if (!(strokeKey in this.strokeStates)) {\n        this.strokeStates[strokeKey] = {\n          strokeStyle: strokeState.strokeStyle,\n          lineCap: strokeState.lineCap,\n          lineDashOffset: strokeState.lineDashOffset,\n          lineWidth: strokeState.lineWidth,\n          lineJoin: strokeState.lineJoin,\n          miterLimit: strokeState.miterLimit,\n          lineDash: strokeState.lineDash,\n        };\n      }\n    }\n    const textKey = this.textKey_;\n    if (!(textKey in this.textStates)) {\n      this.textStates[textKey] = {\n        font: textState.font,\n        textAlign: textState.textAlign || defaultTextAlign,\n        justify: textState.justify,\n        textBaseline: textState.textBaseline || defaultTextBaseline,\n        scale: textState.scale,\n      };\n    }\n    const fillKey = this.fillKey_;\n    if (fillState) {\n      if (!(fillKey in this.fillStates)) {\n        this.fillStates[fillKey] = {\n          fillStyle: fillState.fillStyle,\n        };\n      }\n    }\n  }\n\n  /**\n   * @private\n   * @param {number} begin Begin.\n   * @param {number} end End.\n   */\n  drawChars_(begin, end) {\n    const strokeState = this.textStrokeState_;\n    const textState = this.textState_;\n\n    const strokeKey = this.strokeKey_;\n    const textKey = this.textKey_;\n    const fillKey = this.fillKey_;\n    this.saveTextStates_();\n\n    const pixelRatio = this.pixelRatio;\n    const baseline = TEXT_ALIGN[textState.textBaseline];\n\n    const offsetY = this.textOffsetY_ * pixelRatio;\n    const text = this.text_;\n    const strokeWidth = strokeState\n      ? (strokeState.lineWidth * Math.abs(textState.scale[0])) / 2\n      : 0;\n\n    this.instructions.push([\n      CanvasInstruction.DRAW_CHARS,\n      begin,\n      end,\n      baseline,\n      textState.overflow,\n      fillKey,\n      textState.maxAngle,\n      pixelRatio,\n      offsetY,\n      strokeKey,\n      strokeWidth * pixelRatio,\n      text,\n      textKey,\n      1,\n    ]);\n    this.hitDetectionInstructions.push([\n      CanvasInstruction.DRAW_CHARS,\n      begin,\n      end,\n      baseline,\n      textState.overflow,\n      fillKey,\n      textState.maxAngle,\n      1,\n      offsetY,\n      strokeKey,\n      strokeWidth,\n      text,\n      textKey,\n      1 / pixelRatio,\n    ]);\n  }\n\n  /**\n   * @param {import(\"../../style/Text.js\").default} textStyle Text style.\n   * @param {Object} [sharedData] Shared data.\n   */\n  setTextStyle(textStyle, sharedData) {\n    let textState, fillState, strokeState;\n    if (!textStyle) {\n      this.text_ = '';\n    } else {\n      const textFillStyle = textStyle.getFill();\n      if (!textFillStyle) {\n        fillState = null;\n        this.textFillState_ = fillState;\n      } else {\n        fillState = this.textFillState_;\n        if (!fillState) {\n          fillState = /** @type {import(\"../canvas.js\").FillState} */ ({});\n          this.textFillState_ = fillState;\n        }\n        fillState.fillStyle = asColorLike(\n          textFillStyle.getColor() || defaultFillStyle\n        );\n      }\n\n      const textStrokeStyle = textStyle.getStroke();\n      if (!textStrokeStyle) {\n        strokeState = null;\n        this.textStrokeState_ = strokeState;\n      } else {\n        strokeState = this.textStrokeState_;\n        if (!strokeState) {\n          strokeState = /** @type {import(\"../canvas.js\").StrokeState} */ ({});\n          this.textStrokeState_ = strokeState;\n        }\n        const lineDash = textStrokeStyle.getLineDash();\n        const lineDashOffset = textStrokeStyle.getLineDashOffset();\n        const lineWidth = textStrokeStyle.getWidth();\n        const miterLimit = textStrokeStyle.getMiterLimit();\n        strokeState.lineCap = textStrokeStyle.getLineCap() || defaultLineCap;\n        strokeState.lineDash = lineDash ? lineDash.slice() : defaultLineDash;\n        strokeState.lineDashOffset =\n          lineDashOffset === undefined ? defaultLineDashOffset : lineDashOffset;\n        strokeState.lineJoin = textStrokeStyle.getLineJoin() || defaultLineJoin;\n        strokeState.lineWidth =\n          lineWidth === undefined ? defaultLineWidth : lineWidth;\n        strokeState.miterLimit =\n          miterLimit === undefined ? defaultMiterLimit : miterLimit;\n        strokeState.strokeStyle = asColorLike(\n          textStrokeStyle.getColor() || defaultStrokeStyle\n        );\n      }\n\n      textState = this.textState_;\n      const font = textStyle.getFont() || defaultFont;\n      registerFont(font);\n      const textScale = textStyle.getScaleArray();\n      textState.overflow = textStyle.getOverflow();\n      textState.font = font;\n      textState.maxAngle = textStyle.getMaxAngle();\n      textState.placement = textStyle.getPlacement();\n      textState.textAlign = textStyle.getTextAlign();\n      textState.repeat = textStyle.getRepeat();\n      textState.justify = textStyle.getJustify();\n      textState.textBaseline =\n        textStyle.getTextBaseline() || defaultTextBaseline;\n      textState.backgroundFill = textStyle.getBackgroundFill();\n      textState.backgroundStroke = textStyle.getBackgroundStroke();\n      textState.padding = textStyle.getPadding() || defaultPadding;\n      textState.scale = textScale === undefined ? [1, 1] : textScale;\n\n      const textOffsetX = textStyle.getOffsetX();\n      const textOffsetY = textStyle.getOffsetY();\n      const textRotateWithView = textStyle.getRotateWithView();\n      const textRotation = textStyle.getRotation();\n      this.text_ = textStyle.getText() || '';\n      this.textOffsetX_ = textOffsetX === undefined ? 0 : textOffsetX;\n      this.textOffsetY_ = textOffsetY === undefined ? 0 : textOffsetY;\n      this.textRotateWithView_ =\n        textRotateWithView === undefined ? false : textRotateWithView;\n      this.textRotation_ = textRotation === undefined ? 0 : textRotation;\n\n      this.strokeKey_ = strokeState\n        ? (typeof strokeState.strokeStyle == 'string'\n            ? strokeState.strokeStyle\n            : getUid(strokeState.strokeStyle)) +\n          strokeState.lineCap +\n          strokeState.lineDashOffset +\n          '|' +\n          strokeState.lineWidth +\n          strokeState.lineJoin +\n          strokeState.miterLimit +\n          '[' +\n          strokeState.lineDash.join() +\n          ']'\n        : '';\n      this.textKey_ =\n        textState.font +\n        textState.scale +\n        (textState.textAlign || '?') +\n        (textState.repeat || '?') +\n        (textState.justify || '?') +\n        (textState.textBaseline || '?');\n      this.fillKey_ = fillState\n        ? typeof fillState.fillStyle == 'string'\n          ? fillState.fillStyle\n          : '|' + getUid(fillState.fillStyle)\n        : '';\n    }\n    this.declutterImageWithText_ = sharedData;\n  }\n}\n\nexport default CanvasTextBuilder;\n","/**\n * @module ol/render/canvas/Immediate\n */\n// FIXME test, especially polygons with holes and multipolygons\n// FIXME need to handle large thick features (where pixel size matters)\n// FIXME add offset and end to ol/geom/flat/transform~transform2D?\n\nimport VectorContext from '../VectorContext.js';\nimport {asColorLike} from '../../colorlike.js';\nimport {\n  compose as composeTransform,\n  create as createTransform,\n} from '../../transform.js';\nimport {\n  defaultFillStyle,\n  defaultFont,\n  defaultLineCap,\n  defaultLineDash,\n  defaultLineDashOffset,\n  defaultLineJoin,\n  defaultLineWidth,\n  defaultMiterLimit,\n  defaultStrokeStyle,\n  defaultTextAlign,\n  defaultTextBaseline,\n} from '../canvas.js';\nimport {equals} from '../../array.js';\nimport {intersects} from '../../extent.js';\nimport {toFixed} from '../../math.js';\nimport {transform2D} from '../../geom/flat/transform.js';\nimport {transformGeom2D} from '../../geom/SimpleGeometry.js';\n\n/**\n * @classdesc\n * A concrete subclass of {@link module:ol/render/VectorContext~VectorContext} that implements\n * direct rendering of features and geometries to an HTML5 Canvas context.\n * Instances of this class are created internally by the library and\n * provided to application code as vectorContext member of the\n * {@link module:ol/render/Event~RenderEvent} object associated with postcompose, precompose and\n * render events emitted by layers and maps.\n */\nclass CanvasImmediateRenderer extends VectorContext {\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../../extent.js\").Extent} extent Extent.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @param {number} viewRotation View rotation.\n   * @param {number} [squaredTolerance] Optional squared tolerance for simplification.\n   * @param {import(\"../../proj.js\").TransformFunction} [userTransform] Transform from user to view projection.\n   */\n  constructor(\n    context,\n    pixelRatio,\n    extent,\n    transform,\n    viewRotation,\n    squaredTolerance,\n    userTransform\n  ) {\n    super();\n\n    /**\n     * @private\n     * @type {CanvasRenderingContext2D}\n     */\n    this.context_ = context;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = pixelRatio;\n\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.extent_ = extent;\n\n    /**\n     * @private\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.transform_ = transform;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.transformRotation_ = transform\n      ? toFixed(Math.atan2(transform[1], transform[0]), 10)\n      : 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.viewRotation_ = viewRotation;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.squaredTolerance_ = squaredTolerance;\n\n    /**\n     * @private\n     * @type {import(\"../../proj.js\").TransformFunction}\n     */\n    this.userTransform_ = userTransform;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").FillState}\n     */\n    this.contextFillState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").StrokeState}\n     */\n    this.contextStrokeState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").TextState}\n     */\n    this.contextTextState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").FillState}\n     */\n    this.fillState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").StrokeState}\n     */\n    this.strokeState_ = null;\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement}\n     */\n    this.image_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageAnchorX_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageAnchorY_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageHeight_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageOpacity_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageOriginX_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageOriginY_ = 0;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.imageRotateWithView_ = false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageRotation_ = 0;\n\n    /**\n     * @private\n     * @type {import(\"../../size.js\").Size}\n     */\n    this.imageScale_ = [0, 0];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageWidth_ = 0;\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.text_ = '';\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textOffsetX_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textOffsetY_ = 0;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.textRotateWithView_ = false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textRotation_ = 0;\n\n    /**\n     * @private\n     * @type {import(\"../../size.js\").Size}\n     */\n    this.textScale_ = [0, 0];\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").FillState}\n     */\n    this.textFillState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").StrokeState}\n     */\n    this.textStrokeState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").TextState}\n     */\n    this.textState_ = null;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.pixelCoordinates_ = [];\n\n    /**\n     * @private\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.tmpLocalTransform_ = createTransform();\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @private\n   */\n  drawImages_(flatCoordinates, offset, end, stride) {\n    if (!this.image_) {\n      return;\n    }\n    const pixelCoordinates = transform2D(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      this.transform_,\n      this.pixelCoordinates_\n    );\n    const context = this.context_;\n    const localTransform = this.tmpLocalTransform_;\n    const alpha = context.globalAlpha;\n    if (this.imageOpacity_ != 1) {\n      context.globalAlpha = alpha * this.imageOpacity_;\n    }\n    let rotation = this.imageRotation_;\n    if (this.transformRotation_ === 0) {\n      rotation -= this.viewRotation_;\n    }\n    if (this.imageRotateWithView_) {\n      rotation += this.viewRotation_;\n    }\n    for (let i = 0, ii = pixelCoordinates.length; i < ii; i += 2) {\n      const x = pixelCoordinates[i] - this.imageAnchorX_;\n      const y = pixelCoordinates[i + 1] - this.imageAnchorY_;\n      if (\n        rotation !== 0 ||\n        this.imageScale_[0] != 1 ||\n        this.imageScale_[1] != 1\n      ) {\n        const centerX = x + this.imageAnchorX_;\n        const centerY = y + this.imageAnchorY_;\n        composeTransform(\n          localTransform,\n          centerX,\n          centerY,\n          1,\n          1,\n          rotation,\n          -centerX,\n          -centerY\n        );\n        context.setTransform.apply(context, localTransform);\n        context.translate(centerX, centerY);\n        context.scale(this.imageScale_[0], this.imageScale_[1]);\n        context.drawImage(\n          this.image_,\n          this.imageOriginX_,\n          this.imageOriginY_,\n          this.imageWidth_,\n          this.imageHeight_,\n          -this.imageAnchorX_,\n          -this.imageAnchorY_,\n          this.imageWidth_,\n          this.imageHeight_\n        );\n        context.setTransform(1, 0, 0, 1, 0, 0);\n      } else {\n        context.drawImage(\n          this.image_,\n          this.imageOriginX_,\n          this.imageOriginY_,\n          this.imageWidth_,\n          this.imageHeight_,\n          x,\n          y,\n          this.imageWidth_,\n          this.imageHeight_\n        );\n      }\n    }\n    if (this.imageOpacity_ != 1) {\n      context.globalAlpha = alpha;\n    }\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @private\n   */\n  drawText_(flatCoordinates, offset, end, stride) {\n    if (!this.textState_ || this.text_ === '') {\n      return;\n    }\n    if (this.textFillState_) {\n      this.setContextFillState_(this.textFillState_);\n    }\n    if (this.textStrokeState_) {\n      this.setContextStrokeState_(this.textStrokeState_);\n    }\n    this.setContextTextState_(this.textState_);\n    const pixelCoordinates = transform2D(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      this.transform_,\n      this.pixelCoordinates_\n    );\n    const context = this.context_;\n    let rotation = this.textRotation_;\n    if (this.transformRotation_ === 0) {\n      rotation -= this.viewRotation_;\n    }\n    if (this.textRotateWithView_) {\n      rotation += this.viewRotation_;\n    }\n    for (; offset < end; offset += stride) {\n      const x = pixelCoordinates[offset] + this.textOffsetX_;\n      const y = pixelCoordinates[offset + 1] + this.textOffsetY_;\n      if (\n        rotation !== 0 ||\n        this.textScale_[0] != 1 ||\n        this.textScale_[1] != 1\n      ) {\n        context.translate(x - this.textOffsetX_, y - this.textOffsetY_);\n        context.rotate(rotation);\n        context.translate(this.textOffsetX_, this.textOffsetY_);\n        context.scale(this.textScale_[0], this.textScale_[1]);\n        if (this.textStrokeState_) {\n          context.strokeText(this.text_, 0, 0);\n        }\n        if (this.textFillState_) {\n          context.fillText(this.text_, 0, 0);\n        }\n        context.setTransform(1, 0, 0, 1, 0, 0);\n      } else {\n        if (this.textStrokeState_) {\n          context.strokeText(this.text_, x, y);\n        }\n        if (this.textFillState_) {\n          context.fillText(this.text_, x, y);\n        }\n      }\n    }\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @param {boolean} close Close.\n   * @private\n   * @return {number} end End.\n   */\n  moveToLineTo_(flatCoordinates, offset, end, stride, close) {\n    const context = this.context_;\n    const pixelCoordinates = transform2D(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      this.transform_,\n      this.pixelCoordinates_\n    );\n    context.moveTo(pixelCoordinates[0], pixelCoordinates[1]);\n    let length = pixelCoordinates.length;\n    if (close) {\n      length -= 2;\n    }\n    for (let i = 2; i < length; i += 2) {\n      context.lineTo(pixelCoordinates[i], pixelCoordinates[i + 1]);\n    }\n    if (close) {\n      context.closePath();\n    }\n    return end;\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {Array<number>} ends Ends.\n   * @param {number} stride Stride.\n   * @private\n   * @return {number} End.\n   */\n  drawRings_(flatCoordinates, offset, ends, stride) {\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\n      offset = this.moveToLineTo_(\n        flatCoordinates,\n        offset,\n        ends[i],\n        stride,\n        true\n      );\n    }\n    return offset;\n  }\n\n  /**\n   * Render a circle geometry into the canvas.  Rendering is immediate and uses\n   * the current fill and stroke styles.\n   *\n   * @param {import(\"../../geom/Circle.js\").default} geometry Circle geometry.\n   * @api\n   */\n  drawCircle(geometry) {\n    if (!intersects(this.extent_, geometry.getExtent())) {\n      return;\n    }\n    if (this.fillState_ || this.strokeState_) {\n      if (this.fillState_) {\n        this.setContextFillState_(this.fillState_);\n      }\n      if (this.strokeState_) {\n        this.setContextStrokeState_(this.strokeState_);\n      }\n      const pixelCoordinates = transformGeom2D(\n        geometry,\n        this.transform_,\n        this.pixelCoordinates_\n      );\n      const dx = pixelCoordinates[2] - pixelCoordinates[0];\n      const dy = pixelCoordinates[3] - pixelCoordinates[1];\n      const radius = Math.sqrt(dx * dx + dy * dy);\n      const context = this.context_;\n      context.beginPath();\n      context.arc(\n        pixelCoordinates[0],\n        pixelCoordinates[1],\n        radius,\n        0,\n        2 * Math.PI\n      );\n      if (this.fillState_) {\n        context.fill();\n      }\n      if (this.strokeState_) {\n        context.stroke();\n      }\n    }\n    if (this.text_ !== '') {\n      this.drawText_(geometry.getCenter(), 0, 2, 2);\n    }\n  }\n\n  /**\n   * Set the rendering style.  Note that since this is an immediate rendering API,\n   * any `zIndex` on the provided style will be ignored.\n   *\n   * @param {import(\"../../style/Style.js\").default} style The rendering style.\n   * @api\n   */\n  setStyle(style) {\n    this.setFillStrokeStyle(style.getFill(), style.getStroke());\n    this.setImageStyle(style.getImage());\n    this.setTextStyle(style.getText());\n  }\n\n  /**\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   */\n  setTransform(transform) {\n    this.transform_ = transform;\n  }\n\n  /**\n   * Render a geometry into the canvas.  Call\n   * {@link module:ol/render/canvas/Immediate~CanvasImmediateRenderer#setStyle renderer.setStyle()} first to set the rendering style.\n   *\n   * @param {import(\"../../geom/Geometry.js\").default|import(\"../Feature.js\").default} geometry The geometry to render.\n   * @api\n   */\n  drawGeometry(geometry) {\n    const type = geometry.getType();\n    switch (type) {\n      case 'Point':\n        this.drawPoint(\n          /** @type {import(\"../../geom/Point.js\").default} */ (geometry)\n        );\n        break;\n      case 'LineString':\n        this.drawLineString(\n          /** @type {import(\"../../geom/LineString.js\").default} */ (geometry)\n        );\n        break;\n      case 'Polygon':\n        this.drawPolygon(\n          /** @type {import(\"../../geom/Polygon.js\").default} */ (geometry)\n        );\n        break;\n      case 'MultiPoint':\n        this.drawMultiPoint(\n          /** @type {import(\"../../geom/MultiPoint.js\").default} */ (geometry)\n        );\n        break;\n      case 'MultiLineString':\n        this.drawMultiLineString(\n          /** @type {import(\"../../geom/MultiLineString.js\").default} */ (\n            geometry\n          )\n        );\n        break;\n      case 'MultiPolygon':\n        this.drawMultiPolygon(\n          /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (geometry)\n        );\n        break;\n      case 'GeometryCollection':\n        this.drawGeometryCollection(\n          /** @type {import(\"../../geom/GeometryCollection.js\").default} */ (\n            geometry\n          )\n        );\n        break;\n      case 'Circle':\n        this.drawCircle(\n          /** @type {import(\"../../geom/Circle.js\").default} */ (geometry)\n        );\n        break;\n      default:\n    }\n  }\n\n  /**\n   * Render a feature into the canvas.  Note that any `zIndex` on the provided\n   * style will be ignored - features are rendered immediately in the order that\n   * this method is called.  If you need `zIndex` support, you should be using an\n   * {@link module:ol/layer/Vector~VectorLayer} instead.\n   *\n   * @param {import(\"../../Feature.js\").default} feature Feature.\n   * @param {import(\"../../style/Style.js\").default} style Style.\n   * @api\n   */\n  drawFeature(feature, style) {\n    const geometry = style.getGeometryFunction()(feature);\n    if (!geometry || !intersects(this.extent_, geometry.getExtent())) {\n      return;\n    }\n    this.setStyle(style);\n    this.drawGeometry(geometry);\n  }\n\n  /**\n   * Render a GeometryCollection to the canvas.  Rendering is immediate and\n   * uses the current styles appropriate for each geometry in the collection.\n   *\n   * @param {import(\"../../geom/GeometryCollection.js\").default} geometry Geometry collection.\n   */\n  drawGeometryCollection(geometry) {\n    const geometries = geometry.getGeometriesArray();\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      this.drawGeometry(geometries[i]);\n    }\n  }\n\n  /**\n   * Render a Point geometry into the canvas.  Rendering is immediate and uses\n   * the current style.\n   *\n   * @param {import(\"../../geom/Point.js\").default|import(\"../Feature.js\").default} geometry Point geometry.\n   */\n  drawPoint(geometry) {\n    if (this.squaredTolerance_) {\n      geometry = /** @type {import(\"../../geom/Point.js\").default} */ (\n        geometry.simplifyTransformed(\n          this.squaredTolerance_,\n          this.userTransform_\n        )\n      );\n    }\n    const flatCoordinates = geometry.getFlatCoordinates();\n    const stride = geometry.getStride();\n    if (this.image_) {\n      this.drawImages_(flatCoordinates, 0, flatCoordinates.length, stride);\n    }\n    if (this.text_ !== '') {\n      this.drawText_(flatCoordinates, 0, flatCoordinates.length, stride);\n    }\n  }\n\n  /**\n   * Render a MultiPoint geometry  into the canvas.  Rendering is immediate and\n   * uses the current style.\n   *\n   * @param {import(\"../../geom/MultiPoint.js\").default|import(\"../Feature.js\").default} geometry MultiPoint geometry.\n   */\n  drawMultiPoint(geometry) {\n    if (this.squaredTolerance_) {\n      geometry = /** @type {import(\"../../geom/MultiPoint.js\").default} */ (\n        geometry.simplifyTransformed(\n          this.squaredTolerance_,\n          this.userTransform_\n        )\n      );\n    }\n    const flatCoordinates = geometry.getFlatCoordinates();\n    const stride = geometry.getStride();\n    if (this.image_) {\n      this.drawImages_(flatCoordinates, 0, flatCoordinates.length, stride);\n    }\n    if (this.text_ !== '') {\n      this.drawText_(flatCoordinates, 0, flatCoordinates.length, stride);\n    }\n  }\n\n  /**\n   * Render a LineString into the canvas.  Rendering is immediate and uses\n   * the current style.\n   *\n   * @param {import(\"../../geom/LineString.js\").default|import(\"../Feature.js\").default} geometry LineString geometry.\n   */\n  drawLineString(geometry) {\n    if (this.squaredTolerance_) {\n      geometry = /** @type {import(\"../../geom/LineString.js\").default} */ (\n        geometry.simplifyTransformed(\n          this.squaredTolerance_,\n          this.userTransform_\n        )\n      );\n    }\n    if (!intersects(this.extent_, geometry.getExtent())) {\n      return;\n    }\n    if (this.strokeState_) {\n      this.setContextStrokeState_(this.strokeState_);\n      const context = this.context_;\n      const flatCoordinates = geometry.getFlatCoordinates();\n      context.beginPath();\n      this.moveToLineTo_(\n        flatCoordinates,\n        0,\n        flatCoordinates.length,\n        geometry.getStride(),\n        false\n      );\n      context.stroke();\n    }\n    if (this.text_ !== '') {\n      const flatMidpoint = geometry.getFlatMidpoint();\n      this.drawText_(flatMidpoint, 0, 2, 2);\n    }\n  }\n\n  /**\n   * Render a MultiLineString geometry into the canvas.  Rendering is immediate\n   * and uses the current style.\n   *\n   * @param {import(\"../../geom/MultiLineString.js\").default|import(\"../Feature.js\").default} geometry MultiLineString geometry.\n   */\n  drawMultiLineString(geometry) {\n    if (this.squaredTolerance_) {\n      geometry =\n        /** @type {import(\"../../geom/MultiLineString.js\").default} */ (\n          geometry.simplifyTransformed(\n            this.squaredTolerance_,\n            this.userTransform_\n          )\n        );\n    }\n    const geometryExtent = geometry.getExtent();\n    if (!intersects(this.extent_, geometryExtent)) {\n      return;\n    }\n    if (this.strokeState_) {\n      this.setContextStrokeState_(this.strokeState_);\n      const context = this.context_;\n      const flatCoordinates = geometry.getFlatCoordinates();\n      let offset = 0;\n      const ends = /** @type {Array<number>} */ (geometry.getEnds());\n      const stride = geometry.getStride();\n      context.beginPath();\n      for (let i = 0, ii = ends.length; i < ii; ++i) {\n        offset = this.moveToLineTo_(\n          flatCoordinates,\n          offset,\n          ends[i],\n          stride,\n          false\n        );\n      }\n      context.stroke();\n    }\n    if (this.text_ !== '') {\n      const flatMidpoints = geometry.getFlatMidpoints();\n      this.drawText_(flatMidpoints, 0, flatMidpoints.length, 2);\n    }\n  }\n\n  /**\n   * Render a Polygon geometry into the canvas.  Rendering is immediate and uses\n   * the current style.\n   *\n   * @param {import(\"../../geom/Polygon.js\").default|import(\"../Feature.js\").default} geometry Polygon geometry.\n   */\n  drawPolygon(geometry) {\n    if (this.squaredTolerance_) {\n      geometry = /** @type {import(\"../../geom/Polygon.js\").default} */ (\n        geometry.simplifyTransformed(\n          this.squaredTolerance_,\n          this.userTransform_\n        )\n      );\n    }\n    if (!intersects(this.extent_, geometry.getExtent())) {\n      return;\n    }\n    if (this.strokeState_ || this.fillState_) {\n      if (this.fillState_) {\n        this.setContextFillState_(this.fillState_);\n      }\n      if (this.strokeState_) {\n        this.setContextStrokeState_(this.strokeState_);\n      }\n      const context = this.context_;\n      context.beginPath();\n      this.drawRings_(\n        geometry.getOrientedFlatCoordinates(),\n        0,\n        /** @type {Array<number>} */ (geometry.getEnds()),\n        geometry.getStride()\n      );\n      if (this.fillState_) {\n        context.fill();\n      }\n      if (this.strokeState_) {\n        context.stroke();\n      }\n    }\n    if (this.text_ !== '') {\n      const flatInteriorPoint = geometry.getFlatInteriorPoint();\n      this.drawText_(flatInteriorPoint, 0, 2, 2);\n    }\n  }\n\n  /**\n   * Render MultiPolygon geometry into the canvas.  Rendering is immediate and\n   * uses the current style.\n   * @param {import(\"../../geom/MultiPolygon.js\").default} geometry MultiPolygon geometry.\n   */\n  drawMultiPolygon(geometry) {\n    if (this.squaredTolerance_) {\n      geometry = /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (\n        geometry.simplifyTransformed(\n          this.squaredTolerance_,\n          this.userTransform_\n        )\n      );\n    }\n    if (!intersects(this.extent_, geometry.getExtent())) {\n      return;\n    }\n    if (this.strokeState_ || this.fillState_) {\n      if (this.fillState_) {\n        this.setContextFillState_(this.fillState_);\n      }\n      if (this.strokeState_) {\n        this.setContextStrokeState_(this.strokeState_);\n      }\n      const context = this.context_;\n      const flatCoordinates = geometry.getOrientedFlatCoordinates();\n      let offset = 0;\n      const endss = geometry.getEndss();\n      const stride = geometry.getStride();\n      context.beginPath();\n      for (let i = 0, ii = endss.length; i < ii; ++i) {\n        const ends = endss[i];\n        offset = this.drawRings_(flatCoordinates, offset, ends, stride);\n      }\n      if (this.fillState_) {\n        context.fill();\n      }\n      if (this.strokeState_) {\n        context.stroke();\n      }\n    }\n    if (this.text_ !== '') {\n      const flatInteriorPoints = geometry.getFlatInteriorPoints();\n      this.drawText_(flatInteriorPoints, 0, flatInteriorPoints.length, 2);\n    }\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillState} fillState Fill state.\n   * @private\n   */\n  setContextFillState_(fillState) {\n    const context = this.context_;\n    const contextFillState = this.contextFillState_;\n    if (!contextFillState) {\n      context.fillStyle = fillState.fillStyle;\n      this.contextFillState_ = {\n        fillStyle: fillState.fillStyle,\n      };\n    } else {\n      if (contextFillState.fillStyle != fillState.fillStyle) {\n        contextFillState.fillStyle = fillState.fillStyle;\n        context.fillStyle = fillState.fillStyle;\n      }\n    }\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").StrokeState} strokeState Stroke state.\n   * @private\n   */\n  setContextStrokeState_(strokeState) {\n    const context = this.context_;\n    const contextStrokeState = this.contextStrokeState_;\n    if (!contextStrokeState) {\n      context.lineCap = strokeState.lineCap;\n      context.setLineDash(strokeState.lineDash);\n      context.lineDashOffset = strokeState.lineDashOffset;\n      context.lineJoin = strokeState.lineJoin;\n      context.lineWidth = strokeState.lineWidth;\n      context.miterLimit = strokeState.miterLimit;\n      context.strokeStyle = strokeState.strokeStyle;\n      this.contextStrokeState_ = {\n        lineCap: strokeState.lineCap,\n        lineDash: strokeState.lineDash,\n        lineDashOffset: strokeState.lineDashOffset,\n        lineJoin: strokeState.lineJoin,\n        lineWidth: strokeState.lineWidth,\n        miterLimit: strokeState.miterLimit,\n        strokeStyle: strokeState.strokeStyle,\n      };\n    } else {\n      if (contextStrokeState.lineCap != strokeState.lineCap) {\n        contextStrokeState.lineCap = strokeState.lineCap;\n        context.lineCap = strokeState.lineCap;\n      }\n      if (!equals(contextStrokeState.lineDash, strokeState.lineDash)) {\n        context.setLineDash(\n          (contextStrokeState.lineDash = strokeState.lineDash)\n        );\n      }\n      if (contextStrokeState.lineDashOffset != strokeState.lineDashOffset) {\n        contextStrokeState.lineDashOffset = strokeState.lineDashOffset;\n        context.lineDashOffset = strokeState.lineDashOffset;\n      }\n      if (contextStrokeState.lineJoin != strokeState.lineJoin) {\n        contextStrokeState.lineJoin = strokeState.lineJoin;\n        context.lineJoin = strokeState.lineJoin;\n      }\n      if (contextStrokeState.lineWidth != strokeState.lineWidth) {\n        contextStrokeState.lineWidth = strokeState.lineWidth;\n        context.lineWidth = strokeState.lineWidth;\n      }\n      if (contextStrokeState.miterLimit != strokeState.miterLimit) {\n        contextStrokeState.miterLimit = strokeState.miterLimit;\n        context.miterLimit = strokeState.miterLimit;\n      }\n      if (contextStrokeState.strokeStyle != strokeState.strokeStyle) {\n        contextStrokeState.strokeStyle = strokeState.strokeStyle;\n        context.strokeStyle = strokeState.strokeStyle;\n      }\n    }\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").TextState} textState Text state.\n   * @private\n   */\n  setContextTextState_(textState) {\n    const context = this.context_;\n    const contextTextState = this.contextTextState_;\n    const textAlign = textState.textAlign\n      ? textState.textAlign\n      : defaultTextAlign;\n    if (!contextTextState) {\n      context.font = textState.font;\n      context.textAlign = textAlign;\n      context.textBaseline = textState.textBaseline;\n      this.contextTextState_ = {\n        font: textState.font,\n        textAlign: textAlign,\n        textBaseline: textState.textBaseline,\n      };\n    } else {\n      if (contextTextState.font != textState.font) {\n        contextTextState.font = textState.font;\n        context.font = textState.font;\n      }\n      if (contextTextState.textAlign != textAlign) {\n        contextTextState.textAlign = textAlign;\n        context.textAlign = textAlign;\n      }\n      if (contextTextState.textBaseline != textState.textBaseline) {\n        contextTextState.textBaseline = textState.textBaseline;\n        context.textBaseline = textState.textBaseline;\n      }\n    }\n  }\n\n  /**\n   * Set the fill and stroke style for subsequent draw operations.  To clear\n   * either fill or stroke styles, pass null for the appropriate parameter.\n   *\n   * @param {import(\"../../style/Fill.js\").default} fillStyle Fill style.\n   * @param {import(\"../../style/Stroke.js\").default} strokeStyle Stroke style.\n   */\n  setFillStrokeStyle(fillStyle, strokeStyle) {\n    if (!fillStyle) {\n      this.fillState_ = null;\n    } else {\n      const fillStyleColor = fillStyle.getColor();\n      this.fillState_ = {\n        fillStyle: asColorLike(\n          fillStyleColor ? fillStyleColor : defaultFillStyle\n        ),\n      };\n    }\n    if (!strokeStyle) {\n      this.strokeState_ = null;\n    } else {\n      const strokeStyleColor = strokeStyle.getColor();\n      const strokeStyleLineCap = strokeStyle.getLineCap();\n      const strokeStyleLineDash = strokeStyle.getLineDash();\n      const strokeStyleLineDashOffset = strokeStyle.getLineDashOffset();\n      const strokeStyleLineJoin = strokeStyle.getLineJoin();\n      const strokeStyleWidth = strokeStyle.getWidth();\n      const strokeStyleMiterLimit = strokeStyle.getMiterLimit();\n      const lineDash = strokeStyleLineDash\n        ? strokeStyleLineDash\n        : defaultLineDash;\n      this.strokeState_ = {\n        lineCap:\n          strokeStyleLineCap !== undefined\n            ? strokeStyleLineCap\n            : defaultLineCap,\n        lineDash:\n          this.pixelRatio_ === 1\n            ? lineDash\n            : lineDash.map((n) => n * this.pixelRatio_),\n        lineDashOffset:\n          (strokeStyleLineDashOffset\n            ? strokeStyleLineDashOffset\n            : defaultLineDashOffset) * this.pixelRatio_,\n        lineJoin:\n          strokeStyleLineJoin !== undefined\n            ? strokeStyleLineJoin\n            : defaultLineJoin,\n        lineWidth:\n          (strokeStyleWidth !== undefined\n            ? strokeStyleWidth\n            : defaultLineWidth) * this.pixelRatio_,\n        miterLimit:\n          strokeStyleMiterLimit !== undefined\n            ? strokeStyleMiterLimit\n            : defaultMiterLimit,\n        strokeStyle: asColorLike(\n          strokeStyleColor ? strokeStyleColor : defaultStrokeStyle\n        ),\n      };\n    }\n  }\n\n  /**\n   * Set the image style for subsequent draw operations.  Pass null to remove\n   * the image style.\n   *\n   * @param {import(\"../../style/Image.js\").default} imageStyle Image style.\n   */\n  setImageStyle(imageStyle) {\n    let imageSize;\n    if (!imageStyle || !(imageSize = imageStyle.getSize())) {\n      this.image_ = null;\n      return;\n    }\n    const imagePixelRatio = imageStyle.getPixelRatio(this.pixelRatio_);\n    const imageAnchor = imageStyle.getAnchor();\n    const imageOrigin = imageStyle.getOrigin();\n    this.image_ = imageStyle.getImage(this.pixelRatio_);\n    this.imageAnchorX_ = imageAnchor[0] * imagePixelRatio;\n    this.imageAnchorY_ = imageAnchor[1] * imagePixelRatio;\n    this.imageHeight_ = imageSize[1] * imagePixelRatio;\n    this.imageOpacity_ = imageStyle.getOpacity();\n    this.imageOriginX_ = imageOrigin[0];\n    this.imageOriginY_ = imageOrigin[1];\n    this.imageRotateWithView_ = imageStyle.getRotateWithView();\n    this.imageRotation_ = imageStyle.getRotation();\n    const imageScale = imageStyle.getScaleArray();\n    this.imageScale_ = [\n      (imageScale[0] * this.pixelRatio_) / imagePixelRatio,\n      (imageScale[1] * this.pixelRatio_) / imagePixelRatio,\n    ];\n    this.imageWidth_ = imageSize[0] * imagePixelRatio;\n  }\n\n  /**\n   * Set the text style for subsequent draw operations.  Pass null to\n   * remove the text style.\n   *\n   * @param {import(\"../../style/Text.js\").default} textStyle Text style.\n   */\n  setTextStyle(textStyle) {\n    if (!textStyle) {\n      this.text_ = '';\n    } else {\n      const textFillStyle = textStyle.getFill();\n      if (!textFillStyle) {\n        this.textFillState_ = null;\n      } else {\n        const textFillStyleColor = textFillStyle.getColor();\n        this.textFillState_ = {\n          fillStyle: asColorLike(\n            textFillStyleColor ? textFillStyleColor : defaultFillStyle\n          ),\n        };\n      }\n      const textStrokeStyle = textStyle.getStroke();\n      if (!textStrokeStyle) {\n        this.textStrokeState_ = null;\n      } else {\n        const textStrokeStyleColor = textStrokeStyle.getColor();\n        const textStrokeStyleLineCap = textStrokeStyle.getLineCap();\n        const textStrokeStyleLineDash = textStrokeStyle.getLineDash();\n        const textStrokeStyleLineDashOffset =\n          textStrokeStyle.getLineDashOffset();\n        const textStrokeStyleLineJoin = textStrokeStyle.getLineJoin();\n        const textStrokeStyleWidth = textStrokeStyle.getWidth();\n        const textStrokeStyleMiterLimit = textStrokeStyle.getMiterLimit();\n        this.textStrokeState_ = {\n          lineCap:\n            textStrokeStyleLineCap !== undefined\n              ? textStrokeStyleLineCap\n              : defaultLineCap,\n          lineDash: textStrokeStyleLineDash\n            ? textStrokeStyleLineDash\n            : defaultLineDash,\n          lineDashOffset: textStrokeStyleLineDashOffset\n            ? textStrokeStyleLineDashOffset\n            : defaultLineDashOffset,\n          lineJoin:\n            textStrokeStyleLineJoin !== undefined\n              ? textStrokeStyleLineJoin\n              : defaultLineJoin,\n          lineWidth:\n            textStrokeStyleWidth !== undefined\n              ? textStrokeStyleWidth\n              : defaultLineWidth,\n          miterLimit:\n            textStrokeStyleMiterLimit !== undefined\n              ? textStrokeStyleMiterLimit\n              : defaultMiterLimit,\n          strokeStyle: asColorLike(\n            textStrokeStyleColor ? textStrokeStyleColor : defaultStrokeStyle\n          ),\n        };\n      }\n      const textFont = textStyle.getFont();\n      const textOffsetX = textStyle.getOffsetX();\n      const textOffsetY = textStyle.getOffsetY();\n      const textRotateWithView = textStyle.getRotateWithView();\n      const textRotation = textStyle.getRotation();\n      const textScale = textStyle.getScaleArray();\n      const textText = textStyle.getText();\n      const textTextAlign = textStyle.getTextAlign();\n      const textTextBaseline = textStyle.getTextBaseline();\n      this.textState_ = {\n        font: textFont !== undefined ? textFont : defaultFont,\n        textAlign:\n          textTextAlign !== undefined ? textTextAlign : defaultTextAlign,\n        textBaseline:\n          textTextBaseline !== undefined\n            ? textTextBaseline\n            : defaultTextBaseline,\n      };\n      this.text_ =\n        textText !== undefined\n          ? Array.isArray(textText)\n            ? textText.reduce((acc, t, i) => (acc += i % 2 ? ' ' : t), '')\n            : textText\n          : '';\n      this.textOffsetX_ =\n        textOffsetX !== undefined ? this.pixelRatio_ * textOffsetX : 0;\n      this.textOffsetY_ =\n        textOffsetY !== undefined ? this.pixelRatio_ * textOffsetY : 0;\n      this.textRotateWithView_ =\n        textRotateWithView !== undefined ? textRotateWithView : false;\n      this.textRotation_ = textRotation !== undefined ? textRotation : 0;\n      this.textScale_ = [\n        this.pixelRatio_ * textScale[0],\n        this.pixelRatio_ * textScale[1],\n      ];\n    }\n  }\n}\n\nexport default CanvasImmediateRenderer;\n","/**\n * @module ol/render/canvas/hitdetect\n */\n\nimport CanvasImmediateRenderer from './Immediate.js';\nimport {Icon} from '../../style.js';\nimport {ascending} from '../../array.js';\nimport {clamp} from '../../math.js';\nimport {createCanvasContext2D} from '../../dom.js';\nimport {intersects} from '../../extent.js';\n\nexport const HIT_DETECT_RESOLUTION = 0.5;\n\n/**\n * @param {import(\"../../size.js\").Size} size Canvas size in css pixels.\n * @param {Array<import(\"../../transform.js\").Transform>} transforms Transforms\n * for rendering features to all worlds of the viewport, from coordinates to css\n * pixels.\n * @param {Array<import(\"../../Feature.js\").FeatureLike>} features\n * Features to consider for hit detection.\n * @param {import(\"../../style/Style.js\").StyleFunction|undefined} styleFunction\n * Layer style function.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @param {number} resolution Resolution.\n * @param {number} rotation Rotation.\n * @return {ImageData} Hit detection image data.\n */\nexport function createHitDetectionImageData(\n  size,\n  transforms,\n  features,\n  styleFunction,\n  extent,\n  resolution,\n  rotation\n) {\n  const width = size[0] * HIT_DETECT_RESOLUTION;\n  const height = size[1] * HIT_DETECT_RESOLUTION;\n  const context = createCanvasContext2D(width, height);\n  context.imageSmoothingEnabled = false;\n  const canvas = context.canvas;\n  const renderer = new CanvasImmediateRenderer(\n    context,\n    HIT_DETECT_RESOLUTION,\n    extent,\n    null,\n    rotation\n  );\n  const featureCount = features.length;\n  // Stretch hit detection index to use the whole available color range\n  const indexFactor = Math.floor((256 * 256 * 256 - 1) / featureCount);\n  const featuresByZIndex = {};\n  for (let i = 1; i <= featureCount; ++i) {\n    const feature = features[i - 1];\n    const featureStyleFunction = feature.getStyleFunction() || styleFunction;\n    if (!styleFunction) {\n      continue;\n    }\n    let styles = featureStyleFunction(feature, resolution);\n    if (!styles) {\n      continue;\n    }\n    if (!Array.isArray(styles)) {\n      styles = [styles];\n    }\n    const index = i * indexFactor;\n    const color = index.toString(16).padStart(7, '#00000');\n    for (let j = 0, jj = styles.length; j < jj; ++j) {\n      const originalStyle = styles[j];\n      const geometry = originalStyle.getGeometryFunction()(feature);\n      if (!geometry || !intersects(extent, geometry.getExtent())) {\n        continue;\n      }\n      const style = originalStyle.clone();\n      const fill = style.getFill();\n      if (fill) {\n        fill.setColor(color);\n      }\n      const stroke = style.getStroke();\n      if (stroke) {\n        stroke.setColor(color);\n        stroke.setLineDash(null);\n      }\n      style.setText(undefined);\n      const image = originalStyle.getImage();\n      if (image && image.getOpacity() !== 0) {\n        const imgSize = image.getImageSize();\n        if (!imgSize) {\n          continue;\n        }\n\n        const imgContext = createCanvasContext2D(\n          imgSize[0],\n          imgSize[1],\n          undefined,\n          {alpha: false}\n        );\n        const img = imgContext.canvas;\n        imgContext.fillStyle = color;\n        imgContext.fillRect(0, 0, img.width, img.height);\n        style.setImage(\n          new Icon({\n            img: img,\n            imgSize: imgSize,\n            anchor: image.getAnchor(),\n            anchorXUnits: 'pixels',\n            anchorYUnits: 'pixels',\n            offset: image.getOrigin(),\n            opacity: 1,\n            size: image.getSize(),\n            scale: image.getScale(),\n            rotation: image.getRotation(),\n            rotateWithView: image.getRotateWithView(),\n          })\n        );\n      }\n      const zIndex = style.getZIndex() || 0;\n      let byGeometryType = featuresByZIndex[zIndex];\n      if (!byGeometryType) {\n        byGeometryType = {};\n        featuresByZIndex[zIndex] = byGeometryType;\n        byGeometryType['Polygon'] = [];\n        byGeometryType['Circle'] = [];\n        byGeometryType['LineString'] = [];\n        byGeometryType['Point'] = [];\n      }\n      const type = geometry.getType();\n      if (type === 'GeometryCollection') {\n        const geometries =\n          /** @type {import(\"../../geom/GeometryCollection.js\").default} */ (\n            geometry\n          ).getGeometriesArrayRecursive();\n        for (let i = 0, ii = geometries.length; i < ii; ++i) {\n          const geometry = geometries[i];\n          byGeometryType[geometry.getType().replace('Multi', '')].push(\n            geometry,\n            style\n          );\n        }\n      } else {\n        byGeometryType[type.replace('Multi', '')].push(geometry, style);\n      }\n    }\n  }\n\n  const zIndexKeys = Object.keys(featuresByZIndex).map(Number).sort(ascending);\n  for (let i = 0, ii = zIndexKeys.length; i < ii; ++i) {\n    const byGeometryType = featuresByZIndex[zIndexKeys[i]];\n    for (const type in byGeometryType) {\n      const geomAndStyle = byGeometryType[type];\n      for (let j = 0, jj = geomAndStyle.length; j < jj; j += 2) {\n        renderer.setStyle(geomAndStyle[j + 1]);\n        for (let k = 0, kk = transforms.length; k < kk; ++k) {\n          renderer.setTransform(transforms[k]);\n          renderer.drawGeometry(geomAndStyle[j]);\n        }\n      }\n    }\n  }\n  return context.getImageData(0, 0, canvas.width, canvas.height);\n}\n\n/**\n * @param {import(\"../../pixel\").Pixel} pixel Pixel coordinate on the hit\n * detection canvas in css pixels.\n * @param {Array<F>} features Features. Has to\n * match the `features` array that was passed to `createHitDetectionImageData()`.\n * @param {ImageData} imageData Hit detection image data generated by\n * `createHitDetectionImageData()`.\n * @return {Array<F>} Features.\n * @template {import(\"../../Feature.js\").FeatureLike} F\n */\nexport function hitDetect(pixel, features, imageData) {\n  const resultFeatures = [];\n  if (imageData) {\n    const x = Math.floor(Math.round(pixel[0]) * HIT_DETECT_RESOLUTION);\n    const y = Math.floor(Math.round(pixel[1]) * HIT_DETECT_RESOLUTION);\n    // The pixel coordinate is clamped down to the hit-detect canvas' size to account\n    // for browsers returning coordinates slightly larger than the actual canvas size\n    // due to a non-integer pixel ratio.\n    const index =\n      (clamp(x, 0, imageData.width - 1) +\n        clamp(y, 0, imageData.height - 1) * imageData.width) *\n      4;\n    const r = imageData.data[index];\n    const g = imageData.data[index + 1];\n    const b = imageData.data[index + 2];\n    const i = b + 256 * (g + 256 * r);\n    const indexFactor = Math.floor((256 * 256 * 256 - 1) / features.length);\n    if (i && i % indexFactor === 0) {\n      resultFeatures.push(features[i / indexFactor - 1]);\n    }\n  }\n  // @ts-ignore Features are copied from `features` to `resultFeatures` so the type should be the same\n  return resultFeatures;\n}\n","/**\n * @module ol/renderer/Layer\n */\nimport EventType from '../events/EventType.js';\nimport ImageState from '../ImageState.js';\nimport Observable from '../Observable.js';\nimport {abstract} from '../util.js';\n\n/**\n * @template {import(\"../layer/Layer.js\").default} LayerType\n */\nclass LayerRenderer extends Observable {\n  /**\n   * @param {LayerType} layer Layer.\n   */\n  constructor(layer) {\n    super();\n\n    /**\n     * The renderer is initialized and ready to render.\n     * @type {boolean}\n     */\n    this.ready = true;\n\n    /** @private */\n    this.boundHandleImageChange_ = this.handleImageChange_.bind(this);\n\n    /**\n     * @protected\n     * @type {LayerType}\n     */\n    this.layer_ = layer;\n\n    /**\n     * @type {import(\"../render/canvas/ExecutorGroup\").default}\n     */\n    this.declutterExecutorGroup = null;\n  }\n\n  /**\n   * Asynchronous layer level hit detection.\n   * @param {import(\"../pixel.js\").Pixel} pixel Pixel.\n   * @return {Promise<Array<import(\"../Feature\").FeatureLike>>} Promise that resolves with\n   * an array of features.\n   */\n  getFeatures(pixel) {\n    return abstract();\n  }\n\n  /**\n   * @param {import(\"../pixel.js\").Pixel} pixel Pixel.\n   * @return {Uint8ClampedArray|Uint8Array|Float32Array|DataView|null} Pixel data.\n   */\n  getData(pixel) {\n    return null;\n  }\n\n  /**\n   * Determine whether render should be called.\n   * @abstract\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   * @return {boolean} Layer is ready to be rendered.\n   */\n  prepareFrame(frameState) {\n    return abstract();\n  }\n\n  /**\n   * Render the layer.\n   * @abstract\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   * @param {HTMLElement} target Target that may be used to render content to.\n   * @return {HTMLElement} The rendered element.\n   */\n  renderFrame(frameState, target) {\n    return abstract();\n  }\n\n  /**\n   * @param {Object<number, Object<string, import(\"../Tile.js\").default>>} tiles Lookup of loaded tiles by zoom level.\n   * @param {number} zoom Zoom level.\n   * @param {import(\"../Tile.js\").default} tile Tile.\n   * @return {boolean|void} If `false`, the tile will not be considered loaded.\n   */\n  loadedTileCallback(tiles, zoom, tile) {\n    if (!tiles[zoom]) {\n      tiles[zoom] = {};\n    }\n    tiles[zoom][tile.tileCoord.toString()] = tile;\n    return undefined;\n  }\n\n  /**\n   * Create a function that adds loaded tiles to the tile lookup.\n   * @param {import(\"../source/Tile.js\").default} source Tile source.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection of the tiles.\n   * @param {Object<number, Object<string, import(\"../Tile.js\").default>>} tiles Lookup of loaded tiles by zoom level.\n   * @return {function(number, import(\"../TileRange.js\").default):boolean} A function that can be\n   *     called with a zoom level and a tile range to add loaded tiles to the lookup.\n   * @protected\n   */\n  createLoadedTileFinder(source, projection, tiles) {\n    return (\n      /**\n       * @param {number} zoom Zoom level.\n       * @param {import(\"../TileRange.js\").default} tileRange Tile range.\n       * @return {boolean} The tile range is fully loaded.\n       */\n      (zoom, tileRange) => {\n        const callback = this.loadedTileCallback.bind(this, tiles, zoom);\n        return source.forEachLoadedTile(projection, zoom, tileRange, callback);\n      }\n    );\n  }\n  /**\n   * @abstract\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {import(\"./vector.js\").FeatureCallback<T>} callback Feature callback.\n   * @param {Array<import(\"./Map.js\").HitMatch<T>>} matches The hit detected matches with tolerance.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  forEachFeatureAtCoordinate(\n    coordinate,\n    frameState,\n    hitTolerance,\n    callback,\n    matches\n  ) {\n    return undefined;\n  }\n\n  /**\n   * @return {LayerType} Layer.\n   */\n  getLayer() {\n    return this.layer_;\n  }\n\n  /**\n   * Perform action necessary to get the layer rendered after new fonts have loaded\n   * @abstract\n   */\n  handleFontsChanged() {}\n\n  /**\n   * Handle changes in image state.\n   * @param {import(\"../events/Event.js\").default} event Image change event.\n   * @private\n   */\n  handleImageChange_(event) {\n    const image = /** @type {import(\"../Image.js\").default} */ (event.target);\n    if (image.getState() === ImageState.LOADED) {\n      this.renderIfReadyAndVisible();\n    }\n  }\n\n  /**\n   * Load the image if not already loaded, and register the image change\n   * listener if needed.\n   * @param {import(\"../ImageBase.js\").default} image Image.\n   * @return {boolean} `true` if the image is already loaded, `false` otherwise.\n   * @protected\n   */\n  loadImage(image) {\n    let imageState = image.getState();\n    if (imageState != ImageState.LOADED && imageState != ImageState.ERROR) {\n      image.addEventListener(EventType.CHANGE, this.boundHandleImageChange_);\n    }\n    if (imageState == ImageState.IDLE) {\n      image.load();\n      imageState = image.getState();\n    }\n    return imageState == ImageState.LOADED;\n  }\n\n  /**\n   * @protected\n   */\n  renderIfReadyAndVisible() {\n    const layer = this.getLayer();\n    if (layer && layer.getVisible() && layer.getSourceState() === 'ready') {\n      layer.changed();\n    }\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    delete this.layer_;\n    super.disposeInternal();\n  }\n}\n\nexport default LayerRenderer;\n","/**\n * @module ol/renderer/canvas/Layer\n */\nimport LayerRenderer from '../Layer.js';\nimport RenderEvent from '../../render/Event.js';\nimport RenderEventType from '../../render/EventType.js';\nimport {\n  apply as applyTransform,\n  compose as composeTransform,\n  create as createTransform,\n} from '../../transform.js';\nimport {asArray} from '../../color.js';\nimport {createCanvasContext2D} from '../../dom.js';\nimport {equals} from '../../array.js';\nimport {\n  getBottomLeft,\n  getBottomRight,\n  getTopLeft,\n  getTopRight,\n} from '../../extent.js';\n\n/**\n * @type {Array<HTMLCanvasElement>}\n */\nexport const canvasPool = [];\n\n/**\n * @type {CanvasRenderingContext2D}\n */\nlet pixelContext = null;\n\nfunction createPixelContext() {\n  pixelContext = createCanvasContext2D(1, 1, undefined, {\n    willReadFrequently: true,\n  });\n}\n\n/**\n * @abstract\n * @template {import(\"../../layer/Layer.js\").default} LayerType\n * @extends {LayerRenderer<LayerType>}\n */\nclass CanvasLayerRenderer extends LayerRenderer {\n  /**\n   * @param {LayerType} layer Layer.\n   */\n  constructor(layer) {\n    super(layer);\n\n    /**\n     * @protected\n     * @type {HTMLElement}\n     */\n    this.container = null;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.renderedResolution;\n\n    /**\n     * A temporary transform.  The values in this transform should only be used in a\n     * function that sets the values.\n     * @protected\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.tempTransform = createTransform();\n\n    /**\n     * The transform for rendered pixels to viewport CSS pixels.  This transform must\n     * be set when rendering a frame and may be used by other functions after rendering.\n     * @protected\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.pixelTransform = createTransform();\n\n    /**\n     * The transform for viewport CSS pixels to rendered pixels.  This transform must\n     * be set when rendering a frame and may be used by other functions after rendering.\n     * @protected\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.inversePixelTransform = createTransform();\n\n    /**\n     * @type {CanvasRenderingContext2D}\n     */\n    this.context = null;\n\n    /**\n     * @type {boolean}\n     */\n    this.containerReused = false;\n\n    /**\n     * @private\n     * @type {CanvasRenderingContext2D}\n     */\n    this.pixelContext_ = null;\n\n    /**\n     * @protected\n     * @type {import(\"../../Map.js\").FrameState|null}\n     */\n    this.frameState = null;\n  }\n\n  /**\n   * @param {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} image Image.\n   * @param {number} col The column index.\n   * @param {number} row The row index.\n   * @return {Uint8ClampedArray|null} The image data.\n   */\n  getImageData(image, col, row) {\n    if (!pixelContext) {\n      createPixelContext();\n    }\n    pixelContext.clearRect(0, 0, 1, 1);\n\n    let data;\n    try {\n      pixelContext.drawImage(image, col, row, 1, 1, 0, 0, 1, 1);\n      data = pixelContext.getImageData(0, 0, 1, 1).data;\n    } catch (err) {\n      pixelContext = null;\n      return null;\n    }\n    return data;\n  }\n\n  /**\n   * @param {import('../../Map.js').FrameState} frameState Frame state.\n   * @return {string} Background color.\n   */\n  getBackground(frameState) {\n    const layer = this.getLayer();\n    let background = layer.getBackground();\n    if (typeof background === 'function') {\n      background = background(frameState.viewState.resolution);\n    }\n    return background || undefined;\n  }\n\n  /**\n   * Get a rendering container from an existing target, if compatible.\n   * @param {HTMLElement} target Potential render target.\n   * @param {string} transform CSS Transform.\n   * @param {string} [backgroundColor] Background color.\n   */\n  useContainer(target, transform, backgroundColor) {\n    const layerClassName = this.getLayer().getClassName();\n    let container, context;\n    if (\n      target &&\n      target.className === layerClassName &&\n      (!backgroundColor ||\n        (target &&\n          target.style.backgroundColor &&\n          equals(\n            asArray(target.style.backgroundColor),\n            asArray(backgroundColor)\n          )))\n    ) {\n      const canvas = target.firstElementChild;\n      if (canvas instanceof HTMLCanvasElement) {\n        context = canvas.getContext('2d');\n      }\n    }\n    if (context && context.canvas.style.transform === transform) {\n      // Container of the previous layer renderer can be used.\n      this.container = target;\n      this.context = context;\n      this.containerReused = true;\n    } else if (this.containerReused) {\n      // Previously reused container cannot be used any more.\n      this.container = null;\n      this.context = null;\n      this.containerReused = false;\n    }\n    if (!this.container) {\n      container = document.createElement('div');\n      container.className = layerClassName;\n      let style = container.style;\n      style.position = 'absolute';\n      style.width = '100%';\n      style.height = '100%';\n      context = createCanvasContext2D();\n      const canvas = context.canvas;\n      container.appendChild(canvas);\n      style = canvas.style;\n      style.position = 'absolute';\n      style.left = '0';\n      style.transformOrigin = 'top left';\n      this.container = container;\n      this.context = context;\n    }\n    if (\n      !this.containerReused &&\n      backgroundColor &&\n      !this.container.style.backgroundColor\n    ) {\n      this.container.style.backgroundColor = backgroundColor;\n    }\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {import(\"../../extent.js\").Extent} extent Clip extent.\n   * @protected\n   */\n  clipUnrotated(context, frameState, extent) {\n    const topLeft = getTopLeft(extent);\n    const topRight = getTopRight(extent);\n    const bottomRight = getBottomRight(extent);\n    const bottomLeft = getBottomLeft(extent);\n\n    applyTransform(frameState.coordinateToPixelTransform, topLeft);\n    applyTransform(frameState.coordinateToPixelTransform, topRight);\n    applyTransform(frameState.coordinateToPixelTransform, bottomRight);\n    applyTransform(frameState.coordinateToPixelTransform, bottomLeft);\n\n    const inverted = this.inversePixelTransform;\n    applyTransform(inverted, topLeft);\n    applyTransform(inverted, topRight);\n    applyTransform(inverted, bottomRight);\n    applyTransform(inverted, bottomLeft);\n\n    context.save();\n    context.beginPath();\n    context.moveTo(Math.round(topLeft[0]), Math.round(topLeft[1]));\n    context.lineTo(Math.round(topRight[0]), Math.round(topRight[1]));\n    context.lineTo(Math.round(bottomRight[0]), Math.round(bottomRight[1]));\n    context.lineTo(Math.round(bottomLeft[0]), Math.round(bottomLeft[1]));\n    context.clip();\n  }\n\n  /**\n   * @param {import(\"../../render/EventType.js\").default} type Event type.\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @private\n   */\n  dispatchRenderEvent_(type, context, frameState) {\n    const layer = this.getLayer();\n    if (layer.hasListener(type)) {\n      const event = new RenderEvent(\n        type,\n        this.inversePixelTransform,\n        frameState,\n        context\n      );\n      layer.dispatchEvent(event);\n    }\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @protected\n   */\n  preRender(context, frameState) {\n    this.frameState = frameState;\n    this.dispatchRenderEvent_(RenderEventType.PRERENDER, context, frameState);\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @protected\n   */\n  postRender(context, frameState) {\n    this.dispatchRenderEvent_(RenderEventType.POSTRENDER, context, frameState);\n  }\n\n  /**\n   * Creates a transform for rendering to an element that will be rotated after rendering.\n   * @param {import(\"../../coordinate.js\").Coordinate} center Center.\n   * @param {number} resolution Resolution.\n   * @param {number} rotation Rotation.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {number} width Width of the rendered element (in pixels).\n   * @param {number} height Height of the rendered element (in pixels).\n   * @param {number} offsetX Offset on the x-axis in view coordinates.\n   * @protected\n   * @return {!import(\"../../transform.js\").Transform} Transform.\n   */\n  getRenderTransform(\n    center,\n    resolution,\n    rotation,\n    pixelRatio,\n    width,\n    height,\n    offsetX\n  ) {\n    const dx1 = width / 2;\n    const dy1 = height / 2;\n    const sx = pixelRatio / resolution;\n    const sy = -sx;\n    const dx2 = -center[0] + offsetX;\n    const dy2 = -center[1];\n    return composeTransform(\n      this.tempTransform,\n      dx1,\n      dy1,\n      sx,\n      sy,\n      -rotation,\n      dx2,\n      dy2\n    );\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    delete this.frameState;\n    super.disposeInternal();\n  }\n}\n\nexport default CanvasLayerRenderer;\n","/**\n * @module ol/renderer/canvas/TileLayer\n */\nimport CanvasLayerRenderer from './Layer.js';\nimport ImageTile from '../../ImageTile.js';\nimport ReprojTile from '../../reproj/Tile.js';\nimport TileRange from '../../TileRange.js';\nimport TileState from '../../TileState.js';\nimport {\n  apply as applyTransform,\n  compose as composeTransform,\n  makeInverse,\n  toString as toTransformString,\n} from '../../transform.js';\nimport {ascending} from '../../array.js';\nimport {\n  containsCoordinate,\n  createEmpty,\n  equals,\n  getHeight,\n  getIntersection,\n  getRotatedViewport,\n  getTopLeft,\n  getWidth,\n  intersects,\n} from '../../extent.js';\nimport {fromUserExtent} from '../../proj.js';\nimport {getUid} from '../../util.js';\nimport {toSize} from '../../size.js';\n\n/**\n * @classdesc\n * Canvas renderer for tile layers.\n * @api\n * @template {import(\"../../layer/Tile.js\").default<import(\"../../source/Tile.js\").default>|import(\"../../layer/VectorTile.js\").default} [LayerType=import(\"../../layer/Tile.js\").default<import(\"../../source/Tile.js\").default>|import(\"../../layer/VectorTile.js\").default]\n * @extends {CanvasLayerRenderer<LayerType>}\n */\nclass CanvasTileLayerRenderer extends CanvasLayerRenderer {\n  /**\n   * @param {LayerType} tileLayer Tile layer.\n   */\n  constructor(tileLayer) {\n    super(tileLayer);\n\n    /**\n     * Rendered extent has changed since the previous `renderFrame()` call\n     * @type {boolean}\n     */\n    this.extentChanged = true;\n\n    /**\n     * @private\n     * @type {?import(\"../../extent.js\").Extent}\n     */\n    this.renderedExtent_ = null;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.renderedPixelRatio;\n\n    /**\n     * @protected\n     * @type {import(\"../../proj/Projection.js\").default}\n     */\n    this.renderedProjection = null;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.renderedRevision;\n\n    /**\n     * @protected\n     * @type {!Array<import(\"../../Tile.js\").default>}\n     */\n    this.renderedTiles = [];\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.newTiles_ = false;\n\n    /**\n     * @protected\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.tmpExtent = createEmpty();\n\n    /**\n     * @private\n     * @type {import(\"../../TileRange.js\").default}\n     */\n    this.tmpTileRange_ = new TileRange(0, 0, 0, 0);\n  }\n\n  /**\n   * @protected\n   * @param {import(\"../../Tile.js\").default} tile Tile.\n   * @return {boolean} Tile is drawable.\n   */\n  isDrawableTile(tile) {\n    const tileLayer = this.getLayer();\n    const tileState = tile.getState();\n    const useInterimTilesOnError = tileLayer.getUseInterimTilesOnError();\n    return (\n      tileState == TileState.LOADED ||\n      tileState == TileState.EMPTY ||\n      (tileState == TileState.ERROR && !useInterimTilesOnError)\n    );\n  }\n\n  /**\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @return {!import(\"../../Tile.js\").default} Tile.\n   */\n  getTile(z, x, y, frameState) {\n    const pixelRatio = frameState.pixelRatio;\n    const projection = frameState.viewState.projection;\n    const tileLayer = this.getLayer();\n    const tileSource = tileLayer.getSource();\n    let tile = tileSource.getTile(z, x, y, pixelRatio, projection);\n    if (tile.getState() == TileState.ERROR) {\n      if (tileLayer.getUseInterimTilesOnError() && tileLayer.getPreload() > 0) {\n        // Preloaded tiles for lower resolutions might have finished loading.\n        this.newTiles_ = true;\n      }\n    }\n    if (!this.isDrawableTile(tile)) {\n      tile = tile.getInterimTile();\n    }\n    return tile;\n  }\n\n  /**\n   * @param {import(\"../../pixel.js\").Pixel} pixel Pixel.\n   * @return {Uint8ClampedArray} Data at the pixel location.\n   */\n  getData(pixel) {\n    const frameState = this.frameState;\n    if (!frameState) {\n      return null;\n    }\n\n    const layer = this.getLayer();\n    const coordinate = applyTransform(\n      frameState.pixelToCoordinateTransform,\n      pixel.slice()\n    );\n\n    const layerExtent = layer.getExtent();\n    if (layerExtent) {\n      if (!containsCoordinate(layerExtent, coordinate)) {\n        return null;\n      }\n    }\n\n    const pixelRatio = frameState.pixelRatio;\n    const projection = frameState.viewState.projection;\n    const viewState = frameState.viewState;\n    const source = layer.getRenderSource();\n    const tileGrid = source.getTileGridForProjection(viewState.projection);\n    const tilePixelRatio = source.getTilePixelRatio(frameState.pixelRatio);\n\n    for (\n      let z = tileGrid.getZForResolution(viewState.resolution);\n      z >= tileGrid.getMinZoom();\n      --z\n    ) {\n      const tileCoord = tileGrid.getTileCoordForCoordAndZ(coordinate, z);\n      const tile = source.getTile(\n        z,\n        tileCoord[1],\n        tileCoord[2],\n        pixelRatio,\n        projection\n      );\n      if (\n        !(tile instanceof ImageTile || tile instanceof ReprojTile) ||\n        (tile instanceof ReprojTile && tile.getState() === TileState.EMPTY)\n      ) {\n        return null;\n      }\n\n      if (tile.getState() !== TileState.LOADED) {\n        continue;\n      }\n\n      const tileOrigin = tileGrid.getOrigin(z);\n      const tileSize = toSize(tileGrid.getTileSize(z));\n      const tileResolution = tileGrid.getResolution(z);\n\n      const col = Math.floor(\n        tilePixelRatio *\n          ((coordinate[0] - tileOrigin[0]) / tileResolution -\n            tileCoord[1] * tileSize[0])\n      );\n\n      const row = Math.floor(\n        tilePixelRatio *\n          ((tileOrigin[1] - coordinate[1]) / tileResolution -\n            tileCoord[2] * tileSize[1])\n      );\n\n      const gutter = Math.round(\n        tilePixelRatio * source.getGutterForProjection(viewState.projection)\n      );\n\n      return this.getImageData(tile.getImage(), col + gutter, row + gutter);\n    }\n\n    return null;\n  }\n\n  /**\n   * @param {Object<number, Object<string, import(\"../../Tile.js\").default>>} tiles Lookup of loaded tiles by zoom level.\n   * @param {number} zoom Zoom level.\n   * @param {import(\"../../Tile.js\").default} tile Tile.\n   * @return {boolean|void} If `false`, the tile will not be considered loaded.\n   */\n  loadedTileCallback(tiles, zoom, tile) {\n    if (this.isDrawableTile(tile)) {\n      return super.loadedTileCallback(tiles, zoom, tile);\n    }\n    return false;\n  }\n\n  /**\n   * Determine whether render should be called.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @return {boolean} Layer is ready to be rendered.\n   */\n  prepareFrame(frameState) {\n    return !!this.getLayer().getSource();\n  }\n\n  /**\n   * Render the layer.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {HTMLElement} target Target that may be used to render content to.\n   * @return {HTMLElement} The rendered element.\n   */\n  renderFrame(frameState, target) {\n    const layerState = frameState.layerStatesArray[frameState.layerIndex];\n    const viewState = frameState.viewState;\n    const projection = viewState.projection;\n    const viewResolution = viewState.resolution;\n    const viewCenter = viewState.center;\n    const rotation = viewState.rotation;\n    const pixelRatio = frameState.pixelRatio;\n\n    const tileLayer = this.getLayer();\n    const tileSource = tileLayer.getSource();\n    const sourceRevision = tileSource.getRevision();\n    const tileGrid = tileSource.getTileGridForProjection(projection);\n    const z = tileGrid.getZForResolution(viewResolution, tileSource.zDirection);\n    const tileResolution = tileGrid.getResolution(z);\n\n    let extent = frameState.extent;\n    const resolution = frameState.viewState.resolution;\n    const tilePixelRatio = tileSource.getTilePixelRatio(pixelRatio);\n    // desired dimensions of the canvas in pixels\n    const width = Math.round((getWidth(extent) / resolution) * pixelRatio);\n    const height = Math.round((getHeight(extent) / resolution) * pixelRatio);\n\n    const layerExtent =\n      layerState.extent && fromUserExtent(layerState.extent, projection);\n    if (layerExtent) {\n      extent = getIntersection(\n        extent,\n        fromUserExtent(layerState.extent, projection)\n      );\n    }\n\n    const dx = (tileResolution * width) / 2 / tilePixelRatio;\n    const dy = (tileResolution * height) / 2 / tilePixelRatio;\n    const canvasExtent = [\n      viewCenter[0] - dx,\n      viewCenter[1] - dy,\n      viewCenter[0] + dx,\n      viewCenter[1] + dy,\n    ];\n\n    const tileRange = tileGrid.getTileRangeForExtentAndZ(extent, z);\n\n    /**\n     * @type {Object<number, Object<string, import(\"../../Tile.js\").default>>}\n     */\n    const tilesToDrawByZ = {};\n    tilesToDrawByZ[z] = {};\n\n    const findLoadedTiles = this.createLoadedTileFinder(\n      tileSource,\n      projection,\n      tilesToDrawByZ\n    );\n\n    const tmpExtent = this.tmpExtent;\n    const tmpTileRange = this.tmpTileRange_;\n    this.newTiles_ = false;\n    const viewport = rotation\n      ? getRotatedViewport(\n          viewState.center,\n          resolution,\n          rotation,\n          frameState.size\n        )\n      : undefined;\n    for (let x = tileRange.minX; x <= tileRange.maxX; ++x) {\n      for (let y = tileRange.minY; y <= tileRange.maxY; ++y) {\n        if (\n          rotation &&\n          !tileGrid.tileCoordIntersectsViewport([z, x, y], viewport)\n        ) {\n          continue;\n        }\n        const tile = this.getTile(z, x, y, frameState);\n        if (this.isDrawableTile(tile)) {\n          const uid = getUid(this);\n          if (tile.getState() == TileState.LOADED) {\n            tilesToDrawByZ[z][tile.tileCoord.toString()] = tile;\n            let inTransition = tile.inTransition(uid);\n            if (inTransition && layerState.opacity !== 1) {\n              // Skipping transition when layer is not fully opaque avoids visual artifacts.\n              tile.endTransition(uid);\n              inTransition = false;\n            }\n            if (\n              !this.newTiles_ &&\n              (inTransition || !this.renderedTiles.includes(tile))\n            ) {\n              this.newTiles_ = true;\n            }\n          }\n          if (tile.getAlpha(uid, frameState.time) === 1) {\n            // don't look for alt tiles if alpha is 1\n            continue;\n          }\n        }\n\n        const childTileRange = tileGrid.getTileCoordChildTileRange(\n          tile.tileCoord,\n          tmpTileRange,\n          tmpExtent\n        );\n\n        let covered = false;\n        if (childTileRange) {\n          covered = findLoadedTiles(z + 1, childTileRange);\n        }\n        if (!covered) {\n          tileGrid.forEachTileCoordParentTileRange(\n            tile.tileCoord,\n            findLoadedTiles,\n            tmpTileRange,\n            tmpExtent\n          );\n        }\n      }\n    }\n\n    const canvasScale =\n      ((tileResolution / viewResolution) * pixelRatio) / tilePixelRatio;\n\n    // set forward and inverse pixel transforms\n    composeTransform(\n      this.pixelTransform,\n      frameState.size[0] / 2,\n      frameState.size[1] / 2,\n      1 / pixelRatio,\n      1 / pixelRatio,\n      rotation,\n      -width / 2,\n      -height / 2\n    );\n\n    const canvasTransform = toTransformString(this.pixelTransform);\n\n    this.useContainer(target, canvasTransform, this.getBackground(frameState));\n    const context = this.context;\n    const canvas = context.canvas;\n\n    makeInverse(this.inversePixelTransform, this.pixelTransform);\n\n    // set scale transform for calculating tile positions on the canvas\n    composeTransform(\n      this.tempTransform,\n      width / 2,\n      height / 2,\n      canvasScale,\n      canvasScale,\n      0,\n      -width / 2,\n      -height / 2\n    );\n\n    if (canvas.width != width || canvas.height != height) {\n      canvas.width = width;\n      canvas.height = height;\n    } else if (!this.containerReused) {\n      context.clearRect(0, 0, width, height);\n    }\n\n    if (layerExtent) {\n      this.clipUnrotated(context, frameState, layerExtent);\n    }\n\n    if (!tileSource.getInterpolate()) {\n      context.imageSmoothingEnabled = false;\n    }\n\n    this.preRender(context, frameState);\n\n    this.renderedTiles.length = 0;\n    /** @type {Array<number>} */\n    let zs = Object.keys(tilesToDrawByZ).map(Number);\n    zs.sort(ascending);\n\n    let clips, clipZs, currentClip;\n    if (\n      layerState.opacity === 1 &&\n      (!this.containerReused ||\n        tileSource.getOpaque(frameState.viewState.projection))\n    ) {\n      zs = zs.reverse();\n    } else {\n      clips = [];\n      clipZs = [];\n    }\n    for (let i = zs.length - 1; i >= 0; --i) {\n      const currentZ = zs[i];\n      const currentTilePixelSize = tileSource.getTilePixelSize(\n        currentZ,\n        pixelRatio,\n        projection\n      );\n      const currentResolution = tileGrid.getResolution(currentZ);\n      const currentScale = currentResolution / tileResolution;\n      const dx = currentTilePixelSize[0] * currentScale * canvasScale;\n      const dy = currentTilePixelSize[1] * currentScale * canvasScale;\n      const originTileCoord = tileGrid.getTileCoordForCoordAndZ(\n        getTopLeft(canvasExtent),\n        currentZ\n      );\n      const originTileExtent = tileGrid.getTileCoordExtent(originTileCoord);\n      const origin = applyTransform(this.tempTransform, [\n        (tilePixelRatio * (originTileExtent[0] - canvasExtent[0])) /\n          tileResolution,\n        (tilePixelRatio * (canvasExtent[3] - originTileExtent[3])) /\n          tileResolution,\n      ]);\n      const tileGutter =\n        tilePixelRatio * tileSource.getGutterForProjection(projection);\n      const tilesToDraw = tilesToDrawByZ[currentZ];\n      for (const tileCoordKey in tilesToDraw) {\n        const tile = /** @type {import(\"../../ImageTile.js\").default} */ (\n          tilesToDraw[tileCoordKey]\n        );\n        const tileCoord = tile.tileCoord;\n\n        // Calculate integer positions and sizes so that tiles align\n        const xIndex = originTileCoord[1] - tileCoord[1];\n        const nextX = Math.round(origin[0] - (xIndex - 1) * dx);\n        const yIndex = originTileCoord[2] - tileCoord[2];\n        const nextY = Math.round(origin[1] - (yIndex - 1) * dy);\n        const x = Math.round(origin[0] - xIndex * dx);\n        const y = Math.round(origin[1] - yIndex * dy);\n        const w = nextX - x;\n        const h = nextY - y;\n        const transition = z === currentZ;\n\n        const inTransition =\n          transition && tile.getAlpha(getUid(this), frameState.time) !== 1;\n        let contextSaved = false;\n        if (!inTransition) {\n          if (clips) {\n            // Clip mask for regions in this tile that already filled by a higher z tile\n            currentClip = [x, y, x + w, y, x + w, y + h, x, y + h];\n            for (let i = 0, ii = clips.length; i < ii; ++i) {\n              if (z !== currentZ && currentZ < clipZs[i]) {\n                const clip = clips[i];\n                if (\n                  intersects(\n                    [x, y, x + w, y + h],\n                    [clip[0], clip[3], clip[4], clip[7]]\n                  )\n                ) {\n                  if (!contextSaved) {\n                    context.save();\n                    contextSaved = true;\n                  }\n                  context.beginPath();\n                  // counter-clockwise (outer ring) for current tile\n                  context.moveTo(currentClip[0], currentClip[1]);\n                  context.lineTo(currentClip[2], currentClip[3]);\n                  context.lineTo(currentClip[4], currentClip[5]);\n                  context.lineTo(currentClip[6], currentClip[7]);\n                  // clockwise (inner ring) for higher z tile\n                  context.moveTo(clip[6], clip[7]);\n                  context.lineTo(clip[4], clip[5]);\n                  context.lineTo(clip[2], clip[3]);\n                  context.lineTo(clip[0], clip[1]);\n                  context.clip();\n                }\n              }\n            }\n            clips.push(currentClip);\n            clipZs.push(currentZ);\n          } else {\n            context.clearRect(x, y, w, h);\n          }\n        }\n        this.drawTileImage(\n          tile,\n          frameState,\n          x,\n          y,\n          w,\n          h,\n          tileGutter,\n          transition\n        );\n        if (clips && !inTransition) {\n          if (contextSaved) {\n            context.restore();\n          }\n          this.renderedTiles.unshift(tile);\n        } else {\n          this.renderedTiles.push(tile);\n        }\n        this.updateUsedTiles(frameState.usedTiles, tileSource, tile);\n      }\n    }\n\n    this.renderedRevision = sourceRevision;\n    this.renderedResolution = tileResolution;\n    this.extentChanged =\n      !this.renderedExtent_ || !equals(this.renderedExtent_, canvasExtent);\n    this.renderedExtent_ = canvasExtent;\n    this.renderedPixelRatio = pixelRatio;\n    this.renderedProjection = projection;\n\n    this.manageTilePyramid(\n      frameState,\n      tileSource,\n      tileGrid,\n      pixelRatio,\n      projection,\n      extent,\n      z,\n      tileLayer.getPreload()\n    );\n    this.scheduleExpireCache(frameState, tileSource);\n\n    this.postRender(context, frameState);\n\n    if (layerState.extent) {\n      context.restore();\n    }\n    context.imageSmoothingEnabled = true;\n\n    if (canvasTransform !== canvas.style.transform) {\n      canvas.style.transform = canvasTransform;\n    }\n\n    return this.container;\n  }\n\n  /**\n   * @param {import(\"../../ImageTile.js\").default} tile Tile.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {number} x Left of the tile.\n   * @param {number} y Top of the tile.\n   * @param {number} w Width of the tile.\n   * @param {number} h Height of the tile.\n   * @param {number} gutter Tile gutter.\n   * @param {boolean} transition Apply an alpha transition.\n   */\n  drawTileImage(tile, frameState, x, y, w, h, gutter, transition) {\n    const image = this.getTileImage(tile);\n    if (!image) {\n      return;\n    }\n    const uid = getUid(this);\n    const layerState = frameState.layerStatesArray[frameState.layerIndex];\n    const alpha =\n      layerState.opacity *\n      (transition ? tile.getAlpha(uid, frameState.time) : 1);\n    const alphaChanged = alpha !== this.context.globalAlpha;\n    if (alphaChanged) {\n      this.context.save();\n      this.context.globalAlpha = alpha;\n    }\n    this.context.drawImage(\n      image,\n      gutter,\n      gutter,\n      image.width - 2 * gutter,\n      image.height - 2 * gutter,\n      x,\n      y,\n      w,\n      h\n    );\n\n    if (alphaChanged) {\n      this.context.restore();\n    }\n    if (alpha !== layerState.opacity) {\n      frameState.animate = true;\n    } else if (transition) {\n      tile.endTransition(uid);\n    }\n  }\n\n  /**\n   * @return {HTMLCanvasElement} Image\n   */\n  getImage() {\n    const context = this.context;\n    return context ? context.canvas : null;\n  }\n\n  /**\n   * Get the image from a tile.\n   * @param {import(\"../../ImageTile.js\").default} tile Tile.\n   * @return {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} Image.\n   * @protected\n   */\n  getTileImage(tile) {\n    return tile.getImage();\n  }\n\n  /**\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {import(\"../../source/Tile.js\").default} tileSource Tile source.\n   * @protected\n   */\n  scheduleExpireCache(frameState, tileSource) {\n    if (tileSource.canExpireCache()) {\n      /**\n       * @param {import(\"../../source/Tile.js\").default} tileSource Tile source.\n       * @param {import(\"../../Map.js\").default} map Map.\n       * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n       */\n      const postRenderFunction = function (tileSource, map, frameState) {\n        const tileSourceKey = getUid(tileSource);\n        if (tileSourceKey in frameState.usedTiles) {\n          tileSource.expireCache(\n            frameState.viewState.projection,\n            frameState.usedTiles[tileSourceKey]\n          );\n        }\n      }.bind(null, tileSource);\n\n      frameState.postRenderFunctions.push(\n        /** @type {import(\"../../Map.js\").PostRenderFunction} */ (\n          postRenderFunction\n        )\n      );\n    }\n  }\n\n  /**\n   * @param {!Object<string, !Object<string, boolean>>} usedTiles Used tiles.\n   * @param {import(\"../../source/Tile.js\").default} tileSource Tile source.\n   * @param {import('../../Tile.js').default} tile Tile.\n   * @protected\n   */\n  updateUsedTiles(usedTiles, tileSource, tile) {\n    // FIXME should we use tilesToDrawByZ instead?\n    const tileSourceKey = getUid(tileSource);\n    if (!(tileSourceKey in usedTiles)) {\n      usedTiles[tileSourceKey] = {};\n    }\n    usedTiles[tileSourceKey][tile.getKey()] = true;\n  }\n\n  /**\n   * Manage tile pyramid.\n   * This function performs a number of functions related to the tiles at the\n   * current zoom and lower zoom levels:\n   * - registers idle tiles in frameState.wantedTiles so that they are not\n   *   discarded by the tile queue\n   * - enqueues missing tiles\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {import(\"../../source/Tile.js\").default} tileSource Tile source.\n   * @param {import(\"../../tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../../proj/Projection.js\").default} projection Projection.\n   * @param {import(\"../../extent.js\").Extent} extent Extent.\n   * @param {number} currentZ Current Z.\n   * @param {number} preload Load low resolution tiles up to `preload` levels.\n   * @param {function(import(\"../../Tile.js\").default):void} [tileCallback] Tile callback.\n   * @protected\n   */\n  manageTilePyramid(\n    frameState,\n    tileSource,\n    tileGrid,\n    pixelRatio,\n    projection,\n    extent,\n    currentZ,\n    preload,\n    tileCallback\n  ) {\n    const tileSourceKey = getUid(tileSource);\n    if (!(tileSourceKey in frameState.wantedTiles)) {\n      frameState.wantedTiles[tileSourceKey] = {};\n    }\n    const wantedTiles = frameState.wantedTiles[tileSourceKey];\n    const tileQueue = frameState.tileQueue;\n    const minZoom = tileGrid.getMinZoom();\n    const rotation = frameState.viewState.rotation;\n    const viewport = rotation\n      ? getRotatedViewport(\n          frameState.viewState.center,\n          frameState.viewState.resolution,\n          rotation,\n          frameState.size\n        )\n      : undefined;\n    let tileCount = 0;\n    let tile, tileRange, tileResolution, x, y, z;\n    for (z = minZoom; z <= currentZ; ++z) {\n      tileRange = tileGrid.getTileRangeForExtentAndZ(extent, z, tileRange);\n      tileResolution = tileGrid.getResolution(z);\n      for (x = tileRange.minX; x <= tileRange.maxX; ++x) {\n        for (y = tileRange.minY; y <= tileRange.maxY; ++y) {\n          if (\n            rotation &&\n            !tileGrid.tileCoordIntersectsViewport([z, x, y], viewport)\n          ) {\n            continue;\n          }\n          if (currentZ - z <= preload) {\n            ++tileCount;\n            tile = tileSource.getTile(z, x, y, pixelRatio, projection);\n            if (tile.getState() == TileState.IDLE) {\n              wantedTiles[tile.getKey()] = true;\n              if (!tileQueue.isKeyQueued(tile.getKey())) {\n                tileQueue.enqueue([\n                  tile,\n                  tileSourceKey,\n                  tileGrid.getTileCoordCenter(tile.tileCoord),\n                  tileResolution,\n                ]);\n              }\n            }\n            if (tileCallback !== undefined) {\n              tileCallback(tile);\n            }\n          } else {\n            tileSource.useTile(z, x, y, projection);\n          }\n        }\n      }\n    }\n    tileSource.updateCacheSize(tileCount, projection);\n  }\n}\n\nexport default CanvasTileLayerRenderer;\n","/**\n * @module ol/renderer/vector\n */\nimport ImageState from '../ImageState.js';\nimport {getUid} from '../util.js';\n\n/**\n * Feature callback. The callback will be called with three arguments. The first\n * argument is one {@link module:ol/Feature~Feature feature} or {@link module:ol/render/Feature~RenderFeature render feature}\n * at the pixel, the second is the {@link module:ol/layer/Layer~Layer layer} of the feature and will be null for\n * unmanaged layers. The third is the {@link module:ol/geom/SimpleGeometry~SimpleGeometry} of the feature. For features\n * with a GeometryCollection geometry, it will be the first detected geometry from the collection.\n * @template T\n * @typedef {function(import(\"../Feature.js\").FeatureLike, import(\"../layer/Layer.js\").default<import(\"../source/Source\").default>, import(\"../geom/SimpleGeometry.js\").default): T} FeatureCallback\n */\n\n/**\n * Tolerance for geometry simplification in device pixels.\n * @type {number}\n */\nconst SIMPLIFY_TOLERANCE = 0.5;\n\n/**\n * @const\n * @type {Object<import(\"../geom/Geometry.js\").Type,\n *                function(import(\"../render/canvas/BuilderGroup.js\").default, import(\"../geom/Geometry.js\").default,\n *                         import(\"../style/Style.js\").default, Object): void>}\n */\nconst GEOMETRY_RENDERERS = {\n  'Point': renderPointGeometry,\n  'LineString': renderLineStringGeometry,\n  'Polygon': renderPolygonGeometry,\n  'MultiPoint': renderMultiPointGeometry,\n  'MultiLineString': renderMultiLineStringGeometry,\n  'MultiPolygon': renderMultiPolygonGeometry,\n  'GeometryCollection': renderGeometryCollectionGeometry,\n  'Circle': renderCircleGeometry,\n};\n\n/**\n * @param {import(\"../Feature.js\").FeatureLike} feature1 Feature 1.\n * @param {import(\"../Feature.js\").FeatureLike} feature2 Feature 2.\n * @return {number} Order.\n */\nexport function defaultOrder(feature1, feature2) {\n  return parseInt(getUid(feature1), 10) - parseInt(getUid(feature2), 10);\n}\n\n/**\n * @param {number} resolution Resolution.\n * @param {number} pixelRatio Pixel ratio.\n * @return {number} Squared pixel tolerance.\n */\nexport function getSquaredTolerance(resolution, pixelRatio) {\n  const tolerance = getTolerance(resolution, pixelRatio);\n  return tolerance * tolerance;\n}\n\n/**\n * @param {number} resolution Resolution.\n * @param {number} pixelRatio Pixel ratio.\n * @return {number} Pixel tolerance.\n */\nexport function getTolerance(resolution, pixelRatio) {\n  return (SIMPLIFY_TOLERANCE * resolution) / pixelRatio;\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Builder group.\n * @param {import(\"../geom/Circle.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").default} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderCircleGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  declutterBuilderGroup\n) {\n  const fillStyle = style.getFill();\n  const strokeStyle = style.getStroke();\n  if (fillStyle || strokeStyle) {\n    const circleReplay = builderGroup.getBuilder(style.getZIndex(), 'Circle');\n    circleReplay.setFillStrokeStyle(fillStyle, strokeStyle);\n    circleReplay.drawCircle(geometry, feature);\n  }\n  const textStyle = style.getText();\n  if (textStyle && textStyle.getText()) {\n    const textReplay = (declutterBuilderGroup || builderGroup).getBuilder(\n      style.getZIndex(),\n      'Text'\n    );\n    textReplay.setTextStyle(textStyle);\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n * @param {import(\"../proj.js\").TransformFunction} [transform] Transform from user to view projection.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [declutterBuilderGroup] Builder for decluttering.\n * @return {boolean} `true` if style is loading.\n */\nexport function renderFeature(\n  replayGroup,\n  feature,\n  style,\n  squaredTolerance,\n  listener,\n  transform,\n  declutterBuilderGroup\n) {\n  let loading = false;\n  const imageStyle = style.getImage();\n  if (imageStyle) {\n    const imageState = imageStyle.getImageState();\n    if (imageState == ImageState.LOADED || imageState == ImageState.ERROR) {\n      imageStyle.unlistenImageChange(listener);\n    } else {\n      if (imageState == ImageState.IDLE) {\n        imageStyle.load();\n      }\n      imageStyle.listenImageChange(listener);\n      loading = true;\n    }\n  }\n  renderFeatureInternal(\n    replayGroup,\n    feature,\n    style,\n    squaredTolerance,\n    transform,\n    declutterBuilderGroup\n  );\n\n  return loading;\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {import(\"../proj.js\").TransformFunction} [transform] Optional transform function.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderFeatureInternal(\n  replayGroup,\n  feature,\n  style,\n  squaredTolerance,\n  transform,\n  declutterBuilderGroup\n) {\n  const geometry = style.getGeometryFunction()(feature);\n  if (!geometry) {\n    return;\n  }\n  const simplifiedGeometry = geometry.simplifyTransformed(\n    squaredTolerance,\n    transform\n  );\n  const renderer = style.getRenderer();\n  if (renderer) {\n    renderGeometry(replayGroup, simplifiedGeometry, style, feature);\n  } else {\n    const geometryRenderer = GEOMETRY_RENDERERS[simplifiedGeometry.getType()];\n    geometryRenderer(\n      replayGroup,\n      simplifiedGeometry,\n      style,\n      feature,\n      declutterBuilderGroup\n    );\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../geom/Geometry.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n */\nfunction renderGeometry(replayGroup, geometry, style, feature) {\n  if (geometry.getType() == 'GeometryCollection') {\n    const geometries =\n      /** @type {import(\"../geom/GeometryCollection.js\").default} */ (\n        geometry\n      ).getGeometries();\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      renderGeometry(replayGroup, geometries[i], style, feature);\n    }\n    return;\n  }\n  const replay = replayGroup.getBuilder(style.getZIndex(), 'Default');\n  replay.drawCustom(\n    /** @type {import(\"../geom/SimpleGeometry.js\").default} */ (geometry),\n    feature,\n    style.getRenderer(),\n    style.getHitDetectionRenderer()\n  );\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../geom/GeometryCollection.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").default} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderGeometryCollectionGeometry(\n  replayGroup,\n  geometry,\n  style,\n  feature,\n  declutterBuilderGroup\n) {\n  const geometries = geometry.getGeometriesArray();\n  let i, ii;\n  for (i = 0, ii = geometries.length; i < ii; ++i) {\n    const geometryRenderer = GEOMETRY_RENDERERS[geometries[i].getType()];\n    geometryRenderer(\n      replayGroup,\n      geometries[i],\n      style,\n      feature,\n      declutterBuilderGroup\n    );\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/LineString.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderLineStringGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  declutterBuilderGroup\n) {\n  const strokeStyle = style.getStroke();\n  if (strokeStyle) {\n    const lineStringReplay = builderGroup.getBuilder(\n      style.getZIndex(),\n      'LineString'\n    );\n    lineStringReplay.setFillStrokeStyle(null, strokeStyle);\n    lineStringReplay.drawLineString(geometry, feature);\n  }\n  const textStyle = style.getText();\n  if (textStyle && textStyle.getText()) {\n    const textReplay = (declutterBuilderGroup || builderGroup).getBuilder(\n      style.getZIndex(),\n      'Text'\n    );\n    textReplay.setTextStyle(textStyle);\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/MultiLineString.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderMultiLineStringGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  declutterBuilderGroup\n) {\n  const strokeStyle = style.getStroke();\n  if (strokeStyle) {\n    const lineStringReplay = builderGroup.getBuilder(\n      style.getZIndex(),\n      'LineString'\n    );\n    lineStringReplay.setFillStrokeStyle(null, strokeStyle);\n    lineStringReplay.drawMultiLineString(geometry, feature);\n  }\n  const textStyle = style.getText();\n  if (textStyle && textStyle.getText()) {\n    const textReplay = (declutterBuilderGroup || builderGroup).getBuilder(\n      style.getZIndex(),\n      'Text'\n    );\n    textReplay.setTextStyle(textStyle);\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/MultiPolygon.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").default} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderMultiPolygonGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  declutterBuilderGroup\n) {\n  const fillStyle = style.getFill();\n  const strokeStyle = style.getStroke();\n  if (strokeStyle || fillStyle) {\n    const polygonReplay = builderGroup.getBuilder(style.getZIndex(), 'Polygon');\n    polygonReplay.setFillStrokeStyle(fillStyle, strokeStyle);\n    polygonReplay.drawMultiPolygon(geometry, feature);\n  }\n  const textStyle = style.getText();\n  if (textStyle && textStyle.getText()) {\n    const textReplay = (declutterBuilderGroup || builderGroup).getBuilder(\n      style.getZIndex(),\n      'Text'\n    );\n    textReplay.setTextStyle(textStyle);\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/Point.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderPointGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  declutterBuilderGroup\n) {\n  const imageStyle = style.getImage();\n  const textStyle = style.getText();\n  /** @type {import(\"../render/canvas.js\").DeclutterImageWithText} */\n  let declutterImageWithText;\n  if (imageStyle) {\n    if (imageStyle.getImageState() != ImageState.LOADED) {\n      return;\n    }\n    let imageBuilderGroup = builderGroup;\n    if (declutterBuilderGroup) {\n      const declutterMode = imageStyle.getDeclutterMode();\n      if (declutterMode !== 'none') {\n        imageBuilderGroup = declutterBuilderGroup;\n        if (declutterMode === 'obstacle') {\n          // draw in non-declutter group:\n          const imageReplay = builderGroup.getBuilder(\n            style.getZIndex(),\n            'Image'\n          );\n          imageReplay.setImageStyle(imageStyle, declutterImageWithText);\n          imageReplay.drawPoint(geometry, feature);\n        } else if (textStyle && textStyle.getText()) {\n          declutterImageWithText = {};\n        }\n      }\n    }\n    const imageReplay = imageBuilderGroup.getBuilder(\n      style.getZIndex(),\n      'Image'\n    );\n    imageReplay.setImageStyle(imageStyle, declutterImageWithText);\n    imageReplay.drawPoint(geometry, feature);\n  }\n  if (textStyle && textStyle.getText()) {\n    let textBuilderGroup = builderGroup;\n    if (declutterBuilderGroup) {\n      textBuilderGroup = declutterBuilderGroup;\n    }\n    const textReplay = textBuilderGroup.getBuilder(style.getZIndex(), 'Text');\n    textReplay.setTextStyle(textStyle, declutterImageWithText);\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/MultiPoint.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderMultiPointGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  declutterBuilderGroup\n) {\n  const imageStyle = style.getImage();\n  const textStyle = style.getText();\n  /** @type {import(\"../render/canvas.js\").DeclutterImageWithText} */\n  let declutterImageWithText;\n  if (imageStyle) {\n    if (imageStyle.getImageState() != ImageState.LOADED) {\n      return;\n    }\n    let imageBuilderGroup = builderGroup;\n    if (declutterBuilderGroup) {\n      const declutterMode = imageStyle.getDeclutterMode();\n      if (declutterMode !== 'none') {\n        imageBuilderGroup = declutterBuilderGroup;\n        if (declutterMode === 'obstacle') {\n          // draw in non-declutter group:\n          const imageReplay = builderGroup.getBuilder(\n            style.getZIndex(),\n            'Image'\n          );\n          imageReplay.setImageStyle(imageStyle, declutterImageWithText);\n          imageReplay.drawMultiPoint(geometry, feature);\n        } else if (textStyle && textStyle.getText()) {\n          declutterImageWithText = {};\n        }\n      }\n    }\n    const imageReplay = imageBuilderGroup.getBuilder(\n      style.getZIndex(),\n      'Image'\n    );\n    imageReplay.setImageStyle(imageStyle, declutterImageWithText);\n    imageReplay.drawMultiPoint(geometry, feature);\n  }\n  if (textStyle && textStyle.getText()) {\n    let textBuilderGroup = builderGroup;\n    if (declutterBuilderGroup) {\n      textBuilderGroup = declutterBuilderGroup;\n    }\n    const textReplay = textBuilderGroup.getBuilder(style.getZIndex(), 'Text');\n    textReplay.setTextStyle(textStyle, declutterImageWithText);\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/Polygon.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderPolygonGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  declutterBuilderGroup\n) {\n  const fillStyle = style.getFill();\n  const strokeStyle = style.getStroke();\n  if (fillStyle || strokeStyle) {\n    const polygonReplay = builderGroup.getBuilder(style.getZIndex(), 'Polygon');\n    polygonReplay.setFillStrokeStyle(fillStyle, strokeStyle);\n    polygonReplay.drawPolygon(geometry, feature);\n  }\n  const textStyle = style.getText();\n  if (textStyle && textStyle.getText()) {\n    const textReplay = (declutterBuilderGroup || builderGroup).getBuilder(\n      style.getZIndex(),\n      'Text'\n    );\n    textReplay.setTextStyle(textStyle);\n    textReplay.drawText(geometry, feature);\n  }\n}\n","/**\n * @module ol/reproj\n */\nimport {\n  containsCoordinate,\n  createEmpty,\n  extend,\n  forEachCorner,\n  getCenter,\n  getHeight,\n  getTopLeft,\n  getWidth,\n} from './extent.js';\nimport {createCanvasContext2D, releaseCanvas} from './dom.js';\nimport {getPointResolution, transform} from './proj.js';\nimport {solveLinearSystem} from './math.js';\n\nlet brokenDiagonalRendering_;\n\n/**\n * @type {Array<HTMLCanvasElement>}\n */\nexport const canvasPool = [];\n\n/**\n * This draws a small triangle into a canvas by setting the triangle as the clip region\n * and then drawing a (too large) rectangle\n *\n * @param {CanvasRenderingContext2D} ctx The context in which to draw the triangle\n * @param {number} u1 The x-coordinate of the second point. The first point is 0,0.\n * @param {number} v1 The y-coordinate of the second point.\n * @param {number} u2 The x-coordinate of the third point.\n * @param {number} v2 The y-coordinate of the third point.\n */\nfunction drawTestTriangle(ctx, u1, v1, u2, v2) {\n  ctx.beginPath();\n  ctx.moveTo(0, 0);\n  ctx.lineTo(u1, v1);\n  ctx.lineTo(u2, v2);\n  ctx.closePath();\n  ctx.save();\n  ctx.clip();\n  ctx.fillRect(0, 0, Math.max(u1, u2) + 1, Math.max(v1, v2));\n  ctx.restore();\n}\n\n/**\n * Given the data from getImageData, see if the right values appear at the provided offset.\n * Returns true if either the color or transparency is off\n *\n * @param {Uint8ClampedArray} data The data returned from getImageData\n * @param {number} offset The pixel offset from the start of data.\n * @return {boolean} true if the diagonal rendering is broken\n */\nfunction verifyBrokenDiagonalRendering(data, offset) {\n  // the values ought to be close to the rgba(210, 0, 0, 0.75)\n  return (\n    Math.abs(data[offset * 4] - 210) > 2 ||\n    Math.abs(data[offset * 4 + 3] - 0.75 * 255) > 2\n  );\n}\n\n/**\n * Determines if the current browser configuration can render triangular clip regions correctly.\n * This value is cached so the function is only expensive the first time called.\n * Firefox on Windows (as of now) does not if HWA is enabled. See https://bugzilla.mozilla.org/show_bug.cgi?id=1606976\n * Chrome works, and everything seems to work on OSX and Android. This function caches the\n * result. I suppose that it is conceivably possible that a browser might flip modes while the app is\n * running, but lets hope not.\n *\n * @return {boolean} true if the Diagonal Rendering is broken.\n */\nfunction isBrokenDiagonalRendering() {\n  if (brokenDiagonalRendering_ === undefined) {\n    const ctx = createCanvasContext2D(6, 6, canvasPool);\n    ctx.globalCompositeOperation = 'lighter';\n    ctx.fillStyle = 'rgba(210, 0, 0, 0.75)';\n    drawTestTriangle(ctx, 4, 5, 4, 0);\n    drawTestTriangle(ctx, 4, 5, 0, 5);\n    const data = ctx.getImageData(0, 0, 3, 3).data;\n    brokenDiagonalRendering_ =\n      verifyBrokenDiagonalRendering(data, 0) ||\n      verifyBrokenDiagonalRendering(data, 4) ||\n      verifyBrokenDiagonalRendering(data, 8);\n    releaseCanvas(ctx);\n    canvasPool.push(ctx.canvas);\n  }\n\n  return brokenDiagonalRendering_;\n}\n\n/**\n * Calculates ideal resolution to use from the source in order to achieve\n * pixel mapping as close as possible to 1:1 during reprojection.\n * The resolution is calculated regardless of what resolutions\n * are actually available in the dataset (TileGrid, Image, ...).\n *\n * @param {import(\"./proj/Projection.js\").default} sourceProj Source projection.\n * @param {import(\"./proj/Projection.js\").default} targetProj Target projection.\n * @param {import(\"./coordinate.js\").Coordinate} targetCenter Target center.\n * @param {number} targetResolution Target resolution.\n * @return {number} The best resolution to use. Can be +-Infinity, NaN or 0.\n */\nexport function calculateSourceResolution(\n  sourceProj,\n  targetProj,\n  targetCenter,\n  targetResolution\n) {\n  const sourceCenter = transform(targetCenter, targetProj, sourceProj);\n\n  // calculate the ideal resolution of the source data\n  let sourceResolution = getPointResolution(\n    targetProj,\n    targetResolution,\n    targetCenter\n  );\n\n  const targetMetersPerUnit = targetProj.getMetersPerUnit();\n  if (targetMetersPerUnit !== undefined) {\n    sourceResolution *= targetMetersPerUnit;\n  }\n  const sourceMetersPerUnit = sourceProj.getMetersPerUnit();\n  if (sourceMetersPerUnit !== undefined) {\n    sourceResolution /= sourceMetersPerUnit;\n  }\n\n  // Based on the projection properties, the point resolution at the specified\n  // coordinates may be slightly different. We need to reverse-compensate this\n  // in order to achieve optimal results.\n\n  const sourceExtent = sourceProj.getExtent();\n  if (!sourceExtent || containsCoordinate(sourceExtent, sourceCenter)) {\n    const compensationFactor =\n      getPointResolution(sourceProj, sourceResolution, sourceCenter) /\n      sourceResolution;\n    if (isFinite(compensationFactor) && compensationFactor > 0) {\n      sourceResolution /= compensationFactor;\n    }\n  }\n\n  return sourceResolution;\n}\n\n/**\n * Calculates ideal resolution to use from the source in order to achieve\n * pixel mapping as close as possible to 1:1 during reprojection.\n * The resolution is calculated regardless of what resolutions\n * are actually available in the dataset (TileGrid, Image, ...).\n *\n * @param {import(\"./proj/Projection.js\").default} sourceProj Source projection.\n * @param {import(\"./proj/Projection.js\").default} targetProj Target projection.\n * @param {import(\"./extent.js\").Extent} targetExtent Target extent\n * @param {number} targetResolution Target resolution.\n * @return {number} The best resolution to use. Can be +-Infinity, NaN or 0.\n */\nexport function calculateSourceExtentResolution(\n  sourceProj,\n  targetProj,\n  targetExtent,\n  targetResolution\n) {\n  const targetCenter = getCenter(targetExtent);\n  let sourceResolution = calculateSourceResolution(\n    sourceProj,\n    targetProj,\n    targetCenter,\n    targetResolution\n  );\n\n  if (!isFinite(sourceResolution) || sourceResolution <= 0) {\n    forEachCorner(targetExtent, function (corner) {\n      sourceResolution = calculateSourceResolution(\n        sourceProj,\n        targetProj,\n        corner,\n        targetResolution\n      );\n      return isFinite(sourceResolution) && sourceResolution > 0;\n    });\n  }\n\n  return sourceResolution;\n}\n\n/**\n * @typedef {Object} ImageExtent\n * @property {import(\"./extent.js\").Extent} extent Extent.\n * @property {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} image Image.\n */\n\n/**\n * Renders the source data into new canvas based on the triangulation.\n *\n * @param {number} width Width of the canvas.\n * @param {number} height Height of the canvas.\n * @param {number} pixelRatio Pixel ratio.\n * @param {number} sourceResolution Source resolution.\n * @param {import(\"./extent.js\").Extent} sourceExtent Extent of the data source.\n * @param {number} targetResolution Target resolution.\n * @param {import(\"./extent.js\").Extent} targetExtent Target extent.\n * @param {import(\"./reproj/Triangulation.js\").default} triangulation Calculated triangulation.\n * @param {Array<ImageExtent>} sources Array of sources.\n * @param {number} gutter Gutter of the sources.\n * @param {boolean} [renderEdges] Render reprojection edges.\n * @param {boolean} [interpolate] Use linear interpolation when resampling.\n * @return {HTMLCanvasElement} Canvas with reprojected data.\n */\nexport function render(\n  width,\n  height,\n  pixelRatio,\n  sourceResolution,\n  sourceExtent,\n  targetResolution,\n  targetExtent,\n  triangulation,\n  sources,\n  gutter,\n  renderEdges,\n  interpolate\n) {\n  const context = createCanvasContext2D(\n    Math.round(pixelRatio * width),\n    Math.round(pixelRatio * height),\n    canvasPool\n  );\n\n  if (!interpolate) {\n    context.imageSmoothingEnabled = false;\n  }\n\n  if (sources.length === 0) {\n    return context.canvas;\n  }\n\n  context.scale(pixelRatio, pixelRatio);\n\n  function pixelRound(value) {\n    return Math.round(value * pixelRatio) / pixelRatio;\n  }\n\n  context.globalCompositeOperation = 'lighter';\n\n  const sourceDataExtent = createEmpty();\n  sources.forEach(function (src, i, arr) {\n    extend(sourceDataExtent, src.extent);\n  });\n\n  const canvasWidthInUnits = getWidth(sourceDataExtent);\n  const canvasHeightInUnits = getHeight(sourceDataExtent);\n  const stitchContext = createCanvasContext2D(\n    Math.round((pixelRatio * canvasWidthInUnits) / sourceResolution),\n    Math.round((pixelRatio * canvasHeightInUnits) / sourceResolution),\n    canvasPool\n  );\n\n  if (!interpolate) {\n    stitchContext.imageSmoothingEnabled = false;\n  }\n\n  const stitchScale = pixelRatio / sourceResolution;\n\n  sources.forEach(function (src, i, arr) {\n    const xPos = src.extent[0] - sourceDataExtent[0];\n    const yPos = -(src.extent[3] - sourceDataExtent[3]);\n    const srcWidth = getWidth(src.extent);\n    const srcHeight = getHeight(src.extent);\n\n    // This test should never fail -- but it does. Need to find a fix the upstream condition\n    if (src.image.width > 0 && src.image.height > 0) {\n      stitchContext.drawImage(\n        src.image,\n        gutter,\n        gutter,\n        src.image.width - 2 * gutter,\n        src.image.height - 2 * gutter,\n        xPos * stitchScale,\n        yPos * stitchScale,\n        srcWidth * stitchScale,\n        srcHeight * stitchScale\n      );\n    }\n  });\n\n  const targetTopLeft = getTopLeft(targetExtent);\n\n  triangulation.getTriangles().forEach(function (triangle, i, arr) {\n    /* Calculate affine transform (src -> dst)\n     * Resulting matrix can be used to transform coordinate\n     * from `sourceProjection` to destination pixels.\n     *\n     * To optimize number of context calls and increase numerical stability,\n     * we also do the following operations:\n     * trans(-topLeftExtentCorner), scale(1 / targetResolution), scale(1, -1)\n     * here before solving the linear system so [ui, vi] are pixel coordinates.\n     *\n     * Src points: xi, yi\n     * Dst points: ui, vi\n     * Affine coefficients: aij\n     *\n     * | x0 y0 1  0  0 0 |   |a00|   |u0|\n     * | x1 y1 1  0  0 0 |   |a01|   |u1|\n     * | x2 y2 1  0  0 0 | x |a02| = |u2|\n     * |  0  0 0 x0 y0 1 |   |a10|   |v0|\n     * |  0  0 0 x1 y1 1 |   |a11|   |v1|\n     * |  0  0 0 x2 y2 1 |   |a12|   |v2|\n     */\n    const source = triangle.source;\n    const target = triangle.target;\n    let x0 = source[0][0],\n      y0 = source[0][1];\n    let x1 = source[1][0],\n      y1 = source[1][1];\n    let x2 = source[2][0],\n      y2 = source[2][1];\n    // Make sure that everything is on pixel boundaries\n    const u0 = pixelRound((target[0][0] - targetTopLeft[0]) / targetResolution);\n    const v0 = pixelRound(\n      -(target[0][1] - targetTopLeft[1]) / targetResolution\n    );\n    const u1 = pixelRound((target[1][0] - targetTopLeft[0]) / targetResolution);\n    const v1 = pixelRound(\n      -(target[1][1] - targetTopLeft[1]) / targetResolution\n    );\n    const u2 = pixelRound((target[2][0] - targetTopLeft[0]) / targetResolution);\n    const v2 = pixelRound(\n      -(target[2][1] - targetTopLeft[1]) / targetResolution\n    );\n\n    // Shift all the source points to improve numerical stability\n    // of all the subsequent calculations. The [x0, y0] is used here.\n    // This is also used to simplify the linear system.\n    const sourceNumericalShiftX = x0;\n    const sourceNumericalShiftY = y0;\n    x0 = 0;\n    y0 = 0;\n    x1 -= sourceNumericalShiftX;\n    y1 -= sourceNumericalShiftY;\n    x2 -= sourceNumericalShiftX;\n    y2 -= sourceNumericalShiftY;\n\n    const augmentedMatrix = [\n      [x1, y1, 0, 0, u1 - u0],\n      [x2, y2, 0, 0, u2 - u0],\n      [0, 0, x1, y1, v1 - v0],\n      [0, 0, x2, y2, v2 - v0],\n    ];\n    const affineCoefs = solveLinearSystem(augmentedMatrix);\n    if (!affineCoefs) {\n      return;\n    }\n\n    context.save();\n    context.beginPath();\n\n    if (isBrokenDiagonalRendering() || !interpolate) {\n      // Make sure that all lines are horizontal or vertical\n      context.moveTo(u1, v1);\n      // This is the diagonal line. Do it in 4 steps\n      const steps = 4;\n      const ud = u0 - u1;\n      const vd = v0 - v1;\n      for (let step = 0; step < steps; step++) {\n        // Go horizontally\n        context.lineTo(\n          u1 + pixelRound(((step + 1) * ud) / steps),\n          v1 + pixelRound((step * vd) / (steps - 1))\n        );\n        // Go vertically\n        if (step != steps - 1) {\n          context.lineTo(\n            u1 + pixelRound(((step + 1) * ud) / steps),\n            v1 + pixelRound(((step + 1) * vd) / (steps - 1))\n          );\n        }\n      }\n      // We are almost at u0r, v0r\n      context.lineTo(u2, v2);\n    } else {\n      context.moveTo(u1, v1);\n      context.lineTo(u0, v0);\n      context.lineTo(u2, v2);\n    }\n\n    context.clip();\n\n    context.transform(\n      affineCoefs[0],\n      affineCoefs[2],\n      affineCoefs[1],\n      affineCoefs[3],\n      u0,\n      v0\n    );\n\n    context.translate(\n      sourceDataExtent[0] - sourceNumericalShiftX,\n      sourceDataExtent[3] - sourceNumericalShiftY\n    );\n\n    context.scale(\n      sourceResolution / pixelRatio,\n      -sourceResolution / pixelRatio\n    );\n\n    context.drawImage(stitchContext.canvas, 0, 0);\n    context.restore();\n  });\n\n  releaseCanvas(stitchContext);\n  canvasPool.push(stitchContext.canvas);\n\n  if (renderEdges) {\n    context.save();\n\n    context.globalCompositeOperation = 'source-over';\n    context.strokeStyle = 'black';\n    context.lineWidth = 1;\n\n    triangulation.getTriangles().forEach(function (triangle, i, arr) {\n      const target = triangle.target;\n      const u0 = (target[0][0] - targetTopLeft[0]) / targetResolution;\n      const v0 = -(target[0][1] - targetTopLeft[1]) / targetResolution;\n      const u1 = (target[1][0] - targetTopLeft[0]) / targetResolution;\n      const v1 = -(target[1][1] - targetTopLeft[1]) / targetResolution;\n      const u2 = (target[2][0] - targetTopLeft[0]) / targetResolution;\n      const v2 = -(target[2][1] - targetTopLeft[1]) / targetResolution;\n\n      context.beginPath();\n      context.moveTo(u1, v1);\n      context.lineTo(u0, v0);\n      context.lineTo(u2, v2);\n      context.closePath();\n      context.stroke();\n    });\n\n    context.restore();\n  }\n  return context.canvas;\n}\n","/**\n * @module ol/reproj/Tile\n */\nimport {ERROR_THRESHOLD} from './common.js';\n\nimport EventType from '../events/EventType.js';\nimport Tile from '../Tile.js';\nimport TileState from '../TileState.js';\nimport Triangulation from './Triangulation.js';\nimport {\n  calculateSourceExtentResolution,\n  canvasPool,\n  render as renderReprojected,\n} from '../reproj.js';\nimport {clamp} from '../math.js';\nimport {getArea, getIntersection} from '../extent.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport {releaseCanvas} from '../dom.js';\n\n/**\n * @typedef {function(number, number, number, number) : (import(\"../ImageTile.js\").default)} FunctionType\n */\n\n/**\n * @classdesc\n * Class encapsulating single reprojected tile.\n * See {@link module:ol/source/TileImage~TileImage}.\n *\n */\nclass ReprojTile extends Tile {\n  /**\n   * @param {import(\"../proj/Projection.js\").default} sourceProj Source projection.\n   * @param {import(\"../tilegrid/TileGrid.js\").default} sourceTileGrid Source tile grid.\n   * @param {import(\"../proj/Projection.js\").default} targetProj Target projection.\n   * @param {import(\"../tilegrid/TileGrid.js\").default} targetTileGrid Target tile grid.\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Coordinate of the tile.\n   * @param {import(\"../tilecoord.js\").TileCoord} wrappedTileCoord Coordinate of the tile wrapped in X.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {number} gutter Gutter of the source tiles.\n   * @param {FunctionType} getTileFunction\n   *     Function returning source tiles (z, x, y, pixelRatio).\n   * @param {number} [errorThreshold] Acceptable reprojection error (in px).\n   * @param {boolean} [renderEdges] Render reprojection edges.\n   * @param {boolean} [interpolate] Use linear interpolation when resampling.\n   */\n  constructor(\n    sourceProj,\n    sourceTileGrid,\n    targetProj,\n    targetTileGrid,\n    tileCoord,\n    wrappedTileCoord,\n    pixelRatio,\n    gutter,\n    getTileFunction,\n    errorThreshold,\n    renderEdges,\n    interpolate\n  ) {\n    super(tileCoord, TileState.IDLE, {interpolate: !!interpolate});\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.renderEdges_ = renderEdges !== undefined ? renderEdges : false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = pixelRatio;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.gutter_ = gutter;\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement}\n     */\n    this.canvas_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../tilegrid/TileGrid.js\").default}\n     */\n    this.sourceTileGrid_ = sourceTileGrid;\n\n    /**\n     * @private\n     * @type {import(\"../tilegrid/TileGrid.js\").default}\n     */\n    this.targetTileGrid_ = targetTileGrid;\n\n    /**\n     * @private\n     * @type {import(\"../tilecoord.js\").TileCoord}\n     */\n    this.wrappedTileCoord_ = wrappedTileCoord ? wrappedTileCoord : tileCoord;\n\n    /**\n     * @private\n     * @type {!Array<import(\"../ImageTile.js\").default>}\n     */\n    this.sourceTiles_ = [];\n\n    /**\n     * @private\n     * @type {?Array<import(\"../events.js\").EventsKey>}\n     */\n    this.sourcesListenerKeys_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.sourceZ_ = 0;\n\n    const targetExtent = targetTileGrid.getTileCoordExtent(\n      this.wrappedTileCoord_\n    );\n    const maxTargetExtent = this.targetTileGrid_.getExtent();\n    let maxSourceExtent = this.sourceTileGrid_.getExtent();\n\n    const limitedTargetExtent = maxTargetExtent\n      ? getIntersection(targetExtent, maxTargetExtent)\n      : targetExtent;\n\n    if (getArea(limitedTargetExtent) === 0) {\n      // Tile is completely outside range -> EMPTY\n      // TODO: is it actually correct that the source even creates the tile ?\n      this.state = TileState.EMPTY;\n      return;\n    }\n\n    const sourceProjExtent = sourceProj.getExtent();\n    if (sourceProjExtent) {\n      if (!maxSourceExtent) {\n        maxSourceExtent = sourceProjExtent;\n      } else {\n        maxSourceExtent = getIntersection(maxSourceExtent, sourceProjExtent);\n      }\n    }\n\n    const targetResolution = targetTileGrid.getResolution(\n      this.wrappedTileCoord_[0]\n    );\n\n    const sourceResolution = calculateSourceExtentResolution(\n      sourceProj,\n      targetProj,\n      limitedTargetExtent,\n      targetResolution\n    );\n\n    if (!isFinite(sourceResolution) || sourceResolution <= 0) {\n      // invalid sourceResolution -> EMPTY\n      // probably edges of the projections when no extent is defined\n      this.state = TileState.EMPTY;\n      return;\n    }\n\n    const errorThresholdInPixels =\n      errorThreshold !== undefined ? errorThreshold : ERROR_THRESHOLD;\n\n    /**\n     * @private\n     * @type {!import(\"./Triangulation.js\").default}\n     */\n    this.triangulation_ = new Triangulation(\n      sourceProj,\n      targetProj,\n      limitedTargetExtent,\n      maxSourceExtent,\n      sourceResolution * errorThresholdInPixels,\n      targetResolution\n    );\n\n    if (this.triangulation_.getTriangles().length === 0) {\n      // no valid triangles -> EMPTY\n      this.state = TileState.EMPTY;\n      return;\n    }\n\n    this.sourceZ_ = sourceTileGrid.getZForResolution(sourceResolution);\n    let sourceExtent = this.triangulation_.calculateSourceExtent();\n\n    if (maxSourceExtent) {\n      if (sourceProj.canWrapX()) {\n        sourceExtent[1] = clamp(\n          sourceExtent[1],\n          maxSourceExtent[1],\n          maxSourceExtent[3]\n        );\n        sourceExtent[3] = clamp(\n          sourceExtent[3],\n          maxSourceExtent[1],\n          maxSourceExtent[3]\n        );\n      } else {\n        sourceExtent = getIntersection(sourceExtent, maxSourceExtent);\n      }\n    }\n\n    if (!getArea(sourceExtent)) {\n      this.state = TileState.EMPTY;\n    } else {\n      const sourceRange = sourceTileGrid.getTileRangeForExtentAndZ(\n        sourceExtent,\n        this.sourceZ_\n      );\n\n      for (let srcX = sourceRange.minX; srcX <= sourceRange.maxX; srcX++) {\n        for (let srcY = sourceRange.minY; srcY <= sourceRange.maxY; srcY++) {\n          const tile = getTileFunction(this.sourceZ_, srcX, srcY, pixelRatio);\n          if (tile) {\n            this.sourceTiles_.push(tile);\n          }\n        }\n      }\n\n      if (this.sourceTiles_.length === 0) {\n        this.state = TileState.EMPTY;\n      }\n    }\n  }\n\n  /**\n   * Get the HTML Canvas element for this tile.\n   * @return {HTMLCanvasElement} Canvas.\n   */\n  getImage() {\n    return this.canvas_;\n  }\n\n  /**\n   * @private\n   */\n  reproject_() {\n    const sources = [];\n    this.sourceTiles_.forEach((tile) => {\n      if (tile && tile.getState() == TileState.LOADED) {\n        sources.push({\n          extent: this.sourceTileGrid_.getTileCoordExtent(tile.tileCoord),\n          image: tile.getImage(),\n        });\n      }\n    });\n    this.sourceTiles_.length = 0;\n\n    if (sources.length === 0) {\n      this.state = TileState.ERROR;\n    } else {\n      const z = this.wrappedTileCoord_[0];\n      const size = this.targetTileGrid_.getTileSize(z);\n      const width = typeof size === 'number' ? size : size[0];\n      const height = typeof size === 'number' ? size : size[1];\n      const targetResolution = this.targetTileGrid_.getResolution(z);\n      const sourceResolution = this.sourceTileGrid_.getResolution(\n        this.sourceZ_\n      );\n\n      const targetExtent = this.targetTileGrid_.getTileCoordExtent(\n        this.wrappedTileCoord_\n      );\n\n      this.canvas_ = renderReprojected(\n        width,\n        height,\n        this.pixelRatio_,\n        sourceResolution,\n        this.sourceTileGrid_.getExtent(),\n        targetResolution,\n        targetExtent,\n        this.triangulation_,\n        sources,\n        this.gutter_,\n        this.renderEdges_,\n        this.interpolate\n      );\n\n      this.state = TileState.LOADED;\n    }\n    this.changed();\n  }\n\n  /**\n   * Load not yet loaded URI.\n   */\n  load() {\n    if (this.state == TileState.IDLE) {\n      this.state = TileState.LOADING;\n      this.changed();\n\n      let leftToLoad = 0;\n\n      this.sourcesListenerKeys_ = [];\n      this.sourceTiles_.forEach((tile) => {\n        const state = tile.getState();\n        if (state == TileState.IDLE || state == TileState.LOADING) {\n          leftToLoad++;\n\n          const sourceListenKey = listen(\n            tile,\n            EventType.CHANGE,\n            function (e) {\n              const state = tile.getState();\n              if (\n                state == TileState.LOADED ||\n                state == TileState.ERROR ||\n                state == TileState.EMPTY\n              ) {\n                unlistenByKey(sourceListenKey);\n                leftToLoad--;\n                if (leftToLoad === 0) {\n                  this.unlistenSources_();\n                  this.reproject_();\n                }\n              }\n            },\n            this\n          );\n          this.sourcesListenerKeys_.push(sourceListenKey);\n        }\n      });\n\n      if (leftToLoad === 0) {\n        setTimeout(this.reproject_.bind(this), 0);\n      } else {\n        this.sourceTiles_.forEach(function (tile, i, arr) {\n          const state = tile.getState();\n          if (state == TileState.IDLE) {\n            tile.load();\n          }\n        });\n      }\n    }\n  }\n\n  /**\n   * @private\n   */\n  unlistenSources_() {\n    this.sourcesListenerKeys_.forEach(unlistenByKey);\n    this.sourcesListenerKeys_ = null;\n  }\n\n  /**\n   * Remove from the cache due to expiry\n   */\n  release() {\n    if (this.canvas_) {\n      releaseCanvas(this.canvas_.getContext('2d'));\n      canvasPool.push(this.canvas_);\n      this.canvas_ = null;\n    }\n    super.release();\n  }\n}\n\nexport default ReprojTile;\n","/**\n * @module ol/reproj/Triangulation\n */\nimport {\n  boundingExtent,\n  createEmpty,\n  extendCoordinate,\n  getArea,\n  getBottomLeft,\n  getBottomRight,\n  getTopLeft,\n  getTopRight,\n  getWidth,\n  intersects,\n} from '../extent.js';\nimport {getTransform} from '../proj.js';\nimport {modulo} from '../math.js';\n\n/**\n * Single triangle; consists of 3 source points and 3 target points.\n * @typedef {Object} Triangle\n * @property {Array<import(\"../coordinate.js\").Coordinate>} source Source.\n * @property {Array<import(\"../coordinate.js\").Coordinate>} target Target.\n */\n\n/**\n * Maximum number of subdivision steps during raster reprojection triangulation.\n * Prevents high memory usage and large number of proj4 calls (for certain\n * transformations and areas). At most `2*(2^this)` triangles are created for\n * each triangulated extent (tile/image).\n * @type {number}\n */\nconst MAX_SUBDIVISION = 10;\n\n/**\n * Maximum allowed size of triangle relative to world width. When transforming\n * corners of world extent between certain projections, the resulting\n * triangulation seems to have zero error and no subdivision is performed. If\n * the triangle width is more than this (relative to world width; 0-1),\n * subdivison is forced (up to `MAX_SUBDIVISION`). Default is `0.25`.\n * @type {number}\n */\nconst MAX_TRIANGLE_WIDTH = 0.25;\n\n/**\n * @classdesc\n * Class containing triangulation of the given target extent.\n * Used for determining source data and the reprojection itself.\n */\nclass Triangulation {\n  /**\n   * @param {import(\"../proj/Projection.js\").default} sourceProj Source projection.\n   * @param {import(\"../proj/Projection.js\").default} targetProj Target projection.\n   * @param {import(\"../extent.js\").Extent} targetExtent Target extent to triangulate.\n   * @param {import(\"../extent.js\").Extent} maxSourceExtent Maximal source extent that can be used.\n   * @param {number} errorThreshold Acceptable error (in source units).\n   * @param {?number} destinationResolution The (optional) resolution of the destination.\n   */\n  constructor(\n    sourceProj,\n    targetProj,\n    targetExtent,\n    maxSourceExtent,\n    errorThreshold,\n    destinationResolution\n  ) {\n    /**\n     * @type {import(\"../proj/Projection.js\").default}\n     * @private\n     */\n    this.sourceProj_ = sourceProj;\n\n    /**\n     * @type {import(\"../proj/Projection.js\").default}\n     * @private\n     */\n    this.targetProj_ = targetProj;\n\n    /** @type {!Object<string, import(\"../coordinate.js\").Coordinate>} */\n    let transformInvCache = {};\n    const transformInv = getTransform(this.targetProj_, this.sourceProj_);\n\n    /**\n     * @param {import(\"../coordinate.js\").Coordinate} c A coordinate.\n     * @return {import(\"../coordinate.js\").Coordinate} Transformed coordinate.\n     * @private\n     */\n    this.transformInv_ = function (c) {\n      const key = c[0] + '/' + c[1];\n      if (!transformInvCache[key]) {\n        transformInvCache[key] = transformInv(c);\n      }\n      return transformInvCache[key];\n    };\n\n    /**\n     * @type {import(\"../extent.js\").Extent}\n     * @private\n     */\n    this.maxSourceExtent_ = maxSourceExtent;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.errorThresholdSquared_ = errorThreshold * errorThreshold;\n\n    /**\n     * @type {Array<Triangle>}\n     * @private\n     */\n    this.triangles_ = [];\n\n    /**\n     * Indicates that the triangulation crosses edge of the source projection.\n     * @type {boolean}\n     * @private\n     */\n    this.wrapsXInSource_ = false;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.canWrapXInSource_ =\n      this.sourceProj_.canWrapX() &&\n      !!maxSourceExtent &&\n      !!this.sourceProj_.getExtent() &&\n      getWidth(maxSourceExtent) == getWidth(this.sourceProj_.getExtent());\n\n    /**\n     * @type {?number}\n     * @private\n     */\n    this.sourceWorldWidth_ = this.sourceProj_.getExtent()\n      ? getWidth(this.sourceProj_.getExtent())\n      : null;\n\n    /**\n     * @type {?number}\n     * @private\n     */\n    this.targetWorldWidth_ = this.targetProj_.getExtent()\n      ? getWidth(this.targetProj_.getExtent())\n      : null;\n\n    const destinationTopLeft = getTopLeft(targetExtent);\n    const destinationTopRight = getTopRight(targetExtent);\n    const destinationBottomRight = getBottomRight(targetExtent);\n    const destinationBottomLeft = getBottomLeft(targetExtent);\n    const sourceTopLeft = this.transformInv_(destinationTopLeft);\n    const sourceTopRight = this.transformInv_(destinationTopRight);\n    const sourceBottomRight = this.transformInv_(destinationBottomRight);\n    const sourceBottomLeft = this.transformInv_(destinationBottomLeft);\n\n    /*\n     * The maxSubdivision controls how many splittings of the target area can\n     * be done. The idea here is to do a linear mapping of the target areas\n     * but the actual overal reprojection (can be) extremely non-linear. The\n     * default value of MAX_SUBDIVISION was chosen based on mapping a 256x256\n     * tile size. However this function is also called to remap canvas rendered\n     * layers which can be much larger. This calculation increases the maxSubdivision\n     * value by the right factor so that each 256x256 pixel area has\n     * MAX_SUBDIVISION divisions.\n     */\n    const maxSubdivision =\n      MAX_SUBDIVISION +\n      (destinationResolution\n        ? Math.max(\n            0,\n            Math.ceil(\n              Math.log2(\n                getArea(targetExtent) /\n                  (destinationResolution * destinationResolution * 256 * 256)\n              )\n            )\n          )\n        : 0);\n\n    this.addQuad_(\n      destinationTopLeft,\n      destinationTopRight,\n      destinationBottomRight,\n      destinationBottomLeft,\n      sourceTopLeft,\n      sourceTopRight,\n      sourceBottomRight,\n      sourceBottomLeft,\n      maxSubdivision\n    );\n\n    if (this.wrapsXInSource_) {\n      let leftBound = Infinity;\n      this.triangles_.forEach(function (triangle, i, arr) {\n        leftBound = Math.min(\n          leftBound,\n          triangle.source[0][0],\n          triangle.source[1][0],\n          triangle.source[2][0]\n        );\n      });\n\n      // Shift triangles to be as close to `leftBound` as possible\n      // (if the distance is more than `worldWidth / 2` it can be closer.\n      this.triangles_.forEach((triangle) => {\n        if (\n          Math.max(\n            triangle.source[0][0],\n            triangle.source[1][0],\n            triangle.source[2][0]\n          ) -\n            leftBound >\n          this.sourceWorldWidth_ / 2\n        ) {\n          const newTriangle = [\n            [triangle.source[0][0], triangle.source[0][1]],\n            [triangle.source[1][0], triangle.source[1][1]],\n            [triangle.source[2][0], triangle.source[2][1]],\n          ];\n          if (newTriangle[0][0] - leftBound > this.sourceWorldWidth_ / 2) {\n            newTriangle[0][0] -= this.sourceWorldWidth_;\n          }\n          if (newTriangle[1][0] - leftBound > this.sourceWorldWidth_ / 2) {\n            newTriangle[1][0] -= this.sourceWorldWidth_;\n          }\n          if (newTriangle[2][0] - leftBound > this.sourceWorldWidth_ / 2) {\n            newTriangle[2][0] -= this.sourceWorldWidth_;\n          }\n\n          // Rarely (if the extent contains both the dateline and prime meridian)\n          // the shift can in turn break some triangles.\n          // Detect this here and don't shift in such cases.\n          const minX = Math.min(\n            newTriangle[0][0],\n            newTriangle[1][0],\n            newTriangle[2][0]\n          );\n          const maxX = Math.max(\n            newTriangle[0][0],\n            newTriangle[1][0],\n            newTriangle[2][0]\n          );\n          if (maxX - minX < this.sourceWorldWidth_ / 2) {\n            triangle.source = newTriangle;\n          }\n        }\n      });\n    }\n\n    transformInvCache = {};\n  }\n\n  /**\n   * Adds triangle to the triangulation.\n   * @param {import(\"../coordinate.js\").Coordinate} a The target a coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} b The target b coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} c The target c coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} aSrc The source a coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} bSrc The source b coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} cSrc The source c coordinate.\n   * @private\n   */\n  addTriangle_(a, b, c, aSrc, bSrc, cSrc) {\n    this.triangles_.push({\n      source: [aSrc, bSrc, cSrc],\n      target: [a, b, c],\n    });\n  }\n\n  /**\n   * Adds quad (points in clock-wise order) to the triangulation\n   * (and reprojects the vertices) if valid.\n   * Performs quad subdivision if needed to increase precision.\n   *\n   * @param {import(\"../coordinate.js\").Coordinate} a The target a coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} b The target b coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} c The target c coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} d The target d coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} aSrc The source a coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} bSrc The source b coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} cSrc The source c coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} dSrc The source d coordinate.\n   * @param {number} maxSubdivision Maximal allowed subdivision of the quad.\n   * @private\n   */\n  addQuad_(a, b, c, d, aSrc, bSrc, cSrc, dSrc, maxSubdivision) {\n    const sourceQuadExtent = boundingExtent([aSrc, bSrc, cSrc, dSrc]);\n    const sourceCoverageX = this.sourceWorldWidth_\n      ? getWidth(sourceQuadExtent) / this.sourceWorldWidth_\n      : null;\n    const sourceWorldWidth = /** @type {number} */ (this.sourceWorldWidth_);\n\n    // when the quad is wrapped in the source projection\n    // it covers most of the projection extent, but not fully\n    const wrapsX =\n      this.sourceProj_.canWrapX() &&\n      sourceCoverageX > 0.5 &&\n      sourceCoverageX < 1;\n\n    let needsSubdivision = false;\n\n    if (maxSubdivision > 0) {\n      if (this.targetProj_.isGlobal() && this.targetWorldWidth_) {\n        const targetQuadExtent = boundingExtent([a, b, c, d]);\n        const targetCoverageX =\n          getWidth(targetQuadExtent) / this.targetWorldWidth_;\n        needsSubdivision =\n          targetCoverageX > MAX_TRIANGLE_WIDTH || needsSubdivision;\n      }\n      if (!wrapsX && this.sourceProj_.isGlobal() && sourceCoverageX) {\n        needsSubdivision =\n          sourceCoverageX > MAX_TRIANGLE_WIDTH || needsSubdivision;\n      }\n    }\n\n    if (!needsSubdivision && this.maxSourceExtent_) {\n      if (\n        isFinite(sourceQuadExtent[0]) &&\n        isFinite(sourceQuadExtent[1]) &&\n        isFinite(sourceQuadExtent[2]) &&\n        isFinite(sourceQuadExtent[3])\n      ) {\n        if (!intersects(sourceQuadExtent, this.maxSourceExtent_)) {\n          // whole quad outside source projection extent -> ignore\n          return;\n        }\n      }\n    }\n\n    let isNotFinite = 0;\n\n    if (!needsSubdivision) {\n      if (\n        !isFinite(aSrc[0]) ||\n        !isFinite(aSrc[1]) ||\n        !isFinite(bSrc[0]) ||\n        !isFinite(bSrc[1]) ||\n        !isFinite(cSrc[0]) ||\n        !isFinite(cSrc[1]) ||\n        !isFinite(dSrc[0]) ||\n        !isFinite(dSrc[1])\n      ) {\n        if (maxSubdivision > 0) {\n          needsSubdivision = true;\n        } else {\n          // It might be the case that only 1 of the points is infinite. In this case\n          // we can draw a single triangle with the other three points\n          isNotFinite =\n            (!isFinite(aSrc[0]) || !isFinite(aSrc[1]) ? 8 : 0) +\n            (!isFinite(bSrc[0]) || !isFinite(bSrc[1]) ? 4 : 0) +\n            (!isFinite(cSrc[0]) || !isFinite(cSrc[1]) ? 2 : 0) +\n            (!isFinite(dSrc[0]) || !isFinite(dSrc[1]) ? 1 : 0);\n          if (\n            isNotFinite != 1 &&\n            isNotFinite != 2 &&\n            isNotFinite != 4 &&\n            isNotFinite != 8\n          ) {\n            return;\n          }\n        }\n      }\n    }\n\n    if (maxSubdivision > 0) {\n      if (!needsSubdivision) {\n        const center = [(a[0] + c[0]) / 2, (a[1] + c[1]) / 2];\n        const centerSrc = this.transformInv_(center);\n\n        let dx;\n        if (wrapsX) {\n          const centerSrcEstimX =\n            (modulo(aSrc[0], sourceWorldWidth) +\n              modulo(cSrc[0], sourceWorldWidth)) /\n            2;\n          dx = centerSrcEstimX - modulo(centerSrc[0], sourceWorldWidth);\n        } else {\n          dx = (aSrc[0] + cSrc[0]) / 2 - centerSrc[0];\n        }\n        const dy = (aSrc[1] + cSrc[1]) / 2 - centerSrc[1];\n        const centerSrcErrorSquared = dx * dx + dy * dy;\n        needsSubdivision = centerSrcErrorSquared > this.errorThresholdSquared_;\n      }\n      if (needsSubdivision) {\n        if (Math.abs(a[0] - c[0]) <= Math.abs(a[1] - c[1])) {\n          // split horizontally (top & bottom)\n          const bc = [(b[0] + c[0]) / 2, (b[1] + c[1]) / 2];\n          const bcSrc = this.transformInv_(bc);\n          const da = [(d[0] + a[0]) / 2, (d[1] + a[1]) / 2];\n          const daSrc = this.transformInv_(da);\n\n          this.addQuad_(\n            a,\n            b,\n            bc,\n            da,\n            aSrc,\n            bSrc,\n            bcSrc,\n            daSrc,\n            maxSubdivision - 1\n          );\n          this.addQuad_(\n            da,\n            bc,\n            c,\n            d,\n            daSrc,\n            bcSrc,\n            cSrc,\n            dSrc,\n            maxSubdivision - 1\n          );\n        } else {\n          // split vertically (left & right)\n          const ab = [(a[0] + b[0]) / 2, (a[1] + b[1]) / 2];\n          const abSrc = this.transformInv_(ab);\n          const cd = [(c[0] + d[0]) / 2, (c[1] + d[1]) / 2];\n          const cdSrc = this.transformInv_(cd);\n\n          this.addQuad_(\n            a,\n            ab,\n            cd,\n            d,\n            aSrc,\n            abSrc,\n            cdSrc,\n            dSrc,\n            maxSubdivision - 1\n          );\n          this.addQuad_(\n            ab,\n            b,\n            c,\n            cd,\n            abSrc,\n            bSrc,\n            cSrc,\n            cdSrc,\n            maxSubdivision - 1\n          );\n        }\n        return;\n      }\n    }\n\n    if (wrapsX) {\n      if (!this.canWrapXInSource_) {\n        return;\n      }\n      this.wrapsXInSource_ = true;\n    }\n\n    // Exactly zero or one of *Src is not finite\n    // The triangles must have the diagonal line as the first side\n    // This is to allow easy code in reproj.s to make it straight for broken\n    // browsers that can't handle diagonal clipping\n    if ((isNotFinite & 0xb) == 0) {\n      this.addTriangle_(a, c, d, aSrc, cSrc, dSrc);\n    }\n    if ((isNotFinite & 0xe) == 0) {\n      this.addTriangle_(a, c, b, aSrc, cSrc, bSrc);\n    }\n    if (isNotFinite) {\n      // Try the other two triangles\n      if ((isNotFinite & 0xd) == 0) {\n        this.addTriangle_(b, d, a, bSrc, dSrc, aSrc);\n      }\n      if ((isNotFinite & 0x7) == 0) {\n        this.addTriangle_(b, d, c, bSrc, dSrc, cSrc);\n      }\n    }\n  }\n\n  /**\n   * Calculates extent of the `source` coordinates from all the triangles.\n   *\n   * @return {import(\"../extent.js\").Extent} Calculated extent.\n   */\n  calculateSourceExtent() {\n    const extent = createEmpty();\n\n    this.triangles_.forEach(function (triangle, i, arr) {\n      const src = triangle.source;\n      extendCoordinate(extent, src[0]);\n      extendCoordinate(extent, src[1]);\n      extendCoordinate(extent, src[2]);\n    });\n\n    return extent;\n  }\n\n  /**\n   * @return {Array<Triangle>} Array of the calculated triangles.\n   */\n  getTriangles() {\n    return this.triangles_;\n  }\n}\n\nexport default Triangulation;\n","/**\n * @module ol/reproj/common\n */\n\n/**\n * Default maximum allowed threshold  (in pixels) for reprojection\n * triangulation.\n * @type {number}\n */\nexport const ERROR_THRESHOLD = 0.5;\n","/**\n * @module ol/rotationconstraint\n */\nimport {toRadians} from './math.js';\n\n/**\n * @typedef {function((number|undefined), boolean=): (number|undefined)} Type\n */\n\n/**\n * @param {number|undefined} rotation Rotation.\n * @return {number|undefined} Rotation.\n */\nexport function disable(rotation) {\n  if (rotation !== undefined) {\n    return 0;\n  }\n  return undefined;\n}\n\n/**\n * @param {number|undefined} rotation Rotation.\n * @return {number|undefined} Rotation.\n */\nexport function none(rotation) {\n  if (rotation !== undefined) {\n    return rotation;\n  }\n  return undefined;\n}\n\n/**\n * @param {number} n N.\n * @return {Type} Rotation constraint.\n */\nexport function createSnapToN(n) {\n  const theta = (2 * Math.PI) / n;\n  return (\n    /**\n     * @param {number|undefined} rotation Rotation.\n     * @param {boolean} [isMoving] True if an interaction or animation is in progress.\n     * @return {number|undefined} Rotation.\n     */\n    function (rotation, isMoving) {\n      if (isMoving) {\n        return rotation;\n      }\n\n      if (rotation !== undefined) {\n        rotation = Math.floor(rotation / theta + 0.5) * theta;\n        return rotation;\n      }\n      return undefined;\n    }\n  );\n}\n\n/**\n * @param {number} [tolerance] Tolerance.\n * @return {Type} Rotation constraint.\n */\nexport function createSnapToZero(tolerance) {\n  tolerance = tolerance || toRadians(5);\n  return (\n    /**\n     * @param {number|undefined} rotation Rotation.\n     * @param {boolean} [isMoving] True if an interaction or animation is in progress.\n     * @return {number|undefined} Rotation.\n     */\n    function (rotation, isMoving) {\n      if (isMoving) {\n        return rotation;\n      }\n\n      if (rotation !== undefined) {\n        if (Math.abs(rotation) <= tolerance) {\n          return 0;\n        }\n        return rotation;\n      }\n      return undefined;\n    }\n  );\n}\n","/**\n * @module ol/size\n */\n\n/**\n * An array of numbers representing a size: `[width, height]`.\n * @typedef {Array<number>} Size\n * @api\n */\n\n/**\n * Returns a buffered size.\n * @param {Size} size Size.\n * @param {number} num The amount by which to buffer.\n * @param {Size} [dest] Optional reusable size array.\n * @return {Size} The buffered size.\n */\nexport function buffer(size, num, dest) {\n  if (dest === undefined) {\n    dest = [0, 0];\n  }\n  dest[0] = size[0] + 2 * num;\n  dest[1] = size[1] + 2 * num;\n  return dest;\n}\n\n/**\n * Determines if a size has a positive area.\n * @param {Size} size The size to test.\n * @return {boolean} The size has a positive area.\n */\nexport function hasArea(size) {\n  return size[0] > 0 && size[1] > 0;\n}\n\n/**\n * Returns a size scaled by a ratio. The result will be an array of integers.\n * @param {Size} size Size.\n * @param {number} ratio Ratio.\n * @param {Size} [dest] Optional reusable size array.\n * @return {Size} The scaled size.\n */\nexport function scale(size, ratio, dest) {\n  if (dest === undefined) {\n    dest = [0, 0];\n  }\n  dest[0] = (size[0] * ratio + 0.5) | 0;\n  dest[1] = (size[1] * ratio + 0.5) | 0;\n  return dest;\n}\n\n/**\n * Returns an `Size` array for the passed in number (meaning: square) or\n * `Size` array.\n * (meaning: non-square),\n * @param {number|Size} size Width and height.\n * @param {Size} [dest] Optional reusable size array.\n * @return {Size} Size.\n * @api\n */\nexport function toSize(size, dest) {\n  if (Array.isArray(size)) {\n    return size;\n  }\n  if (dest === undefined) {\n    dest = [size, size];\n  } else {\n    dest[0] = size;\n    dest[1] = size;\n  }\n  return dest;\n}\n","/**\n * @module ol/source/Source\n */\nimport BaseObject from '../Object.js';\nimport {get as getProjection} from '../proj.js';\n\n/**\n * @typedef {'undefined' | 'loading' | 'ready' | 'error'} State\n * State of the source, one of 'undefined', 'loading', 'ready' or 'error'.\n */\n\n/**\n * A function that takes a {@link module:ol/Map~FrameState} and returns a string or\n * an array of strings representing source attributions.\n *\n * @typedef {function(import(\"../Map.js\").FrameState): (string|Array<string>)} Attribution\n */\n\n/**\n * A type that can be used to provide attribution information for data sources.\n *\n * It represents either\n * * a simple string (e.g. `'© Acme Inc.'`)\n * * an array of simple strings (e.g. `['© Acme Inc.', '© Bacme Inc.']`)\n * * a function that returns a string or array of strings ({@link module:ol/source/Source~Attribution})\n *\n * @typedef {string|Array<string>|Attribution} AttributionLike\n */\n\n/**\n * @typedef {Object} Options\n * @property {AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection. Default is the view projection.\n * @property {import(\"./Source.js\").State} [state='ready'] State.\n * @property {boolean} [wrapX=false] WrapX.\n * @property {boolean} [interpolate=false] Use interpolated values when resampling.  By default,\n * the nearest neighbor is used when resampling.\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for {@link module:ol/layer/Layer~Layer} sources.\n *\n * A generic `change` event is triggered when the state of the source changes.\n * @abstract\n * @api\n */\nclass Source extends BaseObject {\n  /**\n   * @param {Options} options Source options.\n   */\n  constructor(options) {\n    super();\n\n    /**\n     * @protected\n     * @type {import(\"../proj/Projection.js\").default|null}\n     */\n    this.projection = getProjection(options.projection);\n\n    /**\n     * @private\n     * @type {?Attribution}\n     */\n    this.attributions_ = adaptAttributions(options.attributions);\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.attributionsCollapsible_ =\n      options.attributionsCollapsible !== undefined\n        ? options.attributionsCollapsible\n        : true;\n\n    /**\n     * This source is currently loading data. Sources that defer loading to the\n     * map's tile queue never set this to `true`.\n     * @type {boolean}\n     */\n    this.loading = false;\n\n    /**\n     * @private\n     * @type {import(\"./Source.js\").State}\n     */\n    this.state_ = options.state !== undefined ? options.state : 'ready';\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.wrapX_ = options.wrapX !== undefined ? options.wrapX : false;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.interpolate_ = !!options.interpolate;\n\n    /**\n     * @protected\n     * @type {function(import(\"../View.js\").ViewOptions):void}\n     */\n    this.viewResolver = null;\n\n    /**\n     * @protected\n     * @type {function(Error):void}\n     */\n    this.viewRejector = null;\n\n    const self = this;\n    /**\n     * @private\n     * @type {Promise<import(\"../View.js\").ViewOptions>}\n     */\n    this.viewPromise_ = new Promise(function (resolve, reject) {\n      self.viewResolver = resolve;\n      self.viewRejector = reject;\n    });\n  }\n\n  /**\n   * Get the attribution function for the source.\n   * @return {?Attribution} Attribution function.\n   * @api\n   */\n  getAttributions() {\n    return this.attributions_;\n  }\n\n  /**\n   * @return {boolean} Attributions are collapsible.\n   * @api\n   */\n  getAttributionsCollapsible() {\n    return this.attributionsCollapsible_;\n  }\n\n  /**\n   * Get the projection of the source.\n   * @return {import(\"../proj/Projection.js\").default|null} Projection.\n   * @api\n   */\n  getProjection() {\n    return this.projection;\n  }\n\n  /**\n   * @param {import(\"../proj/Projection\").default} [projection] Projection.\n   * @return {Array<number>|null} Resolutions.\n   */\n  getResolutions(projection) {\n    return null;\n  }\n\n  /**\n   * @return {Promise<import(\"../View.js\").ViewOptions>} A promise for view-related properties.\n   */\n  getView() {\n    return this.viewPromise_;\n  }\n\n  /**\n   * Get the state of the source, see {@link import(\"./Source.js\").State} for possible states.\n   * @return {import(\"./Source.js\").State} State.\n   * @api\n   */\n  getState() {\n    return this.state_;\n  }\n\n  /**\n   * @return {boolean|undefined} Wrap X.\n   */\n  getWrapX() {\n    return this.wrapX_;\n  }\n\n  /**\n   * @return {boolean} Use linear interpolation when resampling.\n   */\n  getInterpolate() {\n    return this.interpolate_;\n  }\n\n  /**\n   * Refreshes the source. The source will be cleared, and data from the server will be reloaded.\n   * @api\n   */\n  refresh() {\n    this.changed();\n  }\n\n  /**\n   * Set the attributions of the source.\n   * @param {AttributionLike|undefined} attributions Attributions.\n   *     Can be passed as `string`, `Array<string>`, {@link module:ol/source/Source~Attribution},\n   *     or `undefined`.\n   * @api\n   */\n  setAttributions(attributions) {\n    this.attributions_ = adaptAttributions(attributions);\n    this.changed();\n  }\n\n  /**\n   * Set the state of the source.\n   * @param {import(\"./Source.js\").State} state State.\n   */\n  setState(state) {\n    this.state_ = state;\n    this.changed();\n  }\n}\n\n/**\n * Turns the attributions option into an attributions function.\n * @param {AttributionLike|undefined} attributionLike The attribution option.\n * @return {Attribution|null} An attribution function (or null).\n */\nfunction adaptAttributions(attributionLike) {\n  if (!attributionLike) {\n    return null;\n  }\n  if (Array.isArray(attributionLike)) {\n    return function (frameState) {\n      return attributionLike;\n    };\n  }\n\n  if (typeof attributionLike === 'function') {\n    return attributionLike;\n  }\n\n  return function (frameState) {\n    return [attributionLike];\n  };\n}\n\nexport default Source;\n","/**\n * @module ol/structs/RBush\n */\nimport RBush_ from 'rbush';\nimport {createOrUpdate, equals} from '../extent.js';\nimport {getUid} from '../util.js';\nimport {isEmpty} from '../obj.js';\n\n/**\n * @typedef {Object} Entry\n * @property {number} minX MinX.\n * @property {number} minY MinY.\n * @property {number} maxX MaxX.\n * @property {number} maxY MaxY.\n * @property {Object} [value] Value.\n */\n\n/**\n * @classdesc\n * Wrapper around the RBush by Vladimir Agafonkin.\n * See https://github.com/mourner/rbush.\n *\n * @template T\n */\nclass RBush {\n  /**\n   * @param {number} [maxEntries] Max entries.\n   */\n  constructor(maxEntries) {\n    /**\n     * @private\n     */\n    this.rbush_ = new RBush_(maxEntries);\n\n    /**\n     * A mapping between the objects added to this rbush wrapper\n     * and the objects that are actually added to the internal rbush.\n     * @private\n     * @type {Object<string, Entry>}\n     */\n    this.items_ = {};\n  }\n\n  /**\n   * Insert a value into the RBush.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {T} value Value.\n   */\n  insert(extent, value) {\n    /** @type {Entry} */\n    const item = {\n      minX: extent[0],\n      minY: extent[1],\n      maxX: extent[2],\n      maxY: extent[3],\n      value: value,\n    };\n\n    this.rbush_.insert(item);\n    this.items_[getUid(value)] = item;\n  }\n\n  /**\n   * Bulk-insert values into the RBush.\n   * @param {Array<import(\"../extent.js\").Extent>} extents Extents.\n   * @param {Array<T>} values Values.\n   */\n  load(extents, values) {\n    const items = new Array(values.length);\n    for (let i = 0, l = values.length; i < l; i++) {\n      const extent = extents[i];\n      const value = values[i];\n\n      /** @type {Entry} */\n      const item = {\n        minX: extent[0],\n        minY: extent[1],\n        maxX: extent[2],\n        maxY: extent[3],\n        value: value,\n      };\n      items[i] = item;\n      this.items_[getUid(value)] = item;\n    }\n    this.rbush_.load(items);\n  }\n\n  /**\n   * Remove a value from the RBush.\n   * @param {T} value Value.\n   * @return {boolean} Removed.\n   */\n  remove(value) {\n    const uid = getUid(value);\n\n    // get the object in which the value was wrapped when adding to the\n    // internal rbush. then use that object to do the removal.\n    const item = this.items_[uid];\n    delete this.items_[uid];\n    return this.rbush_.remove(item) !== null;\n  }\n\n  /**\n   * Update the extent of a value in the RBush.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {T} value Value.\n   */\n  update(extent, value) {\n    const item = this.items_[getUid(value)];\n    const bbox = [item.minX, item.minY, item.maxX, item.maxY];\n    if (!equals(bbox, extent)) {\n      this.remove(value);\n      this.insert(extent, value);\n    }\n  }\n\n  /**\n   * Return all values in the RBush.\n   * @return {Array<T>} All.\n   */\n  getAll() {\n    const items = this.rbush_.all();\n    return items.map(function (item) {\n      return item.value;\n    });\n  }\n\n  /**\n   * Return all values in the given extent.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {Array<T>} All in extent.\n   */\n  getInExtent(extent) {\n    /** @type {Entry} */\n    const bbox = {\n      minX: extent[0],\n      minY: extent[1],\n      maxX: extent[2],\n      maxY: extent[3],\n    };\n    const items = this.rbush_.search(bbox);\n    return items.map(function (item) {\n      return item.value;\n    });\n  }\n\n  /**\n   * Calls a callback function with each value in the tree.\n   * If the callback returns a truthy value, this value is returned without\n   * checking the rest of the tree.\n   * @param {function(T): *} callback Callback.\n   * @return {*} Callback return value.\n   */\n  forEach(callback) {\n    return this.forEach_(this.getAll(), callback);\n  }\n\n  /**\n   * Calls a callback function with each value in the provided extent.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {function(T): *} callback Callback.\n   * @return {*} Callback return value.\n   */\n  forEachInExtent(extent, callback) {\n    return this.forEach_(this.getInExtent(extent), callback);\n  }\n\n  /**\n   * @param {Array<T>} values Values.\n   * @param {function(T): *} callback Callback.\n   * @private\n   * @return {*} Callback return value.\n   */\n  forEach_(values, callback) {\n    let result;\n    for (let i = 0, l = values.length; i < l; i++) {\n      result = callback(values[i]);\n      if (result) {\n        return result;\n      }\n    }\n    return result;\n  }\n\n  /**\n   * @return {boolean} Is empty.\n   */\n  isEmpty() {\n    return isEmpty(this.items_);\n  }\n\n  /**\n   * Remove all values from the RBush.\n   */\n  clear() {\n    this.rbush_.clear();\n    this.items_ = {};\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} [extent] Extent.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   */\n  getExtent(extent) {\n    const data = this.rbush_.toJSON();\n    return createOrUpdate(data.minX, data.minY, data.maxX, data.maxY, extent);\n  }\n\n  /**\n   * @param {RBush} rbush R-Tree.\n   */\n  concat(rbush) {\n    this.rbush_.load(rbush.rbush_.all());\n    for (const i in rbush.items_) {\n      this.items_[i] = rbush.items_[i];\n    }\n  }\n}\n\nexport default RBush;\n","/**\n * @module ol/source/VectorEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered when a feature is added to the source.\n   * @event module:ol/source/Vector.VectorSourceEvent#addfeature\n   * @api\n   */\n  ADDFEATURE: 'addfeature',\n\n  /**\n   * Triggered when a feature is updated.\n   * @event module:ol/source/Vector.VectorSourceEvent#changefeature\n   * @api\n   */\n  CHANGEFEATURE: 'changefeature',\n\n  /**\n   * Triggered when the clear method is called on the source.\n   * @event module:ol/source/Vector.VectorSourceEvent#clear\n   * @api\n   */\n  CLEAR: 'clear',\n\n  /**\n   * Triggered when a feature is removed from the source.\n   * See {@link module:ol/source/Vector~VectorSource#clear source.clear()} for exceptions.\n   * @event module:ol/source/Vector.VectorSourceEvent#removefeature\n   * @api\n   */\n  REMOVEFEATURE: 'removefeature',\n\n  /**\n   * Triggered when features starts loading.\n   * @event module:ol/source/Vector.VectorSourceEvent#featuresloadstart\n   * @api\n   */\n  FEATURESLOADSTART: 'featuresloadstart',\n\n  /**\n   * Triggered when features finishes loading.\n   * @event module:ol/source/Vector.VectorSourceEvent#featuresloadend\n   * @api\n   */\n  FEATURESLOADEND: 'featuresloadend',\n\n  /**\n   * Triggered if feature loading results in an error.\n   * @event module:ol/source/Vector.VectorSourceEvent#featuresloaderror\n   * @api\n   */\n  FEATURESLOADERROR: 'featuresloaderror',\n};\n\n/**\n * @typedef {'addfeature'|'changefeature'|'clear'|'removefeature'|'featuresloadstart'|'featuresloadend'|'featuresloaderror'} VectorSourceEventTypes\n */\n","/**\n * @module ol/source/Vector\n */\n\nimport Collection from '../Collection.js';\nimport CollectionEventType from '../CollectionEventType.js';\nimport Event from '../events/Event.js';\nimport EventType from '../events/EventType.js';\nimport ObjectEventType from '../ObjectEventType.js';\nimport RBush from '../structs/RBush.js';\nimport Source from './Source.js';\nimport VectorEventType from './VectorEventType.js';\nimport {TRUE, VOID} from '../functions.js';\nimport {all as allStrategy} from '../loadingstrategy.js';\nimport {assert} from '../asserts.js';\nimport {containsExtent, equals, wrapAndSliceX} from '../extent.js';\nimport {extend} from '../array.js';\nimport {getUid} from '../util.js';\nimport {isEmpty} from '../obj.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport {xhr} from '../featureloader.js';\n\n/**\n * A function that takes an {@link module:ol/extent~Extent} and a resolution as arguments, and\n * returns an array of {@link module:ol/extent~Extent} with the extents to load. Usually this\n * is one of the standard {@link module:ol/loadingstrategy} strategies.\n *\n * @typedef {function(import(\"../extent.js\").Extent, number, import(\"../proj/Projection.js\").default): Array<import(\"../extent.js\").Extent>} LoadingStrategy\n * @api\n */\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/source/Vector~VectorSource} instances are instances of this\n * type.\n * @template {import(\"../geom/Geometry.js\").default} [Geometry=import(\"../geom/Geometry.js\").default]\n */\nexport class VectorSourceEvent extends Event {\n  /**\n   * @param {string} type Type.\n   * @param {import(\"../Feature.js\").default<Geometry>} [feature] Feature.\n   * @param {Array<import(\"../Feature.js\").default<Geometry>>} [features] Features.\n   */\n  constructor(type, feature, features) {\n    super(type);\n\n    /**\n     * The added or removed feature for the `ADDFEATURE` and `REMOVEFEATURE` events, `undefined` otherwise.\n     * @type {import(\"../Feature.js\").default<Geometry>|undefined}\n     * @api\n     */\n    this.feature = feature;\n\n    /**\n     * The loaded features for the `FEATURESLOADED` event, `undefined` otherwise.\n     * @type {Array<import(\"../Feature.js\").default<Geometry>>|undefined}\n     * @api\n     */\n    this.features = features;\n  }\n}\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types, import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<import(\"./VectorEventType\").VectorSourceEventTypes, VectorSourceEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"../ObjectEventType\").Types|\n *     import(\"./VectorEventType\").VectorSourceEventTypes, Return>} VectorSourceOnSignature\n */\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {Array<import(\"../Feature.js\").default<Geometry>>|Collection<import(\"../Feature.js\").default<Geometry>>} [features]\n * Features. If provided as {@link module:ol/Collection~Collection}, the features in the source\n * and the collection will stay in sync.\n * @property {import(\"../format/Feature.js\").default} [format] The feature format used by the XHR\n * feature loader when `url` is set. Required if `url` is set, otherwise ignored.\n * @property {import(\"../featureloader.js\").FeatureLoader} [loader]\n * The loader function used to load features, from a remote source for example.\n * If this is not set and `url` is set, the source will create and use an XHR\n * feature loader. The `'featuresloadend'` and `'featuresloaderror'` events\n * will only fire if the `success` and `failure` callbacks are used.\n *\n * Example:\n *\n * ```js\n * import Vector from 'ol/source/Vector.js';\n * import GeoJSON from 'ol/format/GeoJSON.js';\n * import {bbox} from 'ol/loadingstrategy.js';\n *\n * const vectorSource = new Vector({\n *   format: new GeoJSON(),\n *   loader: function(extent, resolution, projection, success, failure) {\n *      const proj = projection.getCode();\n *      const url = 'https://ahocevar.com/geoserver/wfs?service=WFS&' +\n *          'version=1.1.0&request=GetFeature&typename=osm:water_areas&' +\n *          'outputFormat=application/json&srsname=' + proj + '&' +\n *          'bbox=' + extent.join(',') + ',' + proj;\n *      const xhr = new XMLHttpRequest();\n *      xhr.open('GET', url);\n *      const onError = function() {\n *        vectorSource.removeLoadedExtent(extent);\n *        failure();\n *      }\n *      xhr.onerror = onError;\n *      xhr.onload = function() {\n *        if (xhr.status == 200) {\n *          const features = vectorSource.getFormat().readFeatures(xhr.responseText);\n *          vectorSource.addFeatures(features);\n *          success(features);\n *        } else {\n *          onError();\n *        }\n *      }\n *      xhr.send();\n *    },\n *    strategy: bbox,\n *  });\n * ```\n * @property {boolean} [overlaps=true] This source may have overlapping geometries.\n * Setting this to `false` (e.g. for sources with polygons that represent administrative\n * boundaries or TopoJSON sources) allows the renderer to optimise fill and\n * stroke operations.\n * @property {LoadingStrategy} [strategy] The loading strategy to use.\n * By default an {@link module:ol/loadingstrategy.all}\n * strategy is used, a one-off strategy which loads all features at once.\n * @property {string|import(\"../featureloader.js\").FeatureUrlFunction} [url]\n * Setting this option instructs the source to load features using an XHR loader\n * (see {@link module:ol/featureloader.xhr}). Use a `string` and an\n * {@link module:ol/loadingstrategy.all} for a one-off download of all features from\n * the given URL. Use a {@link module:ol/featureloader~FeatureUrlFunction} to generate the url with\n * other loading strategies.\n * Requires `format` to be set as well.\n * When default XHR feature loader is provided, the features will\n * be transformed from the data projection to the view projection\n * during parsing. If your remote data source does not advertise its projection\n * properly, this transformation will be incorrect. For some formats, the\n * default projection (usually EPSG:4326) can be overridden by setting the\n * dataProjection constructor option on the format.\n * Note that if a source contains non-feature data, such as a GeoJSON geometry\n * or a KML NetworkLink, these will be ignored. Use a custom loader to load these.\n * @property {boolean} [useSpatialIndex=true]\n * By default, an RTree is used as spatial index. When features are removed and\n * added frequently, and the total number of features is low, setting this to\n * `false` may improve performance.\n *\n * Note that\n * {@link module:ol/source/Vector~VectorSource#getFeaturesInExtent},\n * {@link module:ol/source/Vector~VectorSource#getClosestFeatureToCoordinate} and\n * {@link module:ol/source/Vector~VectorSource#getExtent} cannot be used when `useSpatialIndex` is\n * set to `false`, and {@link module:ol/source/Vector~VectorSource#forEachFeatureInExtent} will loop\n * through all features.\n *\n * When set to `false`, the features will be maintained in an\n * {@link module:ol/Collection~Collection}, which can be retrieved through\n * {@link module:ol/source/Vector~VectorSource#getFeaturesCollection}.\n * @property {boolean} [wrapX=true] Wrap the world horizontally. For vector editing across the\n * -180° and 180° meridians to work properly, this should be set to `false`. The\n * resulting geometry coordinates will then exceed the world bounds.\n * @template {import(\"../geom/Geometry.js\").default} [Geometry=import(\"../geom/Geometry.js\").default]\n */\n\n/**\n * @classdesc\n * Provides a source of features for vector layers. Vector features provided\n * by this source are suitable for editing. See {@link module:ol/source/VectorTile~VectorTile} for\n * vector data that is optimized for rendering.\n *\n * @fires VectorSourceEvent\n * @api\n * @template {import(\"../geom/Geometry.js\").default} [Geometry=import(\"../geom/Geometry.js\").default]\n */\nclass VectorSource extends Source {\n  /**\n   * @param {Options<Geometry>} [options] Vector source options.\n   */\n  constructor(options) {\n    options = options || {};\n\n    super({\n      attributions: options.attributions,\n      interpolate: true,\n      projection: undefined,\n      state: 'ready',\n      wrapX: options.wrapX !== undefined ? options.wrapX : true,\n    });\n\n    /***\n     * @type {VectorSourceOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {VectorSourceOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {VectorSourceOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @private\n     * @type {import(\"../featureloader.js\").FeatureLoader}\n     */\n    this.loader_ = VOID;\n\n    /**\n     * @private\n     * @type {import(\"../format/Feature.js\").default|undefined}\n     */\n    this.format_ = options.format;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.overlaps_ = options.overlaps === undefined ? true : options.overlaps;\n\n    /**\n     * @private\n     * @type {string|import(\"../featureloader.js\").FeatureUrlFunction|undefined}\n     */\n    this.url_ = options.url;\n\n    if (options.loader !== undefined) {\n      this.loader_ = options.loader;\n    } else if (this.url_ !== undefined) {\n      assert(this.format_, 7); // `format` must be set when `url` is set\n      // create a XHR feature loader for \"url\" and \"format\"\n      this.loader_ = xhr(\n        this.url_,\n        /** @type {import(\"../format/Feature.js\").default} */ (this.format_)\n      );\n    }\n\n    /**\n     * @private\n     * @type {LoadingStrategy}\n     */\n    this.strategy_ =\n      options.strategy !== undefined ? options.strategy : allStrategy;\n\n    const useSpatialIndex =\n      options.useSpatialIndex !== undefined ? options.useSpatialIndex : true;\n\n    /**\n     * @private\n     * @type {RBush<import(\"../Feature.js\").default<Geometry>>}\n     */\n    this.featuresRtree_ = useSpatialIndex ? new RBush() : null;\n\n    /**\n     * @private\n     * @type {RBush<{extent: import(\"../extent.js\").Extent}>}\n     */\n    this.loadedExtentsRtree_ = new RBush();\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.loadingExtentsCount_ = 0;\n\n    /**\n     * @private\n     * @type {!Object<string, import(\"../Feature.js\").default<Geometry>>}\n     */\n    this.nullGeometryFeatures_ = {};\n\n    /**\n     * A lookup of features by id (the return from feature.getId()).\n     * @private\n     * @type {!Object<string, import(\"../Feature.js\").default<Geometry>>}\n     */\n    this.idIndex_ = {};\n\n    /**\n     * A lookup of features by uid (using getUid(feature)).\n     * @private\n     * @type {!Object<string, import(\"../Feature.js\").default<Geometry>>}\n     */\n    this.uidIndex_ = {};\n\n    /**\n     * @private\n     * @type {Object<string, Array<import(\"../events.js\").EventsKey>>}\n     */\n    this.featureChangeKeys_ = {};\n\n    /**\n     * @private\n     * @type {Collection<import(\"../Feature.js\").default<Geometry>>|null}\n     */\n    this.featuresCollection_ = null;\n\n    /** @type {Collection<import(\"../Feature.js\").default<Geometry>>} */\n    let collection;\n    /** @type {Array<import(\"../Feature.js\").default<Geometry>>} */\n    let features;\n    if (Array.isArray(options.features)) {\n      features = options.features;\n    } else if (options.features) {\n      collection = options.features;\n      features = collection.getArray();\n    }\n    if (!useSpatialIndex && collection === undefined) {\n      collection = new Collection(features);\n    }\n    if (features !== undefined) {\n      this.addFeaturesInternal(features);\n    }\n    if (collection !== undefined) {\n      this.bindFeaturesCollection_(collection);\n    }\n  }\n\n  /**\n   * Add a single feature to the source.  If you want to add a batch of features\n   * at once, call {@link module:ol/source/Vector~VectorSource#addFeatures #addFeatures()}\n   * instead. A feature will not be added to the source if feature with\n   * the same id is already there. The reason for this behavior is to avoid\n   * feature duplication when using bbox or tile loading strategies.\n   * Note: this also applies if an {@link module:ol/Collection~Collection} is used for features,\n   * meaning that if a feature with a duplicate id is added in the collection, it will\n   * be removed from it right away.\n   * @param {import(\"../Feature.js\").default<Geometry>} feature Feature to add.\n   * @api\n   */\n  addFeature(feature) {\n    this.addFeatureInternal(feature);\n    this.changed();\n  }\n\n  /**\n   * Add a feature without firing a `change` event.\n   * @param {import(\"../Feature.js\").default<Geometry>} feature Feature.\n   * @protected\n   */\n  addFeatureInternal(feature) {\n    const featureKey = getUid(feature);\n\n    if (!this.addToIndex_(featureKey, feature)) {\n      if (this.featuresCollection_) {\n        this.featuresCollection_.remove(feature);\n      }\n      return;\n    }\n\n    this.setupChangeEvents_(featureKey, feature);\n\n    const geometry = feature.getGeometry();\n    if (geometry) {\n      const extent = geometry.getExtent();\n      if (this.featuresRtree_) {\n        this.featuresRtree_.insert(extent, feature);\n      }\n    } else {\n      this.nullGeometryFeatures_[featureKey] = feature;\n    }\n\n    this.dispatchEvent(\n      new VectorSourceEvent(VectorEventType.ADDFEATURE, feature)\n    );\n  }\n\n  /**\n   * @param {string} featureKey Unique identifier for the feature.\n   * @param {import(\"../Feature.js\").default<Geometry>} feature The feature.\n   * @private\n   */\n  setupChangeEvents_(featureKey, feature) {\n    this.featureChangeKeys_[featureKey] = [\n      listen(feature, EventType.CHANGE, this.handleFeatureChange_, this),\n      listen(\n        feature,\n        ObjectEventType.PROPERTYCHANGE,\n        this.handleFeatureChange_,\n        this\n      ),\n    ];\n  }\n\n  /**\n   * @param {string} featureKey Unique identifier for the feature.\n   * @param {import(\"../Feature.js\").default<Geometry>} feature The feature.\n   * @return {boolean} The feature is \"valid\", in the sense that it is also a\n   *     candidate for insertion into the Rtree.\n   * @private\n   */\n  addToIndex_(featureKey, feature) {\n    let valid = true;\n    const id = feature.getId();\n    if (id !== undefined) {\n      if (!(id.toString() in this.idIndex_)) {\n        this.idIndex_[id.toString()] = feature;\n      } else {\n        valid = false;\n      }\n    }\n    if (valid) {\n      assert(!(featureKey in this.uidIndex_), 30); // The passed `feature` was already added to the source\n      this.uidIndex_[featureKey] = feature;\n    }\n    return valid;\n  }\n\n  /**\n   * Add a batch of features to the source.\n   * @param {Array<import(\"../Feature.js\").default<Geometry>>} features Features to add.\n   * @api\n   */\n  addFeatures(features) {\n    this.addFeaturesInternal(features);\n    this.changed();\n  }\n\n  /**\n   * Add features without firing a `change` event.\n   * @param {Array<import(\"../Feature.js\").default<Geometry>>} features Features.\n   * @protected\n   */\n  addFeaturesInternal(features) {\n    const extents = [];\n    const newFeatures = [];\n    const geometryFeatures = [];\n\n    for (let i = 0, length = features.length; i < length; i++) {\n      const feature = features[i];\n      const featureKey = getUid(feature);\n      if (this.addToIndex_(featureKey, feature)) {\n        newFeatures.push(feature);\n      }\n    }\n\n    for (let i = 0, length = newFeatures.length; i < length; i++) {\n      const feature = newFeatures[i];\n      const featureKey = getUid(feature);\n      this.setupChangeEvents_(featureKey, feature);\n\n      const geometry = feature.getGeometry();\n      if (geometry) {\n        const extent = geometry.getExtent();\n        extents.push(extent);\n        geometryFeatures.push(feature);\n      } else {\n        this.nullGeometryFeatures_[featureKey] = feature;\n      }\n    }\n    if (this.featuresRtree_) {\n      this.featuresRtree_.load(extents, geometryFeatures);\n    }\n\n    if (this.hasListener(VectorEventType.ADDFEATURE)) {\n      for (let i = 0, length = newFeatures.length; i < length; i++) {\n        this.dispatchEvent(\n          new VectorSourceEvent(VectorEventType.ADDFEATURE, newFeatures[i])\n        );\n      }\n    }\n  }\n\n  /**\n   * @param {!Collection<import(\"../Feature.js\").default<Geometry>>} collection Collection.\n   * @private\n   */\n  bindFeaturesCollection_(collection) {\n    let modifyingCollection = false;\n    this.addEventListener(\n      VectorEventType.ADDFEATURE,\n      /**\n       * @param {VectorSourceEvent<Geometry>} evt The vector source event\n       */\n      function (evt) {\n        if (!modifyingCollection) {\n          modifyingCollection = true;\n          collection.push(evt.feature);\n          modifyingCollection = false;\n        }\n      }\n    );\n    this.addEventListener(\n      VectorEventType.REMOVEFEATURE,\n      /**\n       * @param {VectorSourceEvent<Geometry>} evt The vector source event\n       */\n      function (evt) {\n        if (!modifyingCollection) {\n          modifyingCollection = true;\n          collection.remove(evt.feature);\n          modifyingCollection = false;\n        }\n      }\n    );\n    collection.addEventListener(\n      CollectionEventType.ADD,\n      /**\n       * @param {import(\"../Collection.js\").CollectionEvent<import(\"../Feature.js\").default<Geometry>>} evt The collection event\n       */\n      (evt) => {\n        if (!modifyingCollection) {\n          modifyingCollection = true;\n          this.addFeature(evt.element);\n          modifyingCollection = false;\n        }\n      }\n    );\n    collection.addEventListener(\n      CollectionEventType.REMOVE,\n      /**\n       * @param {import(\"../Collection.js\").CollectionEvent<import(\"../Feature.js\").default<Geometry>>} evt The collection event\n       */\n      (evt) => {\n        if (!modifyingCollection) {\n          modifyingCollection = true;\n          this.removeFeature(evt.element);\n          modifyingCollection = false;\n        }\n      }\n    );\n    this.featuresCollection_ = collection;\n  }\n\n  /**\n   * Remove all features from the source.\n   * @param {boolean} [fast] Skip dispatching of {@link module:ol/source/Vector.VectorSourceEvent#event:removefeature} events.\n   * @api\n   */\n  clear(fast) {\n    if (fast) {\n      for (const featureId in this.featureChangeKeys_) {\n        const keys = this.featureChangeKeys_[featureId];\n        keys.forEach(unlistenByKey);\n      }\n      if (!this.featuresCollection_) {\n        this.featureChangeKeys_ = {};\n        this.idIndex_ = {};\n        this.uidIndex_ = {};\n      }\n    } else {\n      if (this.featuresRtree_) {\n        const removeAndIgnoreReturn = (feature) => {\n          this.removeFeatureInternal(feature);\n        };\n        this.featuresRtree_.forEach(removeAndIgnoreReturn);\n        for (const id in this.nullGeometryFeatures_) {\n          this.removeFeatureInternal(this.nullGeometryFeatures_[id]);\n        }\n      }\n    }\n    if (this.featuresCollection_) {\n      this.featuresCollection_.clear();\n    }\n\n    if (this.featuresRtree_) {\n      this.featuresRtree_.clear();\n    }\n    this.nullGeometryFeatures_ = {};\n\n    const clearEvent = new VectorSourceEvent(VectorEventType.CLEAR);\n    this.dispatchEvent(clearEvent);\n    this.changed();\n  }\n\n  /**\n   * Iterate through all features on the source, calling the provided callback\n   * with each one.  If the callback returns any \"truthy\" value, iteration will\n   * stop and the function will return the same value.\n   * Note: this function only iterate through the feature that have a defined geometry.\n   *\n   * @param {function(import(\"../Feature.js\").default<Geometry>): T} callback Called with each feature\n   *     on the source.  Return a truthy value to stop iteration.\n   * @return {T|undefined} The return value from the last call to the callback.\n   * @template T\n   * @api\n   */\n  forEachFeature(callback) {\n    if (this.featuresRtree_) {\n      return this.featuresRtree_.forEach(callback);\n    } else if (this.featuresCollection_) {\n      this.featuresCollection_.forEach(callback);\n    }\n  }\n\n  /**\n   * Iterate through all features whose geometries contain the provided\n   * coordinate, calling the callback with each feature.  If the callback returns\n   * a \"truthy\" value, iteration will stop and the function will return the same\n   * value.\n   *\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {function(import(\"../Feature.js\").default<Geometry>): T} callback Called with each feature\n   *     whose goemetry contains the provided coordinate.\n   * @return {T|undefined} The return value from the last call to the callback.\n   * @template T\n   */\n  forEachFeatureAtCoordinateDirect(coordinate, callback) {\n    const extent = [coordinate[0], coordinate[1], coordinate[0], coordinate[1]];\n    return this.forEachFeatureInExtent(extent, function (feature) {\n      const geometry = feature.getGeometry();\n      if (geometry.intersectsCoordinate(coordinate)) {\n        return callback(feature);\n      }\n      return undefined;\n    });\n  }\n\n  /**\n   * Iterate through all features whose bounding box intersects the provided\n   * extent (note that the feature's geometry may not intersect the extent),\n   * calling the callback with each feature.  If the callback returns a \"truthy\"\n   * value, iteration will stop and the function will return the same value.\n   *\n   * If you are interested in features whose geometry intersects an extent, call\n   * the {@link module:ol/source/Vector~VectorSource#forEachFeatureIntersectingExtent #forEachFeatureIntersectingExtent()} method instead.\n   *\n   * When `useSpatialIndex` is set to false, this method will loop through all\n   * features, equivalent to {@link module:ol/source/Vector~VectorSource#forEachFeature #forEachFeature()}.\n   *\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {function(import(\"../Feature.js\").default<Geometry>): T} callback Called with each feature\n   *     whose bounding box intersects the provided extent.\n   * @return {T|undefined} The return value from the last call to the callback.\n   * @template T\n   * @api\n   */\n  forEachFeatureInExtent(extent, callback) {\n    if (this.featuresRtree_) {\n      return this.featuresRtree_.forEachInExtent(extent, callback);\n    } else if (this.featuresCollection_) {\n      this.featuresCollection_.forEach(callback);\n    }\n  }\n\n  /**\n   * Iterate through all features whose geometry intersects the provided extent,\n   * calling the callback with each feature.  If the callback returns a \"truthy\"\n   * value, iteration will stop and the function will return the same value.\n   *\n   * If you only want to test for bounding box intersection, call the\n   * {@link module:ol/source/Vector~VectorSource#forEachFeatureInExtent #forEachFeatureInExtent()} method instead.\n   *\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {function(import(\"../Feature.js\").default<Geometry>): T} callback Called with each feature\n   *     whose geometry intersects the provided extent.\n   * @return {T|undefined} The return value from the last call to the callback.\n   * @template T\n   * @api\n   */\n  forEachFeatureIntersectingExtent(extent, callback) {\n    return this.forEachFeatureInExtent(\n      extent,\n      /**\n       * @param {import(\"../Feature.js\").default<Geometry>} feature Feature.\n       * @return {T|undefined} The return value from the last call to the callback.\n       */\n      function (feature) {\n        const geometry = feature.getGeometry();\n        if (geometry.intersectsExtent(extent)) {\n          const result = callback(feature);\n          if (result) {\n            return result;\n          }\n        }\n      }\n    );\n  }\n\n  /**\n   * Get the features collection associated with this source. Will be `null`\n   * unless the source was configured with `useSpatialIndex` set to `false`, or\n   * with an {@link module:ol/Collection~Collection} as `features`.\n   * @return {Collection<import(\"../Feature.js\").default<Geometry>>|null} The collection of features.\n   * @api\n   */\n  getFeaturesCollection() {\n    return this.featuresCollection_;\n  }\n\n  /**\n   * Get a snapshot of the features currently on the source in random order. The returned array\n   * is a copy, the features are references to the features in the source.\n   * @return {Array<import(\"../Feature.js\").default<Geometry>>} Features.\n   * @api\n   */\n  getFeatures() {\n    let features;\n    if (this.featuresCollection_) {\n      features = this.featuresCollection_.getArray().slice(0);\n    } else if (this.featuresRtree_) {\n      features = this.featuresRtree_.getAll();\n      if (!isEmpty(this.nullGeometryFeatures_)) {\n        extend(features, Object.values(this.nullGeometryFeatures_));\n      }\n    }\n    return /** @type {Array<import(\"../Feature.js\").default<Geometry>>} */ (\n      features\n    );\n  }\n\n  /**\n   * Get all features whose geometry intersects the provided coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @return {Array<import(\"../Feature.js\").default<Geometry>>} Features.\n   * @api\n   */\n  getFeaturesAtCoordinate(coordinate) {\n    const features = [];\n    this.forEachFeatureAtCoordinateDirect(coordinate, function (feature) {\n      features.push(feature);\n    });\n    return features;\n  }\n\n  /**\n   * Get all features whose bounding box intersects the provided extent.  Note that this returns an array of\n   * all features intersecting the given extent in random order (so it may include\n   * features whose geometries do not intersect the extent).\n   *\n   * When `useSpatialIndex` is set to false, this method will return all\n   * features.\n   *\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {import(\"../proj/Projection.js\").default} [projection] Include features\n   * where `extent` exceeds the x-axis bounds of `projection` and wraps around the world.\n   * @return {Array<import(\"../Feature.js\").default<Geometry>>} Features.\n   * @api\n   */\n  getFeaturesInExtent(extent, projection) {\n    if (this.featuresRtree_) {\n      const multiWorld = projection && projection.canWrapX() && this.getWrapX();\n\n      if (!multiWorld) {\n        return this.featuresRtree_.getInExtent(extent);\n      }\n\n      const extents = wrapAndSliceX(extent, projection);\n\n      return [].concat(\n        ...extents.map((anExtent) => this.featuresRtree_.getInExtent(anExtent))\n      );\n    } else if (this.featuresCollection_) {\n      return this.featuresCollection_.getArray().slice(0);\n    }\n    return [];\n  }\n\n  /**\n   * Get the closest feature to the provided coordinate.\n   *\n   * This method is not available when the source is configured with\n   * `useSpatialIndex` set to `false`.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {function(import(\"../Feature.js\").default<Geometry>):boolean} [filter] Feature filter function.\n   *     The filter function will receive one argument, the {@link module:ol/Feature~Feature feature}\n   *     and it should return a boolean value. By default, no filtering is made.\n   * @return {import(\"../Feature.js\").default<Geometry>} Closest feature.\n   * @api\n   */\n  getClosestFeatureToCoordinate(coordinate, filter) {\n    // Find the closest feature using branch and bound.  We start searching an\n    // infinite extent, and find the distance from the first feature found.  This\n    // becomes the closest feature.  We then compute a smaller extent which any\n    // closer feature must intersect.  We continue searching with this smaller\n    // extent, trying to find a closer feature.  Every time we find a closer\n    // feature, we update the extent being searched so that any even closer\n    // feature must intersect it.  We continue until we run out of features.\n    const x = coordinate[0];\n    const y = coordinate[1];\n    let closestFeature = null;\n    const closestPoint = [NaN, NaN];\n    let minSquaredDistance = Infinity;\n    const extent = [-Infinity, -Infinity, Infinity, Infinity];\n    filter = filter ? filter : TRUE;\n    this.featuresRtree_.forEachInExtent(\n      extent,\n      /**\n       * @param {import(\"../Feature.js\").default<Geometry>} feature Feature.\n       */\n      function (feature) {\n        if (filter(feature)) {\n          const geometry = feature.getGeometry();\n          const previousMinSquaredDistance = minSquaredDistance;\n          minSquaredDistance = geometry.closestPointXY(\n            x,\n            y,\n            closestPoint,\n            minSquaredDistance\n          );\n          if (minSquaredDistance < previousMinSquaredDistance) {\n            closestFeature = feature;\n            // This is sneaky.  Reduce the extent that it is currently being\n            // searched while the R-Tree traversal using this same extent object\n            // is still in progress.  This is safe because the new extent is\n            // strictly contained by the old extent.\n            const minDistance = Math.sqrt(minSquaredDistance);\n            extent[0] = x - minDistance;\n            extent[1] = y - minDistance;\n            extent[2] = x + minDistance;\n            extent[3] = y + minDistance;\n          }\n        }\n      }\n    );\n    return closestFeature;\n  }\n\n  /**\n   * Get the extent of the features currently in the source.\n   *\n   * This method is not available when the source is configured with\n   * `useSpatialIndex` set to `false`.\n   * @param {import(\"../extent.js\").Extent} [extent] Destination extent. If provided, no new extent\n   *     will be created. Instead, that extent's coordinates will be overwritten.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   * @api\n   */\n  getExtent(extent) {\n    return this.featuresRtree_.getExtent(extent);\n  }\n\n  /**\n   * Get a feature by its identifier (the value returned by feature.getId()).\n   * Note that the index treats string and numeric identifiers as the same.  So\n   * `source.getFeatureById(2)` will return a feature with id `'2'` or `2`.\n   *\n   * @param {string|number} id Feature identifier.\n   * @return {import(\"../Feature.js\").default<Geometry>|null} The feature (or `null` if not found).\n   * @api\n   */\n  getFeatureById(id) {\n    const feature = this.idIndex_[id.toString()];\n    return feature !== undefined ? feature : null;\n  }\n\n  /**\n   * Get a feature by its internal unique identifier (using `getUid`).\n   *\n   * @param {string} uid Feature identifier.\n   * @return {import(\"../Feature.js\").default<Geometry>|null} The feature (or `null` if not found).\n   */\n  getFeatureByUid(uid) {\n    const feature = this.uidIndex_[uid];\n    return feature !== undefined ? feature : null;\n  }\n\n  /**\n   * Get the format associated with this source.\n   *\n   * @return {import(\"../format/Feature.js\").default|undefined} The feature format.\n   * @api\n   */\n  getFormat() {\n    return this.format_;\n  }\n\n  /**\n   * @return {boolean} The source can have overlapping geometries.\n   */\n  getOverlaps() {\n    return this.overlaps_;\n  }\n\n  /**\n   * Get the url associated with this source.\n   *\n   * @return {string|import(\"../featureloader.js\").FeatureUrlFunction|undefined} The url.\n   * @api\n   */\n  getUrl() {\n    return this.url_;\n  }\n\n  /**\n   * @param {Event} event Event.\n   * @private\n   */\n  handleFeatureChange_(event) {\n    const feature = /** @type {import(\"../Feature.js\").default<Geometry>} */ (\n      event.target\n    );\n    const featureKey = getUid(feature);\n    const geometry = feature.getGeometry();\n    if (!geometry) {\n      if (!(featureKey in this.nullGeometryFeatures_)) {\n        if (this.featuresRtree_) {\n          this.featuresRtree_.remove(feature);\n        }\n        this.nullGeometryFeatures_[featureKey] = feature;\n      }\n    } else {\n      const extent = geometry.getExtent();\n      if (featureKey in this.nullGeometryFeatures_) {\n        delete this.nullGeometryFeatures_[featureKey];\n        if (this.featuresRtree_) {\n          this.featuresRtree_.insert(extent, feature);\n        }\n      } else {\n        if (this.featuresRtree_) {\n          this.featuresRtree_.update(extent, feature);\n        }\n      }\n    }\n    const id = feature.getId();\n    if (id !== undefined) {\n      const sid = id.toString();\n      if (this.idIndex_[sid] !== feature) {\n        this.removeFromIdIndex_(feature);\n        this.idIndex_[sid] = feature;\n      }\n    } else {\n      this.removeFromIdIndex_(feature);\n      this.uidIndex_[featureKey] = feature;\n    }\n    this.changed();\n    this.dispatchEvent(\n      new VectorSourceEvent(VectorEventType.CHANGEFEATURE, feature)\n    );\n  }\n\n  /**\n   * Returns true if the feature is contained within the source.\n   * @param {import(\"../Feature.js\").default<Geometry>} feature Feature.\n   * @return {boolean} Has feature.\n   * @api\n   */\n  hasFeature(feature) {\n    const id = feature.getId();\n    if (id !== undefined) {\n      return id in this.idIndex_;\n    }\n    return getUid(feature) in this.uidIndex_;\n  }\n\n  /**\n   * @return {boolean} Is empty.\n   */\n  isEmpty() {\n    if (this.featuresRtree_) {\n      return (\n        this.featuresRtree_.isEmpty() && isEmpty(this.nullGeometryFeatures_)\n      );\n    }\n    if (this.featuresCollection_) {\n      return this.featuresCollection_.getLength() === 0;\n    }\n    return true;\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {number} resolution Resolution.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   */\n  loadFeatures(extent, resolution, projection) {\n    const loadedExtentsRtree = this.loadedExtentsRtree_;\n    const extentsToLoad = this.strategy_(extent, resolution, projection);\n    for (let i = 0, ii = extentsToLoad.length; i < ii; ++i) {\n      const extentToLoad = extentsToLoad[i];\n      const alreadyLoaded = loadedExtentsRtree.forEachInExtent(\n        extentToLoad,\n        /**\n         * @param {{extent: import(\"../extent.js\").Extent}} object Object.\n         * @return {boolean} Contains.\n         */\n        function (object) {\n          return containsExtent(object.extent, extentToLoad);\n        }\n      );\n      if (!alreadyLoaded) {\n        ++this.loadingExtentsCount_;\n        this.dispatchEvent(\n          new VectorSourceEvent(VectorEventType.FEATURESLOADSTART)\n        );\n        this.loader_.call(\n          this,\n          extentToLoad,\n          resolution,\n          projection,\n          (features) => {\n            --this.loadingExtentsCount_;\n            this.dispatchEvent(\n              new VectorSourceEvent(\n                VectorEventType.FEATURESLOADEND,\n                undefined,\n                features\n              )\n            );\n          },\n          () => {\n            --this.loadingExtentsCount_;\n            this.dispatchEvent(\n              new VectorSourceEvent(VectorEventType.FEATURESLOADERROR)\n            );\n          }\n        );\n        loadedExtentsRtree.insert(extentToLoad, {extent: extentToLoad.slice()});\n      }\n    }\n    this.loading =\n      this.loader_.length < 4 ? false : this.loadingExtentsCount_ > 0;\n  }\n\n  refresh() {\n    this.clear(true);\n    this.loadedExtentsRtree_.clear();\n    super.refresh();\n  }\n\n  /**\n   * Remove an extent from the list of loaded extents.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @api\n   */\n  removeLoadedExtent(extent) {\n    const loadedExtentsRtree = this.loadedExtentsRtree_;\n    let obj;\n    loadedExtentsRtree.forEachInExtent(extent, function (object) {\n      if (equals(object.extent, extent)) {\n        obj = object;\n        return true;\n      }\n    });\n    if (obj) {\n      loadedExtentsRtree.remove(obj);\n    }\n  }\n\n  /**\n   * Remove a single feature from the source.  If you want to remove all features\n   * at once, use the {@link module:ol/source/Vector~VectorSource#clear #clear()} method\n   * instead.\n   * @param {import(\"../Feature.js\").default<Geometry>} feature Feature to remove.\n   * @api\n   */\n  removeFeature(feature) {\n    if (!feature) {\n      return;\n    }\n    const featureKey = getUid(feature);\n    if (featureKey in this.nullGeometryFeatures_) {\n      delete this.nullGeometryFeatures_[featureKey];\n    } else {\n      if (this.featuresRtree_) {\n        this.featuresRtree_.remove(feature);\n      }\n    }\n    const result = this.removeFeatureInternal(feature);\n    if (result) {\n      this.changed();\n    }\n  }\n\n  /**\n   * Remove feature without firing a `change` event.\n   * @param {import(\"../Feature.js\").default<Geometry>} feature Feature.\n   * @return {import(\"../Feature.js\").default<Geometry>|undefined} The removed feature\n   *     (or undefined if the feature was not found).\n   * @protected\n   */\n  removeFeatureInternal(feature) {\n    const featureKey = getUid(feature);\n    const featureChangeKeys = this.featureChangeKeys_[featureKey];\n    if (!featureChangeKeys) {\n      return;\n    }\n    featureChangeKeys.forEach(unlistenByKey);\n    delete this.featureChangeKeys_[featureKey];\n    const id = feature.getId();\n    if (id !== undefined) {\n      delete this.idIndex_[id.toString()];\n    }\n    delete this.uidIndex_[featureKey];\n    this.dispatchEvent(\n      new VectorSourceEvent(VectorEventType.REMOVEFEATURE, feature)\n    );\n    return feature;\n  }\n\n  /**\n   * Remove a feature from the id index.  Called internally when the feature id\n   * may have changed.\n   * @param {import(\"../Feature.js\").default<Geometry>} feature The feature.\n   * @return {boolean} Removed the feature from the index.\n   * @private\n   */\n  removeFromIdIndex_(feature) {\n    let removed = false;\n    for (const id in this.idIndex_) {\n      if (this.idIndex_[id] === feature) {\n        delete this.idIndex_[id];\n        removed = true;\n        break;\n      }\n    }\n    return removed;\n  }\n\n  /**\n   * Set the new loader of the source. The next render cycle will use the\n   * new loader.\n   * @param {import(\"../featureloader.js\").FeatureLoader} loader The loader to set.\n   * @api\n   */\n  setLoader(loader) {\n    this.loader_ = loader;\n  }\n\n  /**\n   * Points the source to a new url. The next render cycle will use the new url.\n   * @param {string|import(\"../featureloader.js\").FeatureUrlFunction} url Url.\n   * @api\n   */\n  setUrl(url) {\n    assert(this.format_, 7); // `format` must be set when `url` is set\n    this.url_ = url;\n    this.setLoader(xhr(url, this.format_));\n  }\n}\n\nexport default VectorSource;\n","/**\n * @module ol/style/Circle\n */\n\nimport RegularShape from './RegularShape.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Fill.js\").default} [fill] Fill style.\n * @property {number} radius Circle radius.\n * @property {import(\"./Stroke.js\").default} [stroke] Stroke style.\n * @property {Array<number>} [displacement=[0,0]] displacement\n * @property {number|import(\"../size.js\").Size} [scale=1] Scale. A two dimensional scale will produce an ellipse.\n * Unless two dimensional scaling is required a better result may be obtained with an appropriate setting for `radius`.\n * @property {number} [rotation=0] Rotation in radians\n * (positive rotation clockwise, meaningful only when used in conjunction with a two dimensional scale).\n * @property {boolean} [rotateWithView=false] Whether to rotate the shape with the view\n * (meaningful only when used in conjunction with a two dimensional scale).\n * @property {\"declutter\"|\"obstacle\"|\"none\"|undefined} [declutterMode] Declutter mode\n */\n\n/**\n * @classdesc\n * Set circle style for vector features.\n * @api\n */\nclass CircleStyle extends RegularShape {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {radius: 5};\n\n    super({\n      points: Infinity,\n      fill: options.fill,\n      radius: options.radius,\n      stroke: options.stroke,\n      scale: options.scale !== undefined ? options.scale : 1,\n      rotation: options.rotation !== undefined ? options.rotation : 0,\n      rotateWithView:\n        options.rotateWithView !== undefined ? options.rotateWithView : false,\n      displacement:\n        options.displacement !== undefined ? options.displacement : [0, 0],\n      declutterMode: options.declutterMode,\n    });\n  }\n\n  /**\n   * Clones the style.\n   * @return {CircleStyle} The cloned style.\n   * @api\n   */\n  clone() {\n    const scale = this.getScale();\n    const style = new CircleStyle({\n      fill: this.getFill() ? this.getFill().clone() : undefined,\n      stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n      radius: this.getRadius(),\n      scale: Array.isArray(scale) ? scale.slice() : scale,\n      rotation: this.getRotation(),\n      rotateWithView: this.getRotateWithView(),\n      displacement: this.getDisplacement().slice(),\n      declutterMode: this.getDeclutterMode(),\n    });\n    style.setOpacity(this.getOpacity());\n    return style;\n  }\n\n  /**\n   * Set the circle radius.\n   *\n   * @param {number} radius Circle radius.\n   * @api\n   */\n  setRadius(radius) {\n    this.radius_ = radius;\n    this.render();\n  }\n}\n\nexport default CircleStyle;\n","/**\n * @module ol/style/Fill\n */\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike|null} [color=null] A color, gradient or pattern.\n * See {@link module:ol/color~Color} and {@link module:ol/colorlike~ColorLike} for possible formats.\n * Default null; if null, the Canvas/renderer default black will be used.\n */\n\n/**\n * @classdesc\n * Set fill style for vector features.\n * @api\n */\nclass Fill {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options || {};\n\n    /**\n     * @private\n     * @type {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike|null}\n     */\n    this.color_ = options.color !== undefined ? options.color : null;\n  }\n\n  /**\n   * Clones the style. The color is not cloned if it is an {@link module:ol/colorlike~ColorLike}.\n   * @return {Fill} The cloned style.\n   * @api\n   */\n  clone() {\n    const color = this.getColor();\n    return new Fill({\n      color: Array.isArray(color) ? color.slice() : color || undefined,\n    });\n  }\n\n  /**\n   * Get the fill color.\n   * @return {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike|null} Color.\n   * @api\n   */\n  getColor() {\n    return this.color_;\n  }\n\n  /**\n   * Set the color.\n   *\n   * @param {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike|null} color Color.\n   * @api\n   */\n  setColor(color) {\n    this.color_ = color;\n  }\n}\n\nexport default Fill;\n","/**\n * @module ol/style/IconImage\n */\n\nimport EventTarget from '../events/Target.js';\nimport EventType from '../events/EventType.js';\nimport ImageState from '../ImageState.js';\nimport {asString} from '../color.js';\nimport {createCanvasContext2D} from '../dom.js';\nimport {shared as iconImageCache} from './IconImageCache.js';\nimport {listenImage} from '../Image.js';\n\n/**\n * @type {CanvasRenderingContext2D}\n */\nlet taintedTestContext = null;\n\nclass IconImage extends EventTarget {\n  /**\n   * @param {HTMLImageElement|HTMLCanvasElement} image Image.\n   * @param {string|undefined} src Src.\n   * @param {import(\"../size.js\").Size} size Size.\n   * @param {?string} crossOrigin Cross origin.\n   * @param {import(\"../ImageState.js\").default} imageState Image state.\n   * @param {import(\"../color.js\").Color} color Color.\n   */\n  constructor(image, src, size, crossOrigin, imageState, color) {\n    super();\n\n    /**\n     * @private\n     * @type {HTMLImageElement|HTMLCanvasElement}\n     */\n    this.hitDetectionImage_ = null;\n\n    /**\n     * @private\n     * @type {HTMLImageElement|HTMLCanvasElement}\n     */\n    this.image_ = image;\n\n    /**\n     * @private\n     * @type {string|null}\n     */\n    this.crossOrigin_ = crossOrigin;\n\n    /**\n     * @private\n     * @type {Object<number, HTMLCanvasElement>}\n     */\n    this.canvas_ = {};\n\n    /**\n     * @private\n     * @type {import(\"../color.js\").Color}\n     */\n    this.color_ = color;\n\n    /**\n     * @private\n     * @type {?function():void}\n     */\n    this.unlisten_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../ImageState.js\").default}\n     */\n    this.imageState_ = imageState;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.size_ = size;\n\n    /**\n     * @private\n     * @type {string|undefined}\n     */\n    this.src_ = src;\n\n    /**\n     * @private\n     */\n    this.tainted_;\n  }\n\n  /**\n   * @private\n   */\n  initializeImage_() {\n    this.image_ = new Image();\n    if (this.crossOrigin_ !== null) {\n      this.image_.crossOrigin = this.crossOrigin_;\n    }\n  }\n\n  /**\n   * @private\n   * @return {boolean} The image canvas is tainted.\n   */\n  isTainted_() {\n    if (this.tainted_ === undefined && this.imageState_ === ImageState.LOADED) {\n      if (!taintedTestContext) {\n        taintedTestContext = createCanvasContext2D(1, 1, undefined, {\n          willReadFrequently: true,\n        });\n      }\n      taintedTestContext.drawImage(this.image_, 0, 0);\n      try {\n        taintedTestContext.getImageData(0, 0, 1, 1);\n        this.tainted_ = false;\n      } catch (e) {\n        taintedTestContext = null;\n        this.tainted_ = true;\n      }\n    }\n    return this.tainted_ === true;\n  }\n\n  /**\n   * @private\n   */\n  dispatchChangeEvent_() {\n    this.dispatchEvent(EventType.CHANGE);\n  }\n\n  /**\n   * @private\n   */\n  handleImageError_() {\n    this.imageState_ = ImageState.ERROR;\n    this.unlistenImage_();\n    this.dispatchChangeEvent_();\n  }\n\n  /**\n   * @private\n   */\n  handleImageLoad_() {\n    this.imageState_ = ImageState.LOADED;\n    if (this.size_) {\n      this.image_.width = this.size_[0];\n      this.image_.height = this.size_[1];\n    } else {\n      this.size_ = [this.image_.width, this.image_.height];\n    }\n    this.unlistenImage_();\n    this.dispatchChangeEvent_();\n  }\n\n  /**\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {HTMLImageElement|HTMLCanvasElement} Image or Canvas element.\n   */\n  getImage(pixelRatio) {\n    if (!this.image_) {\n      this.initializeImage_();\n    }\n    this.replaceColor_(pixelRatio);\n    return this.canvas_[pixelRatio] ? this.canvas_[pixelRatio] : this.image_;\n  }\n\n  /**\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {number} Image or Canvas element.\n   */\n  getPixelRatio(pixelRatio) {\n    this.replaceColor_(pixelRatio);\n    return this.canvas_[pixelRatio] ? pixelRatio : 1;\n  }\n\n  /**\n   * @return {import(\"../ImageState.js\").default} Image state.\n   */\n  getImageState() {\n    return this.imageState_;\n  }\n\n  /**\n   * @return {HTMLImageElement|HTMLCanvasElement} Image element.\n   */\n  getHitDetectionImage() {\n    if (!this.image_) {\n      this.initializeImage_();\n    }\n    if (!this.hitDetectionImage_) {\n      if (this.isTainted_()) {\n        const width = this.size_[0];\n        const height = this.size_[1];\n        const context = createCanvasContext2D(width, height);\n        context.fillRect(0, 0, width, height);\n        this.hitDetectionImage_ = context.canvas;\n      } else {\n        this.hitDetectionImage_ = this.image_;\n      }\n    }\n    return this.hitDetectionImage_;\n  }\n\n  /**\n   * Get the size of the icon (in pixels).\n   * @return {import(\"../size.js\").Size} Image size.\n   */\n  getSize() {\n    return this.size_;\n  }\n\n  /**\n   * @return {string|undefined} Image src.\n   */\n  getSrc() {\n    return this.src_;\n  }\n\n  /**\n   * Load not yet loaded URI.\n   */\n  load() {\n    if (this.imageState_ !== ImageState.IDLE) {\n      return;\n    }\n    if (!this.image_) {\n      this.initializeImage_();\n    }\n\n    this.imageState_ = ImageState.LOADING;\n    try {\n      /** @type {HTMLImageElement} */ (this.image_).src = this.src_;\n    } catch (e) {\n      this.handleImageError_();\n    }\n    this.unlisten_ = listenImage(\n      this.image_,\n      this.handleImageLoad_.bind(this),\n      this.handleImageError_.bind(this)\n    );\n  }\n\n  /**\n   * @param {number} pixelRatio Pixel ratio.\n   * @private\n   */\n  replaceColor_(pixelRatio) {\n    if (\n      !this.color_ ||\n      this.canvas_[pixelRatio] ||\n      this.imageState_ !== ImageState.LOADED\n    ) {\n      return;\n    }\n\n    const image = this.image_;\n    const canvas = document.createElement('canvas');\n    canvas.width = Math.ceil(image.width * pixelRatio);\n    canvas.height = Math.ceil(image.height * pixelRatio);\n\n    const ctx = canvas.getContext('2d');\n    ctx.scale(pixelRatio, pixelRatio);\n    ctx.drawImage(image, 0, 0);\n\n    ctx.globalCompositeOperation = 'multiply';\n    ctx.fillStyle = asString(this.color_);\n    ctx.fillRect(0, 0, canvas.width / pixelRatio, canvas.height / pixelRatio);\n\n    ctx.globalCompositeOperation = 'destination-in';\n    ctx.drawImage(image, 0, 0);\n\n    this.canvas_[pixelRatio] = canvas;\n  }\n\n  /**\n   * Discards event handlers which listen for load completion or errors.\n   *\n   * @private\n   */\n  unlistenImage_() {\n    if (this.unlisten_) {\n      this.unlisten_();\n      this.unlisten_ = null;\n    }\n  }\n}\n\n/**\n * @param {HTMLImageElement|HTMLCanvasElement} image Image.\n * @param {string} src Src.\n * @param {import(\"../size.js\").Size} size Size.\n * @param {?string} crossOrigin Cross origin.\n * @param {import(\"../ImageState.js\").default} imageState Image state.\n * @param {import(\"../color.js\").Color} color Color.\n * @return {IconImage} Icon image.\n */\nexport function get(image, src, size, crossOrigin, imageState, color) {\n  let iconImage = iconImageCache.get(src, crossOrigin, color);\n  if (!iconImage) {\n    iconImage = new IconImage(image, src, size, crossOrigin, imageState, color);\n    iconImageCache.set(src, crossOrigin, color, iconImage);\n  }\n  return iconImage;\n}\n\nexport default IconImage;\n","/**\n * @module ol/style/Icon\n */\nimport EventType from '../events/EventType.js';\nimport ImageState from '../ImageState.js';\nimport ImageStyle from './Image.js';\nimport {asArray} from '../color.js';\nimport {assert} from '../asserts.js';\nimport {get as getIconImage} from './IconImage.js';\nimport {getUid} from '../util.js';\n\n/**\n * @typedef {'fraction' | 'pixels'} IconAnchorUnits\n * Anchor unit can be either a fraction of the icon size or in pixels.\n */\n\n/**\n * @typedef {'bottom-left' | 'bottom-right' | 'top-left' | 'top-right'} IconOrigin\n * Icon origin. One of 'bottom-left', 'bottom-right', 'top-left', 'top-right'.\n */\n\n/**\n * @typedef {Object} Options\n * @property {Array<number>} [anchor=[0.5, 0.5]] Anchor. Default value is the icon center.\n * @property {IconOrigin} [anchorOrigin='top-left'] Origin of the anchor: `bottom-left`, `bottom-right`,\n * `top-left` or `top-right`.\n * @property {IconAnchorUnits} [anchorXUnits='fraction'] Units in which the anchor x value is\n * specified. A value of `'fraction'` indicates the x value is a fraction of the icon. A value of `'pixels'` indicates\n * the x value in pixels.\n * @property {IconAnchorUnits} [anchorYUnits='fraction'] Units in which the anchor y value is\n * specified. A value of `'fraction'` indicates the y value is a fraction of the icon. A value of `'pixels'` indicates\n * the y value in pixels.\n * @property {import(\"../color.js\").Color|string} [color] Color to tint the icon. If not specified,\n * the icon will be left as is.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images. Note that you must provide a\n * `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {HTMLImageElement|HTMLCanvasElement} [img] Image object for the icon. If the `src` option is not provided then the\n * provided image must already be loaded. And in that case, it is required\n * to provide the size of the image, with the `imgSize` option.\n * @property {import(\"../size.js\").Size} [imgSize] Image size in pixels. Only required if `img` is set and `src` is not.\n * The provided `imgSize` needs to match the actual size of the image.\n * @property {Array<number>} [displacement=[0, 0]] Displacement of the icon in pixels.\n * Positive values will shift the icon right and up.\n * @property {number} [opacity=1] Opacity of the icon.\n * @property {number} [width] The width of the icon in pixels. This can't be used together with `scale`.\n * @property {number} [height] The height of the icon in pixels. This can't be used together with `scale`.\n * @property {number|import(\"../size.js\").Size} [scale=1] Scale.\n * @property {boolean} [rotateWithView=false] Whether to rotate the icon with the view.\n * @property {number} [rotation=0] Rotation in radians (positive rotation clockwise).\n * @property {Array<number>} [offset=[0, 0]] Offset which, together with `size` and `offsetOrigin`, defines the\n * sub-rectangle to use from the original (sprite) image.\n * @property {IconOrigin} [offsetOrigin='top-left'] Origin of the offset: `bottom-left`, `bottom-right`,\n * `top-left` or `top-right`.\n * @property {import(\"../size.js\").Size} [size] Icon size in pixels. Used together with `offset` to define the\n * sub-rectangle to use from the original (sprite) image.\n * @property {string} [src] Image source URI.\n * @property {\"declutter\"|\"obstacle\"|\"none\"|undefined} [declutterMode] Declutter mode.\n */\n\n/**\n * @classdesc\n * Set icon style for vector features.\n * @api\n */\nclass Icon extends ImageStyle {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options || {};\n\n    /**\n     * @type {number}\n     */\n    const opacity = options.opacity !== undefined ? options.opacity : 1;\n\n    /**\n     * @type {number}\n     */\n    const rotation = options.rotation !== undefined ? options.rotation : 0;\n\n    /**\n     * @type {number|import(\"../size.js\").Size}\n     */\n    const scale = options.scale !== undefined ? options.scale : 1;\n\n    /**\n     * @type {boolean}\n     */\n    const rotateWithView =\n      options.rotateWithView !== undefined ? options.rotateWithView : false;\n\n    super({\n      opacity: opacity,\n      rotation: rotation,\n      scale: scale,\n      displacement:\n        options.displacement !== undefined ? options.displacement : [0, 0],\n      rotateWithView: rotateWithView,\n      declutterMode: options.declutterMode,\n    });\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.anchor_ = options.anchor !== undefined ? options.anchor : [0.5, 0.5];\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.normalizedAnchor_ = null;\n\n    /**\n     * @private\n     * @type {IconOrigin}\n     */\n    this.anchorOrigin_ =\n      options.anchorOrigin !== undefined ? options.anchorOrigin : 'top-left';\n\n    /**\n     * @private\n     * @type {IconAnchorUnits}\n     */\n    this.anchorXUnits_ =\n      options.anchorXUnits !== undefined ? options.anchorXUnits : 'fraction';\n\n    /**\n     * @private\n     * @type {IconAnchorUnits}\n     */\n    this.anchorYUnits_ =\n      options.anchorYUnits !== undefined ? options.anchorYUnits : 'fraction';\n\n    /**\n     * @private\n     * @type {?string}\n     */\n    this.crossOrigin_ =\n      options.crossOrigin !== undefined ? options.crossOrigin : null;\n\n    /**\n     * @type {HTMLImageElement|HTMLCanvasElement}\n     */\n    const image = options.img !== undefined ? options.img : null;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size|undefined}\n     */\n    this.imgSize_ = options.imgSize;\n\n    /**\n     * @type {string|undefined}\n     */\n    let src = options.src;\n\n    assert(!(src !== undefined && image), 4); // `image` and `src` cannot be provided at the same time\n    assert(!image || (image && this.imgSize_), 5); // `imgSize` must be set when `image` is provided\n\n    if ((src === undefined || src.length === 0) && image) {\n      src = /** @type {HTMLImageElement} */ (image).src || getUid(image);\n    }\n    assert(src !== undefined && src.length > 0, 6); // A defined and non-empty `src` or `image` must be provided\n\n    // `width` or `height` cannot be provided together with `scale`\n    assert(\n      !(\n        (options.width !== undefined || options.height !== undefined) &&\n        options.scale !== undefined\n      ),\n      69\n    );\n\n    /**\n     * @type {import(\"../ImageState.js\").default}\n     */\n    const imageState =\n      options.src !== undefined ? ImageState.IDLE : ImageState.LOADED;\n\n    /**\n     * @private\n     * @type {import(\"../color.js\").Color}\n     */\n    this.color_ = options.color !== undefined ? asArray(options.color) : null;\n\n    /**\n     * @private\n     * @type {import(\"./IconImage.js\").default}\n     */\n    this.iconImage_ = getIconImage(\n      image,\n      /** @type {string} */ (src),\n      this.imgSize_ !== undefined ? this.imgSize_ : null,\n      this.crossOrigin_,\n      imageState,\n      this.color_\n    );\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.offset_ = options.offset !== undefined ? options.offset : [0, 0];\n    /**\n     * @private\n     * @type {IconOrigin}\n     */\n    this.offsetOrigin_ =\n      options.offsetOrigin !== undefined ? options.offsetOrigin : 'top-left';\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.origin_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.size_ = options.size !== undefined ? options.size : null;\n\n    /**\n     * @type {number|undefined}\n     */\n    this.width_ = options.width;\n\n    /**\n     * @type {number|undefined}\n     */\n    this.height_ = options.height;\n\n    /**\n     * Recalculate the scale if width or height where given.\n     */\n    if (this.width_ !== undefined || this.height_ !== undefined) {\n      const image = this.getImage(1);\n      const setScale = () => {\n        this.updateScaleFromWidthAndHeight(this.width_, this.height_);\n      };\n      if (image.width > 0) {\n        this.updateScaleFromWidthAndHeight(this.width_, this.height_);\n      } else {\n        image.addEventListener('load', setScale);\n      }\n    }\n  }\n\n  /**\n   * Clones the style. The underlying Image/HTMLCanvasElement is not cloned.\n   * @return {Icon} The cloned style.\n   * @api\n   */\n  clone() {\n    const scale = this.getScale();\n    return new Icon({\n      anchor: this.anchor_.slice(),\n      anchorOrigin: this.anchorOrigin_,\n      anchorXUnits: this.anchorXUnits_,\n      anchorYUnits: this.anchorYUnits_,\n      color:\n        this.color_ && this.color_.slice\n          ? this.color_.slice()\n          : this.color_ || undefined,\n      crossOrigin: this.crossOrigin_,\n      imgSize: this.imgSize_,\n      offset: this.offset_.slice(),\n      offsetOrigin: this.offsetOrigin_,\n      opacity: this.getOpacity(),\n      rotateWithView: this.getRotateWithView(),\n      rotation: this.getRotation(),\n      scale: Array.isArray(scale) ? scale.slice() : scale,\n      size: this.size_ !== null ? this.size_.slice() : undefined,\n      src: this.getSrc(),\n      displacement: this.getDisplacement().slice(),\n      declutterMode: this.getDeclutterMode(),\n      width: this.width_,\n      height: this.height_,\n    });\n  }\n\n  /**\n   * Set the scale of the Icon by calculating it from given width and height and the\n   * width and height of the image.\n   *\n   * @private\n   * @param {number} width The width.\n   * @param {number} height The height.\n   */\n  updateScaleFromWidthAndHeight(width, height) {\n    const image = this.getImage(1);\n    if (width !== undefined && height !== undefined) {\n      super.setScale([width / image.width, height / image.height]);\n    } else if (width !== undefined) {\n      super.setScale([width / image.width, width / image.width]);\n    } else if (height !== undefined) {\n      super.setScale([height / image.height, height / image.height]);\n    } else {\n      super.setScale([1, 1]);\n    }\n  }\n\n  /**\n   * Get the anchor point in pixels. The anchor determines the center point for the\n   * symbolizer.\n   * @return {Array<number>} Anchor.\n   * @api\n   */\n  getAnchor() {\n    let anchor = this.normalizedAnchor_;\n    if (!anchor) {\n      anchor = this.anchor_;\n      const size = this.getSize();\n      if (\n        this.anchorXUnits_ == 'fraction' ||\n        this.anchorYUnits_ == 'fraction'\n      ) {\n        if (!size) {\n          return null;\n        }\n        anchor = this.anchor_.slice();\n        if (this.anchorXUnits_ == 'fraction') {\n          anchor[0] *= size[0];\n        }\n        if (this.anchorYUnits_ == 'fraction') {\n          anchor[1] *= size[1];\n        }\n      }\n\n      if (this.anchorOrigin_ != 'top-left') {\n        if (!size) {\n          return null;\n        }\n        if (anchor === this.anchor_) {\n          anchor = this.anchor_.slice();\n        }\n        if (\n          this.anchorOrigin_ == 'top-right' ||\n          this.anchorOrigin_ == 'bottom-right'\n        ) {\n          anchor[0] = -anchor[0] + size[0];\n        }\n        if (\n          this.anchorOrigin_ == 'bottom-left' ||\n          this.anchorOrigin_ == 'bottom-right'\n        ) {\n          anchor[1] = -anchor[1] + size[1];\n        }\n      }\n      this.normalizedAnchor_ = anchor;\n    }\n    const displacement = this.getDisplacement();\n    const scale = this.getScaleArray();\n    // anchor is scaled by renderer but displacement should not be scaled\n    // so divide by scale here\n    return [\n      anchor[0] - displacement[0] / scale[0],\n      anchor[1] + displacement[1] / scale[1],\n    ];\n  }\n\n  /**\n   * Set the anchor point. The anchor determines the center point for the\n   * symbolizer.\n   *\n   * @param {Array<number>} anchor Anchor.\n   * @api\n   */\n  setAnchor(anchor) {\n    this.anchor_ = anchor;\n    this.normalizedAnchor_ = null;\n  }\n\n  /**\n   * Get the icon color.\n   * @return {import(\"../color.js\").Color} Color.\n   * @api\n   */\n  getColor() {\n    return this.color_;\n  }\n\n  /**\n   * Get the image icon.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {HTMLImageElement|HTMLCanvasElement} Image or Canvas element.\n   * @api\n   */\n  getImage(pixelRatio) {\n    return this.iconImage_.getImage(pixelRatio);\n  }\n\n  /**\n   * Get the pixel ratio.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {number} The pixel ratio of the image.\n   * @api\n   */\n  getPixelRatio(pixelRatio) {\n    return this.iconImage_.getPixelRatio(pixelRatio);\n  }\n\n  /**\n   * @return {import(\"../size.js\").Size} Image size.\n   */\n  getImageSize() {\n    return this.iconImage_.getSize();\n  }\n\n  /**\n   * @return {import(\"../ImageState.js\").default} Image state.\n   */\n  getImageState() {\n    return this.iconImage_.getImageState();\n  }\n\n  /**\n   * @return {HTMLImageElement|HTMLCanvasElement} Image element.\n   */\n  getHitDetectionImage() {\n    return this.iconImage_.getHitDetectionImage();\n  }\n\n  /**\n   * Get the origin of the symbolizer.\n   * @return {Array<number>} Origin.\n   * @api\n   */\n  getOrigin() {\n    if (this.origin_) {\n      return this.origin_;\n    }\n    let offset = this.offset_;\n\n    if (this.offsetOrigin_ != 'top-left') {\n      const size = this.getSize();\n      const iconImageSize = this.iconImage_.getSize();\n      if (!size || !iconImageSize) {\n        return null;\n      }\n      offset = offset.slice();\n      if (\n        this.offsetOrigin_ == 'top-right' ||\n        this.offsetOrigin_ == 'bottom-right'\n      ) {\n        offset[0] = iconImageSize[0] - size[0] - offset[0];\n      }\n      if (\n        this.offsetOrigin_ == 'bottom-left' ||\n        this.offsetOrigin_ == 'bottom-right'\n      ) {\n        offset[1] = iconImageSize[1] - size[1] - offset[1];\n      }\n    }\n    this.origin_ = offset;\n    return this.origin_;\n  }\n\n  /**\n   * Get the image URL.\n   * @return {string|undefined} Image src.\n   * @api\n   */\n  getSrc() {\n    return this.iconImage_.getSrc();\n  }\n\n  /**\n   * Get the size of the icon (in pixels).\n   * @return {import(\"../size.js\").Size} Image size.\n   * @api\n   */\n  getSize() {\n    return !this.size_ ? this.iconImage_.getSize() : this.size_;\n  }\n\n  /**\n   * Get the width of the icon (in pixels).\n   * @return {number} Icon width (in pixels).\n   * @api\n   */\n  getWidth() {\n    return this.width_;\n  }\n\n  /**\n   * Get the height of the icon (in pixels).\n   * @return {number} Icon height (in pixels).\n   * @api\n   */\n  getHeight() {\n    return this.height_;\n  }\n\n  /**\n   * Set the width of the icon in pixels.\n   *\n   * @param {number} width The width to set.\n   */\n  setWidth(width) {\n    this.width_ = width;\n    this.updateScaleFromWidthAndHeight(width, this.height_);\n  }\n\n  /**\n   * Set the height of the icon in pixels.\n   *\n   * @param {number} height The height to set.\n   */\n  setHeight(height) {\n    this.height_ = height;\n    this.updateScaleFromWidthAndHeight(this.width_, height);\n  }\n\n  /**\n   * Set the scale and updates the width and height correspondingly.\n   *\n   * @param {number|import(\"../size.js\").Size} scale Scale.\n   * @override\n   * @api\n   */\n  setScale(scale) {\n    super.setScale(scale);\n    const image = this.getImage(1);\n    if (image) {\n      const widthScale = Array.isArray(scale) ? scale[0] : scale;\n      if (widthScale !== undefined) {\n        this.width_ = widthScale * image.width;\n      }\n      const heightScale = Array.isArray(scale) ? scale[1] : scale;\n      if (heightScale !== undefined) {\n        this.height_ = heightScale * image.height;\n      }\n    }\n  }\n\n  /**\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   */\n  listenImageChange(listener) {\n    this.iconImage_.addEventListener(EventType.CHANGE, listener);\n  }\n\n  /**\n   * Load not yet loaded URI.\n   * When rendering a feature with an icon style, the vector renderer will\n   * automatically call this method. However, you might want to call this\n   * method yourself for preloading or other purposes.\n   * @api\n   */\n  load() {\n    this.iconImage_.load();\n  }\n\n  /**\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   */\n  unlistenImageChange(listener) {\n    this.iconImage_.removeEventListener(EventType.CHANGE, listener);\n  }\n}\n\nexport default Icon;\n","/**\n * @module ol/style/IconImageCache\n */\nimport {asString} from '../color.js';\n\n/**\n * @classdesc\n * Singleton class. Available through {@link module:ol/style/IconImageCache.shared}.\n */\nclass IconImageCache {\n  constructor() {\n    /**\n     * @type {!Object<string, import(\"./IconImage.js\").default>}\n     * @private\n     */\n    this.cache_ = {};\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.cacheSize_ = 0;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.maxCacheSize_ = 32;\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  clear() {\n    this.cache_ = {};\n    this.cacheSize_ = 0;\n  }\n\n  /**\n   * @return {boolean} Can expire cache.\n   */\n  canExpireCache() {\n    return this.cacheSize_ > this.maxCacheSize_;\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  expire() {\n    if (this.canExpireCache()) {\n      let i = 0;\n      for (const key in this.cache_) {\n        const iconImage = this.cache_[key];\n        if ((i++ & 3) === 0 && !iconImage.hasListener()) {\n          delete this.cache_[key];\n          --this.cacheSize_;\n        }\n      }\n    }\n  }\n\n  /**\n   * @param {string} src Src.\n   * @param {?string} crossOrigin Cross origin.\n   * @param {import(\"../color.js\").Color} color Color.\n   * @return {import(\"./IconImage.js\").default} Icon image.\n   */\n  get(src, crossOrigin, color) {\n    const key = getKey(src, crossOrigin, color);\n    return key in this.cache_ ? this.cache_[key] : null;\n  }\n\n  /**\n   * @param {string} src Src.\n   * @param {?string} crossOrigin Cross origin.\n   * @param {import(\"../color.js\").Color} color Color.\n   * @param {import(\"./IconImage.js\").default} iconImage Icon image.\n   */\n  set(src, crossOrigin, color, iconImage) {\n    const key = getKey(src, crossOrigin, color);\n    this.cache_[key] = iconImage;\n    ++this.cacheSize_;\n  }\n\n  /**\n   * Set the cache size of the icon cache. Default is `32`. Change this value when\n   * your map uses more than 32 different icon images and you are not caching icon\n   * styles on the application level.\n   * @param {number} maxCacheSize Cache max size.\n   * @api\n   */\n  setSize(maxCacheSize) {\n    this.maxCacheSize_ = maxCacheSize;\n    this.expire();\n  }\n}\n\n/**\n * @param {string} src Src.\n * @param {?string} crossOrigin Cross origin.\n * @param {import(\"../color.js\").Color} color Color.\n * @return {string} Cache key.\n */\nfunction getKey(src, crossOrigin, color) {\n  const colorString = color ? asString(color) : 'null';\n  return crossOrigin + ':' + src + ':' + colorString;\n}\n\nexport default IconImageCache;\n\n/**\n * The {@link module:ol/style/IconImageCache~IconImageCache} for\n * {@link module:ol/style/Icon~Icon} images.\n * @api\n */\nexport const shared = new IconImageCache();\n","/**\n * @module ol/style/Image\n */\nimport {abstract} from '../util.js';\nimport {toSize} from '../size.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} opacity Opacity.\n * @property {boolean} rotateWithView If the image should get rotated with the view.\n * @property {number} rotation Rotation.\n * @property {number|import(\"../size.js\").Size} scale Scale.\n * @property {Array<number>} displacement Displacement.\n * @property {\"declutter\"|\"obstacle\"|\"none\"|undefined} declutterMode Declutter mode: `declutter`, `obstacle`, 'none */\n\n/**\n * @classdesc\n * A base class used for creating subclasses and not instantiated in\n * apps. Base class for {@link module:ol/style/Icon~Icon}, {@link module:ol/style/Circle~CircleStyle} and\n * {@link module:ol/style/RegularShape~RegularShape}.\n * @abstract\n * @api\n */\nclass ImageStyle {\n  /**\n   * @param {Options} options Options.\n   */\n  constructor(options) {\n    /**\n     * @private\n     * @type {number}\n     */\n    this.opacity_ = options.opacity;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.rotateWithView_ = options.rotateWithView;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.rotation_ = options.rotation;\n\n    /**\n     * @private\n     * @type {number|import(\"../size.js\").Size}\n     */\n    this.scale_ = options.scale;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.scaleArray_ = toSize(options.scale);\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.displacement_ = options.displacement;\n\n    /**\n     * @private\n     * @type {\"declutter\"|\"obstacle\"|\"none\"|undefined}\n     */\n    this.declutterMode_ = options.declutterMode;\n  }\n\n  /**\n   * Clones the style.\n   * @return {ImageStyle} The cloned style.\n   * @api\n   */\n  clone() {\n    const scale = this.getScale();\n    return new ImageStyle({\n      opacity: this.getOpacity(),\n      scale: Array.isArray(scale) ? scale.slice() : scale,\n      rotation: this.getRotation(),\n      rotateWithView: this.getRotateWithView(),\n      displacement: this.getDisplacement().slice(),\n      declutterMode: this.getDeclutterMode(),\n    });\n  }\n\n  /**\n   * Get the symbolizer opacity.\n   * @return {number} Opacity.\n   * @api\n   */\n  getOpacity() {\n    return this.opacity_;\n  }\n\n  /**\n   * Determine whether the symbolizer rotates with the map.\n   * @return {boolean} Rotate with map.\n   * @api\n   */\n  getRotateWithView() {\n    return this.rotateWithView_;\n  }\n\n  /**\n   * Get the symoblizer rotation.\n   * @return {number} Rotation.\n   * @api\n   */\n  getRotation() {\n    return this.rotation_;\n  }\n\n  /**\n   * Get the symbolizer scale.\n   * @return {number|import(\"../size.js\").Size} Scale.\n   * @api\n   */\n  getScale() {\n    return this.scale_;\n  }\n\n  /**\n   * Get the symbolizer scale array.\n   * @return {import(\"../size.js\").Size} Scale array.\n   */\n  getScaleArray() {\n    return this.scaleArray_;\n  }\n\n  /**\n   * Get the displacement of the shape\n   * @return {Array<number>} Shape's center displacement\n   * @api\n   */\n  getDisplacement() {\n    return this.displacement_;\n  }\n\n  /**\n   * Get the declutter mode of the shape\n   * @return {\"declutter\"|\"obstacle\"|\"none\"|undefined} Shape's declutter mode\n   * @api\n   */\n  getDeclutterMode() {\n    return this.declutterMode_;\n  }\n\n  /**\n   * Get the anchor point in pixels. The anchor determines the center point for the\n   * symbolizer.\n   * @abstract\n   * @return {Array<number>} Anchor.\n   */\n  getAnchor() {\n    return abstract();\n  }\n\n  /**\n   * Get the image element for the symbolizer.\n   * @abstract\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement} Image element.\n   */\n  getImage(pixelRatio) {\n    return abstract();\n  }\n\n  /**\n   * @abstract\n   * @return {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement} Image element.\n   */\n  getHitDetectionImage() {\n    return abstract();\n  }\n\n  /**\n   * Get the image pixel ratio.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {number} Pixel ratio.\n   */\n  getPixelRatio(pixelRatio) {\n    return 1;\n  }\n\n  /**\n   * @abstract\n   * @return {import(\"../ImageState.js\").default} Image state.\n   */\n  getImageState() {\n    return abstract();\n  }\n\n  /**\n   * @abstract\n   * @return {import(\"../size.js\").Size} Image size.\n   */\n  getImageSize() {\n    return abstract();\n  }\n\n  /**\n   * Get the origin of the symbolizer.\n   * @abstract\n   * @return {Array<number>} Origin.\n   */\n  getOrigin() {\n    return abstract();\n  }\n\n  /**\n   * Get the size of the symbolizer (in pixels).\n   * @abstract\n   * @return {import(\"../size.js\").Size} Size.\n   */\n  getSize() {\n    return abstract();\n  }\n\n  /**\n   * Set the displacement.\n   *\n   * @param {Array<number>} displacement Displacement.\n   * @api\n   */\n  setDisplacement(displacement) {\n    this.displacement_ = displacement;\n  }\n\n  /**\n   * Set the opacity.\n   *\n   * @param {number} opacity Opacity.\n   * @api\n   */\n  setOpacity(opacity) {\n    this.opacity_ = opacity;\n  }\n\n  /**\n   * Set whether to rotate the style with the view.\n   *\n   * @param {boolean} rotateWithView Rotate with map.\n   * @api\n   */\n  setRotateWithView(rotateWithView) {\n    this.rotateWithView_ = rotateWithView;\n  }\n\n  /**\n   * Set the rotation.\n   *\n   * @param {number} rotation Rotation.\n   * @api\n   */\n  setRotation(rotation) {\n    this.rotation_ = rotation;\n  }\n\n  /**\n   * Set the scale.\n   *\n   * @param {number|import(\"../size.js\").Size} scale Scale.\n   * @api\n   */\n  setScale(scale) {\n    this.scale_ = scale;\n    this.scaleArray_ = toSize(scale);\n  }\n\n  /**\n   * @abstract\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   */\n  listenImageChange(listener) {\n    abstract();\n  }\n\n  /**\n   * Load not yet loaded URI.\n   * @abstract\n   */\n  load() {\n    abstract();\n  }\n\n  /**\n   * @abstract\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   */\n  unlistenImageChange(listener) {\n    abstract();\n  }\n}\n\nexport default ImageStyle;\n","/**\n * @module ol/style/RegularShape\n */\n\nimport ImageState from '../ImageState.js';\nimport ImageStyle from './Image.js';\nimport {asArray} from '../color.js';\nimport {asColorLike} from '../colorlike.js';\nimport {createCanvasContext2D} from '../dom.js';\nimport {\n  defaultFillStyle,\n  defaultLineJoin,\n  defaultLineWidth,\n  defaultMiterLimit,\n  defaultStrokeStyle,\n} from '../render/canvas.js';\n\n/**\n * Specify radius for regular polygons, or radius1 and radius2 for stars.\n * @typedef {Object} Options\n * @property {import(\"./Fill.js\").default} [fill] Fill style.\n * @property {number} points Number of points for stars and regular polygons. In case of a polygon, the number of points\n * is the number of sides.\n * @property {number} [radius] Radius of a regular polygon.\n * @property {number} [radius1] First radius of a star. Ignored if radius is set.\n * @property {number} [radius2] Second radius of a star.\n * @property {number} [angle=0] Shape's angle in radians. A value of 0 will have one of the shape's points facing up.\n * @property {Array<number>} [displacement=[0, 0]] Displacement of the shape in pixels.\n * Positive values will shift the shape right and up.\n * @property {import(\"./Stroke.js\").default} [stroke] Stroke style.\n * @property {number} [rotation=0] Rotation in radians (positive rotation clockwise).\n * @property {boolean} [rotateWithView=false] Whether to rotate the shape with the view.\n * @property {number|import(\"../size.js\").Size} [scale=1] Scale. Unless two dimensional scaling is required a better\n * result may be obtained with appropriate settings for `radius`, `radius1` and `radius2`.\n * @property {\"declutter\"|\"obstacle\"|\"none\"|undefined} [declutterMode] Declutter mode.\n */\n\n/**\n * @typedef {Object} RenderOptions\n * @property {import(\"../colorlike.js\").ColorLike} [strokeStyle] StrokeStyle.\n * @property {number} strokeWidth StrokeWidth.\n * @property {number} size Size.\n * @property {Array<number>|null} lineDash LineDash.\n * @property {number} lineDashOffset LineDashOffset.\n * @property {CanvasLineJoin} lineJoin LineJoin.\n * @property {number} miterLimit MiterLimit.\n */\n\n/**\n * @classdesc\n * Set regular shape style for vector features. The resulting shape will be\n * a regular polygon when `radius` is provided, or a star when `radius1` and\n * `radius2` are provided.\n * @api\n */\nclass RegularShape extends ImageStyle {\n  /**\n   * @param {Options} options Options.\n   */\n  constructor(options) {\n    /**\n     * @type {boolean}\n     */\n    const rotateWithView =\n      options.rotateWithView !== undefined ? options.rotateWithView : false;\n\n    super({\n      opacity: 1,\n      rotateWithView: rotateWithView,\n      rotation: options.rotation !== undefined ? options.rotation : 0,\n      scale: options.scale !== undefined ? options.scale : 1,\n      displacement:\n        options.displacement !== undefined ? options.displacement : [0, 0],\n      declutterMode: options.declutterMode,\n    });\n\n    /**\n     * @private\n     * @type {Object<number, HTMLCanvasElement>}\n     */\n    this.canvas_ = undefined;\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement}\n     */\n    this.hitDetectionCanvas_ = null;\n\n    /**\n     * @private\n     * @type {import(\"./Fill.js\").default}\n     */\n    this.fill_ = options.fill !== undefined ? options.fill : null;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.origin_ = [0, 0];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.points_ = options.points;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.radius_ =\n      options.radius !== undefined ? options.radius : options.radius1;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.radius2_ = options.radius2;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.angle_ = options.angle !== undefined ? options.angle : 0;\n\n    /**\n     * @private\n     * @type {import(\"./Stroke.js\").default}\n     */\n    this.stroke_ = options.stroke !== undefined ? options.stroke : null;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.size_ = null;\n\n    /**\n     * @private\n     * @type {RenderOptions}\n     */\n    this.renderOptions_ = null;\n\n    this.render();\n  }\n\n  /**\n   * Clones the style.\n   * @return {RegularShape} The cloned style.\n   * @api\n   */\n  clone() {\n    const scale = this.getScale();\n    const style = new RegularShape({\n      fill: this.getFill() ? this.getFill().clone() : undefined,\n      points: this.getPoints(),\n      radius: this.getRadius(),\n      radius2: this.getRadius2(),\n      angle: this.getAngle(),\n      stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n      rotation: this.getRotation(),\n      rotateWithView: this.getRotateWithView(),\n      scale: Array.isArray(scale) ? scale.slice() : scale,\n      displacement: this.getDisplacement().slice(),\n      declutterMode: this.getDeclutterMode(),\n    });\n    style.setOpacity(this.getOpacity());\n    return style;\n  }\n\n  /**\n   * Get the anchor point in pixels. The anchor determines the center point for the\n   * symbolizer.\n   * @return {Array<number>} Anchor.\n   * @api\n   */\n  getAnchor() {\n    const size = this.size_;\n    if (!size) {\n      return null;\n    }\n    const displacement = this.getDisplacement();\n    const scale = this.getScaleArray();\n    // anchor is scaled by renderer but displacement should not be scaled\n    // so divide by scale here\n    return [\n      size[0] / 2 - displacement[0] / scale[0],\n      size[1] / 2 + displacement[1] / scale[1],\n    ];\n  }\n\n  /**\n   * Get the angle used in generating the shape.\n   * @return {number} Shape's rotation in radians.\n   * @api\n   */\n  getAngle() {\n    return this.angle_;\n  }\n\n  /**\n   * Get the fill style for the shape.\n   * @return {import(\"./Fill.js\").default} Fill style.\n   * @api\n   */\n  getFill() {\n    return this.fill_;\n  }\n\n  /**\n   * Set the fill style.\n   * @param {import(\"./Fill.js\").default} fill Fill style.\n   * @api\n   */\n  setFill(fill) {\n    this.fill_ = fill;\n    this.render();\n  }\n\n  /**\n   * @return {HTMLCanvasElement} Image element.\n   */\n  getHitDetectionImage() {\n    if (!this.hitDetectionCanvas_) {\n      this.createHitDetectionCanvas_(this.renderOptions_);\n    }\n    return this.hitDetectionCanvas_;\n  }\n\n  /**\n   * Get the image icon.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {HTMLCanvasElement} Image or Canvas element.\n   * @api\n   */\n  getImage(pixelRatio) {\n    let image = this.canvas_[pixelRatio];\n    if (!image) {\n      const renderOptions = this.renderOptions_;\n      const context = createCanvasContext2D(\n        renderOptions.size * pixelRatio,\n        renderOptions.size * pixelRatio\n      );\n      this.draw_(renderOptions, context, pixelRatio);\n\n      image = context.canvas;\n      this.canvas_[pixelRatio] = image;\n    }\n    return image;\n  }\n\n  /**\n   * Get the image pixel ratio.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {number} Pixel ratio.\n   */\n  getPixelRatio(pixelRatio) {\n    return pixelRatio;\n  }\n\n  /**\n   * @return {import(\"../size.js\").Size} Image size.\n   */\n  getImageSize() {\n    return this.size_;\n  }\n\n  /**\n   * @return {import(\"../ImageState.js\").default} Image state.\n   */\n  getImageState() {\n    return ImageState.LOADED;\n  }\n\n  /**\n   * Get the origin of the symbolizer.\n   * @return {Array<number>} Origin.\n   * @api\n   */\n  getOrigin() {\n    return this.origin_;\n  }\n\n  /**\n   * Get the number of points for generating the shape.\n   * @return {number} Number of points for stars and regular polygons.\n   * @api\n   */\n  getPoints() {\n    return this.points_;\n  }\n\n  /**\n   * Get the (primary) radius for the shape.\n   * @return {number} Radius.\n   * @api\n   */\n  getRadius() {\n    return this.radius_;\n  }\n\n  /**\n   * Get the secondary radius for the shape.\n   * @return {number|undefined} Radius2.\n   * @api\n   */\n  getRadius2() {\n    return this.radius2_;\n  }\n\n  /**\n   * Get the size of the symbolizer (in pixels).\n   * @return {import(\"../size.js\").Size} Size.\n   * @api\n   */\n  getSize() {\n    return this.size_;\n  }\n\n  /**\n   * Get the stroke style for the shape.\n   * @return {import(\"./Stroke.js\").default} Stroke style.\n   * @api\n   */\n  getStroke() {\n    return this.stroke_;\n  }\n\n  /**\n   * Set the stroke style.\n   * @param {import(\"./Stroke.js\").default} stroke Stroke style.\n   * @api\n   */\n  setStroke(stroke) {\n    this.stroke_ = stroke;\n    this.render();\n  }\n\n  /**\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   */\n  listenImageChange(listener) {}\n\n  /**\n   * Load not yet loaded URI.\n   */\n  load() {}\n\n  /**\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   */\n  unlistenImageChange(listener) {}\n\n  /**\n   * Calculate additional canvas size needed for the miter.\n   * @param {string} lineJoin Line join\n   * @param {number} strokeWidth Stroke width\n   * @param {number} miterLimit Miter limit\n   * @return {number} Additional canvas size needed\n   * @private\n   */\n  calculateLineJoinSize_(lineJoin, strokeWidth, miterLimit) {\n    if (\n      strokeWidth === 0 ||\n      this.points_ === Infinity ||\n      (lineJoin !== 'bevel' && lineJoin !== 'miter')\n    ) {\n      return strokeWidth;\n    }\n    // m  | ^\n    // i  | |\\                  .\n    // t >|  #\\\n    // e  | |\\ \\              .\n    // r      \\s\\\n    //      |  \\t\\          .                 .\n    //          \\r\\                      .   .\n    //      |    \\o\\      .          .  . . .\n    //          e \\k\\            .  .    . .\n    //      |      \\e\\  .    .  .       . .\n    //       d      \\ \\  .  .          . .\n    //      | _ _a_ _\\#  .            . .\n    //   r1          / `             . .\n    //      |                       . .\n    //       b     /               . .\n    //      |                     . .\n    //           / r2            . .\n    //      |                        .   .\n    //         /                           .   .\n    //      |α                                   .   .\n    //       /                                         .   .\n    //      ° center\n    let r1 = this.radius_;\n    let r2 = this.radius2_ === undefined ? r1 : this.radius2_;\n    if (r1 < r2) {\n      const tmp = r1;\n      r1 = r2;\n      r2 = tmp;\n    }\n    const points =\n      this.radius2_ === undefined ? this.points_ : this.points_ * 2;\n    const alpha = (2 * Math.PI) / points;\n    const a = r2 * Math.sin(alpha);\n    const b = Math.sqrt(r2 * r2 - a * a);\n    const d = r1 - b;\n    const e = Math.sqrt(a * a + d * d);\n    const miterRatio = e / a;\n    if (lineJoin === 'miter' && miterRatio <= miterLimit) {\n      return miterRatio * strokeWidth;\n    }\n    // Calculate the distnce from center to the stroke corner where\n    // it was cut short because of the miter limit.\n    //              l\n    //        ----+---- <= distance from center to here is maxr\n    //       /####|k ##\\\n    //      /#####^#####\\\n    //     /#### /+\\# s #\\\n    //    /### h/+++\\# t #\\\n    //   /### t/+++++\\# r #\\\n    //  /### a/+++++++\\# o #\\\n    // /### p/++ fill +\\# k #\\\n    ///#### /+++++^+++++\\# e #\\\n    //#####/+++++/+\\+++++\\#####\\\n    const k = strokeWidth / 2 / miterRatio;\n    const l = (strokeWidth / 2) * (d / e);\n    const maxr = Math.sqrt((r1 + k) * (r1 + k) + l * l);\n    const bevelAdd = maxr - r1;\n    if (this.radius2_ === undefined || lineJoin === 'bevel') {\n      return bevelAdd * 2;\n    }\n    // If outer miter is over the miter limit the inner miter may reach through the\n    // center and be longer than the bevel, same calculation as above but swap r1 / r2.\n    const aa = r1 * Math.sin(alpha);\n    const bb = Math.sqrt(r1 * r1 - aa * aa);\n    const dd = r2 - bb;\n    const ee = Math.sqrt(aa * aa + dd * dd);\n    const innerMiterRatio = ee / aa;\n    if (innerMiterRatio <= miterLimit) {\n      const innerLength = (innerMiterRatio * strokeWidth) / 2 - r2 - r1;\n      return 2 * Math.max(bevelAdd, innerLength);\n    }\n    return bevelAdd * 2;\n  }\n\n  /**\n   * @return {RenderOptions}  The render options\n   * @protected\n   */\n  createRenderOptions() {\n    let lineJoin = defaultLineJoin;\n    let miterLimit = 0;\n    let lineDash = null;\n    let lineDashOffset = 0;\n    let strokeStyle;\n    let strokeWidth = 0;\n\n    if (this.stroke_) {\n      strokeStyle = this.stroke_.getColor();\n      if (strokeStyle === null) {\n        strokeStyle = defaultStrokeStyle;\n      }\n      strokeStyle = asColorLike(strokeStyle);\n      strokeWidth = this.stroke_.getWidth();\n      if (strokeWidth === undefined) {\n        strokeWidth = defaultLineWidth;\n      }\n      lineDash = this.stroke_.getLineDash();\n      lineDashOffset = this.stroke_.getLineDashOffset();\n      lineJoin = this.stroke_.getLineJoin();\n      if (lineJoin === undefined) {\n        lineJoin = defaultLineJoin;\n      }\n      miterLimit = this.stroke_.getMiterLimit();\n      if (miterLimit === undefined) {\n        miterLimit = defaultMiterLimit;\n      }\n    }\n\n    const add = this.calculateLineJoinSize_(lineJoin, strokeWidth, miterLimit);\n    const maxRadius = Math.max(this.radius_, this.radius2_ || 0);\n    const size = Math.ceil(2 * maxRadius + add);\n\n    return {\n      strokeStyle: strokeStyle,\n      strokeWidth: strokeWidth,\n      size: size,\n      lineDash: lineDash,\n      lineDashOffset: lineDashOffset,\n      lineJoin: lineJoin,\n      miterLimit: miterLimit,\n    };\n  }\n\n  /**\n   * @protected\n   */\n  render() {\n    this.renderOptions_ = this.createRenderOptions();\n    const size = this.renderOptions_.size;\n    this.canvas_ = {};\n    this.size_ = [size, size];\n  }\n\n  /**\n   * @private\n   * @param {RenderOptions} renderOptions Render options.\n   * @param {CanvasRenderingContext2D} context The rendering context.\n   * @param {number} pixelRatio The pixel ratio.\n   */\n  draw_(renderOptions, context, pixelRatio) {\n    context.scale(pixelRatio, pixelRatio);\n    // set origin to canvas center\n    context.translate(renderOptions.size / 2, renderOptions.size / 2);\n\n    this.createPath_(context);\n\n    if (this.fill_) {\n      let color = this.fill_.getColor();\n      if (color === null) {\n        color = defaultFillStyle;\n      }\n      context.fillStyle = asColorLike(color);\n      context.fill();\n    }\n    if (this.stroke_) {\n      context.strokeStyle = renderOptions.strokeStyle;\n      context.lineWidth = renderOptions.strokeWidth;\n      if (renderOptions.lineDash) {\n        context.setLineDash(renderOptions.lineDash);\n        context.lineDashOffset = renderOptions.lineDashOffset;\n      }\n      context.lineJoin = renderOptions.lineJoin;\n      context.miterLimit = renderOptions.miterLimit;\n      context.stroke();\n    }\n  }\n\n  /**\n   * @private\n   * @param {RenderOptions} renderOptions Render options.\n   */\n  createHitDetectionCanvas_(renderOptions) {\n    if (this.fill_) {\n      let color = this.fill_.getColor();\n\n      // determine if fill is transparent (or pattern or gradient)\n      let opacity = 0;\n      if (typeof color === 'string') {\n        color = asArray(color);\n      }\n      if (color === null) {\n        opacity = 1;\n      } else if (Array.isArray(color)) {\n        opacity = color.length === 4 ? color[3] : 1;\n      }\n      if (opacity === 0) {\n        // if a transparent fill style is set, create an extra hit-detection image\n        // with a default fill style\n        const context = createCanvasContext2D(\n          renderOptions.size,\n          renderOptions.size\n        );\n        this.hitDetectionCanvas_ = context.canvas;\n\n        this.drawHitDetectionCanvas_(renderOptions, context);\n      }\n    }\n    if (!this.hitDetectionCanvas_) {\n      this.hitDetectionCanvas_ = this.getImage(1);\n    }\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} context The context to draw in.\n   */\n  createPath_(context) {\n    let points = this.points_;\n    const radius = this.radius_;\n    if (points === Infinity) {\n      context.arc(0, 0, radius, 0, 2 * Math.PI);\n    } else {\n      const radius2 = this.radius2_ === undefined ? radius : this.radius2_;\n      if (this.radius2_ !== undefined) {\n        points *= 2;\n      }\n      const startAngle = this.angle_ - Math.PI / 2;\n      const step = (2 * Math.PI) / points;\n      for (let i = 0; i < points; i++) {\n        const angle0 = startAngle + i * step;\n        const radiusC = i % 2 === 0 ? radius : radius2;\n        context.lineTo(radiusC * Math.cos(angle0), radiusC * Math.sin(angle0));\n      }\n      context.closePath();\n    }\n  }\n\n  /**\n   * @private\n   * @param {RenderOptions} renderOptions Render options.\n   * @param {CanvasRenderingContext2D} context The context.\n   */\n  drawHitDetectionCanvas_(renderOptions, context) {\n    // set origin to canvas center\n    context.translate(renderOptions.size / 2, renderOptions.size / 2);\n\n    this.createPath_(context);\n\n    context.fillStyle = defaultFillStyle;\n    context.fill();\n    if (this.stroke_) {\n      context.strokeStyle = renderOptions.strokeStyle;\n      context.lineWidth = renderOptions.strokeWidth;\n      if (renderOptions.lineDash) {\n        context.setLineDash(renderOptions.lineDash);\n        context.lineDashOffset = renderOptions.lineDashOffset;\n      }\n      context.lineJoin = renderOptions.lineJoin;\n      context.miterLimit = renderOptions.miterLimit;\n      context.stroke();\n    }\n  }\n}\n\nexport default RegularShape;\n","/**\n * @module ol/style/Stroke\n */\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} [color] A color, gradient or pattern.\n * See {@link module:ol/color~Color} and {@link module:ol/colorlike~ColorLike} for possible formats.\n * Default null; if null, the Canvas/renderer default black will be used.\n * @property {CanvasLineCap} [lineCap='round'] Line cap style: `butt`, `round`, or `square`.\n * @property {CanvasLineJoin} [lineJoin='round'] Line join style: `bevel`, `round`, or `miter`.\n * @property {Array<number>} [lineDash] Line dash pattern. Default is `null` (no dash).\n * @property {number} [lineDashOffset=0] Line dash offset.\n * @property {number} [miterLimit=10] Miter limit.\n * @property {number} [width] Width.\n */\n\n/**\n * @classdesc\n * Set stroke style for vector features.\n * Note that the defaults given are the Canvas defaults, which will be used if\n * option is not defined. The `get` functions return whatever was entered in\n * the options; they will not return the default.\n * @api\n */\nclass Stroke {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options || {};\n\n    /**\n     * @private\n     * @type {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike}\n     */\n    this.color_ = options.color !== undefined ? options.color : null;\n\n    /**\n     * @private\n     * @type {CanvasLineCap|undefined}\n     */\n    this.lineCap_ = options.lineCap;\n\n    /**\n     * @private\n     * @type {Array<number>|null}\n     */\n    this.lineDash_ = options.lineDash !== undefined ? options.lineDash : null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.lineDashOffset_ = options.lineDashOffset;\n\n    /**\n     * @private\n     * @type {CanvasLineJoin|undefined}\n     */\n    this.lineJoin_ = options.lineJoin;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.miterLimit_ = options.miterLimit;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.width_ = options.width;\n  }\n\n  /**\n   * Clones the style.\n   * @return {Stroke} The cloned style.\n   * @api\n   */\n  clone() {\n    const color = this.getColor();\n    return new Stroke({\n      color: Array.isArray(color) ? color.slice() : color || undefined,\n      lineCap: this.getLineCap(),\n      lineDash: this.getLineDash() ? this.getLineDash().slice() : undefined,\n      lineDashOffset: this.getLineDashOffset(),\n      lineJoin: this.getLineJoin(),\n      miterLimit: this.getMiterLimit(),\n      width: this.getWidth(),\n    });\n  }\n\n  /**\n   * Get the stroke color.\n   * @return {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} Color.\n   * @api\n   */\n  getColor() {\n    return this.color_;\n  }\n\n  /**\n   * Get the line cap type for the stroke.\n   * @return {CanvasLineCap|undefined} Line cap.\n   * @api\n   */\n  getLineCap() {\n    return this.lineCap_;\n  }\n\n  /**\n   * Get the line dash style for the stroke.\n   * @return {Array<number>|null} Line dash.\n   * @api\n   */\n  getLineDash() {\n    return this.lineDash_;\n  }\n\n  /**\n   * Get the line dash offset for the stroke.\n   * @return {number|undefined} Line dash offset.\n   * @api\n   */\n  getLineDashOffset() {\n    return this.lineDashOffset_;\n  }\n\n  /**\n   * Get the line join type for the stroke.\n   * @return {CanvasLineJoin|undefined} Line join.\n   * @api\n   */\n  getLineJoin() {\n    return this.lineJoin_;\n  }\n\n  /**\n   * Get the miter limit for the stroke.\n   * @return {number|undefined} Miter limit.\n   * @api\n   */\n  getMiterLimit() {\n    return this.miterLimit_;\n  }\n\n  /**\n   * Get the stroke width.\n   * @return {number|undefined} Width.\n   * @api\n   */\n  getWidth() {\n    return this.width_;\n  }\n\n  /**\n   * Set the color.\n   *\n   * @param {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} color Color.\n   * @api\n   */\n  setColor(color) {\n    this.color_ = color;\n  }\n\n  /**\n   * Set the line cap.\n   *\n   * @param {CanvasLineCap|undefined} lineCap Line cap.\n   * @api\n   */\n  setLineCap(lineCap) {\n    this.lineCap_ = lineCap;\n  }\n\n  /**\n   * Set the line dash.\n   *\n   * @param {Array<number>|null} lineDash Line dash.\n   * @api\n   */\n  setLineDash(lineDash) {\n    this.lineDash_ = lineDash;\n  }\n\n  /**\n   * Set the line dash offset.\n   *\n   * @param {number|undefined} lineDashOffset Line dash offset.\n   * @api\n   */\n  setLineDashOffset(lineDashOffset) {\n    this.lineDashOffset_ = lineDashOffset;\n  }\n\n  /**\n   * Set the line join.\n   *\n   * @param {CanvasLineJoin|undefined} lineJoin Line join.\n   * @api\n   */\n  setLineJoin(lineJoin) {\n    this.lineJoin_ = lineJoin;\n  }\n\n  /**\n   * Set the miter limit.\n   *\n   * @param {number|undefined} miterLimit Miter limit.\n   * @api\n   */\n  setMiterLimit(miterLimit) {\n    this.miterLimit_ = miterLimit;\n  }\n\n  /**\n   * Set the width.\n   *\n   * @param {number|undefined} width Width.\n   * @api\n   */\n  setWidth(width) {\n    this.width_ = width;\n  }\n}\n\nexport default Stroke;\n","/**\n * @module ol/style/Style\n */\n\nimport CircleStyle from './Circle.js';\nimport Fill from './Fill.js';\nimport Stroke from './Stroke.js';\nimport {assert} from '../asserts.js';\n\n/**\n * A function that takes an {@link module:ol/Feature~Feature} and a `{number}`\n * representing the view's resolution. The function should return a\n * {@link module:ol/style/Style~Style} or an array of them. This way e.g. a\n * vector layer can be styled. If the function returns `undefined`, the\n * feature will not be rendered.\n *\n * @typedef {function(import(\"../Feature.js\").FeatureLike, number):(Style|Array<Style>|void)} StyleFunction\n */\n\n/**\n * A {@link Style}, an array of {@link Style}, or a {@link StyleFunction}.\n * @typedef {Style|Array<Style>|StyleFunction} StyleLike\n */\n\n/**\n * A function that takes an {@link module:ol/Feature~Feature} as argument and returns an\n * {@link module:ol/geom/Geometry~Geometry} that will be rendered and styled for the feature.\n *\n * @typedef {function(import(\"../Feature.js\").FeatureLike):\n *     (import(\"../geom/Geometry.js\").default|import(\"../render/Feature.js\").default|undefined)} GeometryFunction\n */\n\n/**\n * Custom renderer function. Takes two arguments:\n *\n * 1. The pixel coordinates of the geometry in GeoJSON notation.\n * 2. The {@link module:ol/render~State} of the layer renderer.\n *\n * @typedef {function((import(\"../coordinate.js\").Coordinate|Array<import(\"../coordinate.js\").Coordinate>|Array<Array<import(\"../coordinate.js\").Coordinate>>),import(\"../render.js\").State): void} RenderFunction\n */\n\n/**\n * @typedef {Object} Options\n * @property {string|import(\"../geom/Geometry.js\").default|GeometryFunction} [geometry] Feature property or geometry\n * or function returning a geometry to render for this style.\n * @property {import(\"./Fill.js\").default} [fill] Fill style.\n * @property {import(\"./Image.js\").default} [image] Image style.\n * @property {RenderFunction} [renderer] Custom renderer. When configured, `fill`, `stroke` and `image` will be\n * ignored, and the provided function will be called with each render frame for each geometry.\n * @property {RenderFunction} [hitDetectionRenderer] Custom renderer for hit detection. If provided will be used\n * in hit detection rendering.\n * @property {import(\"./Stroke.js\").default} [stroke] Stroke style.\n * @property {import(\"./Text.js\").default} [text] Text style.\n * @property {number} [zIndex] Z index.\n */\n\n/**\n * @classdesc\n * Container for vector feature rendering styles. Any changes made to the style\n * or its children through `set*()` methods will not take effect until the\n * feature or layer that uses the style is re-rendered.\n *\n * ## Feature styles\n *\n * If no style is defined, the following default style is used:\n * ```js\n *  import {Circle, Fill, Stroke, Style} from 'ol/style.js';\n *\n *  const fill = new Fill({\n *    color: 'rgba(255,255,255,0.4)',\n *  });\n *  const stroke = new Stroke({\n *    color: '#3399CC',\n *    width: 1.25,\n *  });\n *  const styles = [\n *    new Style({\n *      image: new Circle({\n *        fill: fill,\n *        stroke: stroke,\n *        radius: 5,\n *      }),\n *      fill: fill,\n *      stroke: stroke,\n *    }),\n *  ];\n * ```\n *\n * A separate editing style has the following defaults:\n * ```js\n *  import {Circle, Fill, Stroke, Style} from 'ol/style.js';\n *\n *  const styles = {};\n *  const white = [255, 255, 255, 1];\n *  const blue = [0, 153, 255, 1];\n *  const width = 3;\n *  styles['Polygon'] = [\n *    new Style({\n *      fill: new Fill({\n *        color: [255, 255, 255, 0.5],\n *      }),\n *    }),\n *  ];\n *  styles['MultiPolygon'] =\n *      styles['Polygon'];\n *  styles['LineString'] = [\n *    new Style({\n *      stroke: new Stroke({\n *        color: white,\n *        width: width + 2,\n *      }),\n *    }),\n *    new Style({\n *      stroke: new Stroke({\n *        color: blue,\n *        width: width,\n *      }),\n *    }),\n *  ];\n *  styles['MultiLineString'] = styles['LineString'];\n *\n *  styles['Circle'] = styles['Polygon'].concat(\n *    styles['LineString']\n *  );\n *\n *  styles['Point'] = [\n *    new Style({\n *      image: new Circle({\n *        radius: width * 2,\n *        fill: new Fill({\n *          color: blue,\n *        }),\n *        stroke: new Stroke({\n *          color: white,\n *          width: width / 2,\n *        }),\n *      }),\n *      zIndex: Infinity,\n *    }),\n *  ];\n *  styles['MultiPoint'] =\n *      styles['Point'];\n *  styles['GeometryCollection'] =\n *      styles['Polygon'].concat(\n *          styles['LineString'],\n *          styles['Point']\n *      );\n * ```\n *\n * @api\n */\nclass Style {\n  /**\n   * @param {Options} [options] Style options.\n   */\n  constructor(options) {\n    options = options || {};\n\n    /**\n     * @private\n     * @type {string|import(\"../geom/Geometry.js\").default|GeometryFunction}\n     */\n    this.geometry_ = null;\n\n    /**\n     * @private\n     * @type {!GeometryFunction}\n     */\n    this.geometryFunction_ = defaultGeometryFunction;\n\n    if (options.geometry !== undefined) {\n      this.setGeometry(options.geometry);\n    }\n\n    /**\n     * @private\n     * @type {import(\"./Fill.js\").default}\n     */\n    this.fill_ = options.fill !== undefined ? options.fill : null;\n\n    /**\n     * @private\n     * @type {import(\"./Image.js\").default}\n     */\n    this.image_ = options.image !== undefined ? options.image : null;\n\n    /**\n     * @private\n     * @type {RenderFunction|null}\n     */\n    this.renderer_ = options.renderer !== undefined ? options.renderer : null;\n\n    /**\n     * @private\n     * @type {RenderFunction|null}\n     */\n    this.hitDetectionRenderer_ =\n      options.hitDetectionRenderer !== undefined\n        ? options.hitDetectionRenderer\n        : null;\n\n    /**\n     * @private\n     * @type {import(\"./Stroke.js\").default}\n     */\n    this.stroke_ = options.stroke !== undefined ? options.stroke : null;\n\n    /**\n     * @private\n     * @type {import(\"./Text.js\").default}\n     */\n    this.text_ = options.text !== undefined ? options.text : null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.zIndex_ = options.zIndex;\n  }\n\n  /**\n   * Clones the style.\n   * @return {Style} The cloned style.\n   * @api\n   */\n  clone() {\n    let geometry = this.getGeometry();\n    if (geometry && typeof geometry === 'object') {\n      geometry = /** @type {import(\"../geom/Geometry.js\").default} */ (\n        geometry\n      ).clone();\n    }\n    return new Style({\n      geometry: geometry,\n      fill: this.getFill() ? this.getFill().clone() : undefined,\n      image: this.getImage() ? this.getImage().clone() : undefined,\n      renderer: this.getRenderer(),\n      stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n      text: this.getText() ? this.getText().clone() : undefined,\n      zIndex: this.getZIndex(),\n    });\n  }\n\n  /**\n   * Get the custom renderer function that was configured with\n   * {@link #setRenderer} or the `renderer` constructor option.\n   * @return {RenderFunction|null} Custom renderer function.\n   * @api\n   */\n  getRenderer() {\n    return this.renderer_;\n  }\n\n  /**\n   * Sets a custom renderer function for this style. When set, `fill`, `stroke`\n   * and `image` options of the style will be ignored.\n   * @param {RenderFunction|null} renderer Custom renderer function.\n   * @api\n   */\n  setRenderer(renderer) {\n    this.renderer_ = renderer;\n  }\n\n  /**\n   * Sets a custom renderer function for this style used\n   * in hit detection.\n   * @param {RenderFunction|null} renderer Custom renderer function.\n   * @api\n   */\n  setHitDetectionRenderer(renderer) {\n    this.hitDetectionRenderer_ = renderer;\n  }\n\n  /**\n   * Get the custom renderer function that was configured with\n   * {@link #setHitDetectionRenderer} or the `hitDetectionRenderer` constructor option.\n   * @return {RenderFunction|null} Custom renderer function.\n   * @api\n   */\n  getHitDetectionRenderer() {\n    return this.hitDetectionRenderer_;\n  }\n\n  /**\n   * Get the geometry to be rendered.\n   * @return {string|import(\"../geom/Geometry.js\").default|GeometryFunction}\n   * Feature property or geometry or function that returns the geometry that will\n   * be rendered with this style.\n   * @api\n   */\n  getGeometry() {\n    return this.geometry_;\n  }\n\n  /**\n   * Get the function used to generate a geometry for rendering.\n   * @return {!GeometryFunction} Function that is called with a feature\n   * and returns the geometry to render instead of the feature's geometry.\n   * @api\n   */\n  getGeometryFunction() {\n    return this.geometryFunction_;\n  }\n\n  /**\n   * Get the fill style.\n   * @return {import(\"./Fill.js\").default} Fill style.\n   * @api\n   */\n  getFill() {\n    return this.fill_;\n  }\n\n  /**\n   * Set the fill style.\n   * @param {import(\"./Fill.js\").default} fill Fill style.\n   * @api\n   */\n  setFill(fill) {\n    this.fill_ = fill;\n  }\n\n  /**\n   * Get the image style.\n   * @return {import(\"./Image.js\").default} Image style.\n   * @api\n   */\n  getImage() {\n    return this.image_;\n  }\n\n  /**\n   * Set the image style.\n   * @param {import(\"./Image.js\").default} image Image style.\n   * @api\n   */\n  setImage(image) {\n    this.image_ = image;\n  }\n\n  /**\n   * Get the stroke style.\n   * @return {import(\"./Stroke.js\").default} Stroke style.\n   * @api\n   */\n  getStroke() {\n    return this.stroke_;\n  }\n\n  /**\n   * Set the stroke style.\n   * @param {import(\"./Stroke.js\").default} stroke Stroke style.\n   * @api\n   */\n  setStroke(stroke) {\n    this.stroke_ = stroke;\n  }\n\n  /**\n   * Get the text style.\n   * @return {import(\"./Text.js\").default} Text style.\n   * @api\n   */\n  getText() {\n    return this.text_;\n  }\n\n  /**\n   * Set the text style.\n   * @param {import(\"./Text.js\").default} text Text style.\n   * @api\n   */\n  setText(text) {\n    this.text_ = text;\n  }\n\n  /**\n   * Get the z-index for the style.\n   * @return {number|undefined} ZIndex.\n   * @api\n   */\n  getZIndex() {\n    return this.zIndex_;\n  }\n\n  /**\n   * Set a geometry that is rendered instead of the feature's geometry.\n   *\n   * @param {string|import(\"../geom/Geometry.js\").default|GeometryFunction} geometry\n   *     Feature property or geometry or function returning a geometry to render\n   *     for this style.\n   * @api\n   */\n  setGeometry(geometry) {\n    if (typeof geometry === 'function') {\n      this.geometryFunction_ = geometry;\n    } else if (typeof geometry === 'string') {\n      this.geometryFunction_ = function (feature) {\n        return /** @type {import(\"../geom/Geometry.js\").default} */ (\n          feature.get(geometry)\n        );\n      };\n    } else if (!geometry) {\n      this.geometryFunction_ = defaultGeometryFunction;\n    } else if (geometry !== undefined) {\n      this.geometryFunction_ = function () {\n        return /** @type {import(\"../geom/Geometry.js\").default} */ (geometry);\n      };\n    }\n    this.geometry_ = geometry;\n  }\n\n  /**\n   * Set the z-index.\n   *\n   * @param {number|undefined} zIndex ZIndex.\n   * @api\n   */\n  setZIndex(zIndex) {\n    this.zIndex_ = zIndex;\n  }\n}\n\n/**\n * Convert the provided object into a style function.  Functions passed through\n * unchanged.  Arrays of Style or single style objects wrapped in a\n * new style function.\n * @param {StyleFunction|Array<Style>|Style} obj\n *     A style function, a single style, or an array of styles.\n * @return {StyleFunction} A style function.\n */\nexport function toFunction(obj) {\n  let styleFunction;\n\n  if (typeof obj === 'function') {\n    styleFunction = obj;\n  } else {\n    /**\n     * @type {Array<Style>}\n     */\n    let styles;\n    if (Array.isArray(obj)) {\n      styles = obj;\n    } else {\n      assert(typeof (/** @type {?} */ (obj).getZIndex) === 'function', 41); // Expected an `Style` or an array of `Style`\n      const style = /** @type {Style} */ (obj);\n      styles = [style];\n    }\n    styleFunction = function () {\n      return styles;\n    };\n  }\n  return styleFunction;\n}\n\n/**\n * @type {Array<Style>|null}\n */\nlet defaultStyles = null;\n\n/**\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {number} resolution Resolution.\n * @return {Array<Style>} Style.\n */\nexport function createDefaultStyle(feature, resolution) {\n  // We don't use an immediately-invoked function\n  // and a closure so we don't get an error at script evaluation time in\n  // browsers that do not support Canvas. (import(\"./Circle.js\").CircleStyle does\n  // canvas.getContext('2d') at construction time, which will cause an.error\n  // in such browsers.)\n  if (!defaultStyles) {\n    const fill = new Fill({\n      color: 'rgba(255,255,255,0.4)',\n    });\n    const stroke = new Stroke({\n      color: '#3399CC',\n      width: 1.25,\n    });\n    defaultStyles = [\n      new Style({\n        image: new CircleStyle({\n          fill: fill,\n          stroke: stroke,\n          radius: 5,\n        }),\n        fill: fill,\n        stroke: stroke,\n      }),\n    ];\n  }\n  return defaultStyles;\n}\n\n/**\n * Default styles for editing features.\n * @return {Object<import(\"../geom/Geometry.js\").Type, Array<Style>>} Styles\n */\nexport function createEditingStyle() {\n  /** @type {Object<import(\"../geom/Geometry.js\").Type, Array<Style>>} */\n  const styles = {};\n  const white = [255, 255, 255, 1];\n  const blue = [0, 153, 255, 1];\n  const width = 3;\n  styles['Polygon'] = [\n    new Style({\n      fill: new Fill({\n        color: [255, 255, 255, 0.5],\n      }),\n    }),\n  ];\n  styles['MultiPolygon'] = styles['Polygon'];\n\n  styles['LineString'] = [\n    new Style({\n      stroke: new Stroke({\n        color: white,\n        width: width + 2,\n      }),\n    }),\n    new Style({\n      stroke: new Stroke({\n        color: blue,\n        width: width,\n      }),\n    }),\n  ];\n  styles['MultiLineString'] = styles['LineString'];\n\n  styles['Circle'] = styles['Polygon'].concat(styles['LineString']);\n\n  styles['Point'] = [\n    new Style({\n      image: new CircleStyle({\n        radius: width * 2,\n        fill: new Fill({\n          color: blue,\n        }),\n        stroke: new Stroke({\n          color: white,\n          width: width / 2,\n        }),\n      }),\n      zIndex: Infinity,\n    }),\n  ];\n  styles['MultiPoint'] = styles['Point'];\n\n  styles['GeometryCollection'] = styles['Polygon'].concat(\n    styles['LineString'],\n    styles['Point']\n  );\n\n  return styles;\n}\n\n/**\n * Function that is called with a feature and returns its default geometry.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature to get the geometry for.\n * @return {import(\"../geom/Geometry.js\").default|import(\"../render/Feature.js\").default|undefined} Geometry to render.\n */\nfunction defaultGeometryFunction(feature) {\n  return feature.getGeometry();\n}\n\nexport default Style;\n","/**\n * @module ol/style/Text\n */\nimport Fill from './Fill.js';\nimport {toSize} from '../size.js';\n\n/**\n * @typedef {'point' | 'line'} TextPlacement\n * Default text placement is `'point'`. Note that\n * `'line'` requires the underlying geometry to be a {@link module:ol/geom/LineString~LineString},\n * {@link module:ol/geom/Polygon~Polygon}, {@link module:ol/geom/MultiLineString~MultiLineString} or\n * {@link module:ol/geom/MultiPolygon~MultiPolygon}.\n */\n\n/**\n * @typedef {'left' | 'center' | 'right'} TextJustify\n */\n\n/**\n * The default fill color to use if no fill was set at construction time; a\n * blackish `#333`.\n *\n * @const {string}\n */\nconst DEFAULT_FILL_COLOR = '#333';\n\n/**\n * @typedef {Object} Options\n * @property {string} [font] Font style as CSS `font` value, see:\n * https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/font. Default is `'10px sans-serif'`\n * @property {number} [maxAngle=Math.PI/4] When `placement` is set to `'line'`, allow a maximum angle between adjacent characters.\n * The expected value is in radians, and the default is 45° (`Math.PI / 4`).\n * @property {number} [offsetX=0] Horizontal text offset in pixels. A positive will shift the text right.\n * @property {number} [offsetY=0] Vertical text offset in pixels. A positive will shift the text down.\n * @property {boolean} [overflow=false] For polygon labels or when `placement` is set to `'line'`, allow text to exceed\n * the width of the polygon at the label position or the length of the path that it follows.\n * @property {TextPlacement} [placement='point'] Text placement.\n * @property {number} [repeat] Repeat interval in pixels. When set, the text will be repeated at this interval. Only available\n * when `placement` is set to `'line'`. Overrides 'textAlign'.\n * @property {number|import(\"../size.js\").Size} [scale] Scale.\n * @property {boolean} [rotateWithView=false] Whether to rotate the text with the view.\n * @property {number} [rotation=0] Rotation in radians (positive rotation clockwise).\n * @property {string|Array<string>} [text] Text content or rich text content. For plain text provide a string, which can\n * contain line breaks (`\\n`). For rich text provide an array of text/font tuples. A tuple consists of the text to\n * render and the font to use (or `''` to use the text style's font). A line break has to be a separate tuple (i.e. `'\\n', ''`).\n * **Example:** `['foo', 'bold 10px sans-serif', ' bar', 'italic 10px sans-serif', ' baz', '']` will yield \"**foo** *bar* baz\".\n * **Note:** Rich text is not supported for the immediate rendering API.\n * @property {CanvasTextAlign} [textAlign] Text alignment. Possible values: `'left'`, `'right'`, `'center'`, `'end'` or `'start'`.\n * Default is `'center'` for `placement: 'point'`. For `placement: 'line'`, the default is to let the renderer choose a\n * placement where `maxAngle` is not exceeded.\n * @property {TextJustify} [justify] Text justification within the text box.\n * If not set, text is justified towards the `textAlign` anchor.\n * Otherwise, use options `'left'`, `'center'`, or `'right'` to justify the text within the text box.\n * **Note:** `justify` is ignored for immediate rendering and also for `placement: 'line'`.\n * @property {CanvasTextBaseline} [textBaseline='middle'] Text base line. Possible values: `'bottom'`, `'top'`, `'middle'`, `'alphabetic'`,\n * `'hanging'`, `'ideographic'`.\n * @property {import(\"./Fill.js\").default} [fill] Fill style. If none is provided, we'll use a dark fill-style (#333).\n * @property {import(\"./Stroke.js\").default} [stroke] Stroke style.\n * @property {import(\"./Fill.js\").default} [backgroundFill] Fill style for the text background when `placement` is\n * `'point'`. Default is no fill.\n * @property {import(\"./Stroke.js\").default} [backgroundStroke] Stroke style for the text background  when `placement`\n * is `'point'`. Default is no stroke.\n * @property {Array<number>} [padding=[0, 0, 0, 0]] Padding in pixels around the text for decluttering and background. The order of\n * values in the array is `[top, right, bottom, left]`.\n */\n\n/**\n * @classdesc\n * Set text style for vector features.\n * @api\n */\nclass Text {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options || {};\n\n    /**\n     * @private\n     * @type {string|undefined}\n     */\n    this.font_ = options.font;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.rotation_ = options.rotation;\n\n    /**\n     * @private\n     * @type {boolean|undefined}\n     */\n    this.rotateWithView_ = options.rotateWithView;\n\n    /**\n     * @private\n     * @type {number|import(\"../size.js\").Size|undefined}\n     */\n    this.scale_ = options.scale;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.scaleArray_ = toSize(options.scale !== undefined ? options.scale : 1);\n\n    /**\n     * @private\n     * @type {string|Array<string>|undefined}\n     */\n    this.text_ = options.text;\n\n    /**\n     * @private\n     * @type {CanvasTextAlign|undefined}\n     */\n    this.textAlign_ = options.textAlign;\n\n    /**\n     * @private\n     * @type {TextJustify|undefined}\n     */\n    this.justify_ = options.justify;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.repeat_ = options.repeat;\n\n    /**\n     * @private\n     * @type {CanvasTextBaseline|undefined}\n     */\n    this.textBaseline_ = options.textBaseline;\n\n    /**\n     * @private\n     * @type {import(\"./Fill.js\").default}\n     */\n    this.fill_ =\n      options.fill !== undefined\n        ? options.fill\n        : new Fill({color: DEFAULT_FILL_COLOR});\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxAngle_ =\n      options.maxAngle !== undefined ? options.maxAngle : Math.PI / 4;\n\n    /**\n     * @private\n     * @type {TextPlacement}\n     */\n    this.placement_ =\n      options.placement !== undefined ? options.placement : 'point';\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.overflow_ = !!options.overflow;\n\n    /**\n     * @private\n     * @type {import(\"./Stroke.js\").default}\n     */\n    this.stroke_ = options.stroke !== undefined ? options.stroke : null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.offsetX_ = options.offsetX !== undefined ? options.offsetX : 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.offsetY_ = options.offsetY !== undefined ? options.offsetY : 0;\n\n    /**\n     * @private\n     * @type {import(\"./Fill.js\").default}\n     */\n    this.backgroundFill_ = options.backgroundFill\n      ? options.backgroundFill\n      : null;\n\n    /**\n     * @private\n     * @type {import(\"./Stroke.js\").default}\n     */\n    this.backgroundStroke_ = options.backgroundStroke\n      ? options.backgroundStroke\n      : null;\n\n    /**\n     * @private\n     * @type {Array<number>|null}\n     */\n    this.padding_ = options.padding === undefined ? null : options.padding;\n  }\n\n  /**\n   * Clones the style.\n   * @return {Text} The cloned style.\n   * @api\n   */\n  clone() {\n    const scale = this.getScale();\n    return new Text({\n      font: this.getFont(),\n      placement: this.getPlacement(),\n      repeat: this.getRepeat(),\n      maxAngle: this.getMaxAngle(),\n      overflow: this.getOverflow(),\n      rotation: this.getRotation(),\n      rotateWithView: this.getRotateWithView(),\n      scale: Array.isArray(scale) ? scale.slice() : scale,\n      text: this.getText(),\n      textAlign: this.getTextAlign(),\n      justify: this.getJustify(),\n      textBaseline: this.getTextBaseline(),\n      fill: this.getFill() ? this.getFill().clone() : undefined,\n      stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n      offsetX: this.getOffsetX(),\n      offsetY: this.getOffsetY(),\n      backgroundFill: this.getBackgroundFill()\n        ? this.getBackgroundFill().clone()\n        : undefined,\n      backgroundStroke: this.getBackgroundStroke()\n        ? this.getBackgroundStroke().clone()\n        : undefined,\n      padding: this.getPadding() || undefined,\n    });\n  }\n\n  /**\n   * Get the `overflow` configuration.\n   * @return {boolean} Let text overflow the length of the path they follow.\n   * @api\n   */\n  getOverflow() {\n    return this.overflow_;\n  }\n\n  /**\n   * Get the font name.\n   * @return {string|undefined} Font.\n   * @api\n   */\n  getFont() {\n    return this.font_;\n  }\n\n  /**\n   * Get the maximum angle between adjacent characters.\n   * @return {number} Angle in radians.\n   * @api\n   */\n  getMaxAngle() {\n    return this.maxAngle_;\n  }\n\n  /**\n   * Get the label placement.\n   * @return {TextPlacement} Text placement.\n   * @api\n   */\n  getPlacement() {\n    return this.placement_;\n  }\n\n  /**\n   * Get the repeat interval of the text.\n   * @return {number|undefined} Repeat interval in pixels.\n   * @api\n   */\n  getRepeat() {\n    return this.repeat_;\n  }\n\n  /**\n   * Get the x-offset for the text.\n   * @return {number} Horizontal text offset.\n   * @api\n   */\n  getOffsetX() {\n    return this.offsetX_;\n  }\n\n  /**\n   * Get the y-offset for the text.\n   * @return {number} Vertical text offset.\n   * @api\n   */\n  getOffsetY() {\n    return this.offsetY_;\n  }\n\n  /**\n   * Get the fill style for the text.\n   * @return {import(\"./Fill.js\").default} Fill style.\n   * @api\n   */\n  getFill() {\n    return this.fill_;\n  }\n\n  /**\n   * Determine whether the text rotates with the map.\n   * @return {boolean|undefined} Rotate with map.\n   * @api\n   */\n  getRotateWithView() {\n    return this.rotateWithView_;\n  }\n\n  /**\n   * Get the text rotation.\n   * @return {number|undefined} Rotation.\n   * @api\n   */\n  getRotation() {\n    return this.rotation_;\n  }\n\n  /**\n   * Get the text scale.\n   * @return {number|import(\"../size.js\").Size|undefined} Scale.\n   * @api\n   */\n  getScale() {\n    return this.scale_;\n  }\n\n  /**\n   * Get the symbolizer scale array.\n   * @return {import(\"../size.js\").Size} Scale array.\n   */\n  getScaleArray() {\n    return this.scaleArray_;\n  }\n\n  /**\n   * Get the stroke style for the text.\n   * @return {import(\"./Stroke.js\").default} Stroke style.\n   * @api\n   */\n  getStroke() {\n    return this.stroke_;\n  }\n\n  /**\n   * Get the text to be rendered.\n   * @return {string|Array<string>|undefined} Text.\n   * @api\n   */\n  getText() {\n    return this.text_;\n  }\n\n  /**\n   * Get the text alignment.\n   * @return {CanvasTextAlign|undefined} Text align.\n   * @api\n   */\n  getTextAlign() {\n    return this.textAlign_;\n  }\n\n  /**\n   * Get the justification.\n   * @return {TextJustify|undefined} Justification.\n   * @api\n   */\n  getJustify() {\n    return this.justify_;\n  }\n\n  /**\n   * Get the text baseline.\n   * @return {CanvasTextBaseline|undefined} Text baseline.\n   * @api\n   */\n  getTextBaseline() {\n    return this.textBaseline_;\n  }\n\n  /**\n   * Get the background fill style for the text.\n   * @return {import(\"./Fill.js\").default} Fill style.\n   * @api\n   */\n  getBackgroundFill() {\n    return this.backgroundFill_;\n  }\n\n  /**\n   * Get the background stroke style for the text.\n   * @return {import(\"./Stroke.js\").default} Stroke style.\n   * @api\n   */\n  getBackgroundStroke() {\n    return this.backgroundStroke_;\n  }\n\n  /**\n   * Get the padding for the text.\n   * @return {Array<number>|null} Padding.\n   * @api\n   */\n  getPadding() {\n    return this.padding_;\n  }\n\n  /**\n   * Set the `overflow` property.\n   *\n   * @param {boolean} overflow Let text overflow the path that it follows.\n   * @api\n   */\n  setOverflow(overflow) {\n    this.overflow_ = overflow;\n  }\n\n  /**\n   * Set the font.\n   *\n   * @param {string|undefined} font Font.\n   * @api\n   */\n  setFont(font) {\n    this.font_ = font;\n  }\n\n  /**\n   * Set the maximum angle between adjacent characters.\n   *\n   * @param {number} maxAngle Angle in radians.\n   * @api\n   */\n  setMaxAngle(maxAngle) {\n    this.maxAngle_ = maxAngle;\n  }\n\n  /**\n   * Set the x offset.\n   *\n   * @param {number} offsetX Horizontal text offset.\n   * @api\n   */\n  setOffsetX(offsetX) {\n    this.offsetX_ = offsetX;\n  }\n\n  /**\n   * Set the y offset.\n   *\n   * @param {number} offsetY Vertical text offset.\n   * @api\n   */\n  setOffsetY(offsetY) {\n    this.offsetY_ = offsetY;\n  }\n\n  /**\n   * Set the text placement.\n   *\n   * @param {TextPlacement} placement Placement.\n   * @api\n   */\n  setPlacement(placement) {\n    this.placement_ = placement;\n  }\n\n  /**\n   * Set the repeat interval of the text.\n   * @param {number|undefined} [repeat] Repeat interval in pixels.\n   * @api\n   */\n  setRepeat(repeat) {\n    this.repeat_ = repeat;\n  }\n\n  /**\n   * Set whether to rotate the text with the view.\n   *\n   * @param {boolean} rotateWithView Rotate with map.\n   * @api\n   */\n  setRotateWithView(rotateWithView) {\n    this.rotateWithView_ = rotateWithView;\n  }\n\n  /**\n   * Set the fill.\n   *\n   * @param {import(\"./Fill.js\").default} fill Fill style.\n   * @api\n   */\n  setFill(fill) {\n    this.fill_ = fill;\n  }\n\n  /**\n   * Set the rotation.\n   *\n   * @param {number|undefined} rotation Rotation.\n   * @api\n   */\n  setRotation(rotation) {\n    this.rotation_ = rotation;\n  }\n\n  /**\n   * Set the scale.\n   *\n   * @param {number|import(\"../size.js\").Size|undefined} scale Scale.\n   * @api\n   */\n  setScale(scale) {\n    this.scale_ = scale;\n    this.scaleArray_ = toSize(scale !== undefined ? scale : 1);\n  }\n\n  /**\n   * Set the stroke.\n   *\n   * @param {import(\"./Stroke.js\").default} stroke Stroke style.\n   * @api\n   */\n  setStroke(stroke) {\n    this.stroke_ = stroke;\n  }\n\n  /**\n   * Set the text.\n   *\n   * @param {string|Array<string>|undefined} text Text.\n   * @api\n   */\n  setText(text) {\n    this.text_ = text;\n  }\n\n  /**\n   * Set the text alignment.\n   *\n   * @param {CanvasTextAlign|undefined} textAlign Text align.\n   * @api\n   */\n  setTextAlign(textAlign) {\n    this.textAlign_ = textAlign;\n  }\n\n  /**\n   * Set the justification.\n   *\n   * @param {TextJustify|undefined} justify Justification.\n   * @api\n   */\n  setJustify(justify) {\n    this.justify_ = justify;\n  }\n\n  /**\n   * Set the text baseline.\n   *\n   * @param {CanvasTextBaseline|undefined} textBaseline Text baseline.\n   * @api\n   */\n  setTextBaseline(textBaseline) {\n    this.textBaseline_ = textBaseline;\n  }\n\n  /**\n   * Set the background fill.\n   *\n   * @param {import(\"./Fill.js\").default} fill Fill style.\n   * @api\n   */\n  setBackgroundFill(fill) {\n    this.backgroundFill_ = fill;\n  }\n\n  /**\n   * Set the background stroke.\n   *\n   * @param {import(\"./Stroke.js\").default} stroke Stroke style.\n   * @api\n   */\n  setBackgroundStroke(stroke) {\n    this.backgroundStroke_ = stroke;\n  }\n\n  /**\n   * Set the padding (`[top, right, bottom, left]`).\n   *\n   * @param {Array<number>|null} padding Padding.\n   * @api\n   */\n  setPadding(padding) {\n    this.padding_ = padding;\n  }\n}\n\nexport default Text;\n","/**\n * @module ol/tilegrid/common\n */\n\n/**\n * Default maximum zoom for default tile grids.\n * @type {number}\n */\nexport const DEFAULT_MAX_ZOOM = 42;\n\n/**\n * Default tile size.\n * @type {number}\n */\nexport const DEFAULT_TILE_SIZE = 256;\n","/**\n * @module ol/transform\n */\nimport {WORKER_OFFSCREEN_CANVAS} from './has.js';\nimport {assert} from './asserts.js';\n\n/**\n * An array representing an affine 2d transformation for use with\n * {@link module:ol/transform} functions. The array has 6 elements.\n * @typedef {!Array<number>} Transform\n * @api\n */\n\n/**\n * Collection of affine 2d transformation functions. The functions work on an\n * array of 6 elements. The element order is compatible with the [SVGMatrix\n * interface](https://developer.mozilla.org/en-US/docs/Web/API/SVGMatrix) and is\n * a subset (elements a to f) of a 3×3 matrix:\n * ```\n * [ a c e ]\n * [ b d f ]\n * [ 0 0 1 ]\n * ```\n */\n\n/**\n * @private\n * @type {Transform}\n */\nconst tmp_ = new Array(6);\n\n/**\n * Create an identity transform.\n * @return {!Transform} Identity transform.\n */\nexport function create() {\n  return [1, 0, 0, 1, 0, 0];\n}\n\n/**\n * Resets the given transform to an identity transform.\n * @param {!Transform} transform Transform.\n * @return {!Transform} Transform.\n */\nexport function reset(transform) {\n  return set(transform, 1, 0, 0, 1, 0, 0);\n}\n\n/**\n * Multiply the underlying matrices of two transforms and return the result in\n * the first transform.\n * @param {!Transform} transform1 Transform parameters of matrix 1.\n * @param {!Transform} transform2 Transform parameters of matrix 2.\n * @return {!Transform} transform1 multiplied with transform2.\n */\nexport function multiply(transform1, transform2) {\n  const a1 = transform1[0];\n  const b1 = transform1[1];\n  const c1 = transform1[2];\n  const d1 = transform1[3];\n  const e1 = transform1[4];\n  const f1 = transform1[5];\n  const a2 = transform2[0];\n  const b2 = transform2[1];\n  const c2 = transform2[2];\n  const d2 = transform2[3];\n  const e2 = transform2[4];\n  const f2 = transform2[5];\n\n  transform1[0] = a1 * a2 + c1 * b2;\n  transform1[1] = b1 * a2 + d1 * b2;\n  transform1[2] = a1 * c2 + c1 * d2;\n  transform1[3] = b1 * c2 + d1 * d2;\n  transform1[4] = a1 * e2 + c1 * f2 + e1;\n  transform1[5] = b1 * e2 + d1 * f2 + f1;\n\n  return transform1;\n}\n\n/**\n * Set the transform components a-f on a given transform.\n * @param {!Transform} transform Transform.\n * @param {number} a The a component of the transform.\n * @param {number} b The b component of the transform.\n * @param {number} c The c component of the transform.\n * @param {number} d The d component of the transform.\n * @param {number} e The e component of the transform.\n * @param {number} f The f component of the transform.\n * @return {!Transform} Matrix with transform applied.\n */\nexport function set(transform, a, b, c, d, e, f) {\n  transform[0] = a;\n  transform[1] = b;\n  transform[2] = c;\n  transform[3] = d;\n  transform[4] = e;\n  transform[5] = f;\n  return transform;\n}\n\n/**\n * Set transform on one matrix from another matrix.\n * @param {!Transform} transform1 Matrix to set transform to.\n * @param {!Transform} transform2 Matrix to set transform from.\n * @return {!Transform} transform1 with transform from transform2 applied.\n */\nexport function setFromArray(transform1, transform2) {\n  transform1[0] = transform2[0];\n  transform1[1] = transform2[1];\n  transform1[2] = transform2[2];\n  transform1[3] = transform2[3];\n  transform1[4] = transform2[4];\n  transform1[5] = transform2[5];\n  return transform1;\n}\n\n/**\n * Transforms the given coordinate with the given transform returning the\n * resulting, transformed coordinate. The coordinate will be modified in-place.\n *\n * @param {Transform} transform The transformation.\n * @param {import(\"./coordinate.js\").Coordinate|import(\"./pixel.js\").Pixel} coordinate The coordinate to transform.\n * @return {import(\"./coordinate.js\").Coordinate|import(\"./pixel.js\").Pixel} return coordinate so that operations can be\n *     chained together.\n */\nexport function apply(transform, coordinate) {\n  const x = coordinate[0];\n  const y = coordinate[1];\n  coordinate[0] = transform[0] * x + transform[2] * y + transform[4];\n  coordinate[1] = transform[1] * x + transform[3] * y + transform[5];\n  return coordinate;\n}\n\n/**\n * Applies rotation to the given transform.\n * @param {!Transform} transform Transform.\n * @param {number} angle Angle in radians.\n * @return {!Transform} The rotated transform.\n */\nexport function rotate(transform, angle) {\n  const cos = Math.cos(angle);\n  const sin = Math.sin(angle);\n  return multiply(transform, set(tmp_, cos, sin, -sin, cos, 0, 0));\n}\n\n/**\n * Applies scale to a given transform.\n * @param {!Transform} transform Transform.\n * @param {number} x Scale factor x.\n * @param {number} y Scale factor y.\n * @return {!Transform} The scaled transform.\n */\nexport function scale(transform, x, y) {\n  return multiply(transform, set(tmp_, x, 0, 0, y, 0, 0));\n}\n\n/**\n * Creates a scale transform.\n * @param {!Transform} target Transform to overwrite.\n * @param {number} x Scale factor x.\n * @param {number} y Scale factor y.\n * @return {!Transform} The scale transform.\n */\nexport function makeScale(target, x, y) {\n  return set(target, x, 0, 0, y, 0, 0);\n}\n\n/**\n * Applies translation to the given transform.\n * @param {!Transform} transform Transform.\n * @param {number} dx Translation x.\n * @param {number} dy Translation y.\n * @return {!Transform} The translated transform.\n */\nexport function translate(transform, dx, dy) {\n  return multiply(transform, set(tmp_, 1, 0, 0, 1, dx, dy));\n}\n\n/**\n * Creates a composite transform given an initial translation, scale, rotation, and\n * final translation (in that order only, not commutative).\n * @param {!Transform} transform The transform (will be modified in place).\n * @param {number} dx1 Initial translation x.\n * @param {number} dy1 Initial translation y.\n * @param {number} sx Scale factor x.\n * @param {number} sy Scale factor y.\n * @param {number} angle Rotation (in counter-clockwise radians).\n * @param {number} dx2 Final translation x.\n * @param {number} dy2 Final translation y.\n * @return {!Transform} The composite transform.\n */\nexport function compose(transform, dx1, dy1, sx, sy, angle, dx2, dy2) {\n  const sin = Math.sin(angle);\n  const cos = Math.cos(angle);\n  transform[0] = sx * cos;\n  transform[1] = sy * sin;\n  transform[2] = -sx * sin;\n  transform[3] = sy * cos;\n  transform[4] = dx2 * sx * cos - dy2 * sx * sin + dx1;\n  transform[5] = dx2 * sy * sin + dy2 * sy * cos + dy1;\n  return transform;\n}\n\n/**\n * Creates a composite transform given an initial translation, scale, rotation, and\n * final translation (in that order only, not commutative). The resulting transform\n * string can be applied as `transform` property of an HTMLElement's style.\n * @param {number} dx1 Initial translation x.\n * @param {number} dy1 Initial translation y.\n * @param {number} sx Scale factor x.\n * @param {number} sy Scale factor y.\n * @param {number} angle Rotation (in counter-clockwise radians).\n * @param {number} dx2 Final translation x.\n * @param {number} dy2 Final translation y.\n * @return {string} The composite css transform.\n * @api\n */\nexport function composeCssTransform(dx1, dy1, sx, sy, angle, dx2, dy2) {\n  return toString(compose(create(), dx1, dy1, sx, sy, angle, dx2, dy2));\n}\n\n/**\n * Invert the given transform.\n * @param {!Transform} source The source transform to invert.\n * @return {!Transform} The inverted (source) transform.\n */\nexport function invert(source) {\n  return makeInverse(source, source);\n}\n\n/**\n * Invert the given transform.\n * @param {!Transform} target Transform to be set as the inverse of\n *     the source transform.\n * @param {!Transform} source The source transform to invert.\n * @return {!Transform} The inverted (target) transform.\n */\nexport function makeInverse(target, source) {\n  const det = determinant(source);\n  assert(det !== 0, 32); // Transformation matrix cannot be inverted\n\n  const a = source[0];\n  const b = source[1];\n  const c = source[2];\n  const d = source[3];\n  const e = source[4];\n  const f = source[5];\n\n  target[0] = d / det;\n  target[1] = -b / det;\n  target[2] = -c / det;\n  target[3] = a / det;\n  target[4] = (c * f - d * e) / det;\n  target[5] = -(a * f - b * e) / det;\n\n  return target;\n}\n\n/**\n * Returns the determinant of the given matrix.\n * @param {!Transform} mat Matrix.\n * @return {number} Determinant.\n */\nexport function determinant(mat) {\n  return mat[0] * mat[3] - mat[1] * mat[2];\n}\n\n/**\n * @type {HTMLElement}\n * @private\n */\nlet transformStringDiv;\n\n/**\n * A rounded string version of the transform.  This can be used\n * for CSS transforms.\n * @param {!Transform} mat Matrix.\n * @return {string} The transform as a string.\n */\nexport function toString(mat) {\n  const transformString = 'matrix(' + mat.join(', ') + ')';\n  if (WORKER_OFFSCREEN_CANVAS) {\n    return transformString;\n  }\n  const node =\n    transformStringDiv || (transformStringDiv = document.createElement('div'));\n  node.style.transform = transformString;\n  return node.style.transform;\n}\n","/**\n * @module ol/util\n */\n\n/**\n * @return {never} Any return.\n */\nexport function abstract() {\n  throw new Error('Unimplemented abstract method.');\n}\n\n/**\n * Counter for getUid.\n * @type {number}\n * @private\n */\nlet uidCounter_ = 0;\n\n/**\n * Gets a unique ID for an object. This mutates the object so that further calls\n * with the same object as a parameter returns the same value. Unique IDs are generated\n * as a strictly increasing sequence. Adapted from goog.getUid.\n *\n * @param {Object} obj The object to get the unique ID for.\n * @return {string} The unique ID for the object.\n * @api\n */\nexport function getUid(obj) {\n  return obj.ol_uid || (obj.ol_uid = String(++uidCounter_));\n}\n\n/**\n * OpenLayers version.\n * @type {string}\n */\nexport const VERSION = '7.2.3-dev.1674471022184';\n","/**\n * @module ol/render/Feature\n */\nimport Feature from '../Feature.js';\nimport {\n  LineString,\n  MultiLineString,\n  MultiPoint,\n  MultiPolygon,\n  Point,\n  Polygon,\n} from '../geom.js';\nimport {\n  compose as composeTransform,\n  create as createTransform,\n} from '../transform.js';\nimport {\n  createOrUpdateFromCoordinate,\n  createOrUpdateFromFlatCoordinates,\n  getCenter,\n  getHeight,\n} from '../extent.js';\nimport {extend} from '../array.js';\nimport {\n  getInteriorPointOfArray,\n  getInteriorPointsOfMultiArray,\n} from '../geom/flat/interiorpoint.js';\nimport {get as getProjection} from '../proj.js';\nimport {inflateEnds} from '../geom/flat/orient.js';\nimport {interpolatePoint} from '../geom/flat/interpolate.js';\nimport {linearRingss as linearRingssCenter} from '../geom/flat/center.js';\nimport {transform2D} from '../geom/flat/transform.js';\n\n/**\n * @type {import(\"../transform.js\").Transform}\n */\nconst tmpTransform = createTransform();\n\n/**\n * Lightweight, read-only, {@link module:ol/Feature~Feature} and {@link module:ol/geom/Geometry~Geometry} like\n * structure, optimized for vector tile rendering and styling. Geometry access\n * through the API is limited to getting the type and extent of the geometry.\n */\nclass RenderFeature {\n  /**\n   * @param {import(\"../geom/Geometry.js\").Type} type Geometry type.\n   * @param {Array<number>} flatCoordinates Flat coordinates. These always need\n   *     to be right-handed for polygons.\n   * @param {Array<number>|Array<Array<number>>} ends Ends or Endss.\n   * @param {Object<string, *>} properties Properties.\n   * @param {number|string|undefined} id Feature id.\n   */\n  constructor(type, flatCoordinates, ends, properties, id) {\n    /**\n     * @type {import(\"../style/Style.js\").StyleFunction|undefined}\n     */\n    this.styleFunction;\n\n    /**\n     * @private\n     * @type {import(\"../extent.js\").Extent|undefined}\n     */\n    this.extent_;\n\n    /**\n     * @private\n     * @type {number|string|undefined}\n     */\n    this.id_ = id;\n\n    /**\n     * @private\n     * @type {import(\"../geom/Geometry.js\").Type}\n     */\n    this.type_ = type;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.flatCoordinates_ = flatCoordinates;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.flatInteriorPoints_ = null;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.flatMidpoints_ = null;\n\n    /**\n     * @private\n     * @type {Array<number>|Array<Array<number>>}\n     */\n    this.ends_ = ends;\n\n    /**\n     * @private\n     * @type {Object<string, *>}\n     */\n    this.properties_ = properties;\n  }\n\n  /**\n   * Get a feature property by its key.\n   * @param {string} key Key\n   * @return {*} Value for the requested key.\n   * @api\n   */\n  get(key) {\n    return this.properties_[key];\n  }\n\n  /**\n   * Get the extent of this feature's geometry.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   * @api\n   */\n  getExtent() {\n    if (!this.extent_) {\n      this.extent_ =\n        this.type_ === 'Point'\n          ? createOrUpdateFromCoordinate(this.flatCoordinates_)\n          : createOrUpdateFromFlatCoordinates(\n              this.flatCoordinates_,\n              0,\n              this.flatCoordinates_.length,\n              2\n            );\n    }\n    return this.extent_;\n  }\n\n  /**\n   * @return {Array<number>} Flat interior points.\n   */\n  getFlatInteriorPoint() {\n    if (!this.flatInteriorPoints_) {\n      const flatCenter = getCenter(this.getExtent());\n      this.flatInteriorPoints_ = getInteriorPointOfArray(\n        this.flatCoordinates_,\n        0,\n        /** @type {Array<number>} */ (this.ends_),\n        2,\n        flatCenter,\n        0\n      );\n    }\n    return this.flatInteriorPoints_;\n  }\n\n  /**\n   * @return {Array<number>} Flat interior points.\n   */\n  getFlatInteriorPoints() {\n    if (!this.flatInteriorPoints_) {\n      const flatCenters = linearRingssCenter(\n        this.flatCoordinates_,\n        0,\n        /** @type {Array<Array<number>>} */ (this.ends_),\n        2\n      );\n      this.flatInteriorPoints_ = getInteriorPointsOfMultiArray(\n        this.flatCoordinates_,\n        0,\n        /** @type {Array<Array<number>>} */ (this.ends_),\n        2,\n        flatCenters\n      );\n    }\n    return this.flatInteriorPoints_;\n  }\n\n  /**\n   * @return {Array<number>} Flat midpoint.\n   */\n  getFlatMidpoint() {\n    if (!this.flatMidpoints_) {\n      this.flatMidpoints_ = interpolatePoint(\n        this.flatCoordinates_,\n        0,\n        this.flatCoordinates_.length,\n        2,\n        0.5\n      );\n    }\n    return this.flatMidpoints_;\n  }\n\n  /**\n   * @return {Array<number>} Flat midpoints.\n   */\n  getFlatMidpoints() {\n    if (!this.flatMidpoints_) {\n      this.flatMidpoints_ = [];\n      const flatCoordinates = this.flatCoordinates_;\n      let offset = 0;\n      const ends = /** @type {Array<number>} */ (this.ends_);\n      for (let i = 0, ii = ends.length; i < ii; ++i) {\n        const end = ends[i];\n        const midpoint = interpolatePoint(flatCoordinates, offset, end, 2, 0.5);\n        extend(this.flatMidpoints_, midpoint);\n        offset = end;\n      }\n    }\n    return this.flatMidpoints_;\n  }\n\n  /**\n   * Get the feature identifier.  This is a stable identifier for the feature and\n   * is set when reading data from a remote source.\n   * @return {number|string|undefined} Id.\n   * @api\n   */\n  getId() {\n    return this.id_;\n  }\n\n  /**\n   * @return {Array<number>} Flat coordinates.\n   */\n  getOrientedFlatCoordinates() {\n    return this.flatCoordinates_;\n  }\n\n  /**\n   * For API compatibility with {@link module:ol/Feature~Feature}, this method is useful when\n   * determining the geometry type in style function (see {@link #getType}).\n   * @return {RenderFeature} Feature.\n   * @api\n   */\n  getGeometry() {\n    return this;\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {RenderFeature} Simplified geometry.\n   */\n  getSimplifiedGeometry(squaredTolerance) {\n    return this;\n  }\n\n  /**\n   * Get a transformed and simplified version of the geometry.\n   * @abstract\n   * @param {number} squaredTolerance Squared tolerance.\n   * @param {import(\"../proj.js\").TransformFunction} [transform] Optional transform function.\n   * @return {RenderFeature} Simplified geometry.\n   */\n  simplifyTransformed(squaredTolerance, transform) {\n    return this;\n  }\n\n  /**\n   * Get the feature properties.\n   * @return {Object<string, *>} Feature properties.\n   * @api\n   */\n  getProperties() {\n    return this.properties_;\n  }\n\n  /**\n   * @return {number} Stride.\n   */\n  getStride() {\n    return 2;\n  }\n\n  /**\n   * @return {import('../style/Style.js').StyleFunction|undefined} Style\n   */\n  getStyleFunction() {\n    return this.styleFunction;\n  }\n\n  /**\n   * Get the type of this feature's geometry.\n   * @return {import(\"../geom/Geometry.js\").Type} Geometry type.\n   * @api\n   */\n  getType() {\n    return this.type_;\n  }\n\n  /**\n   * Transform geometry coordinates from tile pixel space to projected.\n   *\n   * @param {import(\"../proj.js\").ProjectionLike} projection The data projection\n   */\n  transform(projection) {\n    projection = getProjection(projection);\n    const pixelExtent = projection.getExtent();\n    const projectedExtent = projection.getWorldExtent();\n    if (pixelExtent && projectedExtent) {\n      const scale = getHeight(projectedExtent) / getHeight(pixelExtent);\n      composeTransform(\n        tmpTransform,\n        projectedExtent[0],\n        projectedExtent[3],\n        scale,\n        -scale,\n        0,\n        0,\n        0\n      );\n      transform2D(\n        this.flatCoordinates_,\n        0,\n        this.flatCoordinates_.length,\n        2,\n        tmpTransform,\n        this.flatCoordinates_\n      );\n    }\n  }\n  /**\n   * @return {Array<number>|Array<Array<number>>} Ends or endss.\n   */\n  getEnds() {\n    return this.ends_;\n  }\n}\n\nRenderFeature.prototype.getEndss = RenderFeature.prototype.getEnds;\n\n/**\n * @return {Array<number>} Flat coordinates.\n */\nRenderFeature.prototype.getFlatCoordinates =\n  RenderFeature.prototype.getOrientedFlatCoordinates;\n\n/**\n * Create a geometry from an `ol/render/Feature`\n * @param {RenderFeature} renderFeature\n * Render Feature\n * @return {Point|MultiPoint|LineString|MultiLineString|Polygon|MultiPolygon}\n * New geometry instance.\n * @api\n */\nexport function toGeometry(renderFeature) {\n  const geometryType = renderFeature.getType();\n  switch (geometryType) {\n    case 'Point':\n      return new Point(renderFeature.getFlatCoordinates());\n    case 'MultiPoint':\n      return new MultiPoint(renderFeature.getFlatCoordinates(), 'XY');\n    case 'LineString':\n      return new LineString(renderFeature.getFlatCoordinates(), 'XY');\n    case 'MultiLineString':\n      return new MultiLineString(\n        renderFeature.getFlatCoordinates(),\n        'XY',\n        /** @type {Array<number>} */ (renderFeature.getEnds())\n      );\n    case 'Polygon':\n      const flatCoordinates = renderFeature.getFlatCoordinates();\n      const ends = /** @type {Array<number>} */ (renderFeature.getEnds());\n      const endss = inflateEnds(flatCoordinates, ends);\n      return endss.length > 1\n        ? new MultiPolygon(flatCoordinates, 'XY', endss)\n        : new Polygon(flatCoordinates, 'XY', ends);\n    default:\n      throw new Error('Invalid geometry type:' + geometryType);\n  }\n}\n\n/**\n * Create an `ol/Feature` from an `ol/render/Feature`\n * @param {RenderFeature} renderFeature RenderFeature\n * @param {string} [geometryName='geometry'] Geometry name to use\n * when creating the Feature.\n * @return {Feature} Newly constructed `ol/Feature` with properties,\n * geometry, and id copied over.\n * @api\n */\nexport function toFeature(renderFeature, geometryName) {\n  const id = renderFeature.getId();\n  const geometry = toGeometry(renderFeature);\n  const properties = renderFeature.getProperties();\n  const feature = new Feature();\n  if (geometryName !== undefined) {\n    feature.setGeometryName(geometryName);\n  }\n  feature.setGeometry(geometry);\n  if (id !== undefined) {\n    feature.setId(id);\n  }\n  feature.setProperties(properties, true);\n  return feature;\n}\n\nexport default RenderFeature;\n","//      \n\nimport {parseCSSColor} from 'csscolorparser';\n\n/**\n * An RGBA color value. Create instances from color strings using the static\n * method `Color.parse`. The constructor accepts RGB channel values in the range\n * `[0, 1]`, premultiplied by A.\n *\n * @param {number} r The red channel.\n * @param {number} g The green channel.\n * @param {number} b The blue channel.\n * @param {number} a The alpha channel.\n * @private\n */\nclass Color {\n              \n              \n              \n              \n\n    constructor(r        , g        , b        , a         = 1) {\n        this.r = r;\n        this.g = g;\n        this.b = b;\n        this.a = a;\n    }\n\n                        \n                        \n                              \n                      \n                       \n\n    /**\n     * Parses valid CSS color strings and returns a `Color` instance.\n     * @returns A `Color` instance, or `undefined` if the input is not a valid color string.\n     */\n    static parse(input                        )               {\n        if (!input) {\n            return undefined;\n        }\n\n        if (input instanceof Color) {\n            return input;\n        }\n\n        if (typeof input !== 'string') {\n            return undefined;\n        }\n\n        const rgba = parseCSSColor(input);\n        if (!rgba) {\n            return undefined;\n        }\n\n        return new Color(\n            rgba[0] / 255 * rgba[3],\n            rgba[1] / 255 * rgba[3],\n            rgba[2] / 255 * rgba[3],\n            rgba[3]\n        );\n    }\n\n    /**\n     * Returns an RGBA string representing the color value.\n     *\n     * @returns An RGBA string.\n     * @example\n     * var purple = new Color.parse('purple');\n     * purple.toString; // = \"rgba(128,0,128,1)\"\n     * var translucentGreen = new Color.parse('rgba(26, 207, 26, .73)');\n     * translucentGreen.toString(); // = \"rgba(26,207,26,0.73)\"\n     */\n    toString()         {\n        const [r, g, b, a] = this.toArray();\n        return `rgba(${Math.round(r)},${Math.round(g)},${Math.round(b)},${a})`;\n    }\n\n    /**\n     * Returns an RGBA array of values representing the color, unpremultiplied by A.\n     *\n     * @returns An array of RGBA color values in the range [0, 255].\n     */\n    toArray()                                   {\n        const {r, g, b, a} = this;\n        return a === 0 ? [0, 0, 0, 0] : [\n            r * 255 / a,\n            g * 255 / a,\n            b * 255 / a,\n            a\n        ];\n    }\n\n    /**\n     * Returns a RGBA array of float values representing the color, unpremultiplied by A.\n     *\n     * @returns An array of RGBA color values in the range [0, 1].\n     */\n    toArray01()                                   {\n        const {r, g, b, a} = this;\n        return a === 0 ? [0, 0, 0, 0] : [\n            r / a,\n            g / a,\n            b / a,\n            a\n        ];\n    }\n\n    /**\n     * Returns an RGBA array of values representing the color, premultiplied by A.\n     *\n     * @returns An array of RGBA color values in the range [0, 1].\n     */\n    toArray01PremultipliedAlpha()                                   {\n        const {r, g, b, a} = this;\n        return [\n            r,\n            g,\n            b,\n            a\n        ];\n    }\n}\n\nColor.black = new Color(0, 0, 0, 1);\nColor.white = new Color(1, 1, 1, 1);\nColor.transparent = new Color(0, 0, 0, 0);\nColor.red = new Color(1, 0, 0, 1);\nColor.blue = new Color(0, 0, 1, 1);\n\nexport default Color;\n","//      \n\nimport assert from 'assert';\n\n                                                                 \n                                                         \n\nfunction convertLiteral(value) {\n    return typeof value === 'object' ? ['literal', value] : value;\n}\n\nexport default function convertFunction(parameters     , propertySpec                            )                          {\n    let stops = parameters.stops;\n    if (!stops) {\n        // identity function\n        return convertIdentityFunction(parameters, propertySpec);\n    }\n\n    const zoomAndFeatureDependent = stops && typeof stops[0][0] === 'object';\n    const featureDependent = zoomAndFeatureDependent || parameters.property !== undefined;\n    const zoomDependent = zoomAndFeatureDependent || !featureDependent;\n\n    stops = stops.map((stop) => {\n        if (!featureDependent && propertySpec.tokens && typeof stop[1] === 'string') {\n            return [stop[0], convertTokenString(stop[1])];\n        }\n        return [stop[0], convertLiteral(stop[1])];\n    });\n\n    if (zoomAndFeatureDependent) {\n        return convertZoomAndPropertyFunction(parameters, propertySpec, stops);\n    } else if (zoomDependent) {\n        return convertZoomFunction(parameters, propertySpec, stops);\n    } else {\n        return convertPropertyFunction(parameters, propertySpec, stops);\n    }\n}\n\nfunction convertIdentityFunction(parameters, propertySpec)               {\n    const get = ['get', parameters.property];\n\n    if (parameters.default === undefined) {\n        // By default, expressions for string-valued properties get coerced. To preserve\n        // legacy function semantics, insert an explicit assertion instead.\n        return propertySpec.type === 'string' ? ['string', get] : get;\n    } else if (propertySpec.type === 'enum') {\n        return [\n            'match',\n            get,\n            Object.keys(propertySpec.values),\n            get,\n            parameters.default\n        ];\n    } else {\n        const expression = [propertySpec.type === 'color' ? 'to-color' : propertySpec.type, get, convertLiteral(parameters.default)];\n        if (propertySpec.type === 'array') {\n            expression.splice(1, 0, propertySpec.value, propertySpec.length || null);\n        }\n        return expression;\n    }\n}\n\nfunction getInterpolateOperator(parameters) {\n    switch (parameters.colorSpace) {\n    case 'hcl': return 'interpolate-hcl';\n    case 'lab': return 'interpolate-lab';\n    default: return 'interpolate';\n    }\n}\n\nfunction convertZoomAndPropertyFunction(parameters, propertySpec, stops) {\n    const featureFunctionParameters = {};\n    const featureFunctionStops = {};\n    const zoomStops = [];\n    for (let s = 0; s < stops.length; s++) {\n        const stop = stops[s];\n        const zoom = stop[0].zoom;\n        if (featureFunctionParameters[zoom] === undefined) {\n            featureFunctionParameters[zoom] = {\n                zoom,\n                type: parameters.type,\n                property: parameters.property,\n                default: parameters.default,\n            };\n            featureFunctionStops[zoom] = [];\n            zoomStops.push(zoom);\n        }\n        featureFunctionStops[zoom].push([stop[0].value, stop[1]]);\n    }\n\n    // the interpolation type for the zoom dimension of a zoom-and-property\n    // function is determined directly from the style property specification\n    // for which it's being used: linear for interpolatable properties, step\n    // otherwise.\n    const functionType = getFunctionType({}, propertySpec);\n    if (functionType === 'exponential') {\n        const expression = [getInterpolateOperator(parameters), ['linear'], ['zoom']];\n\n        for (const z of zoomStops) {\n            const output = convertPropertyFunction(featureFunctionParameters[z], propertySpec, featureFunctionStops[z]);\n            appendStopPair(expression, z, output, false);\n        }\n\n        return expression;\n    } else {\n        const expression = ['step', ['zoom']];\n\n        for (const z of zoomStops) {\n            const output = convertPropertyFunction(featureFunctionParameters[z], propertySpec, featureFunctionStops[z]);\n            appendStopPair(expression, z, output, true);\n        }\n\n        fixupDegenerateStepCurve(expression);\n\n        return expression;\n    }\n}\n\nfunction coalesce(a, b) {\n    if (a !== undefined) return a;\n    if (b !== undefined) return b;\n}\n\nfunction getFallback(parameters, propertySpec) {\n    const defaultValue = convertLiteral(coalesce(parameters.default, propertySpec.default));\n\n    /*\n     * Some fields with type: resolvedImage have an undefined default.\n     * Because undefined is an invalid value for resolvedImage, set fallback to\n     * an empty string instead of undefined to ensure output\n     * passes validation.\n     */\n    if (defaultValue === undefined && propertySpec.type === 'resolvedImage') {\n        return '';\n    }\n    return defaultValue;\n}\n\nfunction convertPropertyFunction(parameters, propertySpec, stops) {\n    const type = getFunctionType(parameters, propertySpec);\n    const get = ['get', parameters.property];\n    if (type === 'categorical' && typeof stops[0][0] === 'boolean') {\n        assert(parameters.stops.length > 0 && parameters.stops.length <= 2);\n        const expression = ['case'];\n        for (const stop of stops) {\n            expression.push(['==', get, stop[0]], stop[1]);\n        }\n\n        expression.push(getFallback(parameters, propertySpec));\n        return expression;\n    } else if (type === 'categorical') {\n        const expression = ['match', get];\n        for (const stop of stops) {\n            appendStopPair(expression, stop[0], stop[1], false);\n        }\n        expression.push(getFallback(parameters, propertySpec));\n        return expression;\n    } else if (type === 'interval') {\n        const expression = ['step', ['number', get]];\n        for (const stop of stops) {\n            appendStopPair(expression, stop[0], stop[1], true);\n        }\n        fixupDegenerateStepCurve(expression);\n        return parameters.default === undefined ? expression : [\n            'case',\n            ['==', ['typeof', get], 'number'],\n            expression,\n            convertLiteral(parameters.default)\n        ];\n    } else if (type === 'exponential') {\n        const base = parameters.base !== undefined ? parameters.base : 1;\n        const expression = [\n            getInterpolateOperator(parameters),\n            base === 1 ? [\"linear\"] : [\"exponential\", base],\n            [\"number\", get]\n        ];\n\n        for (const stop of stops) {\n            appendStopPair(expression, stop[0], stop[1], false);\n        }\n        return parameters.default === undefined ? expression : [\n            'case',\n            ['==', ['typeof', get], 'number'],\n            expression,\n            convertLiteral(parameters.default)\n        ];\n    } else {\n        throw new Error(`Unknown property function type ${type}`);\n    }\n}\n\nfunction convertZoomFunction(parameters, propertySpec, stops, input = ['zoom']) {\n    const type = getFunctionType(parameters, propertySpec);\n    let expression;\n    let isStep = false;\n    if (type === 'interval') {\n        expression = ['step', input];\n        isStep = true;\n    } else if (type === 'exponential') {\n        const base = parameters.base !== undefined ? parameters.base : 1;\n        expression = [getInterpolateOperator(parameters), base === 1 ? [\"linear\"] : [\"exponential\", base], input];\n\n    } else {\n        throw new Error(`Unknown zoom function type \"${type}\"`);\n    }\n\n    for (const stop of stops) {\n        appendStopPair(expression, stop[0], stop[1], isStep);\n    }\n\n    fixupDegenerateStepCurve(expression);\n\n    return expression;\n}\n\nfunction fixupDegenerateStepCurve(expression) {\n    // degenerate step curve (i.e. a constant function): add a noop stop\n    if (expression[0] === 'step' && expression.length === 3) {\n        expression.push(0);\n        expression.push(expression[3]);\n    }\n}\n\nfunction appendStopPair(curve, input, output, isStep) {\n    // Skip duplicate stop values. They were not validated for functions, but they are for expressions.\n    // https://github.com/mapbox/mapbox-gl-js/issues/4107\n    if (curve.length > 3 && input === curve[curve.length - 2]) {\n        return;\n    }\n    // step curves don't get the first input value, as it is redundant.\n    if (!(isStep && curve.length === 2)) {\n        curve.push(input);\n    }\n    curve.push(output);\n}\n\nfunction getFunctionType(parameters, propertySpec) {\n    if (parameters.type) {\n        return parameters.type;\n    } else {\n        assert(propertySpec.expression);\n        return (propertySpec.expression     ).interpolated ? 'exponential' : 'interval';\n    }\n}\n\n// \"String with {name} token\" => [\"concat\", \"String with \", [\"get\", \"name\"], \" token\"]\nexport function convertTokenString(s        )                                   {\n    const result = ['concat'];\n    const re = /{([^{}]+)}/g;\n    let pos = 0;\n    for (let match = re.exec(s); match !== null; match = re.exec(s)) {\n        const literal = s.slice(pos, re.lastIndex - match[0].length);\n        pos = re.lastIndex;\n        if (literal.length > 0) result.push(literal);\n        result.push(['get', match[1]]);\n    }\n\n    if (result.length === 1) {\n        return s;\n    }\n\n    if (pos < s.length) {\n        result.push(s.slice(pos));\n    } else if (result.length === 2) {\n        return ['to-string', result[1]];\n    }\n\n    return result;\n}\n\n","//      \n\nexport default function (output     , ...inputs            )      {\n    for (const input of inputs) {\n        for (const k in input) {\n            output[k] = input[k];\n        }\n    }\n    return output;\n}\n","//      \n\nclass ParsingError extends Error {\n                \n                    \n    constructor(key        , message        ) {\n        super(message);\n        this.message = message;\n        this.key = key;\n    }\n}\n\nexport default ParsingError;\n","//      \n\n                                                \n\n/**\n * Tracks `let` bindings during expression parsing.\n * @private\n */\nclass Scope {\n                   \n                                        \n    constructor(parent        , bindings                              = []) {\n        this.parent = parent;\n        this.bindings = {};\n        for (const [name, expression] of bindings) {\n            this.bindings[name] = expression;\n        }\n    }\n\n    concat(bindings                             )        {\n        return new Scope(this, bindings);\n    }\n\n    get(name        )             {\n        if (this.bindings[name]) { return this.bindings[name]; }\n        if (this.parent) { return this.parent.get(name); }\n        throw new Error(`${name} not found in scope.`);\n    }\n\n    has(name        )          {\n        if (this.bindings[name]) return true;\n        return this.parent ? this.parent.has(name) : false;\n    }\n}\n\nexport default Scope;\n","//      \n\n                                         \n                                             \n                                             \n                                               \n                                           \n                                             \n                                           \n                                           \n                                                 \n                                                   \n                                                           \n\n                                                                            \n\n                  \n               \n                 \n                 \n                  \n                \n                 \n                \n                                                           \n                \n                   \n                    \n                      \n\n                         \n                  \n                   \n              \n \n\n                                                                                      \n\nexport const NullType = {kind: 'null'};\nexport const NumberType = {kind: 'number'};\nexport const StringType = {kind: 'string'};\nexport const BooleanType = {kind: 'boolean'};\nexport const ColorType = {kind: 'color'};\nexport const ObjectType = {kind: 'object'};\nexport const ValueType = {kind: 'value'};\nexport const ErrorType = {kind: 'error'};\nexport const CollatorType = {kind: 'collator'};\nexport const FormattedType = {kind: 'formatted'};\nexport const ResolvedImageType = {kind: 'resolvedImage'};\n\nexport function array(itemType      , N         )            {\n    return {\n        kind: 'array',\n        itemType,\n        N\n    };\n}\n\nexport function toString(type      )         {\n    if (type.kind === 'array') {\n        const itemType = toString(type.itemType);\n        return typeof type.N === 'number' ?\n            `array<${itemType}, ${type.N}>` :\n            type.itemType.kind === 'value' ? 'array' : `array<${itemType}>`;\n    } else {\n        return type.kind;\n    }\n}\n\nconst valueMemberTypes = [\n    NullType,\n    NumberType,\n    StringType,\n    BooleanType,\n    ColorType,\n    FormattedType,\n    ObjectType,\n    array(ValueType),\n    ResolvedImageType\n];\n\n/**\n * Returns null if `t` is a subtype of `expected`; otherwise returns an\n * error message.\n * @private\n */\nexport function checkSubtype(expected      , t      )          {\n    if (t.kind === 'error') {\n        // Error is a subtype of every type\n        return null;\n    } else if (expected.kind === 'array') {\n        if (t.kind === 'array' &&\n            ((t.N === 0 && t.itemType.kind === 'value') || !checkSubtype(expected.itemType, t.itemType)) &&\n            (typeof expected.N !== 'number' || expected.N === t.N)) {\n            return null;\n        }\n    } else if (expected.kind === t.kind) {\n        return null;\n    } else if (expected.kind === 'value') {\n        for (const memberType of valueMemberTypes) {\n            if (!checkSubtype(memberType, t)) {\n                return null;\n            }\n        }\n    }\n\n    return `Expected ${toString(expected)} but found ${toString(t)} instead.`;\n}\n\nexport function isValidType(provided      , allowedTypes             )          {\n    return allowedTypes.some(t => t.kind === provided.kind);\n}\n\nexport function isValidNativeType(provided     , allowedTypes                   )          {\n    return allowedTypes.some(t => {\n        if (t === 'null') {\n            return provided === null;\n        } else if (t === 'array') {\n            return Array.isArray(provided);\n        } else if (t === 'object') {\n            return provided && !Array.isArray(provided) && typeof provided === 'object';\n        } else {\n            return t === typeof provided;\n        }\n    });\n}\n","//      \n\n// Flow type declarations for Intl cribbed from\n// https://github.com/facebook/flow/issues/1270\n\n                   \n                                  \n  \n\n                             \n                 \n                                    \n                                 \n                     \n\n            \n                                    \n                                 \n                     \n\n                                           \n\n                           \n \n\n                        \n                                          \n                              \n                                                         \n                                \n                      \n                                           \n \n\nexport default class Collator {\n                          \n                                                        \n                            \n\n    constructor(caseSensitive         , diacriticSensitive         , locale               ) {\n        if (caseSensitive)\n            this.sensitivity = diacriticSensitive ? 'variant' : 'case';\n        else\n            this.sensitivity = diacriticSensitive ? 'accent' : 'base';\n\n        this.locale = locale;\n        this.collator = new Intl.Collator(this.locale ? this.locale : [],\n            {sensitivity: this.sensitivity, usage: 'search'});\n    }\n\n    compare(lhs        , rhs        )         {\n        return this.collator.compare(lhs, rhs);\n    }\n\n    resolvedLocale()         {\n        // We create a Collator without \"usage: search\" because we don't want\n        // the search options encoded in our result (e.g. \"en-u-co-search\")\n        return new Intl.Collator(this.locale ? this.locale : [])\n            .resolvedOptions().locale;\n    }\n}\n","//      \n                                             \n                                                            \n\nexport class FormattedSection {\n                 \n                                \n                         \n                             \n                            \n\n    constructor(text        , image                      , scale               , fontStack               , textColor              ) {\n        // combine characters so that diacritic marks are not separate code points\n        this.text = text.normalize ? text.normalize() : text;\n        this.image = image;\n        this.scale = scale;\n        this.fontStack = fontStack;\n        this.textColor = textColor;\n    }\n}\n\nexport default class Formatted {\n                                      \n\n    constructor(sections                         ) {\n        this.sections = sections;\n    }\n\n    static fromString(unformatted        )            {\n        return new Formatted([new FormattedSection(unformatted, null, null, null, null)]);\n    }\n\n    isEmpty()          {\n        if (this.sections.length === 0) return true;\n        return !this.sections.some(section => section.text.length !== 0 ||\n                                             (section.image && section.image.name.length !== 0));\n    }\n\n    static factory(text                    )            {\n        if (text instanceof Formatted) {\n            return text;\n        } else {\n            return Formatted.fromString(text);\n        }\n    }\n\n    toString()         {\n        if (this.sections.length === 0) return '';\n        return this.sections.map(section => section.text).join('');\n    }\n\n    serialize()               {\n        const serialized               = [\"format\"];\n        for (const section of this.sections) {\n            if (section.image) {\n                serialized.push([\"image\", section.image.name]);\n                continue;\n            }\n            serialized.push(section.text);\n            const options                           = {};\n            if (section.fontStack) {\n                options[\"text-font\"] = [\"literal\", section.fontStack.split(',')];\n            }\n            if (section.scale) {\n                options[\"font-scale\"] = section.scale;\n            }\n            if (section.textColor) {\n                options[\"text-color\"] = ([\"rgba\"]              ).concat(section.textColor.toArray());\n            }\n            serialized.push(options);\n        }\n        return serialized;\n    }\n}\n","//      \n\n                                    \n                 \n                      \n  \n\nexport default class ResolvedImage {\n                 \n                       \n\n    constructor(options                      ) {\n        this.name = options.name;\n        this.available = options.available;\n    }\n\n    toString()         {\n        return this.name;\n    }\n\n    static fromString(name        )                       {\n        if (!name) return null; // treat empty values as no image\n        return new ResolvedImage({name, available: false});\n    }\n\n    serialize()                {\n        return [\"image\", this.name];\n    }\n}\n","//      \n\nimport assert from 'assert';\n\nimport Color from '../util/color.js';\nimport Collator from './types/collator.js';\nimport Formatted from './types/formatted.js';\nimport ResolvedImage from './types/resolved_image.js';\nimport {NullType, NumberType, StringType, BooleanType, ColorType, ObjectType, ValueType, CollatorType, FormattedType, ResolvedImageType, array} from './types.js';\n\n                                     \n\nexport function validateRGBA(r       , g       , b       , a        )                {\n    if (!(\n        typeof r === 'number' && r >= 0 && r <= 255 &&\n        typeof g === 'number' && g >= 0 && g <= 255 &&\n        typeof b === 'number' && b >= 0 && b <= 255\n    )) {\n        const value = typeof a === 'number' ? [r, g, b, a] : [r, g, b];\n        return `Invalid rgba value [${value.join(', ')}]: 'r', 'g', and 'b' must be between 0 and 255.`;\n    }\n\n    if (!(\n        typeof a === 'undefined' || (typeof a === 'number' && a >= 0 && a <= 1)\n    )) {\n        return `Invalid rgba value [${[r, g, b, a].join(', ')}]: 'a' must be between 0 and 1.`;\n    }\n\n    return null;\n}\n\n                                                                                                                                                  \n\nexport function isValue(mixed       )          {\n    if (mixed === null) {\n        return true;\n    } else if (typeof mixed === 'string') {\n        return true;\n    } else if (typeof mixed === 'boolean') {\n        return true;\n    } else if (typeof mixed === 'number') {\n        return true;\n    } else if (mixed instanceof Color) {\n        return true;\n    } else if (mixed instanceof Collator) {\n        return true;\n    } else if (mixed instanceof Formatted) {\n        return true;\n    } else if (mixed instanceof ResolvedImage) {\n        return true;\n    } else if (Array.isArray(mixed)) {\n        for (const item of mixed) {\n            if (!isValue(item)) {\n                return false;\n            }\n        }\n        return true;\n    } else if (typeof mixed === 'object') {\n        for (const key in mixed) {\n            if (!isValue(mixed[key])) {\n                return false;\n            }\n        }\n        return true;\n    } else {\n        return false;\n    }\n}\n\nexport function typeOf(value       )       {\n    if (value === null) {\n        return NullType;\n    } else if (typeof value === 'string') {\n        return StringType;\n    } else if (typeof value === 'boolean') {\n        return BooleanType;\n    } else if (typeof value === 'number') {\n        return NumberType;\n    } else if (value instanceof Color) {\n        return ColorType;\n    } else if (value instanceof Collator) {\n        return CollatorType;\n    } else if (value instanceof Formatted) {\n        return FormattedType;\n    } else if (value instanceof ResolvedImage) {\n        return ResolvedImageType;\n    } else if (Array.isArray(value)) {\n        const length = value.length;\n        let itemType                         ;\n\n        for (const item of value) {\n            const t = typeOf(item);\n            if (!itemType) {\n                itemType = t;\n            } else if (itemType === t) {\n                continue;\n            } else {\n                itemType = ValueType;\n                break;\n            }\n        }\n\n        return array(itemType || ValueType, length);\n    } else {\n        assert(typeof value === 'object');\n        return ObjectType;\n    }\n}\n\nexport function toString(value       )         {\n    const type = typeof value;\n    if (value === null) {\n        return '';\n    } else if (type === 'string' || type === 'number' || type === 'boolean') {\n        return String(value);\n    } else if (value instanceof Color || value instanceof Formatted || value instanceof ResolvedImage) {\n        return value.toString();\n    } else {\n        return JSON.stringify(value);\n    }\n}\n\nexport {Color, Collator};\n","//      \n\nimport assert from 'assert';\nimport {isValue, typeOf, Color} from '../values.js';\nimport Formatted from '../types/formatted.js';\n\n                                      \n                                         \n                                                                       \n                                                        \n\nclass Literal                       {\n               \n                 \n\n    constructor(type      , value       ) {\n        this.type = type;\n        this.value = value;\n    }\n\n    static parse(args                       , context                )                 {\n        if (args.length !== 2)\n            return context.error(`'literal' expression requires exactly one argument, but found ${args.length - 1} instead.`);\n\n        if (!isValue(args[1]))\n            return context.error(`invalid value`);\n\n        const value = (args[1]     );\n        let type = typeOf(value);\n\n        // special case: infer the item type if possible for zero-length arrays\n        const expected = context.expectedType;\n        if (\n            type.kind === 'array' &&\n            type.N === 0 &&\n            expected &&\n            expected.kind === 'array' &&\n            (typeof expected.N !== 'number' || expected.N === 0)\n        ) {\n            type = expected;\n        }\n\n        return new Literal(type, value);\n    }\n\n    evaluate()        {\n        return this.value;\n    }\n\n    eachChild() {}\n\n    outputDefined()          {\n        return true;\n    }\n\n    serialize()                       {\n        if (this.type.kind === 'array' || this.type.kind === 'object') {\n            return [\"literal\", this.value];\n        } else if (this.value instanceof Color) {\n            // Constant-folding can generate Literal expressions that you\n            // couldn't actually generate with a \"literal\" expression,\n            // so we have to implement an equivalent serialization here\n            return [\"rgba\"].concat(this.value.toArray());\n        } else if (this.value instanceof Formatted) {\n            // Same as Color\n            return this.value.serialize();\n        } else {\n            assert(this.value === null ||\n                typeof this.value === 'string' ||\n                typeof this.value === 'number' ||\n                typeof this.value === 'boolean');\n            return (this.value     );\n        }\n    }\n}\n\nexport default Literal;\n","//      \n\nclass RuntimeError {\n                 \n                    \n\n    constructor(message        ) {\n        this.name = 'ExpressionEvaluationError';\n        this.message = message;\n    }\n\n    toJSON()         {\n        return this.message;\n    }\n}\n\nexport default RuntimeError;\n","//      \n\nimport assert from 'assert';\n\nimport {\n    ObjectType,\n    ValueType,\n    StringType,\n    NumberType,\n    BooleanType,\n    checkSubtype,\n    toString,\n    array\n} from '../types.js';\nimport RuntimeError from '../runtime_error.js';\nimport {typeOf} from '../values.js';\n\n                                                                       \n                                                        \n                                                              \n                                      \n\nconst types = {\n    string: StringType,\n    number: NumberType,\n    boolean: BooleanType,\n    object: ObjectType\n};\n\nclass Assertion                       {\n               \n                            \n\n    constructor(type      , args                   ) {\n        this.type = type;\n        this.args = args;\n    }\n\n    static parse(args                       , context                )              {\n        if (args.length < 2)\n            return context.error(`Expected at least one argument.`);\n\n        let i = 1;\n        let type;\n\n        const name         = (args[0]     );\n        if (name === 'array') {\n            let itemType;\n            if (args.length > 2) {\n                const type = args[1];\n                if (typeof type !== 'string' || !(type in types) || type === 'object')\n                    return context.error('The item type argument of \"array\" must be one of string, number, boolean', 1);\n                itemType = types[type];\n                i++;\n            } else {\n                itemType = ValueType;\n            }\n\n            let N;\n            if (args.length > 3) {\n                if (args[2] !== null &&\n                    (typeof args[2] !== 'number' ||\n                        args[2] < 0 ||\n                        args[2] !== Math.floor(args[2]))\n                ) {\n                    return context.error('The length argument to \"array\" must be a positive integer literal', 2);\n                }\n                N = args[2];\n                i++;\n            }\n\n            type = array(itemType, N);\n        } else {\n            assert(types[name], name);\n            type = types[name];\n        }\n\n        const parsed = [];\n        for (; i < args.length; i++) {\n            const input = context.parse(args[i], i, ValueType);\n            if (!input) return null;\n            parsed.push(input);\n        }\n\n        return new Assertion(type, parsed);\n    }\n\n    evaluate(ctx                   )             {\n        for (let i = 0; i < this.args.length; i++) {\n            const value = this.args[i].evaluate(ctx);\n            const error = checkSubtype(this.type, typeOf(value));\n            if (!error) {\n                return value;\n            } else if (i === this.args.length - 1) {\n                throw new RuntimeError(`Expected value to be of type ${toString(this.type)}, but found ${toString(typeOf(value))} instead.`);\n            }\n        }\n\n        assert(false);\n        return null;\n    }\n\n    eachChild(fn                         ) {\n        this.args.forEach(fn);\n    }\n\n    outputDefined()          {\n        return this.args.every(arg => arg.outputDefined());\n    }\n\n    serialize()                       {\n        const type = this.type;\n        const serialized = [type.kind];\n        if (type.kind === 'array') {\n            const itemType = type.itemType;\n            if (itemType.kind === 'string' ||\n                itemType.kind === 'number' ||\n                itemType.kind === 'boolean') {\n                serialized.push(itemType.kind);\n                const N = type.N;\n                if (typeof N === 'number' || this.args.length > 1) {\n                    serialized.push(N);\n                }\n            }\n        }\n        return serialized.concat(this.args.map(arg => arg.serialize()));\n    }\n}\n\nexport default Assertion;\n","//      \n\nimport {NumberType, ValueType, FormattedType, array, StringType, ColorType, ResolvedImageType} from '../types.js';\nimport Formatted, {FormattedSection} from '../types/formatted.js';\nimport {toString, typeOf} from '../values.js';\n\n                                                                       \n                                                              \n                                                        \n                                      \n\n                                   \n                                                            \n                                                        \n                        \n                             \n                            \n                                 \n \n\nexport default class FormatExpression                       {\n               \n                                                \n\n    constructor(sections                                   ) {\n        this.type = FormattedType;\n        this.sections = sections;\n    }\n\n    static parse(args                       , context                )              {\n        if (args.length < 2) {\n            return context.error(`Expected at least one argument.`);\n        }\n\n        const firstArg = args[1];\n        if (!Array.isArray(firstArg) && typeof firstArg === 'object')  {\n            return context.error(`First argument must be an image or text section.`);\n        }\n\n        const sections                                    = [];\n        let nextTokenMayBeObject = false;\n        for (let i = 1; i <= args.length - 1; ++i) {\n            const arg = (args[i]     );\n\n            if (nextTokenMayBeObject && typeof arg === \"object\" && !Array.isArray(arg)) {\n                nextTokenMayBeObject = false;\n\n                let scale = null;\n                if (arg['font-scale']) {\n                    scale = context.parse(arg['font-scale'], 1, NumberType);\n                    if (!scale) return null;\n                }\n\n                let font = null;\n                if (arg['text-font']) {\n                    font = context.parse(arg['text-font'], 1, array(StringType));\n                    if (!font) return null;\n                }\n\n                let textColor = null;\n                if (arg['text-color']) {\n                    textColor = context.parse(arg['text-color'], 1, ColorType);\n                    if (!textColor) return null;\n                }\n\n                const lastExpression = sections[sections.length - 1];\n                lastExpression.scale = scale;\n                lastExpression.font = font;\n                lastExpression.textColor = textColor;\n            } else {\n                const content = context.parse(args[i], 1, ValueType);\n                if (!content) return null;\n\n                const kind = content.type.kind;\n                if (kind !== 'string' && kind !== 'value' && kind !== 'null' && kind !== 'resolvedImage')\n                    return context.error(`Formatted text type must be 'string', 'value', 'image' or 'null'.`);\n\n                nextTokenMayBeObject = true;\n                sections.push({content, scale: null, font: null, textColor: null});\n            }\n        }\n\n        return new FormatExpression(sections);\n    }\n\n    evaluate(ctx                   )            {\n        const evaluateSection = section => {\n            const evaluatedContent = section.content.evaluate(ctx);\n            if (typeOf(evaluatedContent) === ResolvedImageType) {\n                return new FormattedSection('', evaluatedContent, null, null, null);\n            }\n\n            return new FormattedSection(\n                    toString(evaluatedContent),\n                    null,\n                    section.scale ? section.scale.evaluate(ctx) : null,\n                    section.font ? section.font.evaluate(ctx).join(',') : null,\n                    section.textColor ? section.textColor.evaluate(ctx) : null\n            );\n        };\n\n        return new Formatted(this.sections.map(evaluateSection));\n    }\n\n    eachChild(fn                         ) {\n        for (const section of this.sections) {\n            fn(section.content);\n            if (section.scale) {\n                fn(section.scale);\n            }\n            if (section.font) {\n                fn(section.font);\n            }\n            if (section.textColor) {\n                fn(section.textColor);\n            }\n        }\n    }\n\n    outputDefined()          {\n        // Technically the combinatoric set of all children\n        // Usually, this.text will be undefined anyway\n        return false;\n    }\n\n    serialize()                       {\n        const serialized = [\"format\"];\n        for (const section of this.sections) {\n            serialized.push(section.content.serialize());\n            const options = {};\n            if (section.scale) {\n                options['font-scale'] = section.scale.serialize();\n            }\n            if (section.font) {\n                options['text-font'] = section.font.serialize();\n            }\n            if (section.textColor) {\n                options['text-color'] = section.textColor.serialize();\n            }\n            serialized.push(options);\n        }\n        return serialized;\n    }\n}\n","//      \n\nimport {ResolvedImageType, StringType} from '../types.js';\nimport ResolvedImage from '../types/resolved_image.js';\n\n                                                                       \n                                                              \n                                                        \n                                      \n\nexport default class ImageExpression                       {\n               \n                      \n\n    constructor(input            ) {\n        this.type = ResolvedImageType;\n        this.input = input;\n    }\n\n    static parse(args                       , context                )              {\n        if (args.length !== 2) {\n            return context.error(`Expected two arguments.`);\n        }\n\n        const name = context.parse(args[1], 1, StringType);\n        if (!name) return context.error(`No image name provided.`);\n\n        return new ImageExpression(name);\n    }\n\n    evaluate(ctx                   )                       {\n        const evaluatedImageName = this.input.evaluate(ctx);\n\n        const value = ResolvedImage.fromString(evaluatedImageName);\n        if (value && ctx.availableImages) value.available = ctx.availableImages.indexOf(evaluatedImageName) > -1;\n\n        return value;\n    }\n\n    eachChild(fn                         ) {\n        fn(this.input);\n    }\n\n    outputDefined()          {\n        // The output of image is determined by the list of available images in the evaluation context\n        return false;\n    }\n\n    serialize()                       {\n        return [\"image\", this.input.serialize()];\n    }\n}\n","//      \n\nimport assert from 'assert';\n\nimport {BooleanType, ColorType, NumberType, StringType, ValueType} from '../types.js';\nimport {Color, toString as valueToString, validateRGBA} from '../values.js';\nimport RuntimeError from '../runtime_error.js';\nimport Formatted from '../types/formatted.js';\nimport FormatExpression from '../definitions/format.js';\nimport ImageExpression from '../definitions/image.js';\nimport ResolvedImage from '../types/resolved_image.js';\n\n                                                                       \n                                                        \n                                                              \n                                      \n\nconst types = {\n    'to-boolean': BooleanType,\n    'to-color': ColorType,\n    'to-number': NumberType,\n    'to-string': StringType\n};\n\n/**\n * Special form for error-coalescing coercion expressions \"to-number\",\n * \"to-color\".  Since these coercions can fail at runtime, they accept multiple\n * arguments, only evaluating one at a time until one succeeds.\n *\n * @private\n */\nclass Coercion                       {\n               \n                            \n\n    constructor(type      , args                   ) {\n        this.type = type;\n        this.args = args;\n    }\n\n    static parse(args                       , context                )              {\n        if (args.length < 2)\n            return context.error(`Expected at least one argument.`);\n\n        const name         = (args[0]     );\n        assert(types[name], name);\n\n        if ((name === 'to-boolean' || name === 'to-string') && args.length !== 2)\n            return context.error(`Expected one argument.`);\n\n        const type = types[name];\n\n        const parsed = [];\n        for (let i = 1; i < args.length; i++) {\n            const input = context.parse(args[i], i, ValueType);\n            if (!input) return null;\n            parsed.push(input);\n        }\n\n        return new Coercion(type, parsed);\n    }\n\n    evaluate(ctx                   )                                                                       {\n        if (this.type.kind === 'boolean') {\n            return Boolean(this.args[0].evaluate(ctx));\n        } else if (this.type.kind === 'color') {\n            let input;\n            let error;\n            for (const arg of this.args) {\n                input = arg.evaluate(ctx);\n                error = null;\n                if (input instanceof Color) {\n                    return input;\n                } else if (typeof input === 'string') {\n                    const c = ctx.parseColor(input);\n                    if (c) return c;\n                } else if (Array.isArray(input)) {\n                    if (input.length < 3 || input.length > 4) {\n                        error = `Invalid rbga value ${JSON.stringify(input)}: expected an array containing either three or four numeric values.`;\n                    } else {\n                        error = validateRGBA(input[0], input[1], input[2], input[3]);\n                    }\n                    if (!error) {\n                        return new Color((input[0]     ) / 255, (input[1]     ) / 255, (input[2]     ) / 255, (input[3]     ));\n                    }\n                }\n            }\n            throw new RuntimeError(error || `Could not parse color from value '${typeof input === 'string' ? input : String(JSON.stringify(input))}'`);\n        } else if (this.type.kind === 'number') {\n            let value = null;\n            for (const arg of this.args) {\n                value = arg.evaluate(ctx);\n                if (value === null) return 0;\n                const num = Number(value);\n                if (isNaN(num)) continue;\n                return num;\n            }\n            throw new RuntimeError(`Could not convert ${JSON.stringify(value)} to number.`);\n        } else if (this.type.kind === 'formatted') {\n            // There is no explicit 'to-formatted' but this coercion can be implicitly\n            // created by properties that expect the 'formatted' type.\n            return Formatted.fromString(valueToString(this.args[0].evaluate(ctx)));\n        } else if (this.type.kind === 'resolvedImage') {\n            return ResolvedImage.fromString(valueToString(this.args[0].evaluate(ctx)));\n        } else {\n            return valueToString(this.args[0].evaluate(ctx));\n        }\n    }\n\n    eachChild(fn                         ) {\n        this.args.forEach(fn);\n    }\n\n    outputDefined()          {\n        return this.args.every(arg => arg.outputDefined());\n    }\n\n    serialize()                       {\n        if (this.type.kind === 'formatted') {\n            return new FormatExpression([{content: this.args[0], scale: null, font: null, textColor: null}]).serialize();\n        }\n\n        if (this.type.kind === 'resolvedImage') {\n            return new ImageExpression(this.args[0]).serialize();\n        }\n\n        const serialized = [`to-${this.type.kind}`];\n        this.eachChild(child => { serialized.push(child.serialize()); });\n        return serialized;\n    }\n}\n\nexport default Coercion;\n","//      \n\nimport {Color} from './values.js';\n\n                                                \n                                                           \n                                                                        \n                                                             \n                                                                    \n\nconst geometryTypes = ['Unknown', 'Point', 'LineString', 'Polygon'];\n\nclass EvaluationContext {\n                              \n                      \n                                \n                                        \n                                    \n                                      \n                             \n                                              \n\n                                            \n\n    constructor() {\n        this.globals = (null     );\n        this.feature = null;\n        this.featureState = null;\n        this.formattedSection = null;\n        this._parseColorCache = {};\n        this.availableImages = null;\n        this.canonical = null;\n        this.featureTileCoord = null;\n        this.featureDistanceData = null;\n    }\n\n    id()                {\n        return this.feature && this.feature.id !== undefined ? this.feature.id : null;\n    }\n\n    geometryType()                {\n        return this.feature ? typeof this.feature.type === 'number' ? geometryTypes[this.feature.type] : this.feature.type : null;\n    }\n\n    geometry()                       {\n        return this.feature && 'geometry' in this.feature ? this.feature.geometry : null;\n    }\n\n    canonicalID()                         {\n        return this.canonical;\n    }\n\n    properties()                  {\n        return (this.feature && this.feature.properties) || {};\n    }\n\n    distanceFromCenter()         {\n        if (this.featureTileCoord && this.featureDistanceData) {\n\n            const c = this.featureDistanceData.center;\n            const scale = this.featureDistanceData.scale;\n            const {x, y} = this.featureTileCoord;\n\n            // Calculate the distance vector `d` (left handed)\n            const dX = x * scale - c[0];\n            const dY = y * scale - c[1];\n\n            // The bearing vector `b` (left handed)\n            const bX = this.featureDistanceData.bearing[0];\n            const bY = this.featureDistanceData.bearing[1];\n\n            // Distance is calculated as `dot(d, v)`\n            const dist = (bX * dX + bY * dY);\n            return dist;\n        }\n\n        return 0;\n    }\n\n    parseColor(input        )         {\n        let cached = this._parseColorCache[input];\n        if (!cached) {\n            cached = this._parseColorCache[input] = Color.parse(input);\n        }\n        return cached;\n    }\n}\n\nexport default EvaluationContext;\n","//      \n\nimport {toString} from './types.js';\n\nimport ParsingContext from './parsing_context.js';\nimport EvaluationContext from './evaluation_context.js';\nimport assert from 'assert';\n\n                                                                    \n                                     \n                                       \n\n                                       \n                                       \n                                                                \n                                               \n                                                            \n\nclass CompoundExpression                       {\n                 \n               \n                        \n                            \n\n                                                   \n\n    constructor(name        , type      , evaluate          , args                   ) {\n        this.name = name;\n        this.type = type;\n        this._evaluate = evaluate;\n        this.args = args;\n    }\n\n    evaluate(ctx                   )        {\n        return this._evaluate(ctx, this.args);\n    }\n\n    eachChild(fn                         ) {\n        this.args.forEach(fn);\n    }\n\n    outputDefined()          {\n        return false;\n    }\n\n    serialize()               {\n        return [this.name].concat(this.args.map(arg => arg.serialize()));\n    }\n\n    static parse(args                       , context                )              {\n        const op         = (args[0]     );\n        const definition = CompoundExpression.definitions[op];\n        if (!definition) {\n            return context.error(`Unknown expression \"${op}\". If you wanted a literal array, use [\"literal\", [...]].`, 0);\n        }\n\n        // Now check argument types against each signature\n        const type = Array.isArray(definition) ?\n            definition[0] : definition.type;\n\n        const availableOverloads = Array.isArray(definition) ?\n            [[definition[1], definition[2]]] :\n            definition.overloads;\n\n        const overloads = availableOverloads.filter(([signature]) => (\n            !Array.isArray(signature) || // varags\n            signature.length === args.length - 1 // correct param count\n        ));\n\n        let signatureContext                 = (null     );\n\n        for (const [params, evaluate] of overloads) {\n            // Use a fresh context for each attempted signature so that, if\n            // we eventually succeed, we haven't polluted `context.errors`.\n            signatureContext = new ParsingContext(context.registry, context.path, null, context.scope);\n\n            // First parse all the args, potentially coercing to the\n            // types expected by this overload.\n            const parsedArgs                    = [];\n            let argParseFailed = false;\n            for (let i = 1; i < args.length; i++) {\n                const arg = args[i];\n                const expectedType = Array.isArray(params) ?\n                    params[i - 1] :\n                    params.type;\n\n                const parsed = signatureContext.parse(arg, 1 + parsedArgs.length, expectedType);\n                if (!parsed) {\n                    argParseFailed = true;\n                    break;\n                }\n                parsedArgs.push(parsed);\n            }\n            if (argParseFailed) {\n                // Couldn't coerce args of this overload to expected type, move\n                // on to next one.\n                continue;\n            }\n\n            if (Array.isArray(params)) {\n                if (params.length !== parsedArgs.length) {\n                    signatureContext.error(`Expected ${params.length} arguments, but found ${parsedArgs.length} instead.`);\n                    continue;\n                }\n            }\n\n            for (let i = 0; i < parsedArgs.length; i++) {\n                const expected = Array.isArray(params) ? params[i] : params.type;\n                const arg = parsedArgs[i];\n                signatureContext.concat(i + 1).checkSubtype(expected, arg.type);\n            }\n\n            if (signatureContext.errors.length === 0) {\n                return new CompoundExpression(op, type, evaluate, parsedArgs);\n            }\n        }\n\n        assert(!signatureContext || signatureContext.errors.length > 0);\n\n        if (overloads.length === 1) {\n            context.errors.push(...signatureContext.errors);\n        } else {\n            const expected = overloads.length ? overloads : availableOverloads;\n            const signatures = expected\n                .map(([params]) => stringifySignature(params))\n                .join(' | ');\n\n            const actualTypes = [];\n            // For error message, re-parse arguments without trying to\n            // apply any coercions\n            for (let i = 1; i < args.length; i++) {\n                const parsed = context.parse(args[i], 1 + actualTypes.length);\n                if (!parsed) return null;\n                actualTypes.push(toString(parsed.type));\n            }\n            context.error(`Expected arguments of type ${signatures}, but found (${actualTypes.join(', ')}) instead.`);\n        }\n\n        return null;\n    }\n\n    static register(\n        registry                    ,\n        definitions                            \n    ) {\n        assert(!CompoundExpression.definitions);\n        CompoundExpression.definitions = definitions;\n        for (const name in definitions) {\n            registry[name] = CompoundExpression;\n        }\n    }\n}\n\nfunction stringifySignature(signature           )         {\n    if (Array.isArray(signature)) {\n        return `(${signature.map(toString).join(', ')})`;\n    } else {\n        return `(${toString(signature.type)}...)`;\n    }\n}\n\nexport default CompoundExpression;\n","//      \n\nimport {StringType, BooleanType, CollatorType} from '../types.js';\nimport Collator from '../types/collator.js';\n\n                                                                       \n                                                              \n                                                        \n                                      \n\nexport default class CollatorExpression                       {\n               \n                              \n                                   \n                              \n\n    constructor(caseSensitive            , diacriticSensitive            , locale                   ) {\n        this.type = CollatorType;\n        this.locale = locale;\n        this.caseSensitive = caseSensitive;\n        this.diacriticSensitive = diacriticSensitive;\n    }\n\n    static parse(args                       , context                )              {\n        if (args.length !== 2)\n            return context.error(`Expected one argument.`);\n\n        const options = (args[1]     );\n        if (typeof options !== \"object\" || Array.isArray(options))\n            return context.error(`Collator options argument must be an object.`);\n\n        const caseSensitive = context.parse(\n            options['case-sensitive'] === undefined ? false : options['case-sensitive'], 1, BooleanType);\n        if (!caseSensitive) return null;\n\n        const diacriticSensitive = context.parse(\n            options['diacritic-sensitive'] === undefined ? false : options['diacritic-sensitive'], 1, BooleanType);\n        if (!diacriticSensitive) return null;\n\n        let locale = null;\n        if (options['locale']) {\n            locale = context.parse(options['locale'], 1, StringType);\n            if (!locale) return null;\n        }\n\n        return new CollatorExpression(caseSensitive, diacriticSensitive, locale);\n    }\n\n    evaluate(ctx                   )           {\n        return new Collator(this.caseSensitive.evaluate(ctx), this.diacriticSensitive.evaluate(ctx), this.locale ? this.locale.evaluate(ctx) : null);\n    }\n\n    eachChild(fn                         ) {\n        fn(this.caseSensitive);\n        fn(this.diacriticSensitive);\n        if (this.locale) {\n            fn(this.locale);\n        }\n    }\n\n    outputDefined()          {\n        // Technically the set of possible outputs is the combinatoric set of Collators produced\n        // by all possible outputs of locale/caseSensitive/diacriticSensitive\n        // But for the primary use of Collators in comparison operators, we ignore the Collator's\n        // possible outputs anyway, so we can get away with leaving this false for now.\n        return false;\n    }\n\n    serialize()                       {\n        const options = {};\n        options['case-sensitive'] = this.caseSensitive.serialize();\n        options['diacritic-sensitive'] = this.diacriticSensitive.serialize();\n        if (this.locale) {\n            options['locale'] = this.locale.serialize();\n        }\n        return [\"collator\", options];\n    }\n}\n","//      \n\nimport {isValue} from '../values.js';\n                                      \nimport {BooleanType} from '../types.js';\n                                                                       \n                                                        \n                                                              \n                                                                                        \nimport Point from '@mapbox/point-geometry';\n                                                                \n\n                                                             \n\n// minX, minY, maxX, maxY\n                                             \nconst EXTENT = 8192;\n\nfunction updateBBox(bbox      , coord       ) {\n    bbox[0] = Math.min(bbox[0], coord[0]);\n    bbox[1] = Math.min(bbox[1], coord[1]);\n    bbox[2] = Math.max(bbox[2], coord[0]);\n    bbox[3] = Math.max(bbox[3], coord[1]);\n}\n\nfunction mercatorXfromLng(lng        ) {\n    return (180 + lng) / 360;\n}\n\nfunction mercatorYfromLat(lat        ) {\n    return (180 - (180 / Math.PI * Math.log(Math.tan(Math.PI / 4 + lat * Math.PI / 360)))) / 360;\n}\n\nfunction boxWithinBox(bbox1      , bbox2      ) {\n    if (bbox1[0] <= bbox2[0]) return false;\n    if (bbox1[2] >= bbox2[2]) return false;\n    if (bbox1[1] <= bbox2[1]) return false;\n    if (bbox1[3] >= bbox2[3]) return false;\n    return true;\n}\n\nfunction getTileCoordinates(p, canonical                 ) {\n    const x = mercatorXfromLng(p[0]);\n    const y = mercatorYfromLat(p[1]);\n    const tilesAtZoom = Math.pow(2, canonical.z);\n    return [Math.round(x * tilesAtZoom * EXTENT), Math.round(y * tilesAtZoom * EXTENT)];\n}\n\nfunction onBoundary(p, p1, p2) {\n    const x1 = p[0] - p1[0];\n    const y1 = p[1] - p1[1];\n    const x2 = p[0] - p2[0];\n    const y2 = p[1] - p2[1];\n    return (x1 * y2 - x2 * y1 === 0) && (x1 * x2 <= 0) && (y1 * y2 <= 0);\n}\n\nfunction rayIntersect(p, p1, p2) {\n    return ((p1[1] > p[1]) !== (p2[1] > p[1])) && (p[0] < (p2[0] - p1[0]) * (p[1] - p1[1]) / (p2[1] - p1[1]) + p1[0]);\n}\n\n// ray casting algorithm for detecting if point is in polygon\nfunction pointWithinPolygon(point, rings) {\n    let inside = false;\n    for (let i = 0, len = rings.length; i < len; i++) {\n        const ring = rings[i];\n        for (let j = 0, len2 = ring.length; j < len2 - 1; j++) {\n            if (onBoundary(point, ring[j], ring[j + 1])) return false;\n            if (rayIntersect(point, ring[j], ring[j + 1])) inside = !inside;\n        }\n    }\n    return inside;\n}\n\nfunction pointWithinPolygons(point, polygons) {\n    for (let i = 0; i < polygons.length; i++) {\n        if (pointWithinPolygon(point, polygons[i])) return true;\n    }\n    return false;\n}\n\nfunction perp(v1, v2) {\n    return (v1[0] * v2[1] - v1[1] * v2[0]);\n}\n\n// check if p1 and p2 are in different sides of line segment q1->q2\nfunction  twoSided(p1, p2, q1, q2) {\n    // q1->p1 (x1, y1), q1->p2 (x2, y2), q1->q2 (x3, y3)\n    const x1 = p1[0] - q1[0];\n    const y1 = p1[1] - q1[1];\n    const x2 = p2[0] - q1[0];\n    const y2 = p2[1] - q1[1];\n    const x3 = q2[0] - q1[0];\n    const y3 = q2[1] - q1[1];\n    const det1 = (x1 * y3 - x3 * y1);\n    const det2 =  (x2 * y3 - x3 * y2);\n    if ((det1 > 0 && det2 < 0) || (det1 < 0 && det2 > 0)) return true;\n    return false;\n}\n// a, b are end points for line segment1, c and d are end points for line segment2\nfunction lineIntersectLine(a, b, c, d) {\n    // check if two segments are parallel or not\n    // precondition is end point a, b is inside polygon, if line a->b is\n    // parallel to polygon edge c->d, then a->b won't intersect with c->d\n    const vectorP = [b[0] - a[0], b[1] - a[1]];\n    const vectorQ = [d[0] - c[0], d[1] - c[1]];\n    if (perp(vectorQ, vectorP) === 0) return false;\n\n    // If lines are intersecting with each other, the relative location should be:\n    // a and b lie in different sides of segment c->d\n    // c and d lie in different sides of segment a->b\n    if (twoSided(a, b, c, d) && twoSided(c, d, a, b)) return true;\n    return false;\n}\n\nfunction lineIntersectPolygon(p1, p2, polygon) {\n    for (const ring of polygon) {\n        // loop through every edge of the ring\n        for (let j = 0; j < ring.length - 1; ++j) {\n            if (lineIntersectLine(p1, p2, ring[j], ring[j + 1])) {\n                return true;\n            }\n        }\n    }\n    return false;\n}\n\nfunction lineStringWithinPolygon(line, polygon) {\n    // First, check if geometry points of line segments are all inside polygon\n    for (let i = 0; i < line.length; ++i) {\n        if (!pointWithinPolygon(line[i], polygon)) {\n            return false;\n        }\n    }\n\n    // Second, check if there is line segment intersecting polygon edge\n    for (let i = 0; i < line.length - 1; ++i) {\n        if (lineIntersectPolygon(line[i], line[i + 1], polygon)) {\n            return false;\n        }\n    }\n    return true;\n}\n\nfunction lineStringWithinPolygons(line, polygons) {\n    for (let i = 0; i < polygons.length; i++) {\n        if (lineStringWithinPolygon(line, polygons[i])) return true;\n    }\n    return false;\n}\n\nfunction getTilePolygon(coordinates, bbox      , canonical                 ) {\n    const polygon = [];\n    for (let i = 0; i < coordinates.length; i++) {\n        const ring = [];\n        for (let j = 0; j < coordinates[i].length; j++) {\n            const coord = getTileCoordinates(coordinates[i][j], canonical);\n            updateBBox(bbox, coord);\n            ring.push(coord);\n        }\n        polygon.push(ring);\n    }\n    return polygon;\n}\n\nfunction getTilePolygons(coordinates, bbox, canonical                 ) {\n    const polygons = [];\n    for (let i = 0; i < coordinates.length; i++) {\n        const polygon = getTilePolygon(coordinates[i], bbox, canonical);\n        polygons.push(polygon);\n    }\n    return polygons;\n}\n\nfunction updatePoint(p, bbox, polyBBox, worldSize) {\n    if (p[0] < polyBBox[0] || p[0] > polyBBox[2]) {\n        const halfWorldSize = worldSize * 0.5;\n        let shift = (p[0] - polyBBox[0] > halfWorldSize) ? -worldSize : (polyBBox[0] - p[0] > halfWorldSize) ? worldSize : 0;\n        if (shift === 0) {\n            shift = (p[0] - polyBBox[2] > halfWorldSize) ? -worldSize : (polyBBox[2] - p[0] > halfWorldSize) ? worldSize : 0;\n        }\n        p[0] += shift;\n    }\n    updateBBox(bbox, p);\n}\n\nfunction resetBBox(bbox) {\n    bbox[0] = bbox[1] = Infinity;\n    bbox[2] = bbox[3] = -Infinity;\n}\n\nfunction getTilePoints(geometry, pointBBox, polyBBox, canonical                 ) {\n    const worldSize = Math.pow(2, canonical.z) * EXTENT;\n    const shifts = [canonical.x * EXTENT, canonical.y * EXTENT];\n    const tilePoints = [];\n    if (!geometry) return tilePoints;\n    for (const points of geometry) {\n        for (const point of points) {\n            const p = [point.x + shifts[0], point.y + shifts[1]];\n            updatePoint(p, pointBBox, polyBBox, worldSize);\n            tilePoints.push(p);\n        }\n    }\n    return tilePoints;\n}\n\nfunction getTileLines(geometry, lineBBox, polyBBox, canonical                 ) {\n    const worldSize = Math.pow(2, canonical.z) * EXTENT;\n    const shifts = [canonical.x * EXTENT, canonical.y * EXTENT];\n    const tileLines = [];\n    if (!geometry) return tileLines;\n    for (const line of geometry) {\n        const tileLine = [];\n        for (const point of line) {\n            const p = [point.x + shifts[0], point.y + shifts[1]];\n            updateBBox(lineBBox, p);\n            tileLine.push(p);\n        }\n        tileLines.push(tileLine);\n    }\n    if (lineBBox[2] - lineBBox[0] <= worldSize / 2) {\n        resetBBox(lineBBox);\n        for (const line of tileLines) {\n            for (const p of line) {\n                updatePoint(p, lineBBox, polyBBox, worldSize);\n            }\n        }\n    }\n    return tileLines;\n}\n\nfunction pointsWithinPolygons(ctx                   , polygonGeometry                 ) {\n    const pointBBox = [Infinity, Infinity, -Infinity, -Infinity];\n    const polyBBox = [Infinity, Infinity, -Infinity, -Infinity];\n\n    const canonical = ctx.canonicalID();\n    if (!canonical) {\n        return false;\n    }\n\n    if (polygonGeometry.type === 'Polygon') {\n        const tilePolygon = getTilePolygon(polygonGeometry.coordinates, polyBBox, canonical);\n        const tilePoints = getTilePoints(ctx.geometry(), pointBBox, polyBBox, canonical);\n        if (!boxWithinBox(pointBBox, polyBBox)) return false;\n\n        for (const point of tilePoints) {\n            if (!pointWithinPolygon(point, tilePolygon)) return false;\n        }\n    }\n    if (polygonGeometry.type === 'MultiPolygon') {\n        const tilePolygons = getTilePolygons(polygonGeometry.coordinates, polyBBox, canonical);\n        const tilePoints = getTilePoints(ctx.geometry(), pointBBox, polyBBox, canonical);\n        if (!boxWithinBox(pointBBox, polyBBox)) return false;\n\n        for (const point of tilePoints) {\n            if (!pointWithinPolygons(point, tilePolygons)) return false;\n        }\n    }\n\n    return true;\n}\n\nfunction linesWithinPolygons(ctx                   , polygonGeometry                 ) {\n    const lineBBox = [Infinity, Infinity, -Infinity, -Infinity];\n    const polyBBox = [Infinity, Infinity, -Infinity, -Infinity];\n\n    const canonical = ctx.canonicalID();\n    if (!canonical) {\n        return false;\n    }\n\n    if (polygonGeometry.type === 'Polygon') {\n        const tilePolygon = getTilePolygon(polygonGeometry.coordinates, polyBBox, canonical);\n        const tileLines = getTileLines(ctx.geometry(), lineBBox, polyBBox, canonical);\n        if (!boxWithinBox(lineBBox, polyBBox)) return false;\n\n        for (const line of tileLines) {\n            if (!lineStringWithinPolygon(line, tilePolygon)) return false;\n        }\n    }\n    if (polygonGeometry.type === 'MultiPolygon') {\n        const tilePolygons = getTilePolygons(polygonGeometry.coordinates, polyBBox, canonical);\n        const tileLines = getTileLines(ctx.geometry(), lineBBox, polyBBox, canonical);\n        if (!boxWithinBox(lineBBox, polyBBox)) return false;\n\n        for (const line of tileLines) {\n            if (!lineStringWithinPolygons(line, tilePolygons)) return false;\n        }\n    }\n    return true;\n}\n\nclass Within                       {\n               \n                    \n                                \n\n    constructor(geojson         , geometries                 ) {\n        this.type = BooleanType;\n        this.geojson = geojson;\n        this.geometries = geometries;\n    }\n\n    static parse(args                       , context                )          {\n        if (args.length !== 2)\n            return context.error(`'within' expression requires exactly one argument, but found ${args.length - 1} instead.`);\n        if (isValue(args[1])) {\n            const geojson = (args[1]        );\n            if (geojson.type === 'FeatureCollection') {\n                for (let i = 0; i < geojson.features.length; ++i) {\n                    const type = geojson.features[i].geometry.type;\n                    if (type === 'Polygon' || type === 'MultiPolygon') {\n                        return new Within(geojson, geojson.features[i].geometry);\n                    }\n                }\n            } else if (geojson.type === 'Feature') {\n                const type = geojson.geometry.type;\n                if (type === 'Polygon' || type === 'MultiPolygon') {\n                    return new Within(geojson, geojson.geometry);\n                }\n            } else if (geojson.type  === 'Polygon' || geojson.type === 'MultiPolygon') {\n                return new Within(geojson, geojson);\n            }\n        }\n        return context.error(`'within' expression requires valid geojson object that contains polygon geometry type.`);\n    }\n\n    evaluate(ctx                   )          {\n        if (ctx.geometry() != null && ctx.canonicalID() != null) {\n            if (ctx.geometryType() === 'Point') {\n                return pointsWithinPolygons(ctx, this.geometries);\n            } else if (ctx.geometryType() === 'LineString') {\n                return linesWithinPolygons(ctx, this.geometries);\n            }\n        }\n        return false;\n    }\n\n    eachChild() {}\n\n    outputDefined()          {\n        return true;\n    }\n\n    serialize()                       {\n        return [\"within\", this.geojson];\n    }\n\n}\n\nexport default Within;\n","//      \n\nimport CompoundExpression from './compound_expression.js';\nimport Within from './definitions/within.js';\n                                                \n\nfunction isFeatureConstant(e            )          {\n    if (e instanceof CompoundExpression) {\n        if (e.name === 'get' && e.args.length === 1) {\n            return false;\n        } else if (e.name === 'feature-state') {\n            return false;\n        } else if (e.name === 'has' && e.args.length === 1) {\n            return false;\n        } else if (\n            e.name === 'properties' ||\n            e.name === 'geometry-type' ||\n            e.name === 'id'\n        ) {\n            return false;\n        } else if (/^filter-/.test(e.name)) {\n            return false;\n        }\n    }\n\n    if (e instanceof Within) {\n        return false;\n    }\n\n    let result = true;\n    e.eachChild(arg => {\n        if (result && !isFeatureConstant(arg)) { result = false; }\n    });\n    return result;\n}\n\nfunction isStateConstant(e            )          {\n    if (e instanceof CompoundExpression) {\n        if (e.name === 'feature-state') {\n            return false;\n        }\n    }\n    let result = true;\n    e.eachChild(arg => {\n        if (result && !isStateConstant(arg)) { result = false; }\n    });\n    return result;\n}\n\nfunction isGlobalPropertyConstant(e            , properties               )          {\n    if (e instanceof CompoundExpression && properties.indexOf(e.name) >= 0) { return false; }\n    let result = true;\n    e.eachChild((arg) => {\n        if (result && !isGlobalPropertyConstant(arg, properties)) { result = false; }\n    });\n    return result;\n}\n\nexport {isFeatureConstant, isGlobalPropertyConstant, isStateConstant};\n","//      \n\n                                      \n                                                 \n                                                        \n                                                               \n\nclass Var                       {\n               \n                 \n                                \n\n    constructor(name        , boundExpression            ) {\n        this.type = boundExpression.type;\n        this.name = name;\n        this.boundExpression = boundExpression;\n    }\n\n    static parse(args                       , context                )             {\n        if (args.length !== 2 || typeof args[1] !== 'string')\n            return context.error(`'var' expression requires exactly one string literal argument.`);\n\n        const name = args[1];\n        if (!context.scope.has(name)) {\n            return context.error(`Unknown variable \"${name}\". Make sure \"${name}\" has been bound in an enclosing \"let\" expression before using it.`, 1);\n        }\n\n        return new Var(name, context.scope.get(name));\n    }\n\n    evaluate(ctx                   )      {\n        return this.boundExpression.evaluate(ctx);\n    }\n\n    eachChild() {}\n\n    outputDefined()          {\n        return false;\n    }\n\n    serialize()                {\n        return [\"var\", this.name];\n    }\n}\n\nexport default Var;\n","//      \n\nimport Scope from './scope.js';\nimport {checkSubtype} from './types.js';\nimport ParsingError from './parsing_error.js';\nimport Literal from './definitions/literal.js';\nimport Assertion from './definitions/assertion.js';\nimport Coercion from './definitions/coercion.js';\nimport EvaluationContext from './evaluation_context.js';\nimport CompoundExpression from './compound_expression.js';\nimport CollatorExpression from './definitions/collator.js';\nimport Within from './definitions/within.js';\nimport {isGlobalPropertyConstant, isFeatureConstant} from './is_constant.js';\nimport Var from './definitions/var.js';\n\n                                                                    \n                                     \n\n/**\n * State associated parsing at a given point in an expression tree.\n * @private\n */\nclass ParsingContext {\n                                 \n                        \n                \n                 \n                                \n\n    // The expected type of this expression. Provided only to allow Expression\n    // implementations to infer argument types: Expression#parse() need not\n    // check that the output type of the parsed expression matches\n    // `expectedType`.\n                        \n\n    constructor(\n        registry                    ,\n        path                = [],\n        expectedType       ,\n        scope        = new Scope(),\n        errors                      = []\n    ) {\n        this.registry = registry;\n        this.path = path;\n        this.key = path.map(part => `[${part}]`).join('');\n        this.scope = scope;\n        this.errors = errors;\n        this.expectedType = expectedType;\n    }\n\n    /**\n     * @param expr the JSON expression to parse\n     * @param index the optional argument index if this expression is an argument of a parent expression that's being parsed\n     * @param options\n     * @param options.omitTypeAnnotations set true to omit inferred type annotations.  Caller beware: with this option set, the parsed expression's type will NOT satisfy `expectedType` if it would normally be wrapped in an inferred annotation.\n     * @private\n     */\n    parse(\n        expr       ,\n        index         ,\n        expectedType        ,\n        bindings                              ,\n        options                                                  = {}\n    )              {\n        if (index) {\n            return this.concat(index, expectedType, bindings)._parse(expr, options);\n        }\n        return this._parse(expr, options);\n    }\n\n    _parse(expr       , options                                                 )              {\n        if (expr === null || typeof expr === 'string' || typeof expr === 'boolean' || typeof expr === 'number') {\n            expr = ['literal', expr];\n        }\n\n        function annotate(parsed, type, typeAnnotation                              ) {\n            if (typeAnnotation === 'assert') {\n                return new Assertion(type, [parsed]);\n            } else if (typeAnnotation === 'coerce') {\n                return new Coercion(type, [parsed]);\n            } else {\n                return parsed;\n            }\n        }\n\n        if (Array.isArray(expr)) {\n            if (expr.length === 0) {\n                return this.error(`Expected an array with at least one element. If you wanted a literal array, use [\"literal\", []].`);\n            }\n\n            const op = expr[0];\n            if (typeof op !== 'string') {\n                this.error(`Expression name must be a string, but found ${typeof op} instead. If you wanted a literal array, use [\"literal\", [...]].`, 0);\n                return null;\n            }\n\n            const Expr = this.registry[op];\n            if (Expr) {\n                let parsed = Expr.parse(expr, this);\n                if (!parsed) return null;\n\n                if (this.expectedType) {\n                    const expected = this.expectedType;\n                    const actual = parsed.type;\n\n                    // When we expect a number, string, boolean, or array but have a value, wrap it in an assertion.\n                    // When we expect a color or formatted string, but have a string or value, wrap it in a coercion.\n                    // Otherwise, we do static type-checking.\n                    //\n                    // These behaviors are overridable for:\n                    //   * The \"coalesce\" operator, which needs to omit type annotations.\n                    //   * String-valued properties (e.g. `text-field`), where coercion is more convenient than assertion.\n                    //\n                    if ((expected.kind === 'string' || expected.kind === 'number' || expected.kind === 'boolean' || expected.kind === 'object' || expected.kind === 'array') && actual.kind === 'value') {\n                        parsed = annotate(parsed, expected, options.typeAnnotation || 'assert');\n                    } else if ((expected.kind === 'color' || expected.kind === 'formatted' || expected.kind === 'resolvedImage') && (actual.kind === 'value' || actual.kind === 'string')) {\n                        parsed = annotate(parsed, expected, options.typeAnnotation || 'coerce');\n                    } else if (this.checkSubtype(expected, actual)) {\n                        return null;\n                    }\n                }\n\n                // If an expression's arguments are all literals, we can evaluate\n                // it immediately and replace it with a literal value in the\n                // parsed/compiled result. Expressions that expect an image should\n                // not be resolved here so we can later get the available images.\n                if (!(parsed instanceof Literal) && (parsed.type.kind !== 'resolvedImage') && isConstant(parsed)) {\n                    const ec = new EvaluationContext();\n                    try {\n                        parsed = new Literal(parsed.type, parsed.evaluate(ec));\n                    } catch (e) {\n                        this.error(e.message);\n                        return null;\n                    }\n                }\n\n                return parsed;\n            }\n\n            return this.error(`Unknown expression \"${op}\". If you wanted a literal array, use [\"literal\", [...]].`, 0);\n        } else if (typeof expr === 'undefined') {\n            return this.error(`'undefined' value invalid. Use null instead.`);\n        } else if (typeof expr === 'object') {\n            return this.error(`Bare objects invalid. Use [\"literal\", {...}] instead.`);\n        } else {\n            return this.error(`Expected an array, but found ${typeof expr} instead.`);\n        }\n    }\n\n    /**\n     * Returns a copy of this context suitable for parsing the subexpression at\n     * index `index`, optionally appending to 'let' binding map.\n     *\n     * Note that `errors` property, intended for collecting errors while\n     * parsing, is copied by reference rather than cloned.\n     * @private\n     */\n    concat(index        , expectedType        , bindings                              )                 {\n        const path = typeof index === 'number' ? this.path.concat(index) : this.path;\n        const scope = bindings ? this.scope.concat(bindings) : this.scope;\n        return new ParsingContext(\n            this.registry,\n            path,\n            expectedType || null,\n            scope,\n            this.errors\n        );\n    }\n\n    /**\n     * Push a parsing (or type checking) error into the `this.errors`\n     * @param error The message\n     * @param keys Optionally specify the source of the error at a child\n     * of the current expression at `this.key`.\n     * @private\n     */\n    error(error        , ...keys               ) {\n        const key = `${this.key}${keys.map(k => `[${k}]`).join('')}`;\n        this.errors.push(new ParsingError(key, error));\n    }\n\n    /**\n     * Returns null if `t` is a subtype of `expected`; otherwise returns an\n     * error message and also pushes it to `this.errors`.\n     */\n    checkSubtype(expected      , t      )          {\n        const error = checkSubtype(expected, t);\n        if (error) this.error(error);\n        return error;\n    }\n}\n\nexport default ParsingContext;\n\nfunction isConstant(expression            ) {\n    if (expression instanceof Var) {\n        return isConstant(expression.boundExpression);\n    } else if (expression instanceof CompoundExpression && expression.name === 'error') {\n        return false;\n    } else if (expression instanceof CollatorExpression) {\n        // Although the results of a Collator expression with fixed arguments\n        // generally shouldn't change between executions, we can't serialize them\n        // as constant expressions because results change based on environment.\n        return false;\n    } else if (expression instanceof Within) {\n        return false;\n    }\n\n    const isTypeAnnotation = expression instanceof Coercion ||\n        expression instanceof Assertion;\n\n    let childrenConstant = true;\n    expression.eachChild(child => {\n        // We can _almost_ assume that if `expressions` children are constant,\n        // they would already have been evaluated to Literal values when they\n        // were parsed.  Type annotations are the exception, because they might\n        // have been inferred and added after a child was parsed.\n\n        // So we recurse into isConstant() for the children of type annotations,\n        // but otherwise simply check whether they are Literals.\n        if (isTypeAnnotation) {\n            childrenConstant = childrenConstant && isConstant(child);\n        } else {\n            childrenConstant = childrenConstant && child instanceof Literal;\n        }\n    });\n    if (!childrenConstant) {\n        return false;\n    }\n\n    return isFeatureConstant(expression) &&\n        isGlobalPropertyConstant(expression, ['zoom', 'heatmap-density', 'line-progress', 'sky-radial-progress', 'accumulated', 'is-supported-script', 'pitch', 'distance-from-center']);\n}\n","//      \n\nimport RuntimeError from './runtime_error.js';\n\n                                                \n\n                                                \n\n/**\n * Returns the index of the last stop <= input, or 0 if it doesn't exist.\n * @private\n */\nexport function findStopLessThanOrEqualTo(stops               , input        )         {\n    const lastIndex = stops.length - 1;\n    let lowerIndex = 0;\n    let upperIndex = lastIndex;\n    let currentIndex = 0;\n    let currentValue, nextValue;\n\n    while (lowerIndex <= upperIndex) {\n        currentIndex = Math.floor((lowerIndex + upperIndex) / 2);\n        currentValue = stops[currentIndex];\n        nextValue = stops[currentIndex + 1];\n\n        if (currentValue <= input) {\n            if (currentIndex === lastIndex || input < nextValue) { // Search complete\n                return currentIndex;\n            }\n\n            lowerIndex = currentIndex + 1;\n        } else if (currentValue > input) {\n            upperIndex = currentIndex - 1;\n        } else {\n            throw new RuntimeError('Input is not a number.');\n        }\n    }\n\n    return 0;\n}\n","//      \n\nimport {NumberType} from '../types.js';\n\nimport {findStopLessThanOrEqualTo} from '../stops.js';\n\n                                       \n                                                                       \n                                                        \n                                                              \n                                      \n\nclass Step                       {\n               \n\n                      \n                          \n                               \n\n    constructor(type      , input            , stops       ) {\n        this.type = type;\n        this.input = input;\n\n        this.labels = [];\n        this.outputs = [];\n        for (const [label, expression] of stops) {\n            this.labels.push(label);\n            this.outputs.push(expression);\n        }\n    }\n\n    static parse(args                       , context                )        {\n        if (args.length - 1 < 4) {\n            return context.error(`Expected at least 4 arguments, but found only ${args.length - 1}.`);\n        }\n\n        if ((args.length - 1) % 2 !== 0) {\n            return context.error(`Expected an even number of arguments.`);\n        }\n\n        const input = context.parse(args[1], 1, NumberType);\n        if (!input) return null;\n\n        const stops        = [];\n\n        let outputType       = (null     );\n        if (context.expectedType && context.expectedType.kind !== 'value') {\n            outputType = context.expectedType;\n        }\n\n        for (let i = 1; i < args.length; i += 2) {\n            const label = i === 1 ? -Infinity : args[i];\n            const value = args[i + 1];\n\n            const labelKey = i;\n            const valueKey = i + 1;\n\n            if (typeof label !== 'number') {\n                return context.error('Input/output pairs for \"step\" expressions must be defined using literal numeric values (not computed expressions) for the input values.', labelKey);\n            }\n\n            if (stops.length && stops[stops.length - 1][0] >= label) {\n                return context.error('Input/output pairs for \"step\" expressions must be arranged with input values in strictly ascending order.', labelKey);\n            }\n\n            const parsed = context.parse(value, valueKey, outputType);\n            if (!parsed) return null;\n            outputType = outputType || parsed.type;\n            stops.push([label, parsed]);\n        }\n\n        return new Step(outputType, input, stops);\n    }\n\n    evaluate(ctx                   )      {\n        const labels = this.labels;\n        const outputs = this.outputs;\n\n        if (labels.length === 1) {\n            return outputs[0].evaluate(ctx);\n        }\n\n        const value = ((this.input.evaluate(ctx)     )        );\n        if (value <= labels[0]) {\n            return outputs[0].evaluate(ctx);\n        }\n\n        const stopCount = labels.length;\n        if (value >= labels[stopCount - 1]) {\n            return outputs[stopCount - 1].evaluate(ctx);\n        }\n\n        const index = findStopLessThanOrEqualTo(labels, value);\n        return outputs[index].evaluate(ctx);\n    }\n\n    eachChild(fn                         ) {\n        fn(this.input);\n        for (const expression of this.outputs) {\n            fn(expression);\n        }\n    }\n\n    outputDefined()          {\n        return this.outputs.every(out => out.outputDefined());\n    }\n\n    serialize()                       {\n        const serialized = [\"step\", this.input.serialize()];\n        for (let i = 0; i < this.labels.length; i++) {\n            if (i > 0) {\n                serialized.push(this.labels[i]);\n            }\n            serialized.push(this.outputs[i].serialize());\n        }\n        return serialized;\n    }\n}\n\nexport default Step;\n","//      \n\nimport Color from './color.js';\n\nexport function number(a        , b        , t        )         {\n    return (a * (1 - t)) + (b * t);\n}\n\nexport function color(from       , to       , t        )        {\n    return new Color(\n        number(from.r, to.r, t),\n        number(from.g, to.g, t),\n        number(from.b, to.b, t),\n        number(from.a, to.a, t)\n    );\n}\n\nexport function array(from               , to               , t        )                {\n    return from.map((d, i) => {\n        return number(d, to[i], t);\n    });\n}\n","//      \n\nimport Color from './color.js';\n\nimport {number as interpolateNumber} from './interpolate.js';\n\n                 \n              \n              \n              \n                 \n  \n\n                 \n              \n              \n              \n                 \n  \n\n// Constants\nconst Xn = 0.950470, // D65 standard referent\n    Yn = 1,\n    Zn = 1.088830,\n    t0 = 4 / 29,\n    t1 = 6 / 29,\n    t2 = 3 * t1 * t1,\n    t3 = t1 * t1 * t1,\n    deg2rad = Math.PI / 180,\n    rad2deg = 180 / Math.PI;\n\n// Utilities\nfunction xyz2lab(t        ) {\n    return t > t3 ? Math.pow(t, 1 / 3) : t / t2 + t0;\n}\n\nfunction lab2xyz(t        ) {\n    return t > t1 ? t * t * t : t2 * (t - t0);\n}\n\nfunction xyz2rgb(x        ) {\n    return 255 * (x <= 0.0031308 ? 12.92 * x : 1.055 * Math.pow(x, 1 / 2.4) - 0.055);\n}\n\nfunction rgb2xyz(x        ) {\n    x /= 255;\n    return x <= 0.04045 ? x / 12.92 : Math.pow((x + 0.055) / 1.055, 2.4);\n}\n\n// LAB\nfunction rgbToLab(rgbColor       )           {\n    const b = rgb2xyz(rgbColor.r),\n        a = rgb2xyz(rgbColor.g),\n        l = rgb2xyz(rgbColor.b),\n        x = xyz2lab((0.4124564 * b + 0.3575761 * a + 0.1804375 * l) / Xn),\n        y = xyz2lab((0.2126729 * b + 0.7151522 * a + 0.0721750 * l) / Yn),\n        z = xyz2lab((0.0193339 * b + 0.1191920 * a + 0.9503041 * l) / Zn);\n\n    return {\n        l: 116 * y - 16,\n        a: 500 * (x - y),\n        b: 200 * (y - z),\n        alpha: rgbColor.a\n    };\n}\n\nfunction labToRgb(labColor          )        {\n    let y = (labColor.l + 16) / 116,\n        x = isNaN(labColor.a) ? y : y + labColor.a / 500,\n        z = isNaN(labColor.b) ? y : y - labColor.b / 200;\n    y = Yn * lab2xyz(y);\n    x = Xn * lab2xyz(x);\n    z = Zn * lab2xyz(z);\n    return new Color(\n        xyz2rgb(3.2404542 * x - 1.5371385 * y - 0.4985314 * z), // D65 -> sRGB\n        xyz2rgb(-0.9692660 * x + 1.8760108 * y + 0.0415560 * z),\n        xyz2rgb(0.0556434 * x - 0.2040259 * y + 1.0572252 * z),\n        labColor.alpha\n    );\n}\n\nfunction interpolateLab(from          , to          , t        )           {\n    return {\n        l: interpolateNumber(from.l, to.l, t),\n        a: interpolateNumber(from.a, to.a, t),\n        b: interpolateNumber(from.b, to.b, t),\n        alpha: interpolateNumber(from.alpha, to.alpha, t)\n    };\n}\n\n// HCL\nfunction rgbToHcl(rgbColor       )           {\n    const {l, a, b} = rgbToLab(rgbColor);\n    const h = Math.atan2(b, a) * rad2deg;\n    return {\n        h: h < 0 ? h + 360 : h,\n        c: Math.sqrt(a * a + b * b),\n        l,\n        alpha: rgbColor.a\n    };\n}\n\nfunction hclToRgb(hclColor          )        {\n    const h = hclColor.h * deg2rad,\n        c = hclColor.c,\n        l = hclColor.l;\n    return labToRgb({\n        l,\n        a: Math.cos(h) * c,\n        b: Math.sin(h) * c,\n        alpha: hclColor.alpha\n    });\n}\n\nfunction interpolateHue(a        , b        , t        ) {\n    const d = b - a;\n    return a + t * (d > 180 || d < -180 ? d - 360 * Math.round(d / 360) : d);\n}\n\nfunction interpolateHcl(from          , to          , t        )           {\n    return {\n        h: interpolateHue(from.h, to.h, t),\n        c: interpolateNumber(from.c, to.c, t),\n        l: interpolateNumber(from.l, to.l, t),\n        alpha: interpolateNumber(from.alpha, to.alpha, t)\n    };\n}\n\nexport const lab = {\n    forward: rgbToLab,\n    reverse: labToRgb,\n    interpolate: interpolateLab\n};\n\nexport const hcl = {\n    forward: rgbToHcl,\n    reverse: hclToRgb,\n    interpolate: interpolateHcl\n};\n","//      \n\nimport UnitBezier from '@mapbox/unitbezier';\n\nimport * as interpolate from '../../util/interpolate.js';\nimport {toString, NumberType, ColorType} from '../types.js';\nimport {findStopLessThanOrEqualTo} from '../stops.js';\nimport {hcl, lab} from '../../util/color_spaces.js';\nimport Color from '../../util/color.js';\n\n                                       \n                                                                       \n                                                        \n                                                              \n                                      \n\n                               \n                        \n                                           \n                                                                              \n\nclass Interpolate                       {\n               \n\n                                                                    \n                                     \n                      \n                          \n                               \n\n    constructor(type      , operator                                                       , interpolation                   , input            , stops       ) {\n        this.type = type;\n        this.operator = operator;\n        this.interpolation = interpolation;\n        this.input = input;\n\n        this.labels = [];\n        this.outputs = [];\n        for (const [label, expression] of stops) {\n            this.labels.push(label);\n            this.outputs.push(expression);\n        }\n    }\n\n    static interpolationFactor(interpolation                   , input        , lower        , upper        )         {\n        let t = 0;\n        if (interpolation.name === 'exponential') {\n            t = exponentialInterpolation(input, interpolation.base, lower, upper);\n        } else if (interpolation.name === 'linear') {\n            t = exponentialInterpolation(input, 1, lower, upper);\n        } else if (interpolation.name === 'cubic-bezier') {\n            const c = interpolation.controlPoints;\n            const ub = new UnitBezier(c[0], c[1], c[2], c[3]);\n            t = ub.solve(exponentialInterpolation(input, 1, lower, upper));\n        }\n        return t;\n    }\n\n    static parse(args                       , context                )               {\n        let [operator, interpolation, input, ...rest] = args;\n\n        if (!Array.isArray(interpolation) || interpolation.length === 0) {\n            return context.error(`Expected an interpolation type expression.`, 1);\n        }\n\n        if (interpolation[0] === 'linear') {\n            interpolation = {name: 'linear'};\n        } else if (interpolation[0] === 'exponential') {\n            const base = interpolation[1];\n            if (typeof base !== 'number')\n                return context.error(`Exponential interpolation requires a numeric base.`, 1, 1);\n            interpolation = {\n                name: 'exponential',\n                base\n            };\n        } else if (interpolation[0] === 'cubic-bezier') {\n            const controlPoints = interpolation.slice(1);\n            if (\n                controlPoints.length !== 4 ||\n                controlPoints.some(t => typeof t !== 'number' || t < 0 || t > 1)\n            ) {\n                return context.error('Cubic bezier interpolation requires four numeric arguments with values between 0 and 1.', 1);\n            }\n\n            interpolation = {\n                name: 'cubic-bezier',\n                controlPoints: (controlPoints     )\n            };\n        } else {\n            return context.error(`Unknown interpolation type ${String(interpolation[0])}`, 1, 0);\n        }\n\n        if (args.length - 1 < 4) {\n            return context.error(`Expected at least 4 arguments, but found only ${args.length - 1}.`);\n        }\n\n        if ((args.length - 1) % 2 !== 0) {\n            return context.error(`Expected an even number of arguments.`);\n        }\n\n        input = context.parse(input, 2, NumberType);\n        if (!input) return null;\n\n        const stops        = [];\n\n        let outputType       = (null     );\n        if (operator === 'interpolate-hcl' || operator === 'interpolate-lab') {\n            outputType = ColorType;\n        } else if (context.expectedType && context.expectedType.kind !== 'value') {\n            outputType = context.expectedType;\n        }\n\n        for (let i = 0; i < rest.length; i += 2) {\n            const label = rest[i];\n            const value = rest[i + 1];\n\n            const labelKey = i + 3;\n            const valueKey = i + 4;\n\n            if (typeof label !== 'number') {\n                return context.error('Input/output pairs for \"interpolate\" expressions must be defined using literal numeric values (not computed expressions) for the input values.', labelKey);\n            }\n\n            if (stops.length && stops[stops.length - 1][0] >= label) {\n                return context.error('Input/output pairs for \"interpolate\" expressions must be arranged with input values in strictly ascending order.', labelKey);\n            }\n\n            const parsed = context.parse(value, valueKey, outputType);\n            if (!parsed) return null;\n            outputType = outputType || parsed.type;\n            stops.push([label, parsed]);\n        }\n\n        if (outputType.kind !== 'number' &&\n            outputType.kind !== 'color' &&\n            !(\n                outputType.kind === 'array' &&\n                outputType.itemType.kind === 'number' &&\n                typeof outputType.N === 'number'\n            )\n        ) {\n            return context.error(`Type ${toString(outputType)} is not interpolatable.`);\n        }\n\n        return new Interpolate(outputType, (operator     ), interpolation, input, stops);\n    }\n\n    evaluate(ctx                   )        {\n        const labels = this.labels;\n        const outputs = this.outputs;\n\n        if (labels.length === 1) {\n            return outputs[0].evaluate(ctx);\n        }\n\n        const value = ((this.input.evaluate(ctx)     )        );\n        if (value <= labels[0]) {\n            return outputs[0].evaluate(ctx);\n        }\n\n        const stopCount = labels.length;\n        if (value >= labels[stopCount - 1]) {\n            return outputs[stopCount - 1].evaluate(ctx);\n        }\n\n        const index = findStopLessThanOrEqualTo(labels, value);\n        const lower = labels[index];\n        const upper = labels[index + 1];\n        const t = Interpolate.interpolationFactor(this.interpolation, value, lower, upper);\n\n        const outputLower = outputs[index].evaluate(ctx);\n        const outputUpper = outputs[index + 1].evaluate(ctx);\n\n        if (this.operator === 'interpolate') {\n            return (interpolate[this.type.kind.toLowerCase()]     )(outputLower, outputUpper, t); // eslint-disable-line import/namespace\n        } else if (this.operator === 'interpolate-hcl') {\n            return hcl.reverse(hcl.interpolate(hcl.forward(outputLower), hcl.forward(outputUpper), t));\n        } else {\n            return lab.reverse(lab.interpolate(lab.forward(outputLower), lab.forward(outputUpper), t));\n        }\n    }\n\n    eachChild(fn                         ) {\n        fn(this.input);\n        for (const expression of this.outputs) {\n            fn(expression);\n        }\n    }\n\n    outputDefined()          {\n        return this.outputs.every(out => out.outputDefined());\n    }\n\n    serialize()                       {\n        let interpolation;\n        if (this.interpolation.name === 'linear') {\n            interpolation = [\"linear\"];\n        } else if (this.interpolation.name === 'exponential') {\n            if  (this.interpolation.base === 1) {\n                interpolation = [\"linear\"];\n            } else {\n                interpolation = [\"exponential\", this.interpolation.base];\n            }\n        } else {\n            interpolation = [\"cubic-bezier\" ].concat(this.interpolation.controlPoints);\n        }\n\n        const serialized = [this.operator, interpolation, this.input.serialize()];\n\n        for (let i = 0; i < this.labels.length; i++) {\n            serialized.push(\n                this.labels[i],\n                this.outputs[i].serialize()\n            );\n        }\n        return serialized;\n    }\n}\n\n/**\n * Returns a ratio that can be used to interpolate between exponential function\n * stops.\n * How it works: Two consecutive stop values define a (scaled and shifted) exponential function `f(x) = a * base^x + b`, where `base` is the user-specified base,\n * and `a` and `b` are constants affording sufficient degrees of freedom to fit\n * the function to the given stops.\n *\n * Here's a bit of algebra that lets us compute `f(x)` directly from the stop\n * values without explicitly solving for `a` and `b`:\n *\n * First stop value: `f(x0) = y0 = a * base^x0 + b`\n * Second stop value: `f(x1) = y1 = a * base^x1 + b`\n * => `y1 - y0 = a(base^x1 - base^x0)`\n * => `a = (y1 - y0)/(base^x1 - base^x0)`\n *\n * Desired value: `f(x) = y = a * base^x + b`\n * => `f(x) = y0 + a * (base^x - base^x0)`\n *\n * From the above, we can replace the `a` in `a * (base^x - base^x0)` and do a\n * little algebra:\n * ```\n * a * (base^x - base^x0) = (y1 - y0)/(base^x1 - base^x0) * (base^x - base^x0)\n *                     = (y1 - y0) * (base^x - base^x0) / (base^x1 - base^x0)\n * ```\n *\n * If we let `(base^x - base^x0) / (base^x1 base^x0)`, then we have\n * `f(x) = y0 + (y1 - y0) * ratio`.  In other words, `ratio` may be treated as\n * an interpolation factor between the two stops' output values.\n *\n * (Note: a slightly different form for `ratio`,\n * `(base^(x-x0) - 1) / (base^(x1-x0) - 1) `, is equivalent, but requires fewer\n * expensive `Math.pow()` operations.)\n *\n * @private\n*/\nfunction exponentialInterpolation(input, base, lowerValue, upperValue) {\n    const difference = upperValue - lowerValue;\n    const progress = input - lowerValue;\n\n    if (difference === 0) {\n        return 0;\n    } else if (base === 1) {\n        return progress / difference;\n    } else {\n        return (Math.pow(base, progress) - 1) / (Math.pow(base, difference) - 1);\n    }\n}\n\nexport default Interpolate;\n","//      \n\nimport assert from 'assert';\n\nimport {checkSubtype, ValueType} from '../types.js';\nimport ResolvedImage from '../types/resolved_image.js';\n\n                                                                       \n                                                        \n                                                              \n                                      \n\nclass Coalesce                       {\n               \n                            \n\n    constructor(type      , args                   ) {\n        this.type = type;\n        this.args = args;\n    }\n\n    static parse(args                       , context                )            {\n        if (args.length < 2) {\n            return context.error(\"Expectected at least one argument.\");\n        }\n        let outputType       = (null     );\n        const expectedType = context.expectedType;\n        if (expectedType && expectedType.kind !== 'value') {\n            outputType = expectedType;\n        }\n        const parsedArgs = [];\n\n        for (const arg of args.slice(1)) {\n            const parsed = context.parse(arg, 1 + parsedArgs.length, outputType, undefined, {typeAnnotation: 'omit'});\n            if (!parsed) return null;\n            outputType = outputType || parsed.type;\n            parsedArgs.push(parsed);\n        }\n        assert(outputType);\n\n        // Above, we parse arguments without inferred type annotation so that\n        // they don't produce a runtime error for `null` input, which would\n        // preempt the desired null-coalescing behavior.\n        // Thus, if any of our arguments would have needed an annotation, we\n        // need to wrap the enclosing coalesce expression with it instead.\n        const needsAnnotation = expectedType &&\n            parsedArgs.some(arg => checkSubtype(expectedType, arg.type));\n\n        return needsAnnotation ?\n            new Coalesce(ValueType, parsedArgs) :\n            new Coalesce((outputType     ), parsedArgs);\n    }\n\n    evaluate(ctx                   )             {\n        let result = null;\n        let argCount = 0;\n        let firstImage;\n        for (const arg of this.args) {\n            argCount++;\n            result = arg.evaluate(ctx);\n            // we need to keep track of the first requested image in a coalesce statement\n            // if coalesce can't find a valid image, we return the first image so styleimagemissing can fire\n            if (result && result instanceof ResolvedImage && !result.available) {\n                // set to first image\n                if (!firstImage) {\n                    firstImage = result;\n                }\n                result = null;\n                // if we reach the end, return the first image\n                if (argCount === this.args.length) {\n                    return firstImage;\n                }\n            }\n\n            if (result !== null) break;\n        }\n        return result;\n    }\n\n    eachChild(fn                         ) {\n        this.args.forEach(fn);\n    }\n\n    outputDefined()          {\n        return this.args.every(arg => arg.outputDefined());\n    }\n\n    serialize()                       {\n        const serialized = [\"coalesce\"];\n        this.eachChild(child => { serialized.push(child.serialize()); });\n        return serialized;\n    }\n}\n\nexport default Coalesce;\n","//      \n\n                                      \n                                                                       \n                                                        \n                                                               \n\nclass Let                       {\n               \n                                          \n                       \n\n    constructor(bindings                             , result            ) {\n        this.type = result.type;\n        this.bindings = [].concat(bindings);\n        this.result = result;\n    }\n\n    evaluate(ctx                   )      {\n        return this.result.evaluate(ctx);\n    }\n\n    eachChild(fn                         ) {\n        for (const binding of this.bindings) {\n            fn(binding[1]);\n        }\n        fn(this.result);\n    }\n\n    static parse(args                       , context                )       {\n        if (args.length < 4)\n            return context.error(`Expected at least 3 arguments, but found ${args.length - 1} instead.`);\n\n        const bindings                              = [];\n        for (let i = 1; i < args.length - 1; i += 2) {\n            const name = args[i];\n\n            if (typeof name !== 'string') {\n                return context.error(`Expected string, but found ${typeof name} instead.`, i);\n            }\n\n            if (/[^a-zA-Z0-9_]/.test(name)) {\n                return context.error(`Variable names must contain only alphanumeric characters or '_'.`, i);\n            }\n\n            const value = context.parse(args[i + 1], i + 1);\n            if (!value) return null;\n\n            bindings.push([name, value]);\n        }\n\n        const result = context.parse(args[args.length - 1], args.length - 1, context.expectedType, bindings);\n        if (!result) return null;\n\n        return new Let(bindings, result);\n    }\n\n    outputDefined()          {\n        return this.result.outputDefined();\n    }\n\n    serialize()                       {\n        const serialized = [\"let\"];\n        for (const [name, expr] of this.bindings) {\n            serialized.push(name, expr.serialize());\n        }\n        serialized.push(this.result.serialize());\n        return serialized;\n    }\n}\n\nexport default Let;\n","//      \n\nimport {array, ValueType, NumberType} from '../types.js';\n\nimport RuntimeError from '../runtime_error.js';\n\n                                                                       \n                                                        \n                                                              \n                                                 \n                                        \n\nclass At                       {\n               \n                      \n                      \n\n    constructor(type      , index            , input            ) {\n        this.type = type;\n        this.index = index;\n        this.input = input;\n    }\n\n    static parse(args                       , context                )      {\n        if (args.length !== 3)\n            return context.error(`Expected 2 arguments, but found ${args.length - 1} instead.`);\n\n        const index = context.parse(args[1], 1, NumberType);\n        const input = context.parse(args[2], 2, array(context.expectedType || ValueType));\n\n        if (!index || !input) return null;\n\n        const t            = (input.type     );\n        return new At(t.itemType, index, input);\n    }\n\n    evaluate(ctx                   )        {\n        const index = ((this.index.evaluate(ctx)     )        );\n        const array = ((this.input.evaluate(ctx)     )              );\n\n        if (index < 0) {\n            throw new RuntimeError(`Array index out of bounds: ${index} < 0.`);\n        }\n\n        if (index >= array.length) {\n            throw new RuntimeError(`Array index out of bounds: ${index} > ${array.length - 1}.`);\n        }\n\n        if (index !== Math.floor(index)) {\n            throw new RuntimeError(`Array index must be an integer, but found ${index} instead.`);\n        }\n\n        return array[index];\n    }\n\n    eachChild(fn                         ) {\n        fn(this.index);\n        fn(this.input);\n    }\n\n    outputDefined()          {\n        return false;\n    }\n\n    serialize()                       {\n        return [\"at\", this.index.serialize(), this.input.serialize()];\n    }\n}\n\nexport default At;\n","//      \n\nimport {BooleanType, StringType, ValueType, NullType, toString, NumberType, isValidType, isValidNativeType} from '../types.js';\nimport RuntimeError from '../runtime_error.js';\nimport {typeOf} from '../values.js';\n\n                                                                       \n                                                        \n                                                              \n                                      \n\nclass In                       {\n               \n                       \n                         \n\n    constructor(needle            , haystack            ) {\n        this.type = BooleanType;\n        this.needle = needle;\n        this.haystack = haystack;\n    }\n\n    static parse(args                       , context                )      {\n        if (args.length !== 3) {\n            return context.error(`Expected 2 arguments, but found ${args.length - 1} instead.`);\n        }\n\n        const needle = context.parse(args[1], 1, ValueType);\n\n        const haystack = context.parse(args[2], 2, ValueType);\n\n        if (!needle || !haystack) return null;\n\n        if (!isValidType(needle.type, [BooleanType, StringType, NumberType, NullType, ValueType])) {\n            return context.error(`Expected first argument to be of type boolean, string, number or null, but found ${toString(needle.type)} instead`);\n        }\n\n        return new In(needle, haystack);\n    }\n\n    evaluate(ctx                   )          {\n        const needle = (this.needle.evaluate(ctx)     );\n        const haystack = (this.haystack.evaluate(ctx)     );\n\n        if (haystack == null) return false;\n\n        if (!isValidNativeType(needle, ['boolean', 'string', 'number', 'null'])) {\n            throw new RuntimeError(`Expected first argument to be of type boolean, string, number or null, but found ${toString(typeOf(needle))} instead.`);\n        }\n\n        if (!isValidNativeType(haystack, ['string', 'array'])) {\n            throw new RuntimeError(`Expected second argument to be of type array or string, but found ${toString(typeOf(haystack))} instead.`);\n        }\n\n        return haystack.indexOf(needle) >= 0;\n    }\n\n    eachChild(fn                         ) {\n        fn(this.needle);\n        fn(this.haystack);\n    }\n\n    outputDefined()          {\n        return true;\n    }\n\n    serialize()                       {\n        return [\"in\", this.needle.serialize(), this.haystack.serialize()];\n    }\n}\n\nexport default In;\n","//      \n\nimport {BooleanType, StringType, ValueType, NullType, toString, NumberType, isValidType, isValidNativeType} from '../types.js';\nimport RuntimeError from '../runtime_error.js';\nimport {typeOf} from '../values.js';\n\n                                                                       \n                                                        \n                                                              \n                                      \n\nclass IndexOf                       {\n               \n                       \n                         \n                           \n\n    constructor(needle            , haystack            , fromIndex             ) {\n        this.type = NumberType;\n        this.needle = needle;\n        this.haystack = haystack;\n        this.fromIndex = fromIndex;\n    }\n\n    static parse(args                       , context                )           {\n        if (args.length <= 2 ||  args.length >= 5) {\n            return context.error(`Expected 3 or 4 arguments, but found ${args.length - 1} instead.`);\n        }\n\n        const needle = context.parse(args[1], 1, ValueType);\n\n        const haystack = context.parse(args[2], 2, ValueType);\n\n        if (!needle || !haystack) return null;\n        if (!isValidType(needle.type, [BooleanType, StringType, NumberType, NullType, ValueType])) {\n            return context.error(`Expected first argument to be of type boolean, string, number or null, but found ${toString(needle.type)} instead`);\n        }\n\n        if (args.length === 4) {\n            const fromIndex = context.parse(args[3], 3, NumberType);\n            if (!fromIndex) return null;\n            return new IndexOf(needle, haystack, fromIndex);\n        } else {\n            return new IndexOf(needle, haystack);\n        }\n    }\n\n    evaluate(ctx                   )      {\n        const needle = (this.needle.evaluate(ctx)     );\n        const haystack = (this.haystack.evaluate(ctx)     );\n\n        if (!isValidNativeType(needle, ['boolean', 'string', 'number', 'null'])) {\n            throw new RuntimeError(`Expected first argument to be of type boolean, string, number or null, but found ${toString(typeOf(needle))} instead.`);\n        }\n\n        if (!isValidNativeType(haystack, ['string', 'array'])) {\n            throw new RuntimeError(`Expected second argument to be of type array or string, but found ${toString(typeOf(haystack))} instead.`);\n        }\n\n        if (this.fromIndex) {\n            const fromIndex = (this.fromIndex.evaluate(ctx)        );\n            return haystack.indexOf(needle, fromIndex);\n        }\n\n        return haystack.indexOf(needle);\n    }\n\n    eachChild(fn                         ) {\n        fn(this.needle);\n        fn(this.haystack);\n        if (this.fromIndex) {\n            fn(this.fromIndex);\n        }\n    }\n\n    outputDefined()          {\n        return false;\n    }\n\n    serialize()                       {\n        if (this.fromIndex != null && this.fromIndex !== undefined) {\n            const fromIndex = this.fromIndex.serialize();\n            return [\"index-of\", this.needle.serialize(), this.haystack.serialize(), fromIndex];\n        }\n        return [\"index-of\", this.needle.serialize(), this.haystack.serialize()];\n    }\n}\n\nexport default IndexOf;\n","//      \n\nimport assert from 'assert';\n\nimport {typeOf} from '../values.js';\nimport {ValueType,          } from '../types.js';\n\n                                                                       \n                                                        \n                                                              \n\n// Map input label values to output expression index\n                                         \n\nclass Match                       {\n               \n                    \n\n                      \n                 \n                               \n                          \n\n    constructor(inputType      , outputType      , input            , cases       , outputs                   , otherwise            ) {\n        this.inputType = inputType;\n        this.type = outputType;\n        this.input = input;\n        this.cases = cases;\n        this.outputs = outputs;\n        this.otherwise = otherwise;\n    }\n\n    static parse(args                       , context                )         {\n        if (args.length < 5)\n            return context.error(`Expected at least 4 arguments, but found only ${args.length - 1}.`);\n        if (args.length % 2 !== 1)\n            return context.error(`Expected an even number of arguments.`);\n\n        let inputType;\n        let outputType;\n        if (context.expectedType && context.expectedType.kind !== 'value') {\n            outputType = context.expectedType;\n        }\n        const cases = {};\n        const outputs = [];\n        for (let i = 2; i < args.length - 1; i += 2) {\n            let labels = args[i];\n            const value = args[i + 1];\n\n            if (!Array.isArray(labels)) {\n                labels = [labels];\n            }\n\n            const labelContext = context.concat(i);\n            if (labels.length === 0) {\n                return labelContext.error('Expected at least one branch label.');\n            }\n\n            for (const label of labels) {\n                if (typeof label !== 'number' && typeof label !== 'string') {\n                    return labelContext.error(`Branch labels must be numbers or strings.`);\n                } else if (typeof label === 'number' && Math.abs(label) > Number.MAX_SAFE_INTEGER) {\n                    return labelContext.error(`Branch labels must be integers no larger than ${Number.MAX_SAFE_INTEGER}.`);\n\n                } else if (typeof label === 'number' && Math.floor(label) !== label) {\n                    return labelContext.error(`Numeric branch labels must be integer values.`);\n\n                } else if (!inputType) {\n                    inputType = typeOf(label);\n                } else if (labelContext.checkSubtype(inputType, typeOf(label))) {\n                    return null;\n                }\n\n                if (typeof cases[String(label)] !== 'undefined') {\n                    return labelContext.error('Branch labels must be unique.');\n                }\n\n                cases[String(label)] = outputs.length;\n            }\n\n            const result = context.parse(value, i, outputType);\n            if (!result) return null;\n            outputType = outputType || result.type;\n            outputs.push(result);\n        }\n\n        const input = context.parse(args[1], 1, ValueType);\n        if (!input) return null;\n\n        const otherwise = context.parse(args[args.length - 1], args.length - 1, outputType);\n        if (!otherwise) return null;\n\n        assert(inputType && outputType);\n\n        if (input.type.kind !== 'value' && context.concat(1).checkSubtype((inputType     ), input.type)) {\n            return null;\n        }\n\n        return new Match((inputType     ), (outputType     ), input, cases, outputs, otherwise);\n    }\n\n    evaluate(ctx                   )      {\n        const input = (this.input.evaluate(ctx)     );\n        const output = (typeOf(input) === this.inputType && this.outputs[this.cases[input]]) || this.otherwise;\n        return output.evaluate(ctx);\n    }\n\n    eachChild(fn                         ) {\n        fn(this.input);\n        this.outputs.forEach(fn);\n        fn(this.otherwise);\n    }\n\n    outputDefined()          {\n        return this.outputs.every(out => out.outputDefined()) && this.otherwise.outputDefined();\n    }\n\n    serialize()                       {\n        const serialized = [\"match\", this.input.serialize()];\n\n        // Sort so serialization has an arbitrary defined order, even though\n        // branch order doesn't affect evaluation\n        const sortedLabels = Object.keys(this.cases).sort();\n\n        // Group branches by unique match expression to support condensed\n        // serializations of the form [case1, case2, ...] -> matchExpression\n        const groupedByOutput                                          = [];\n        const outputLookup                            = {}; // lookup index into groupedByOutput for a given output expression\n        for (const label of sortedLabels) {\n            const outputIndex = outputLookup[this.cases[label]];\n            if (outputIndex === undefined) {\n                // First time seeing this output, add it to the end of the grouped list\n                outputLookup[this.cases[label]] = groupedByOutput.length;\n                groupedByOutput.push([this.cases[label], [label]]);\n            } else {\n                // We've seen this expression before, add the label to that output's group\n                groupedByOutput[outputIndex][1].push(label);\n            }\n        }\n\n        const coerceLabel = (label) => this.inputType.kind === 'number' ? Number(label) : label;\n\n        for (const [outputIndex, labels] of groupedByOutput) {\n            if (labels.length === 1) {\n                // Only a single label matches this output expression\n                serialized.push(coerceLabel(labels[0]));\n            } else {\n                // Array of literal labels pointing to this output expression\n                serialized.push(labels.map(coerceLabel));\n            }\n            serialized.push(this.outputs[outputIndex].serialize());\n        }\n        serialized.push(this.otherwise.serialize());\n        return serialized;\n    }\n}\n\nexport default Match;\n","//      \n\nimport assert from 'assert';\n\nimport {BooleanType} from '../types.js';\n\n                                                                       \n                                                        \n                                                              \n                                      \n\n                                                \n\nclass Case                       {\n               \n\n                       \n                          \n\n    constructor(type      , branches          , otherwise            ) {\n        this.type = type;\n        this.branches = branches;\n        this.otherwise = otherwise;\n    }\n\n    static parse(args                       , context                )        {\n        if (args.length < 4)\n            return context.error(`Expected at least 3 arguments, but found only ${args.length - 1}.`);\n        if (args.length % 2 !== 0)\n            return context.error(`Expected an odd number of arguments.`);\n\n        let outputType       ;\n        if (context.expectedType && context.expectedType.kind !== 'value') {\n            outputType = context.expectedType;\n        }\n\n        const branches = [];\n        for (let i = 1; i < args.length - 1; i += 2) {\n            const test = context.parse(args[i], i, BooleanType);\n            if (!test) return null;\n\n            const result = context.parse(args[i + 1], i + 1, outputType);\n            if (!result) return null;\n\n            branches.push([test, result]);\n\n            outputType = outputType || result.type;\n        }\n\n        const otherwise = context.parse(args[args.length - 1], args.length - 1, outputType);\n        if (!otherwise) return null;\n\n        assert(outputType);\n        return new Case((outputType     ), branches, otherwise);\n    }\n\n    evaluate(ctx                   )      {\n        for (const [test, expression] of this.branches) {\n            if (test.evaluate(ctx)) {\n                return expression.evaluate(ctx);\n            }\n        }\n        return this.otherwise.evaluate(ctx);\n    }\n\n    eachChild(fn                         ) {\n        for (const [test, expression] of this.branches) {\n            fn(test);\n            fn(expression);\n        }\n        fn(this.otherwise);\n    }\n\n    outputDefined()          {\n        return this.branches.every(([_, out]) => out.outputDefined()) && this.otherwise.outputDefined();\n    }\n\n    serialize()                       {\n        const serialized = [\"case\"];\n        this.eachChild(child => { serialized.push(child.serialize()); });\n        return serialized;\n    }\n}\n\nexport default Case;\n","//      \n\nimport {ValueType, NumberType, StringType, array, toString, isValidType, isValidNativeType} from '../types.js';\nimport RuntimeError from '../runtime_error.js';\nimport {typeOf} from '../values.js';\n\n                                                                       \n                                                        \n                                                              \n                                      \n\nclass Slice                       {\n               \n                      \n                           \n                          \n\n    constructor(type      , input            , beginIndex            , endIndex             ) {\n        this.type = type;\n        this.input = input;\n        this.beginIndex = beginIndex;\n        this.endIndex = endIndex;\n\n    }\n\n    static parse(args                       , context                )         {\n        if (args.length <= 2 ||  args.length >= 5) {\n            return context.error(`Expected 3 or 4 arguments, but found ${args.length - 1} instead.`);\n        }\n\n        const input = context.parse(args[1], 1, ValueType);\n        const beginIndex = context.parse(args[2], 2, NumberType);\n\n        if (!input || !beginIndex) return null;\n\n        if (!isValidType(input.type, [array(ValueType), StringType, ValueType])) {\n            return context.error(`Expected first argument to be of type array or string, but found ${toString(input.type)} instead`);\n        }\n\n        if (args.length === 4) {\n            const endIndex = context.parse(args[3], 3, NumberType);\n            if (!endIndex) return null;\n            return new Slice(input.type, input, beginIndex, endIndex);\n        } else {\n            return new Slice(input.type, input, beginIndex);\n        }\n    }\n\n    evaluate(ctx                   )      {\n        const input = (this.input.evaluate(ctx)     );\n        const beginIndex = (this.beginIndex.evaluate(ctx)        );\n\n        if (!isValidNativeType(input, ['string', 'array'])) {\n            throw new RuntimeError(`Expected first argument to be of type array or string, but found ${toString(typeOf(input))} instead.`);\n        }\n\n        if (this.endIndex) {\n            const endIndex = (this.endIndex.evaluate(ctx)        );\n            return input.slice(beginIndex, endIndex);\n        }\n\n        return input.slice(beginIndex);\n    }\n\n    eachChild(fn                         ) {\n        fn(this.input);\n        fn(this.beginIndex);\n        if (this.endIndex) {\n            fn(this.endIndex);\n        }\n    }\n\n    outputDefined()          {\n        return false;\n    }\n\n    serialize()                       {\n        if (this.endIndex != null && this.endIndex !== undefined) {\n            const endIndex = this.endIndex.serialize();\n            return [\"slice\", this.input.serialize(), this.beginIndex.serialize(), endIndex];\n        }\n        return [\"slice\", this.input.serialize(), this.beginIndex.serialize()];\n    }\n}\n\nexport default Slice;\n","//      \n\nimport {toString, ValueType, BooleanType, CollatorType} from '../types.js';\nimport Assertion from './assertion.js';\nimport {typeOf} from '../values.js';\nimport RuntimeError from '../runtime_error.js';\n\n                                                                                               \n                                                              \n                                                        \n                                      \n\n                                                                 \n\nfunction isComparableType(op                    , type      ) {\n    if (op === '==' || op === '!=') {\n        // equality operator\n        return type.kind === 'boolean' ||\n            type.kind === 'string' ||\n            type.kind === 'number' ||\n            type.kind === 'null' ||\n            type.kind === 'value';\n    } else {\n        // ordering operator\n        return type.kind === 'string' ||\n            type.kind === 'number' ||\n            type.kind === 'value';\n    }\n}\n\nfunction eq(ctx                   , a     , b     )          { return a === b; }\nfunction neq(ctx                   , a     , b     )          { return a !== b; }\nfunction lt(ctx                   , a     , b     )          { return a < b; }\nfunction gt(ctx                   , a     , b     )          { return a > b; }\nfunction lteq(ctx                   , a     , b     )          { return a <= b; }\nfunction gteq(ctx                   , a     , b     )          { return a >= b; }\n\nfunction eqCollate(ctx                   , a     , b     , c     )          { return c.compare(a, b) === 0; }\nfunction neqCollate(ctx                   , a     , b     , c     )          { return !eqCollate(ctx, a, b, c); }\nfunction ltCollate(ctx                   , a     , b     , c     )          { return c.compare(a, b) < 0; }\nfunction gtCollate(ctx                   , a     , b     , c     )          { return c.compare(a, b) > 0; }\nfunction lteqCollate(ctx                   , a     , b     , c     )          { return c.compare(a, b) <= 0; }\nfunction gteqCollate(ctx                   , a     , b     , c     )          { return c.compare(a, b) >= 0; }\n\n/**\n * Special form for comparison operators, implementing the signatures:\n * - (T, T, ?Collator) => boolean\n * - (T, value, ?Collator) => boolean\n * - (value, T, ?Collator) => boolean\n *\n * For inequalities, T must be either value, string, or number. For ==/!=, it\n * can also be boolean or null.\n *\n * Equality semantics are equivalent to Javascript's strict equality (===/!==)\n * -- i.e., when the arguments' types don't match, == evaluates to false, != to\n * true.\n *\n * When types don't match in an ordering comparison, a runtime error is thrown.\n *\n * @private\n */\nfunction makeComparison(op                    , compareBasic                                          , compareWithCollator                                               )                         {\n    const isOrderComparison = op !== '==' && op !== '!=';\n\n    return class Comparison                       {\n                   \n                        \n                        \n                              \n                                    \n\n        constructor(lhs            , rhs            , collator             ) {\n            this.type = BooleanType;\n            this.lhs = lhs;\n            this.rhs = rhs;\n            this.collator = collator;\n            this.hasUntypedArgument = lhs.type.kind === 'value' || rhs.type.kind === 'value';\n        }\n\n        static parse(args                       , context                )              {\n            if (args.length !== 3 && args.length !== 4)\n                return context.error(`Expected two or three arguments.`);\n\n            const op                     = (args[0]     );\n\n            let lhs = context.parse(args[1], 1, ValueType);\n            if (!lhs) return null;\n            if (!isComparableType(op, lhs.type)) {\n                return context.concat(1).error(`\"${op}\" comparisons are not supported for type '${toString(lhs.type)}'.`);\n            }\n            let rhs = context.parse(args[2], 2, ValueType);\n            if (!rhs) return null;\n            if (!isComparableType(op, rhs.type)) {\n                return context.concat(2).error(`\"${op}\" comparisons are not supported for type '${toString(rhs.type)}'.`);\n            }\n\n            if (\n                lhs.type.kind !== rhs.type.kind &&\n                lhs.type.kind !== 'value' &&\n                rhs.type.kind !== 'value'\n            ) {\n                return context.error(`Cannot compare types '${toString(lhs.type)}' and '${toString(rhs.type)}'.`);\n            }\n\n            if (isOrderComparison) {\n                // typing rules specific to less/greater than operators\n                if (lhs.type.kind === 'value' && rhs.type.kind !== 'value') {\n                    // (value, T)\n                    lhs = new Assertion(rhs.type, [lhs]);\n                } else if (lhs.type.kind !== 'value' && rhs.type.kind === 'value') {\n                    // (T, value)\n                    rhs = new Assertion(lhs.type, [rhs]);\n                }\n            }\n\n            let collator = null;\n            if (args.length === 4) {\n                if (\n                    lhs.type.kind !== 'string' &&\n                    rhs.type.kind !== 'string' &&\n                    lhs.type.kind !== 'value' &&\n                    rhs.type.kind !== 'value'\n                ) {\n                    return context.error(`Cannot use collator to compare non-string types.`);\n                }\n                collator = context.parse(args[3], 3, CollatorType);\n                if (!collator) return null;\n            }\n\n            return new Comparison(lhs, rhs, collator);\n        }\n\n        evaluate(ctx                   )          {\n            const lhs = this.lhs.evaluate(ctx);\n            const rhs = this.rhs.evaluate(ctx);\n\n            if (isOrderComparison && this.hasUntypedArgument) {\n                const lt = typeOf(lhs);\n                const rt = typeOf(rhs);\n                // check that type is string or number, and equal\n                if (lt.kind !== rt.kind || !(lt.kind === 'string' || lt.kind === 'number')) {\n                    throw new RuntimeError(`Expected arguments for \"${op}\" to be (string, string) or (number, number), but found (${lt.kind}, ${rt.kind}) instead.`);\n                }\n            }\n\n            if (this.collator && !isOrderComparison && this.hasUntypedArgument) {\n                const lt = typeOf(lhs);\n                const rt = typeOf(rhs);\n                if (lt.kind !== 'string' || rt.kind !== 'string') {\n                    return compareBasic(ctx, lhs, rhs);\n                }\n            }\n\n            return this.collator ?\n                compareWithCollator(ctx, lhs, rhs, this.collator.evaluate(ctx)) :\n                compareBasic(ctx, lhs, rhs);\n        }\n\n        eachChild(fn                         ) {\n            fn(this.lhs);\n            fn(this.rhs);\n            if (this.collator) {\n                fn(this.collator);\n            }\n        }\n\n        outputDefined()          {\n            return true;\n        }\n\n        serialize()                       {\n            const serialized = [op];\n            this.eachChild(child => { serialized.push(child.serialize()); });\n            return serialized;\n        }\n    };\n}\n\nexport const Equals                                                                  = makeComparison('==', eq, eqCollate);\nexport const NotEquals                                                                    = makeComparison('!=', neq, neqCollate);\nexport const LessThan                                                                 = makeComparison('<', lt, ltCollate);\nexport const GreaterThan                                                                 = makeComparison('>', gt, gtCollate);\nexport const LessThanOrEqual                                                                      = makeComparison('<=', lteq, lteqCollate);\nexport const GreaterThanOrEqual                                                                      = makeComparison('>=', gteq, gteqCollate);\n","//      \n\nimport {StringType, NumberType} from '../types.js';\n\n                                                                       \n                                                              \n                                                        \n                                      \n\n                   \n                                          \n  \n\n                                 \n                 \n                                    \n                                     \n                         \n\n            \n                                    \n                                     \n                         \n\n                              \n\n                           \n \n\n                            \n                                                        \n                             \n                         \n                                          \n                                          \n  \n\nexport default class NumberFormat                       {\n               \n                       \n                                 // BCP 47 language tag\n                                 // ISO 4217 currency code, required if style=currency\n                                 // Simple units sanctioned for use in ECMAScript, required if style=unit. https://tc39.es/proposal-unified-intl-numberformat/section6/locales-currencies-tz_proposed_out.html#sec-issanctionedsimpleunitidentifier\n                                          // Default 0\n                                          // Default 3\n\n    constructor(number            ,\n                locale                   ,\n                currency                   ,\n                unit                   ,\n                minFractionDigits                   ,\n                maxFractionDigits                   ) {\n        this.type = StringType;\n        this.number = number;\n        this.locale = locale;\n        this.currency = currency;\n        this.unit = unit;\n        this.minFractionDigits = minFractionDigits;\n        this.maxFractionDigits = maxFractionDigits;\n    }\n\n    static parse(args                       , context                )              {\n        if (args.length !== 3)\n            return context.error(`Expected two arguments.`);\n\n        const number = context.parse(args[1], 1, NumberType);\n        if (!number) return null;\n\n        const options = (args[2]     );\n        if (typeof options !== \"object\" || Array.isArray(options))\n            return context.error(`NumberFormat options argument must be an object.`);\n\n        let locale = null;\n        if (options['locale']) {\n            locale = context.parse(options['locale'], 1, StringType);\n            if (!locale) return null;\n        }\n\n        let currency = null;\n        if (options['currency']) {\n            currency = context.parse(options['currency'], 1, StringType);\n            if (!currency) return null;\n        }\n\n        let unit = null;\n        if (options['unit']) {\n            unit = context.parse(options['unit'], 1, StringType);\n            if (!unit) return null;\n        }\n\n        let minFractionDigits = null;\n        if (options['min-fraction-digits']) {\n            minFractionDigits = context.parse(options['min-fraction-digits'], 1, NumberType);\n            if (!minFractionDigits) return null;\n        }\n\n        let maxFractionDigits = null;\n        if (options['max-fraction-digits']) {\n            maxFractionDigits = context.parse(options['max-fraction-digits'], 1, NumberType);\n            if (!maxFractionDigits) return null;\n        }\n\n        return new NumberFormat(number, locale, currency, unit, minFractionDigits, maxFractionDigits);\n    }\n\n    evaluate(ctx                   )         {\n        return new Intl.NumberFormat(this.locale ? this.locale.evaluate(ctx) : [],\n            {\n                style:\n                    (this.currency && \"currency\") ||\n                    (this.unit && \"unit\") ||\n                    \"decimal\",\n                currency: this.currency ? this.currency.evaluate(ctx) : undefined,\n                unit: this.unit ? this.unit.evaluate(ctx) : undefined,\n                minimumFractionDigits: this.minFractionDigits ? this.minFractionDigits.evaluate(ctx) : undefined,\n                maximumFractionDigits: this.maxFractionDigits ? this.maxFractionDigits.evaluate(ctx) : undefined,\n            }).format(this.number.evaluate(ctx));\n    }\n\n    eachChild(fn                         ) {\n        fn(this.number);\n        if (this.locale) {\n            fn(this.locale);\n        }\n        if (this.currency) {\n            fn(this.currency);\n        }\n        if (this.unit) {\n            fn(this.unit);\n        }\n        if (this.minFractionDigits) {\n            fn(this.minFractionDigits);\n        }\n        if (this.maxFractionDigits) {\n            fn(this.maxFractionDigits);\n        }\n    }\n\n    outputDefined()          {\n        return false;\n    }\n\n    serialize()                       {\n        const options = {};\n        if (this.locale) {\n            options['locale'] = this.locale.serialize();\n        }\n        if (this.currency) {\n            options['currency'] = this.currency.serialize();\n        }\n        if (this.unit) {\n            options['unit'] = this.unit.serialize();\n        }\n        if (this.minFractionDigits) {\n            options['min-fraction-digits'] = this.minFractionDigits.serialize();\n        }\n        if (this.maxFractionDigits) {\n            options['max-fraction-digits'] = this.maxFractionDigits.serialize();\n        }\n        return [\"number-format\", this.number.serialize(), options];\n    }\n}\n","//      \n\nimport {NumberType, toString} from '../types.js';\n\nimport {typeOf} from '../values.js';\nimport RuntimeError from '../runtime_error.js';\n\n                                                                       \n                                                        \n                                                              \n                                      \n\nclass Length                       {\n               \n                      \n\n    constructor(input            ) {\n        this.type = NumberType;\n        this.input = input;\n    }\n\n    static parse(args                       , context                )          {\n        if (args.length !== 2)\n            return context.error(`Expected 1 argument, but found ${args.length - 1} instead.`);\n\n        const input = context.parse(args[1], 1);\n        if (!input) return null;\n\n        if (input.type.kind !== 'array' && input.type.kind !== 'string' && input.type.kind !== 'value')\n            return context.error(`Expected argument of type string or array, but found ${toString(input.type)} instead.`);\n\n        return new Length(input);\n    }\n\n    evaluate(ctx                   )               {\n        const input = this.input.evaluate(ctx);\n        if (typeof input === 'string') {\n            return input.length;\n        } else if (Array.isArray(input)) {\n            return input.length;\n        } else {\n            throw new RuntimeError(`Expected value to be of type string or array, but found ${toString(typeOf(input))} instead.`);\n        }\n    }\n\n    eachChild(fn                         ) {\n        fn(this.input);\n    }\n\n    outputDefined()          {\n        return false;\n    }\n\n    serialize()                       {\n        const serialized = [\"length\"];\n        this.eachChild(child => { serialized.push(child.serialize()); });\n        return serialized;\n    }\n}\n\nexport default Length;\n","//      \n\nimport {\n              \n    NumberType,\n    StringType,\n    BooleanType,\n    ColorType,\n    ObjectType,\n    ValueType,\n    ErrorType,\n    CollatorType,\n    array,\n    toString as typeToString\n} from '../types.js';\n\nimport {typeOf, Color, validateRGBA, toString as valueToString} from '../values.js';\nimport CompoundExpression from '../compound_expression.js';\nimport RuntimeError from '../runtime_error.js';\nimport Let from './let.js';\nimport Var from './var.js';\nimport Literal from './literal.js';\nimport Assertion from './assertion.js';\nimport Coercion from './coercion.js';\nimport At from './at.js';\nimport In from './in.js';\nimport IndexOf from './index_of.js';\nimport Match from './match.js';\nimport Case from './case.js';\nimport Slice from './slice.js';\nimport Step from './step.js';\nimport Interpolate from './interpolate.js';\nimport Coalesce from './coalesce.js';\nimport {\n    Equals,\n    NotEquals,\n    LessThan,\n    GreaterThan,\n    LessThanOrEqual,\n    GreaterThanOrEqual\n} from './comparison.js';\nimport CollatorExpression from './collator.js';\nimport NumberFormat from './number_format.js';\nimport FormatExpression from './format.js';\nimport ImageExpression from './image.js';\nimport Length from './length.js';\nimport Within from './within.js';\n\n                                                       \n                                                         \n\nconst expressions                     = {\n    // special forms\n    '==': Equals,\n    '!=': NotEquals,\n    '>': GreaterThan,\n    '<': LessThan,\n    '>=': GreaterThanOrEqual,\n    '<=': LessThanOrEqual,\n    'array': Assertion,\n    'at': At,\n    'boolean': Assertion,\n    'case': Case,\n    'coalesce': Coalesce,\n    'collator': CollatorExpression,\n    'format': FormatExpression,\n    'image': ImageExpression,\n    'in': In,\n    'index-of': IndexOf,\n    'interpolate': Interpolate,\n    'interpolate-hcl': Interpolate,\n    'interpolate-lab': Interpolate,\n    'length': Length,\n    'let': Let,\n    'literal': Literal,\n    'match': Match,\n    'number': Assertion,\n    'number-format': NumberFormat,\n    'object': Assertion,\n    'slice': Slice,\n    'step': Step,\n    'string': Assertion,\n    'to-boolean': Coercion,\n    'to-color': Coercion,\n    'to-number': Coercion,\n    'to-string': Coercion,\n    'var': Var,\n    'within': Within\n};\n\nfunction rgba(ctx, [r, g, b, a]) {\n    r = r.evaluate(ctx);\n    g = g.evaluate(ctx);\n    b = b.evaluate(ctx);\n    const alpha = a ? a.evaluate(ctx) : 1;\n    const error = validateRGBA(r, g, b, alpha);\n    if (error) throw new RuntimeError(error);\n    return new Color(r / 255 * alpha, g / 255 * alpha, b / 255 * alpha, alpha);\n}\n\nfunction has(key, obj) {\n    return key in obj;\n}\n\nfunction get(key, obj) {\n    const v = obj[key];\n    return typeof v === 'undefined' ? null : v;\n}\n\nfunction binarySearch(v, a, i, j) {\n    while (i <= j) {\n        const m = (i + j) >> 1;\n        if (a[m] === v)\n            return true;\n        if (a[m] > v)\n            j = m - 1;\n        else\n            i = m + 1;\n    }\n    return false;\n}\n\nfunction varargs(type      )          {\n    return {type};\n}\n\nCompoundExpression.register(expressions, {\n    'error': [\n        ErrorType,\n        [StringType],\n        (ctx, [v]) => { throw new RuntimeError(v.evaluate(ctx)); }\n    ],\n    'typeof': [\n        StringType,\n        [ValueType],\n        (ctx, [v]) => typeToString(typeOf(v.evaluate(ctx)))\n    ],\n    'to-rgba': [\n        array(NumberType, 4),\n        [ColorType],\n        (ctx, [v]) => {\n            return v.evaluate(ctx).toArray();\n        }\n    ],\n    'rgb': [\n        ColorType,\n        [NumberType, NumberType, NumberType],\n        rgba\n    ],\n    'rgba': [\n        ColorType,\n        [NumberType, NumberType, NumberType, NumberType],\n        rgba\n    ],\n    'has': {\n        type: BooleanType,\n        overloads: [\n            [\n                [StringType],\n                (ctx, [key]) => has(key.evaluate(ctx), ctx.properties())\n            ], [\n                [StringType, ObjectType],\n                (ctx, [key, obj]) => has(key.evaluate(ctx), obj.evaluate(ctx))\n            ]\n        ]\n    },\n    'get': {\n        type: ValueType,\n        overloads: [\n            [\n                [StringType],\n                (ctx, [key]) => get(key.evaluate(ctx), ctx.properties())\n            ], [\n                [StringType, ObjectType],\n                (ctx, [key, obj]) => get(key.evaluate(ctx), obj.evaluate(ctx))\n            ]\n        ]\n    },\n    'feature-state': [\n        ValueType,\n        [StringType],\n        (ctx, [key]) => get(key.evaluate(ctx), ctx.featureState || {})\n    ],\n    'properties': [\n        ObjectType,\n        [],\n        (ctx) => ctx.properties()\n    ],\n    'geometry-type': [\n        StringType,\n        [],\n        (ctx) => ctx.geometryType()\n    ],\n    'id': [\n        ValueType,\n        [],\n        (ctx) => ctx.id()\n    ],\n    'zoom': [\n        NumberType,\n        [],\n        (ctx) => ctx.globals.zoom\n    ],\n    'pitch': [\n        NumberType,\n        [],\n        (ctx) => ctx.globals.pitch || 0\n    ],\n    'distance-from-center': [\n        NumberType,\n        [],\n        (ctx) => ctx.distanceFromCenter()\n    ],\n    'heatmap-density': [\n        NumberType,\n        [],\n        (ctx) => ctx.globals.heatmapDensity || 0\n    ],\n    'line-progress': [\n        NumberType,\n        [],\n        (ctx) => ctx.globals.lineProgress || 0\n    ],\n    'sky-radial-progress': [\n        NumberType,\n        [],\n        (ctx) => ctx.globals.skyRadialProgress || 0\n    ],\n    'accumulated': [\n        ValueType,\n        [],\n        (ctx) => ctx.globals.accumulated === undefined ? null : ctx.globals.accumulated\n    ],\n    '+': [\n        NumberType,\n        varargs(NumberType),\n        (ctx, args) => {\n            let result = 0;\n            for (const arg of args) {\n                result += arg.evaluate(ctx);\n            }\n            return result;\n        }\n    ],\n    '*': [\n        NumberType,\n        varargs(NumberType),\n        (ctx, args) => {\n            let result = 1;\n            for (const arg of args) {\n                result *= arg.evaluate(ctx);\n            }\n            return result;\n        }\n    ],\n    '-': {\n        type: NumberType,\n        overloads: [\n            [\n                [NumberType, NumberType],\n                (ctx, [a, b]) => a.evaluate(ctx) - b.evaluate(ctx)\n            ], [\n                [NumberType],\n                (ctx, [a]) => -a.evaluate(ctx)\n            ]\n        ]\n    },\n    '/': [\n        NumberType,\n        [NumberType, NumberType],\n        (ctx, [a, b]) => a.evaluate(ctx) / b.evaluate(ctx)\n    ],\n    '%': [\n        NumberType,\n        [NumberType, NumberType],\n        (ctx, [a, b]) => a.evaluate(ctx) % b.evaluate(ctx)\n    ],\n    'ln2': [\n        NumberType,\n        [],\n        () => Math.LN2\n    ],\n    'pi': [\n        NumberType,\n        [],\n        () => Math.PI\n    ],\n    'e': [\n        NumberType,\n        [],\n        () => Math.E\n    ],\n    '^': [\n        NumberType,\n        [NumberType, NumberType],\n        (ctx, [b, e]) => Math.pow(b.evaluate(ctx), e.evaluate(ctx))\n    ],\n    'sqrt': [\n        NumberType,\n        [NumberType],\n        (ctx, [x]) => Math.sqrt(x.evaluate(ctx))\n    ],\n    'log10': [\n        NumberType,\n        [NumberType],\n        (ctx, [n]) => Math.log(n.evaluate(ctx)) / Math.LN10\n    ],\n    'ln': [\n        NumberType,\n        [NumberType],\n        (ctx, [n]) => Math.log(n.evaluate(ctx))\n    ],\n    'log2': [\n        NumberType,\n        [NumberType],\n        (ctx, [n]) => Math.log(n.evaluate(ctx)) / Math.LN2\n    ],\n    'sin': [\n        NumberType,\n        [NumberType],\n        (ctx, [n]) => Math.sin(n.evaluate(ctx))\n    ],\n    'cos': [\n        NumberType,\n        [NumberType],\n        (ctx, [n]) => Math.cos(n.evaluate(ctx))\n    ],\n    'tan': [\n        NumberType,\n        [NumberType],\n        (ctx, [n]) => Math.tan(n.evaluate(ctx))\n    ],\n    'asin': [\n        NumberType,\n        [NumberType],\n        (ctx, [n]) => Math.asin(n.evaluate(ctx))\n    ],\n    'acos': [\n        NumberType,\n        [NumberType],\n        (ctx, [n]) => Math.acos(n.evaluate(ctx))\n    ],\n    'atan': [\n        NumberType,\n        [NumberType],\n        (ctx, [n]) => Math.atan(n.evaluate(ctx))\n    ],\n    'min': [\n        NumberType,\n        varargs(NumberType),\n        (ctx, args) => Math.min(...args.map(arg => arg.evaluate(ctx)))\n    ],\n    'max': [\n        NumberType,\n        varargs(NumberType),\n        (ctx, args) => Math.max(...args.map(arg => arg.evaluate(ctx)))\n    ],\n    'abs': [\n        NumberType,\n        [NumberType],\n        (ctx, [n]) => Math.abs(n.evaluate(ctx))\n    ],\n    'round': [\n        NumberType,\n        [NumberType],\n        (ctx, [n]) => {\n            const v = n.evaluate(ctx);\n            // Javascript's Math.round() rounds towards +Infinity for halfway\n            // values, even when they're negative. It's more common to round\n            // away from 0 (e.g., this is what python and C++ do)\n            return v < 0 ? -Math.round(-v) : Math.round(v);\n        }\n    ],\n    'floor': [\n        NumberType,\n        [NumberType],\n        (ctx, [n]) => Math.floor(n.evaluate(ctx))\n    ],\n    'ceil': [\n        NumberType,\n        [NumberType],\n        (ctx, [n]) => Math.ceil(n.evaluate(ctx))\n    ],\n    'filter-==': [\n        BooleanType,\n        [StringType, ValueType],\n        (ctx, [k, v]) => ctx.properties()[(k     ).value] === (v     ).value\n    ],\n    'filter-id-==': [\n        BooleanType,\n        [ValueType],\n        (ctx, [v]) => ctx.id() === (v     ).value\n    ],\n    'filter-type-==': [\n        BooleanType,\n        [StringType],\n        (ctx, [v]) => ctx.geometryType() === (v     ).value\n    ],\n    'filter-<': [\n        BooleanType,\n        [StringType, ValueType],\n        (ctx, [k, v]) => {\n            const a = ctx.properties()[(k     ).value];\n            const b = (v     ).value;\n            return typeof a === typeof b && a < b;\n        }\n    ],\n    'filter-id-<': [\n        BooleanType,\n        [ValueType],\n        (ctx, [v]) => {\n            const a = ctx.id();\n            const b = (v     ).value;\n            return typeof a === typeof b && a < b;\n        }\n    ],\n    'filter->': [\n        BooleanType,\n        [StringType, ValueType],\n        (ctx, [k, v]) => {\n            const a = ctx.properties()[(k     ).value];\n            const b = (v     ).value;\n            return typeof a === typeof b && a > b;\n        }\n    ],\n    'filter-id->': [\n        BooleanType,\n        [ValueType],\n        (ctx, [v]) => {\n            const a = ctx.id();\n            const b = (v     ).value;\n            return typeof a === typeof b && a > b;\n        }\n    ],\n    'filter-<=': [\n        BooleanType,\n        [StringType, ValueType],\n        (ctx, [k, v]) => {\n            const a = ctx.properties()[(k     ).value];\n            const b = (v     ).value;\n            return typeof a === typeof b && a <= b;\n        }\n    ],\n    'filter-id-<=': [\n        BooleanType,\n        [ValueType],\n        (ctx, [v]) => {\n            const a = ctx.id();\n            const b = (v     ).value;\n            return typeof a === typeof b && a <= b;\n        }\n    ],\n    'filter->=': [\n        BooleanType,\n        [StringType, ValueType],\n        (ctx, [k, v]) => {\n            const a = ctx.properties()[(k     ).value];\n            const b = (v     ).value;\n            return typeof a === typeof b && a >= b;\n        }\n    ],\n    'filter-id->=': [\n        BooleanType,\n        [ValueType],\n        (ctx, [v]) => {\n            const a = ctx.id();\n            const b = (v     ).value;\n            return typeof a === typeof b && a >= b;\n        }\n    ],\n    'filter-has': [\n        BooleanType,\n        [ValueType],\n        (ctx, [k]) => (k     ).value in ctx.properties()\n    ],\n    'filter-has-id': [\n        BooleanType,\n        [],\n        (ctx) => (ctx.id() !== null && ctx.id() !== undefined)\n    ],\n    'filter-type-in': [\n        BooleanType,\n        [array(StringType)],\n        (ctx, [v]) => (v     ).value.indexOf(ctx.geometryType()) >= 0\n    ],\n    'filter-id-in': [\n        BooleanType,\n        [array(ValueType)],\n        (ctx, [v]) => (v     ).value.indexOf(ctx.id()) >= 0\n    ],\n    'filter-in-small': [\n        BooleanType,\n        [StringType, array(ValueType)],\n        // assumes v is an array literal\n        (ctx, [k, v]) => (v     ).value.indexOf(ctx.properties()[(k     ).value]) >= 0\n    ],\n    'filter-in-large': [\n        BooleanType,\n        [StringType, array(ValueType)],\n        // assumes v is a array literal with values sorted in ascending order and of a single type\n        (ctx, [k, v]) => binarySearch(ctx.properties()[(k     ).value], (v     ).value, 0, (v     ).value.length - 1)\n    ],\n    'all': {\n        type: BooleanType,\n        overloads: [\n            [\n                [BooleanType, BooleanType],\n                (ctx, [a, b]) => a.evaluate(ctx) && b.evaluate(ctx)\n            ],\n            [\n                varargs(BooleanType),\n                (ctx, args) => {\n                    for (const arg of args) {\n                        if (!arg.evaluate(ctx))\n                            return false;\n                    }\n                    return true;\n                }\n            ]\n        ]\n    },\n    'any': {\n        type: BooleanType,\n        overloads: [\n            [\n                [BooleanType, BooleanType],\n                (ctx, [a, b]) => a.evaluate(ctx) || b.evaluate(ctx)\n            ],\n            [\n                varargs(BooleanType),\n                (ctx, args) => {\n                    for (const arg of args) {\n                        if (arg.evaluate(ctx))\n                            return true;\n                    }\n                    return false;\n                }\n            ]\n        ]\n    },\n    '!': [\n        BooleanType,\n        [BooleanType],\n        (ctx, [b]) => !b.evaluate(ctx)\n    ],\n    'is-supported-script': [\n        BooleanType,\n        [StringType],\n        // At parse time this will always return true, so we need to exclude this expression with isGlobalPropertyConstant\n        (ctx, [s]) => {\n            const isSupportedScript = ctx.globals && ctx.globals.isSupportedScript;\n            if (isSupportedScript) {\n                return isSupportedScript(s.evaluate(ctx));\n            }\n            return true;\n        }\n    ],\n    'upcase': [\n        StringType,\n        [StringType],\n        (ctx, [s]) => s.evaluate(ctx).toUpperCase()\n    ],\n    'downcase': [\n        StringType,\n        [StringType],\n        (ctx, [s]) => s.evaluate(ctx).toLowerCase()\n    ],\n    'concat': [\n        StringType,\n        varargs(ValueType),\n        (ctx, args) => args.map(arg => valueToString(arg.evaluate(ctx))).join('')\n    ],\n    'resolved-locale': [\n        StringType,\n        [CollatorType],\n        (ctx, [collator]) => collator.evaluate(ctx).resolvedLocale()\n    ]\n});\n\nexport default expressions;\n","//      \n\n/**\n * A type used for returning and propagating errors. The first element of the union\n * represents success and contains a value, and the second represents an error and\n * contains an error value.\n * @private\n */\n                          \n                                       \n                                      \n\nexport function success      (value   )               {\n    return {result: 'success', value};\n}\n\nexport function error      (value   )               {\n    return {result: 'error', value};\n}\n","//      \n\n                                                                 \n\nexport function supportsPropertyExpression(spec                            )          {\n    return spec['property-type'] === 'data-driven' || spec['property-type'] === 'cross-faded-data-driven';\n}\n\nexport function supportsZoomExpression(spec                            )          {\n    return !!spec.expression && spec.expression.parameters.indexOf('zoom') > -1;\n}\n\nexport function supportsInterpolation(spec                            )          {\n    return !!spec.expression && spec.expression.interpolated;\n}\n","//      \n\nexport default function getType(val       )         {\n    if (val instanceof Number) {\n        return 'number';\n    } else if (val instanceof String) {\n        return 'string';\n    } else if (val instanceof Boolean) {\n        return 'boolean';\n    } else if (Array.isArray(val)) {\n        return 'array';\n    } else if (val === null) {\n        return 'null';\n    } else {\n        return typeof val;\n    }\n}\n","\nimport * as colorSpaces from '../util/color_spaces.js';\nimport Color from '../util/color.js';\nimport extend from '../util/extend.js';\nimport getType from '../util/get_type.js';\nimport * as interpolate from '../util/interpolate.js';\nimport Interpolate from '../expression/definitions/interpolate.js';\nimport Formatted from '../expression/types/formatted.js';\nimport ResolvedImage from '../expression/types/resolved_image.js';\nimport {supportsInterpolation} from '../util/properties.js';\nimport {findStopLessThanOrEqualTo} from '../expression/stops.js';\n\nexport function isFunction(value) {\n    return typeof value === 'object' && value !== null && !Array.isArray(value);\n}\n\nfunction identityFunction(x) {\n    return x;\n}\n\nexport function createFunction(parameters, propertySpec) {\n    const isColor = propertySpec.type === 'color';\n    const zoomAndFeatureDependent = parameters.stops && typeof parameters.stops[0][0] === 'object';\n    const featureDependent = zoomAndFeatureDependent || parameters.property !== undefined;\n    const zoomDependent = zoomAndFeatureDependent || !featureDependent;\n    const type = parameters.type || (supportsInterpolation(propertySpec) ? 'exponential' : 'interval');\n\n    if (isColor) {\n        parameters = extend({}, parameters);\n\n        if (parameters.stops) {\n            parameters.stops = parameters.stops.map((stop) => {\n                return [stop[0], Color.parse(stop[1])];\n            });\n        }\n\n        if (parameters.default) {\n            parameters.default = Color.parse(parameters.default);\n        } else {\n            parameters.default = Color.parse(propertySpec.default);\n        }\n    }\n\n    if (parameters.colorSpace && parameters.colorSpace !== 'rgb' && !colorSpaces[parameters.colorSpace]) { // eslint-disable-line import/namespace\n        throw new Error(`Unknown color space: ${parameters.colorSpace}`);\n    }\n\n    let innerFun;\n    let hashedStops;\n    let categoricalKeyType;\n    if (type === 'exponential') {\n        innerFun = evaluateExponentialFunction;\n    } else if (type === 'interval') {\n        innerFun = evaluateIntervalFunction;\n    } else if (type === 'categorical') {\n        innerFun = evaluateCategoricalFunction;\n\n        // For categorical functions, generate an Object as a hashmap of the stops for fast searching\n        hashedStops = Object.create(null);\n        for (const stop of parameters.stops) {\n            hashedStops[stop[0]] = stop[1];\n        }\n\n        // Infer key type based on first stop key-- used to encforce strict type checking later\n        categoricalKeyType = typeof parameters.stops[0][0];\n\n    } else if (type === 'identity') {\n        innerFun = evaluateIdentityFunction;\n    } else {\n        throw new Error(`Unknown function type \"${type}\"`);\n    }\n\n    if (zoomAndFeatureDependent) {\n        const featureFunctions = {};\n        const zoomStops = [];\n        for (let s = 0; s < parameters.stops.length; s++) {\n            const stop = parameters.stops[s];\n            const zoom = stop[0].zoom;\n            if (featureFunctions[zoom] === undefined) {\n                featureFunctions[zoom] = {\n                    zoom,\n                    type: parameters.type,\n                    property: parameters.property,\n                    default: parameters.default,\n                    stops: []\n                };\n                zoomStops.push(zoom);\n            }\n            featureFunctions[zoom].stops.push([stop[0].value, stop[1]]);\n        }\n\n        const featureFunctionStops = [];\n        for (const z of zoomStops) {\n            featureFunctionStops.push([featureFunctions[z].zoom, createFunction(featureFunctions[z], propertySpec)]);\n        }\n\n        const interpolationType = {name: 'linear'};\n        return {\n            kind: 'composite',\n            interpolationType,\n            interpolationFactor: Interpolate.interpolationFactor.bind(undefined, interpolationType),\n            zoomStops: featureFunctionStops.map(s => s[0]),\n            evaluate({zoom}, properties) {\n                return evaluateExponentialFunction({\n                    stops: featureFunctionStops,\n                    base: parameters.base\n                }, propertySpec, zoom).evaluate(zoom, properties);\n            }\n        };\n    } else if (zoomDependent) {\n        const interpolationType = type === 'exponential' ?\n            {name: 'exponential', base: parameters.base !== undefined ? parameters.base : 1} : null;\n        return {\n            kind: 'camera',\n            interpolationType,\n            interpolationFactor: Interpolate.interpolationFactor.bind(undefined, interpolationType),\n            zoomStops: parameters.stops.map(s => s[0]),\n            evaluate: ({zoom}) => innerFun(parameters, propertySpec, zoom, hashedStops, categoricalKeyType)\n        };\n    } else {\n        return {\n            kind: 'source',\n            evaluate(_, feature) {\n                const value = feature && feature.properties ? feature.properties[parameters.property] : undefined;\n                if (value === undefined) {\n                    return coalesce(parameters.default, propertySpec.default);\n                }\n                return innerFun(parameters, propertySpec, value, hashedStops, categoricalKeyType);\n            }\n        };\n    }\n}\n\nfunction coalesce(a, b, c) {\n    if (a !== undefined) return a;\n    if (b !== undefined) return b;\n    if (c !== undefined) return c;\n}\n\nfunction evaluateCategoricalFunction(parameters, propertySpec, input, hashedStops, keyType) {\n    const evaluated = typeof input === keyType ? hashedStops[input] : undefined; // Enforce strict typing on input\n    return coalesce(evaluated, parameters.default, propertySpec.default);\n}\n\nfunction evaluateIntervalFunction(parameters, propertySpec, input) {\n    // Edge cases\n    if (getType(input) !== 'number') return coalesce(parameters.default, propertySpec.default);\n    const n = parameters.stops.length;\n    if (n === 1) return parameters.stops[0][1];\n    if (input <= parameters.stops[0][0]) return parameters.stops[0][1];\n    if (input >= parameters.stops[n - 1][0]) return parameters.stops[n - 1][1];\n\n    const index = findStopLessThanOrEqualTo(parameters.stops.map((stop) => stop[0]), input);\n\n    return parameters.stops[index][1];\n}\n\nfunction evaluateExponentialFunction(parameters, propertySpec, input) {\n    const base = parameters.base !== undefined ? parameters.base : 1;\n\n    // Edge cases\n    if (getType(input) !== 'number') return coalesce(parameters.default, propertySpec.default);\n    const n = parameters.stops.length;\n    if (n === 1) return parameters.stops[0][1];\n    if (input <= parameters.stops[0][0]) return parameters.stops[0][1];\n    if (input >= parameters.stops[n - 1][0]) return parameters.stops[n - 1][1];\n\n    const index = findStopLessThanOrEqualTo(parameters.stops.map((stop) => stop[0]), input);\n    const t = interpolationFactor(\n        input, base,\n        parameters.stops[index][0],\n        parameters.stops[index + 1][0]);\n\n    const outputLower = parameters.stops[index][1];\n    const outputUpper = parameters.stops[index + 1][1];\n    let interp = interpolate[propertySpec.type] || identityFunction; // eslint-disable-line import/namespace\n\n    if (parameters.colorSpace && parameters.colorSpace !== 'rgb') {\n        const colorspace = colorSpaces[parameters.colorSpace]; // eslint-disable-line import/namespace\n        interp = (a, b) => colorspace.reverse(colorspace.interpolate(colorspace.forward(a), colorspace.forward(b), t));\n    }\n\n    if (typeof outputLower.evaluate === 'function') {\n        return {\n            evaluate(...args) {\n                const evaluatedLower = outputLower.evaluate.apply(undefined, args);\n                const evaluatedUpper = outputUpper.evaluate.apply(undefined, args);\n                // Special case for fill-outline-color, which has no spec default.\n                if (evaluatedLower === undefined || evaluatedUpper === undefined) {\n                    return undefined;\n                }\n                return interp(evaluatedLower, evaluatedUpper, t);\n            }\n        };\n    }\n\n    return interp(outputLower, outputUpper, t);\n}\n\nfunction evaluateIdentityFunction(parameters, propertySpec, input) {\n    if (propertySpec.type === 'color') {\n        input = Color.parse(input);\n    } else if (propertySpec.type === 'formatted') {\n        input = Formatted.fromString(input.toString());\n    } else if (propertySpec.type === 'resolvedImage') {\n        input = ResolvedImage.fromString(input.toString());\n    } else if (getType(input) !== propertySpec.type && (propertySpec.type !== 'enum' || !propertySpec.values[input])) {\n        input = undefined;\n    }\n    return coalesce(input, parameters.default, propertySpec.default);\n}\n\n/**\n * Returns a ratio that can be used to interpolate between exponential function\n * stops.\n *\n * How it works:\n * Two consecutive stop values define a (scaled and shifted) exponential\n * function `f(x) = a * base^x + b`, where `base` is the user-specified base,\n * and `a` and `b` are constants affording sufficient degrees of freedom to fit\n * the function to the given stops.\n *\n * Here's a bit of algebra that lets us compute `f(x)` directly from the stop\n * values without explicitly solving for `a` and `b`:\n *\n * First stop value: `f(x0) = y0 = a * base^x0 + b`\n * Second stop value: `f(x1) = y1 = a * base^x1 + b`\n * => `y1 - y0 = a(base^x1 - base^x0)`\n * => `a = (y1 - y0)/(base^x1 - base^x0)`\n *\n * Desired value: `f(x) = y = a * base^x + b`\n * => `f(x) = y0 + a * (base^x - base^x0)`\n *\n * From the above, we can replace the `a` in `a * (base^x - base^x0)` and do a\n * little algebra:\n * ```\n * a * (base^x - base^x0) = (y1 - y0)/(base^x1 - base^x0) * (base^x - base^x0)\n *                     = (y1 - y0) * (base^x - base^x0) / (base^x1 - base^x0)\n * ```\n *\n * If we let `(base^x - base^x0) / (base^x1 base^x0)`, then we have\n * `f(x) = y0 + (y1 - y0) * ratio`.  In other words, `ratio` may be treated as\n * an interpolation factor between the two stops' output values.\n *\n * (Note: a slightly different form for `ratio`,\n * `(base^(x-x0) - 1) / (base^(x1-x0) - 1) `, is equivalent, but requires fewer\n * expensive `Math.pow()` operations.)\n *\n * @private\n */\nfunction interpolationFactor(input, base, lowerValue, upperValue) {\n    const difference = upperValue - lowerValue;\n    const progress = input - lowerValue;\n\n    if (difference === 0) {\n        return 0;\n    } else if (base === 1) {\n        return progress / difference;\n    } else {\n        return (Math.pow(base, progress) - 1) / (Math.pow(base, difference) - 1);\n    }\n}\n","//      \n\nimport assert from 'assert';\n\nimport extend from '../util/extend.js';\nimport ParsingError from './parsing_error.js';\nimport ParsingContext from './parsing_context.js';\nimport EvaluationContext from './evaluation_context.js';\nimport CompoundExpression from './compound_expression.js';\nimport Step from './definitions/step.js';\nimport Interpolate from './definitions/interpolate.js';\nimport Coalesce from './definitions/coalesce.js';\nimport Let from './definitions/let.js';\nimport definitions from './definitions/index.js';\nimport * as isConstant from './is_constant.js';\nimport RuntimeError from './runtime_error.js';\nimport {success, error} from '../util/result.js';\nimport {supportsPropertyExpression, supportsZoomExpression, supportsInterpolation} from '../util/properties.js';\n\n                                                     \n                                       \n                                                \n                                                                 \n                                              \n                                                                    \n                                                            \n                                                           \n                                                \n                                                             \n                                                                    \n\n                       \n                                                                                                                          \n                        \n                                    \n                                                                             \n                                   \n  \n\n                                              \n\n                                          \n                 \n                   \n                            \n                          \n                               \n                                               \n                       \n   \n\nexport class StyleExpression {\n                           \n\n                                  \n                         \n                                              \n                                     \n\n    constructor(expression            , propertySpec                             ) {\n        this.expression = expression;\n        this._warningHistory = {};\n        this._evaluator = new EvaluationContext();\n        this._defaultValue = propertySpec ? getDefaultValue(propertySpec) : null;\n        this._enumValues = propertySpec && propertySpec.type === 'enum' ? propertySpec.values : null;\n    }\n\n    evaluateWithoutErrorHandling(globals                  , feature          , featureState               , canonical                  , availableImages                , formattedSection                   , featureTileCoord        , featureDistanceData                      )      {\n        this._evaluator.globals = globals;\n        this._evaluator.feature = feature;\n        this._evaluator.featureState = featureState;\n        this._evaluator.canonical = canonical || null;\n        this._evaluator.availableImages = availableImages || null;\n        this._evaluator.formattedSection = formattedSection;\n        this._evaluator.featureTileCoord = featureTileCoord || null;\n        this._evaluator.featureDistanceData = featureDistanceData || null;\n\n        return this.expression.evaluate(this._evaluator);\n    }\n\n    evaluate(globals                  , feature          , featureState               , canonical                  , availableImages                , formattedSection                   , featureTileCoord        , featureDistanceData                      )      {\n        this._evaluator.globals = globals;\n        this._evaluator.feature = feature || null;\n        this._evaluator.featureState = featureState || null;\n        this._evaluator.canonical = canonical || null;\n        this._evaluator.availableImages = availableImages || null;\n        this._evaluator.formattedSection = formattedSection || null;\n        this._evaluator.featureTileCoord = featureTileCoord || null;\n        this._evaluator.featureDistanceData = featureDistanceData || null;\n\n        try {\n            const val = this.expression.evaluate(this._evaluator);\n            // eslint-disable-next-line no-self-compare\n            if (val === null || val === undefined || (typeof val === 'number' && val !== val)) {\n                return this._defaultValue;\n            }\n            if (this._enumValues && !(val in this._enumValues)) {\n                throw new RuntimeError(`Expected value to be one of ${Object.keys(this._enumValues).map(v => JSON.stringify(v)).join(', ')}, but found ${JSON.stringify(val)} instead.`);\n            }\n            return val;\n        } catch (e) {\n            if (!this._warningHistory[e.message]) {\n                this._warningHistory[e.message] = true;\n                if (typeof console !== 'undefined') {\n                    console.warn(e.message);\n                }\n            }\n            return this._defaultValue;\n        }\n    }\n}\n\nexport function isExpression(expression       )          {\n    return Array.isArray(expression) && expression.length > 0 &&\n        typeof expression[0] === 'string' && expression[0] in definitions;\n}\n\n/**\n * Parse and typecheck the given style spec JSON expression.  If\n * options.defaultValue is provided, then the resulting StyleExpression's\n * `evaluate()` method will handle errors by logging a warning (once per\n * message) and returning the default value.  Otherwise, it will throw\n * evaluation errors.\n *\n * @private\n */\nexport function createExpression(expression       , propertySpec                             )                                               {\n    const parser = new ParsingContext(definitions, [], propertySpec ? getExpectedType(propertySpec) : undefined);\n\n    // For string-valued properties, coerce to string at the top level rather than asserting.\n    const parsed = parser.parse(expression, undefined, undefined, undefined,\n        propertySpec && propertySpec.type === 'string' ? {typeAnnotation: 'coerce'} : undefined);\n\n    if (!parsed) {\n        assert(parser.errors.length > 0);\n        return error(parser.errors);\n    }\n\n    return success(new StyleExpression(parsed, propertySpec));\n}\n\nexport class ZoomConstantExpression                       {\n               \n                              \n                                      \n\n    constructor(kind      , expression                 ) {\n        this.kind = kind;\n        this._styleExpression = expression;\n        this.isStateDependent = kind !== ('constant'                ) && !isConstant.isStateConstant(expression.expression);\n    }\n\n    evaluateWithoutErrorHandling(globals                  , feature          , featureState               , canonical                  , availableImages                , formattedSection                   )      {\n        return this._styleExpression.evaluateWithoutErrorHandling(globals, feature, featureState, canonical, availableImages, formattedSection);\n    }\n\n    evaluate(globals                  , feature          , featureState               , canonical                  , availableImages                , formattedSection                   )      {\n        return this._styleExpression.evaluate(globals, feature, featureState, canonical, availableImages, formattedSection);\n    }\n}\n\nexport class ZoomDependentExpression                       {\n               \n                             \n                              \n\n                                      \n                                          \n\n    constructor(kind      , expression                 , zoomStops               , interpolationType                    ) {\n        this.kind = kind;\n        this.zoomStops = zoomStops;\n        this._styleExpression = expression;\n        this.isStateDependent = kind !== ('camera'                ) && !isConstant.isStateConstant(expression.expression);\n        this.interpolationType = interpolationType;\n    }\n\n    evaluateWithoutErrorHandling(globals                  , feature          , featureState               , canonical                  , availableImages                , formattedSection                   )      {\n        return this._styleExpression.evaluateWithoutErrorHandling(globals, feature, featureState, canonical, availableImages, formattedSection);\n    }\n\n    evaluate(globals                  , feature          , featureState               , canonical                  , availableImages                , formattedSection                   )      {\n        return this._styleExpression.evaluate(globals, feature, featureState, canonical, availableImages, formattedSection);\n    }\n\n    interpolationFactor(input        , lower        , upper        )         {\n        if (this.interpolationType) {\n            return Interpolate.interpolationFactor(this.interpolationType, input, lower, upper);\n        } else {\n            return 0;\n        }\n    }\n}\n\n                                  \n                     \n                                                                                                                                                                \n \n\n                                \n                   \n                              \n                                                                                                                                                                                                     \n  \n\n                                \n                   \n                                                                                                                                                                \n                                                                                  \n                             \n                                         \n  \n\n                                   \n                      \n                              \n                                                                                                                                                                                                     \n                                                                                  \n                             \n                                         \n  \n\n                                     \n                        \n                      \n                      \n                          \n\nexport function createPropertyExpression(expression       , propertySpec                            )                                                       {\n    expression = createExpression(expression, propertySpec);\n    if (expression.result === 'error') {\n        return expression;\n    }\n\n    const parsed = expression.value.expression;\n\n    const isFeatureConstant = isConstant.isFeatureConstant(parsed);\n    if (!isFeatureConstant && !supportsPropertyExpression(propertySpec)) {\n        return error([new ParsingError('', 'data expressions not supported')]);\n    }\n\n    const isZoomConstant = isConstant.isGlobalPropertyConstant(parsed, ['zoom', 'pitch', 'distance-from-center']);\n    if (!isZoomConstant && !supportsZoomExpression(propertySpec)) {\n        return error([new ParsingError('', 'zoom expressions not supported')]);\n    }\n\n    const zoomCurve = findZoomCurve(parsed);\n    if (!zoomCurve && !isZoomConstant) {\n        return error([new ParsingError('', '\"zoom\" expression may only be used as input to a top-level \"step\" or \"interpolate\" expression.')]);\n    } else if (zoomCurve instanceof ParsingError) {\n        return error([zoomCurve]);\n    } else if (zoomCurve instanceof Interpolate && !supportsInterpolation(propertySpec)) {\n        return error([new ParsingError('', '\"interpolate\" expressions cannot be used with this property')]);\n    }\n\n    if (!zoomCurve) {\n        return success(isFeatureConstant ?\n            (new ZoomConstantExpression('constant', expression.value)                    ) :\n            (new ZoomConstantExpression('source', expression.value)                  ));\n    }\n\n    const interpolationType = zoomCurve instanceof Interpolate ? zoomCurve.interpolation : undefined;\n\n    return success(isFeatureConstant ?\n        (new ZoomDependentExpression('camera', expression.value, zoomCurve.labels, interpolationType)                  ) :\n        (new ZoomDependentExpression('composite', expression.value, zoomCurve.labels, interpolationType)                     ));\n}\n\nimport {isFunction, createFunction} from '../function/index.js';\nimport {Color} from './values.js';\n\n// serialization wrapper for old-style stop functions normalized to the\n// expression interface\nexport class StylePropertyFunction    {\n                                               \n                                               \n\n                         \n                                                                    \n                                                                                  \n                              \n\n    constructor(parameters                               , specification                            ) {\n        this._parameters = parameters;\n        this._specification = specification;\n        extend(this, createFunction(this._parameters, this._specification));\n    }\n\n    static deserialize(serialized                                                                                          )                           {\n        return new StylePropertyFunction(serialized._parameters, serialized._specification);\n    }\n\n    static serialize(input                          )                                                                                           {\n        return {\n            _parameters: input._parameters,\n            _specification: input._specification\n        };\n    }\n}\n\nexport function normalizePropertyExpression   (value                               , specification                            )                          {\n    if (isFunction(value)) {\n        return (new StylePropertyFunction(value, specification)     );\n\n    } else if (isExpression(value)) {\n        const expression = createPropertyExpression(value, specification);\n        if (expression.result === 'error') {\n            // this should have been caught in validation\n            throw new Error(expression.value.map(err => `${err.key}: ${err.message}`).join(', '));\n        }\n        return expression.value;\n\n    } else {\n        let constant      = value;\n        if (typeof value === 'string' && specification.type === 'color') {\n            constant = Color.parse(value);\n        }\n        return {\n            kind: 'constant',\n            evaluate: () => constant\n        };\n    }\n}\n\n// Zoom-dependent expressions may only use [\"zoom\"] as the input to a top-level \"step\" or \"interpolate\"\n// expression (collectively referred to as a \"curve\"). The curve may be wrapped in one or more \"let\" or\n// \"coalesce\" expressions.\nfunction findZoomCurve(expression            )                                           {\n    let result = null;\n    if (expression instanceof Let) {\n        result = findZoomCurve(expression.result);\n\n    } else if (expression instanceof Coalesce) {\n        for (const arg of expression.args) {\n            result = findZoomCurve(arg);\n            if (result) {\n                break;\n            }\n        }\n\n    } else if ((expression instanceof Step || expression instanceof Interpolate) &&\n        expression.input instanceof CompoundExpression &&\n        expression.input.name === 'zoom') {\n\n        result = expression;\n    }\n\n    if (result instanceof ParsingError) {\n        return result;\n    }\n\n    expression.eachChild((child) => {\n        const childResult = findZoomCurve(child);\n        if (childResult instanceof ParsingError) {\n            result = childResult;\n        } else if (!result && childResult) {\n            result = new ParsingError('', '\"zoom\" expression may only be used as input to a top-level \"step\" or \"interpolate\" expression.');\n        } else if (result && childResult && result !== childResult) {\n            result = new ParsingError('', 'Only one zoom-based \"step\" or \"interpolate\" subexpression may be used in an expression.');\n        }\n    });\n\n    return result;\n}\n\nimport {ColorType, StringType, NumberType, BooleanType, ValueType, FormattedType, ResolvedImageType, array} from './types.js';\n\nfunction getExpectedType(spec                            )       {\n    const types = {\n        color: ColorType,\n        string: StringType,\n        number: NumberType,\n        enum: StringType,\n        boolean: BooleanType,\n        formatted: FormattedType,\n        resolvedImage: ResolvedImageType\n    };\n\n    if (spec.type === 'array') {\n        return array(types[spec.value] || ValueType, spec.length);\n    }\n\n    return types[spec.type];\n}\n\nfunction getDefaultValue(spec                            )        {\n    if (spec.type === 'color' && (isFunction(spec.default) || Array.isArray(spec.default))) {\n        // Special case for heatmap-color: it uses the 'default:' to define a\n        // default color ramp, but createExpression expects a simple value to fall\n        // back to in case of runtime errors\n        return new Color(0, 0, 0, 0);\n    } else if (spec.type === 'color') {\n        return Color.parse(spec.default) || null;\n    } else if (spec.default === undefined) {\n        return null;\n    } else {\n        return spec.default;\n    }\n}\n","//      \n\n// Turn jsonlint-lines-primitives objects into primitive objects\nexport function unbundle(value       )        {\n    if (value instanceof Number || value instanceof String || value instanceof Boolean) {\n        return value.valueOf();\n    } else {\n        return value;\n    }\n}\n\nexport function deepUnbundle(value       )        {\n    if (Array.isArray(value)) {\n        return value.map(deepUnbundle);\n    } else if (value instanceof Object && !(value instanceof Number || value instanceof String || value instanceof Boolean)) {\n        const unbundledValue                           = {};\n        for (const key in value) {\n            unbundledValue[key] = deepUnbundle(value[key]);\n        }\n        return unbundledValue;\n    }\n\n    return unbundle(value);\n}\n","//      \n\nimport spec from './v8.json';\n\n                                         \n\nexport default spec;\n","//      \n\nimport {createExpression} from '../expression/index.js';\nimport {isFeatureConstant} from '../expression/is_constant.js';\nimport {deepUnbundle} from '../util/unbundle_jsonlint.js';\nimport latest from '../reference/latest.js';\n                                                                      \n                                                             \n                                                \n\n                                                                                                       \n                                                                                                                                                                                                   \n                                                                                                                                      \n\nexport default createFilter;\nexport {isExpressionFilter, isDynamicFilter, extractStaticFilter};\n\nfunction isExpressionFilter(filter     )          {\n    if (filter === true || filter === false) {\n        return true;\n    }\n\n    if (!Array.isArray(filter) || filter.length === 0) {\n        return false;\n    }\n    switch (filter[0]) {\n    case 'has':\n        return filter.length >= 2 && filter[1] !== '$id' && filter[1] !== '$type';\n\n    case 'in':\n        return filter.length >= 3 && (typeof filter[1] !== 'string' || Array.isArray(filter[2]));\n\n    case '!in':\n    case '!has':\n    case 'none':\n        return false;\n\n    case '==':\n    case '!=':\n    case '>':\n    case '>=':\n    case '<':\n    case '<=':\n        return filter.length !== 3 || (Array.isArray(filter[1]) || Array.isArray(filter[2]));\n\n    case 'any':\n    case 'all':\n        for (const f of filter.slice(1)) {\n            if (!isExpressionFilter(f) && typeof f !== 'boolean') {\n                return false;\n            }\n        }\n        return true;\n\n    default:\n        return true;\n    }\n}\n\n/**\n * Given a filter expressed as nested arrays, return a new function\n * that evaluates whether a given feature (with a .properties or .tags property)\n * passes its test.\n *\n * @private\n * @param {Array} filter mapbox gl filter\n * @param {string} layerType the type of the layer this filter will be applied to.\n * @returns {Function} filter-evaluating function\n */\nfunction createFilter(filter     , layerType          = 'fill')                {\n    if (filter === null || filter === undefined) {\n        return {filter: () => true, needGeometry: false, needFeature: false};\n    }\n\n    if (!isExpressionFilter(filter)) {\n        filter = convertFilter(filter);\n    }\n    const filterExp = ((filter     )                             );\n\n    let staticFilter = true;\n    try {\n        staticFilter = extractStaticFilter(filterExp);\n    } catch (e) {\n        console.warn(\n`Failed to extract static filter. Filter will continue working, but at higher memory usage and slower framerate.\nThis is most likely a bug, please report this via https://github.com/mapbox/mapbox-gl-js/issues/new?assignees=&labels=&template=Bug_report.md\nand paste the contents of this message in the report.\nThank you!\nFilter Expression:\n${JSON.stringify(filterExp, null, 2)}\n        `);\n    }\n\n    // Compile the static component of the filter\n    const filterSpec = latest[`filter_${layerType}`];\n    const compiledStaticFilter = createExpression(staticFilter, filterSpec);\n\n    let filterFunc = null;\n    if (compiledStaticFilter.result === 'error') {\n        throw new Error(compiledStaticFilter.value.map(err => `${err.key}: ${err.message}`).join(', '));\n    } else {\n        filterFunc = (globalProperties                  , feature         , canonical                  ) => compiledStaticFilter.value.evaluate(globalProperties, feature, {}, canonical);\n    }\n\n    // If the static component is not equal to the entire filter then we have a dynamic component\n    // Compile the dynamic component separately\n    let dynamicFilterFunc = null;\n    let needFeature = null;\n    if (staticFilter !== filterExp) {\n        const compiledDynamicFilter = createExpression(filterExp, filterSpec);\n\n        if (compiledDynamicFilter.result === 'error') {\n            throw new Error(compiledDynamicFilter.value.map(err => `${err.key}: ${err.message}`).join(', '));\n        } else {\n            dynamicFilterFunc = (globalProperties                  , feature         , canonical                  , featureTileCoord        , featureDistanceData                      ) => compiledDynamicFilter.value.evaluate(globalProperties, feature, {}, canonical, undefined, undefined, featureTileCoord, featureDistanceData);\n            needFeature = !isFeatureConstant(compiledDynamicFilter.value.expression);\n        }\n    }\n\n    filterFunc = ((filterFunc     )                  );\n    const needGeometry = geometryNeeded(staticFilter);\n\n    return {\n        filter: filterFunc,\n        dynamicFilter: dynamicFilterFunc ? dynamicFilterFunc : undefined,\n        needGeometry,\n        needFeature: !!needFeature\n    };\n}\n\nfunction extractStaticFilter(filter     )      {\n    if (!isDynamicFilter(filter)) {\n        return filter;\n    }\n\n    // Shallow copy so we can replace expressions in-place\n    let result = deepUnbundle(filter);\n\n    // 1. Union branches\n    unionDynamicBranches(result);\n\n    // 2. Collapse dynamic conditions to  `true`\n    result = collapseDynamicBooleanExpressions(result);\n\n    return result;\n}\n\nfunction collapseDynamicBooleanExpressions(expression     )      {\n    if (!Array.isArray(expression)) {\n        return expression;\n    }\n\n    const collapsed = collapsedExpression(expression);\n    if (collapsed === true) {\n        return collapsed;\n    } else {\n        return collapsed.map((subExpression) => collapseDynamicBooleanExpressions(subExpression));\n    }\n}\n\n/**\n * Traverses the expression and replaces all instances of branching on a\n * `dynamic` conditional (such as `['pitch']` or `['distance-from-center']`)\n * into an `any` expression.\n * This ensures that all possible outcomes of a `dynamic` branch are considered\n * when evaluating the expression upfront during filtering.\n *\n * @param {Array<any>} filter the filter expression mutated in-place.\n */\nfunction unionDynamicBranches(filter     ) {\n    let isBranchingDynamically = false;\n    const branches = [];\n\n    if (filter[0] === 'case') {\n        for (let i = 1; i < filter.length - 1; i += 2) {\n            isBranchingDynamically = isBranchingDynamically || isDynamicFilter(filter[i]);\n            branches.push(filter[i + 1]);\n        }\n\n        branches.push(filter[filter.length - 1]);\n    } else if (filter[0] === 'match') {\n        isBranchingDynamically = isBranchingDynamically || isDynamicFilter(filter[1]);\n\n        for (let i = 2; i < filter.length - 1; i += 2) {\n            branches.push(filter[i + 1]);\n        }\n        branches.push(filter[filter.length - 1]);\n    } else if (filter[0] === 'step') {\n        isBranchingDynamically = isBranchingDynamically || isDynamicFilter(filter[1]);\n\n        for (let i = 1; i < filter.length - 1; i += 2) {\n            branches.push(filter[i + 1]);\n        }\n    }\n\n    if (isBranchingDynamically) {\n        filter.length = 0;\n        filter.push('any', ...branches);\n    }\n\n    // traverse and recurse into children\n    for (let i = 1; i < filter.length; i++) {\n        unionDynamicBranches(filter[i]);\n    }\n}\n\nfunction isDynamicFilter(filter     )          {\n    // Base Cases\n    if (!Array.isArray(filter)) {\n        return false;\n    }\n    if (isRootExpressionDynamic(filter[0])) {\n        return true;\n    }\n\n    for (let i = 1; i < filter.length; i++) {\n        const child = filter[i];\n        if (isDynamicFilter(child)) {\n            return true;\n        }\n    }\n\n    return false;\n}\n\nfunction isRootExpressionDynamic(expression        )          {\n    return expression === 'pitch' ||\n        expression === 'distance-from-center';\n}\n\nconst dynamicConditionExpressions = new Set([\n    'in',\n    '==',\n    '!=',\n    '>',\n    '>=',\n    '<',\n    '<=',\n    'to-boolean'\n]);\n\nfunction collapsedExpression(expression     )      {\n    if (dynamicConditionExpressions.has(expression[0])) {\n\n        for (let i = 1; i < expression.length; i++) {\n            const param = expression[i];\n            if (isDynamicFilter(param)) {\n                return true;\n            }\n        }\n    }\n    return expression;\n}\n\n// Comparison function to sort numbers and strings\nfunction compare(a, b) {\n    return a < b ? -1 : a > b ? 1 : 0;\n}\n\nfunction geometryNeeded(filter) {\n    if (!Array.isArray(filter)) return false;\n    if (filter[0] === 'within') return true;\n    for (let index = 1; index < filter.length; index++) {\n        if (geometryNeeded(filter[index])) return true;\n    }\n    return false;\n}\n\nfunction convertFilter(filter             )        {\n    if (!filter) return true;\n    const op = filter[0];\n    if (filter.length <= 1) return (op !== 'any');\n    const converted =\n        op === '==' ? convertComparisonOp(filter[1], filter[2], '==') :\n        op === '!=' ? convertNegation(convertComparisonOp(filter[1], filter[2], '==')) :\n        op === '<' ||\n        op === '>' ||\n        op === '<=' ||\n        op === '>=' ? convertComparisonOp(filter[1], filter[2], op) :\n        op === 'any' ? convertDisjunctionOp(filter.slice(1)) :\n        op === 'all' ? ['all'].concat(filter.slice(1).map(convertFilter)) :\n        op === 'none' ? ['all'].concat(filter.slice(1).map(convertFilter).map(convertNegation)) :\n        op === 'in' ? convertInOp(filter[1], filter.slice(2)) :\n        op === '!in' ? convertNegation(convertInOp(filter[1], filter.slice(2))) :\n        op === 'has' ? convertHasOp(filter[1]) :\n        op === '!has' ? convertNegation(convertHasOp(filter[1])) :\n        op === 'within' ? filter :\n        true;\n    return converted;\n}\n\nfunction convertComparisonOp(property        , value     , op        ) {\n    switch (property) {\n    case '$type':\n        return [`filter-type-${op}`, value];\n    case '$id':\n        return [`filter-id-${op}`, value];\n    default:\n        return [`filter-${op}`, property, value];\n    }\n}\n\nfunction convertDisjunctionOp(filters                   ) {\n    return ['any'].concat(filters.map(convertFilter));\n}\n\nfunction convertInOp(property        , values            ) {\n    if (values.length === 0) { return false; }\n    switch (property) {\n    case '$type':\n        return [`filter-type-in`, ['literal', values]];\n    case '$id':\n        return [`filter-id-in`, ['literal', values]];\n    default:\n        if (values.length > 200 && !values.some(v => typeof v !== typeof values[0])) {\n            return ['filter-in-large', property, ['literal', values.sort(compare)]];\n        } else {\n            return ['filter-in-small', property, ['literal', values]];\n        }\n    }\n}\n\nfunction convertHasOp(property        ) {\n    switch (property) {\n    case '$type':\n        return true;\n    case '$id':\n        return [`filter-has-id`];\n    default:\n        return [`filter-has`, property];\n    }\n}\n\nfunction convertNegation(filter       ) {\n    return ['!', filter];\n}\n","//      \nexport default ['type', 'source', 'source-layer', 'minzoom', 'maxzoom', 'filter', 'layout'];\n","//      \n\nimport refProperties from './util/ref_properties.js';\n\n                                                   \n\nfunction deref(layer                    , parent                    )                     {\n    const result = {};\n\n    for (const k in layer) {\n        if (k !== 'ref') {\n            result[k] = layer[k];\n        }\n    }\n\n    refProperties.forEach((k) => {\n        if (k in parent) {\n            result[k] = (parent     )[k];\n        }\n    });\n\n    return ((result     )                    );\n}\n\n/**\n * Given an array of layers, some of which may contain `ref` properties\n * whose value is the `id` of another property, return a new array where\n * such layers have been augmented with the 'type', 'source', etc. properties\n * from the parent layer, and the `ref` property has been removed.\n *\n * The input is not modified. The output may contain references to portions\n * of the input.\n *\n * @private\n * @param {Array<Layer>} layers\n * @returns {Array<Layer>}\n */\nexport default function derefLayers(layers                           )                            {\n    layers = layers.slice();\n\n    const map = Object.create(null);\n    for (let i = 0; i < layers.length; i++) {\n        map[layers[i].id] = layers[i];\n    }\n\n    for (let i = 0; i < layers.length; i++) {\n        if ('ref' in layers[i]) {\n            layers[i] = deref(layers[i], map[(layers[i]     ).ref]);\n        }\n    }\n\n    return layers;\n}\n","/**\n * @module ol/tilecoord\n */\n\n/**\n * An array of three numbers representing the location of a tile in a tile\n * grid. The order is `z` (zoom level), `x` (column), and `y` (row).\n * @typedef {Array<number>} TileCoord\n * @api\n */\n\n/**\n * @param {number} z Z.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {TileCoord} [tileCoord] Tile coordinate.\n * @return {TileCoord} Tile coordinate.\n */\nexport function createOrUpdate(z, x, y, tileCoord) {\n  if (tileCoord !== undefined) {\n    tileCoord[0] = z;\n    tileCoord[1] = x;\n    tileCoord[2] = y;\n    return tileCoord;\n  }\n  return [z, x, y];\n}\n\n/**\n * @param {number} z Z.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {string} Key.\n */\nexport function getKeyZXY(z, x, y) {\n  return z + '/' + x + '/' + y;\n}\n\n/**\n * Get the key for a tile coord.\n * @param {TileCoord} tileCoord The tile coord.\n * @return {string} Key.\n */\nexport function getKey(tileCoord) {\n  return getKeyZXY(tileCoord[0], tileCoord[1], tileCoord[2]);\n}\n\n/**\n * Get the tile cache key for a tile key obtained through `tile.getKey()`.\n * @param {string} tileKey The tile key.\n * @return {string} The cache key.\n */\nexport function getCacheKeyForTileKey(tileKey) {\n  const [z, x, y] = tileKey\n    .substring(tileKey.lastIndexOf('/') + 1, tileKey.length)\n    .split(',')\n    .map(Number);\n  return getKeyZXY(z, x, y);\n}\n\n/**\n * Get a tile coord given a key.\n * @param {string} key The tile coord key.\n * @return {TileCoord} The tile coord.\n */\nexport function fromKey(key) {\n  return key.split('/').map(Number);\n}\n\n/**\n * @param {TileCoord} tileCoord Tile coord.\n * @return {number} Hash.\n */\nexport function hash(tileCoord) {\n  return (tileCoord[1] << tileCoord[0]) + tileCoord[2];\n}\n\n/**\n * @param {TileCoord} tileCoord Tile coordinate.\n * @param {!import(\"./tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n * @return {boolean} Tile coordinate is within extent and zoom level range.\n */\nexport function withinExtentAndZ(tileCoord, tileGrid) {\n  const z = tileCoord[0];\n  const x = tileCoord[1];\n  const y = tileCoord[2];\n\n  if (tileGrid.getMinZoom() > z || z > tileGrid.getMaxZoom()) {\n    return false;\n  }\n  const tileRange = tileGrid.getFullTileRange(z);\n  if (!tileRange) {\n    return true;\n  }\n  return tileRange.containsXY(x, y);\n}\n","/**\n * @module ol/tileurlfunction\n */\nimport {assert} from './asserts.js';\nimport {modulo} from './math.js';\nimport {hash as tileCoordHash} from './tilecoord.js';\n\n/**\n * @param {string} template Template.\n * @param {import(\"./tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n * @return {import(\"./Tile.js\").UrlFunction} Tile URL function.\n */\nexport function createFromTemplate(template, tileGrid) {\n  const zRegEx = /\\{z\\}/g;\n  const xRegEx = /\\{x\\}/g;\n  const yRegEx = /\\{y\\}/g;\n  const dashYRegEx = /\\{-y\\}/g;\n  return (\n    /**\n     * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile Coordinate.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {import(\"./proj/Projection.js\").default} projection Projection.\n     * @return {string|undefined} Tile URL.\n     */\n    function (tileCoord, pixelRatio, projection) {\n      if (!tileCoord) {\n        return undefined;\n      }\n      return template\n        .replace(zRegEx, tileCoord[0].toString())\n        .replace(xRegEx, tileCoord[1].toString())\n        .replace(yRegEx, tileCoord[2].toString())\n        .replace(dashYRegEx, function () {\n          const z = tileCoord[0];\n          const range = tileGrid.getFullTileRange(z);\n          assert(range, 55); // The {-y} placeholder requires a tile grid with extent\n          const y = range.getHeight() - tileCoord[2] - 1;\n          return y.toString();\n        });\n    }\n  );\n}\n\n/**\n * @param {Array<string>} templates Templates.\n * @param {import(\"./tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n * @return {import(\"./Tile.js\").UrlFunction} Tile URL function.\n */\nexport function createFromTemplates(templates, tileGrid) {\n  const len = templates.length;\n  const tileUrlFunctions = new Array(len);\n  for (let i = 0; i < len; ++i) {\n    tileUrlFunctions[i] = createFromTemplate(templates[i], tileGrid);\n  }\n  return createFromTileUrlFunctions(tileUrlFunctions);\n}\n\n/**\n * @param {Array<import(\"./Tile.js\").UrlFunction>} tileUrlFunctions Tile URL Functions.\n * @return {import(\"./Tile.js\").UrlFunction} Tile URL function.\n */\nexport function createFromTileUrlFunctions(tileUrlFunctions) {\n  if (tileUrlFunctions.length === 1) {\n    return tileUrlFunctions[0];\n  }\n  return (\n    /**\n     * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile Coordinate.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {import(\"./proj/Projection.js\").default} projection Projection.\n     * @return {string|undefined} Tile URL.\n     */\n    function (tileCoord, pixelRatio, projection) {\n      if (!tileCoord) {\n        return undefined;\n      }\n      const h = tileCoordHash(tileCoord);\n      const index = modulo(h, tileUrlFunctions.length);\n      return tileUrlFunctions[index](tileCoord, pixelRatio, projection);\n    }\n  );\n}\n\n/**\n * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n * @param {number} pixelRatio Pixel ratio.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @return {string|undefined} Tile URL.\n */\nexport function nullTileUrlFunction(tileCoord, pixelRatio, projection) {\n  return undefined;\n}\n\n/**\n * @param {string} url URL.\n * @return {Array<string>} Array of urls.\n */\nexport function expandUrl(url) {\n  const urls = [];\n  let match = /\\{([a-z])-([a-z])\\}/.exec(url);\n  if (match) {\n    // char range\n    const startCharCode = match[1].charCodeAt(0);\n    const stopCharCode = match[2].charCodeAt(0);\n    let charCode;\n    for (charCode = startCharCode; charCode <= stopCharCode; ++charCode) {\n      urls.push(url.replace(match[0], String.fromCharCode(charCode)));\n    }\n    return urls;\n  }\n  match = /\\{(\\d+)-(\\d+)\\}/.exec(url);\n  if (match) {\n    // number range\n    const stop = parseInt(match[2], 10);\n    for (let i = parseInt(match[1], 10); i <= stop; i++) {\n      urls.push(url.replace(match[0], i.toString()));\n    }\n    return urls;\n  }\n  urls.push(url);\n  return urls;\n}\n","const mapboxBaseUrl = 'https://api.mapbox.com';\n\n/**\n * Gets the path from a mapbox:// URL.\n * @param {string} url The Mapbox URL.\n * @return {string} The path.\n * @private\n */\nexport function getMapboxPath(url) {\n  const startsWith = 'mapbox://';\n  if (url.indexOf(startsWith) !== 0) {\n    return '';\n  }\n  return url.slice(startsWith.length);\n}\n\n/**\n * Turns mapbox:// sprite URLs into resolvable URLs.\n * @param {string} url The sprite URL.\n * @param {string} token The access token.\n * @param {string} styleUrl The style URL.\n * @return {string} A resolvable URL.\n * @private\n */\nexport function normalizeSpriteUrl(url, token, styleUrl) {\n  const mapboxPath = getMapboxPath(url);\n  if (!mapboxPath) {\n    return decodeURI(new URL(url, styleUrl).href);\n  }\n  const startsWith = 'sprites/';\n  if (mapboxPath.indexOf(startsWith) !== 0) {\n    throw new Error(`unexpected sprites url: ${url}`);\n  }\n  const sprite = mapboxPath.slice(startsWith.length);\n\n  return `${mapboxBaseUrl}/styles/v1/${sprite}/sprite?access_token=${token}`;\n}\n\n/**\n * Turns mapbox:// style URLs into resolvable URLs.\n * @param {string} url The style URL.\n * @param {string} token The access token.\n * @return {string} A resolvable URL.\n * @private\n */\nexport function normalizeStyleUrl(url, token) {\n  const mapboxPath = getMapboxPath(url);\n  if (!mapboxPath) {\n    return decodeURI(new URL(url, location.href).href);\n  }\n  const startsWith = 'styles/';\n  if (mapboxPath.indexOf(startsWith) !== 0) {\n    throw new Error(`unexpected style url: ${url}`);\n  }\n  const style = mapboxPath.slice(startsWith.length);\n\n  return `${mapboxBaseUrl}/styles/v1/${style}?&access_token=${token}`;\n}\n\n/**\n * Turns mapbox:// source URLs into vector tile URL templates.\n * @param {string} url The source URL.\n * @param {string} token The access token.\n * @param {string} tokenParam The access token key.\n * @param {string} styleUrl The style URL.\n * @return {string} A vector tile template.\n * @private\n */\nexport function normalizeSourceUrl(url, token, tokenParam, styleUrl) {\n  const urlObject = new URL(url, styleUrl);\n  const mapboxPath = getMapboxPath(url);\n  if (!mapboxPath) {\n    if (!token) {\n      return decodeURI(urlObject.href);\n    }\n    urlObject.searchParams.set(tokenParam, token);\n    return decodeURI(urlObject.href);\n  }\n\n  if (mapboxPath === 'mapbox.satellite') {\n    const sizeFactor = window.devicePixelRatio >= 1.5 ? '@2x' : '';\n    return `https://api.mapbox.com/v4/${mapboxPath}/{z}/{x}/{y}${sizeFactor}.webp?access_token=${token}`;\n  }\n  return `https://{a-d}.tiles.mapbox.com/v4/${mapboxPath}/{z}/{x}/{y}.vector.pbf?access_token=${token}`;\n}\n","import {expandUrl} from 'ol/tileurlfunction.js';\nimport {normalizeSourceUrl, normalizeStyleUrl} from './mapbox.js';\n\nexport function deg2rad(degrees) {\n  return (degrees * Math.PI) / 180;\n}\n\nexport const defaultResolutions = (function () {\n  const resolutions = [];\n  for (let res = 78271.51696402048; resolutions.length <= 24; res /= 2) {\n    resolutions.push(res);\n  }\n  return resolutions;\n})();\n\n/**\n * @param {number} width Width of the canvas.\n * @param {number} height Height of the canvas.\n * @return {HTMLCanvasElement} Canvas.\n */\nexport function createCanvas(width, height) {\n  if (typeof WorkerGlobalScope !== 'undefined' && self instanceof WorkerGlobalScope && typeof OffscreenCanvas !== 'undefined') { // eslint-disable-line\n    return /** @type {?} */ (new OffscreenCanvas(width, height));\n  }\n  const canvas = document.createElement('canvas');\n  canvas.width = width;\n  canvas.height = height;\n  return canvas;\n}\n\nexport function getZoomForResolution(resolution, resolutions) {\n  let i = 0;\n  const ii = resolutions.length;\n  for (; i < ii; ++i) {\n    const candidate = resolutions[i];\n    if (candidate < resolution && i + 1 < ii) {\n      const zoomFactor = resolutions[i] / resolutions[i + 1];\n      return i + Math.log(resolutions[i] / resolution) / Math.log(zoomFactor);\n    }\n  }\n  return ii - 1;\n}\n\nconst pendingRequests = {};\n/**\n * @param {ResourceType} resourceType Type of resource to load.\n * @param {string} url Url of the resource.\n * @param {Options} [options={}] Options.\n * @param {{request?: Request}} [metadata] Object to be filled with the request.\n * @return {Promise<Object|Response>} Promise that resolves with the loaded resource\n * or rejects with the Response object.\n * @private\n */\nexport function fetchResource(resourceType, url, options = {}, metadata) {\n  if (url in pendingRequests) {\n    if (metadata) {\n      metadata.request = pendingRequests[url][0];\n    }\n    return pendingRequests[url][1];\n  }\n  const request = options.transformRequest\n    ? options.transformRequest(url, resourceType) || new Request(url)\n    : new Request(url);\n  if (!request.headers.get('Accept')) {\n    request.headers.set('Accept', 'application/json');\n  }\n  if (metadata) {\n    metadata.request = request;\n  }\n  const pendingRequest = fetch(request)\n    .then(function (response) {\n      delete pendingRequests[url];\n      return response.ok\n        ? response.json()\n        : Promise.reject(new Error('Error fetching source ' + url));\n    })\n    .catch(function (error) {\n      delete pendingRequests[url];\n      return Promise.reject(new Error('Error fetching source ' + url));\n    });\n  pendingRequests[url] = [request, pendingRequest];\n  return pendingRequest;\n}\n\nexport function getGlStyle(glStyleOrUrl, options) {\n  if (typeof glStyleOrUrl === 'string') {\n    if (glStyleOrUrl.trim().startsWith('{')) {\n      try {\n        const glStyle = JSON.parse(glStyleOrUrl);\n        return Promise.resolve(glStyle);\n      } catch (error) {\n        return Promise.reject(error);\n      }\n    } else {\n      glStyleOrUrl = normalizeStyleUrl(glStyleOrUrl, options.accessToken);\n      return fetchResource('Style', glStyleOrUrl, options);\n    }\n  } else {\n    return Promise.resolve(glStyleOrUrl);\n  }\n}\n\nfunction getTransformedTilesUrl(tilesUrl, options) {\n  if (options.transformRequest) {\n    const transformedRequest = options.transformRequest(tilesUrl, 'Tiles');\n    if (transformedRequest instanceof Request) {\n      return decodeURI(transformedRequest.url);\n    }\n  }\n  return tilesUrl;\n}\n\nconst tilejsonCache = {};\n/**\n * @param {Object} glSource glStyle source object.\n * @param {string} styleUrl Style URL.\n * @param {Options} options Options.\n * @return {Object} TileJson\n */\nexport function getTileJson(glSource, styleUrl, options = {}) {\n  const cacheKey = [styleUrl, JSON.stringify(glSource)].toString();\n  let promise = tilejsonCache[cacheKey];\n  if (!promise || options.transformRequest) {\n    const url = glSource.url;\n    if (url && !glSource.tiles) {\n      const normalizedSourceUrl = normalizeSourceUrl(\n        url,\n        options.accessToken,\n        options.accessTokenParam || 'access_token',\n        styleUrl || location.href\n      );\n      if (url.startsWith('mapbox://')) {\n        promise = Promise.resolve(\n          Object.assign({}, glSource, {\n            url: undefined,\n            tiles: expandUrl(normalizedSourceUrl),\n          })\n        );\n      } else {\n        const metadata = {};\n        promise = fetchResource(\n          'Source',\n          normalizedSourceUrl,\n          options,\n          metadata\n        ).then(function (tileJson) {\n          tileJson.tiles = tileJson.tiles.map(function (tileUrl) {\n            return getTransformedTilesUrl(\n              normalizeSourceUrl(\n                tileUrl,\n                options.accessToken,\n                options.accessTokenParam || 'access_token',\n                metadata.request.url\n              ),\n              options\n            );\n          });\n          return Promise.resolve(tileJson);\n        });\n      }\n    } else {\n      glSource = Object.assign({}, glSource, {\n        tiles: glSource.tiles.map(function (tileUrl) {\n          return getTransformedTilesUrl(\n            normalizeSourceUrl(\n              tileUrl,\n              options.accessToken,\n              options.accessTokenParam || 'access_token',\n              styleUrl || location.href\n            ),\n            options\n          );\n        }),\n      });\n      promise = Promise.resolve(Object.assign({}, glSource));\n    }\n    tilejsonCache[cacheKey] = promise;\n  }\n  return promise;\n}\n\n/**\n * @typedef {import(\"./apply.js\").Options} Options\n * @typedef {import('./apply.js').ResourceType} ResourceType\n * @private\n */\n","import mb2css from 'mapbox-to-css-font';\nimport {checkedFonts, registerFont} from 'ol/render/canvas.js';\nimport {createCanvas} from './util.js';\n\nconst hairSpacePool = Array(256).join('\\u200A');\nexport function applyLetterSpacing(text, letterSpacing) {\n  if (letterSpacing >= 0.05) {\n    let textWithLetterSpacing = '';\n    const lines = text.split('\\n');\n    const joinSpaceString = hairSpacePool.slice(\n      0,\n      Math.round(letterSpacing / 0.1)\n    );\n    for (let l = 0, ll = lines.length; l < ll; ++l) {\n      if (l > 0) {\n        textWithLetterSpacing += '\\n';\n      }\n      textWithLetterSpacing += lines[l].split('').join(joinSpaceString);\n    }\n    return textWithLetterSpacing;\n  }\n  return text;\n}\n\nlet measureContext;\nfunction getMeasureContext() {\n  if (!measureContext) {\n    measureContext = createCanvas(1, 1).getContext('2d');\n  }\n  return measureContext;\n}\n\nfunction measureText(text, letterSpacing) {\n  return (\n    getMeasureContext().measureText(text).width +\n    (text.length - 1) * letterSpacing\n  );\n}\n\nconst measureCache = {};\nexport function wrapText(text, font, em, letterSpacing) {\n  if (text.indexOf('\\n') !== -1) {\n    const hardLines = text.split('\\n');\n    const lines = [];\n    for (let i = 0, ii = hardLines.length; i < ii; ++i) {\n      lines.push(wrapText(hardLines[i], font, em, letterSpacing));\n    }\n    return lines.join('\\n');\n  }\n  const key = em + ',' + font + ',' + text + ',' + letterSpacing;\n  let wrappedText = measureCache[key];\n  if (!wrappedText) {\n    const words = text.split(' ');\n    if (words.length > 1) {\n      const ctx = getMeasureContext();\n      ctx.font = font;\n      const oneEm = ctx.measureText('M').width;\n      const maxWidth = oneEm * em;\n      let line = '';\n      const lines = [];\n      // Pass 1 - wrap lines to not exceed maxWidth\n      for (let i = 0, ii = words.length; i < ii; ++i) {\n        const word = words[i];\n        const testLine = line + (line ? ' ' : '') + word;\n        if (measureText(testLine, letterSpacing) <= maxWidth) {\n          line = testLine;\n        } else {\n          if (line) {\n            lines.push(line);\n          }\n          line = word;\n        }\n      }\n      if (line) {\n        lines.push(line);\n      }\n      // Pass 2 - add lines with a width of less than 30% of maxWidth to the previous or next line\n      for (let i = 0, ii = lines.length; i < ii && ii > 1; ++i) {\n        const line = lines[i];\n        if (measureText(line, letterSpacing) < maxWidth * 0.35) {\n          const prevWidth =\n            i > 0 ? measureText(lines[i - 1], letterSpacing) : Infinity;\n          const nextWidth =\n            i < ii - 1 ? measureText(lines[i + 1], letterSpacing) : Infinity;\n          lines.splice(i, 1);\n          ii -= 1;\n          if (prevWidth < nextWidth) {\n            lines[i - 1] += ' ' + line;\n            i -= 1;\n          } else {\n            lines[i] = line + ' ' + lines[i];\n          }\n        }\n      }\n      // Pass 3 - try to fill 80% of maxWidth for each line\n      for (let i = 0, ii = lines.length - 1; i < ii; ++i) {\n        const line = lines[i];\n        const next = lines[i + 1];\n        if (\n          measureText(line, letterSpacing) > maxWidth * 0.7 &&\n          measureText(next, letterSpacing) < maxWidth * 0.6\n        ) {\n          const lineWords = line.split(' ');\n          const lastWord = lineWords.pop();\n          if (measureText(lastWord, letterSpacing) < maxWidth * 0.2) {\n            lines[i] = lineWords.join(' ');\n            lines[i + 1] = lastWord + ' ' + next;\n          }\n          ii -= 1;\n        }\n      }\n      wrappedText = lines.join('\\n');\n    } else {\n      wrappedText = text;\n    }\n    wrappedText = applyLetterSpacing(wrappedText, letterSpacing);\n    measureCache[key] = wrappedText;\n  }\n  return wrappedText;\n}\n\nconst fontFamilyRegEx = /font-family: ?([^;]*);/;\nconst stripQuotesRegEx = /(\"|')/g;\nlet loadedFontFamilies;\nfunction hasFontFamily(family) {\n  if (!loadedFontFamilies) {\n    loadedFontFamilies = {};\n    const styleSheets = document.styleSheets;\n    for (let i = 0, ii = styleSheets.length; i < ii; ++i) {\n      const styleSheet = /** @type {CSSStyleSheet} */ (styleSheets[i]);\n      try {\n        const cssRules = styleSheet.rules || styleSheet.cssRules;\n        if (cssRules) {\n          for (let j = 0, jj = cssRules.length; j < jj; ++j) {\n            const cssRule = cssRules[j];\n            if (cssRule.type == 5) {\n              const match = cssRule.cssText.match(fontFamilyRegEx);\n              loadedFontFamilies[match[1].replace(stripQuotesRegEx, '')] = true;\n            }\n          }\n        }\n      } catch (e) {\n        // empty catch block\n      }\n    }\n  }\n  return family in loadedFontFamilies;\n}\n\nconst processedFontFamilies = {};\n\n/**\n * @param {Array} fonts Fonts.\n * @return {Array} Processed fonts.\n * @private\n */\nexport function getFonts(fonts) {\n  const fontsKey = fonts.toString();\n  if (fontsKey in processedFontFamilies) {\n    return processedFontFamilies[fontsKey];\n  }\n  const googleFontDescriptions = [];\n  for (let i = 0, ii = fonts.length; i < ii; ++i) {\n    fonts[i] = fonts[i].replace('Arial Unicode MS', 'Arial');\n    const font = fonts[i];\n    const cssFont = mb2css(font, 1);\n    registerFont(cssFont);\n    const parts = cssFont.split(' ');\n    googleFontDescriptions.push([\n      parts.slice(3).join(' ').replace(/\"/g, ''),\n      parts[1],\n      parts[0],\n    ]);\n  }\n  for (let i = 0, ii = googleFontDescriptions.length; i < ii; ++i) {\n    const googleFontDescription = googleFontDescriptions[i];\n    const family = googleFontDescription[0];\n    if (!hasFontFamily(family)) {\n      if (\n        checkedFonts.get(\n          `${googleFontDescription[2]}\\n${googleFontDescription[1]} \\n${family}`\n        ) !== 100\n      ) {\n        const fontUrl =\n          'https://fonts.googleapis.com/css?family=' +\n          family.replace(/ /g, '+') +\n          ':' +\n          googleFontDescription[1] +\n          googleFontDescription[2];\n        if (!document.querySelector('link[href=\"' + fontUrl + '\"]')) {\n          const markup = document.createElement('link');\n          markup.href = fontUrl;\n          markup.rel = 'stylesheet';\n          document.head.appendChild(markup);\n        }\n      }\n    }\n  }\n  processedFontFamilies[fontsKey] = fonts;\n  return fonts;\n}\n","/*\nol-mapbox-style - Use Mapbox Style objects with OpenLayers\nCopyright 2016-present ol-mapbox-style contributors\nLicense: https://raw.githubusercontent.com/openlayers/ol-mapbox-style/master/LICENSE\n*/\n\nimport Circle from 'ol/style/Circle.js';\nimport Fill from 'ol/style/Fill.js';\nimport Icon from 'ol/style/Icon.js';\nimport RenderFeature from 'ol/render/Feature.js';\nimport Stroke from 'ol/style/Stroke.js';\nimport Style from 'ol/style/Style.js';\nimport Text from 'ol/style/Text.js';\n\nimport Color from '@mapbox/mapbox-gl-style-spec/util/color.js';\nimport convertFunction from '@mapbox/mapbox-gl-style-spec/function/convert.js';\nimport createFilter from '@mapbox/mapbox-gl-style-spec/feature_filter/index.js';\nimport derefLayers from '@mapbox/mapbox-gl-style-spec/deref.js';\nimport mb2css from 'mapbox-to-css-font';\nimport spec from '@mapbox/mapbox-gl-style-spec/reference/v8.json';\nimport {applyLetterSpacing, wrapText} from './text.js';\nimport {\n  createCanvas,\n  defaultResolutions,\n  deg2rad,\n  getZoomForResolution,\n} from './util.js';\nimport {\n  createPropertyExpression,\n  isExpression,\n} from '@mapbox/mapbox-gl-style-spec/expression/index.js';\nimport {isFunction} from '@mapbox/mapbox-gl-style-spec/function/index.js';\n\n/**\n * @typedef {import(\"ol/layer/Vector\").default} VectorLayer\n * @typedef {import(\"ol/layer/VectorTile\").default} VectorTileLayer\n * @typedef {import(\"ol/style/Style\").StyleFunction} StyleFunction\n */\n\nconst types = {\n  'Point': 1,\n  'MultiPoint': 1,\n  'LineString': 2,\n  'MultiLineString': 2,\n  'Polygon': 3,\n  'MultiPolygon': 3,\n};\nconst anchor = {\n  'center': [0.5, 0.5],\n  'left': [0, 0.5],\n  'right': [1, 0.5],\n  'top': [0.5, 0],\n  'bottom': [0.5, 1],\n  'top-left': [0, 0],\n  'top-right': [1, 0],\n  'bottom-left': [0, 1],\n  'bottom-right': [1, 1],\n};\n\nconst expressionData = function (rawExpression, propertySpec) {\n  const compiledExpression = createPropertyExpression(\n    rawExpression,\n    propertySpec\n  );\n  if (compiledExpression.result === 'error') {\n    throw new Error(\n      compiledExpression.value\n        .map((err) => `${err.key}: ${err.message}`)\n        .join(', ')\n    );\n  }\n  return compiledExpression.value;\n};\n\nconst emptyObj = {};\nconst zoomObj = {zoom: 0};\nlet renderFeatureCoordinates, renderFeature;\n\n/**\n * @private\n * @param {Object} layer Gl object layer.\n * @param {string} layoutOrPaint 'layout' or 'paint'.\n * @param {string} property Feature property.\n * @param {number} zoom Zoom.\n * @param {Object} feature Gl feature.\n * @param {Object} [functionCache] Function cache.\n * @param {Object} [featureState] Feature state.\n * @return {?} Value.\n */\nexport function getValue(\n  layer,\n  layoutOrPaint,\n  property,\n  zoom,\n  feature,\n  functionCache,\n  featureState\n) {\n  const layerId = layer.id;\n  if (!functionCache) {\n    functionCache = {};\n    console.warn('No functionCache provided to getValue()'); //eslint-disable-line no-console\n  }\n  if (!functionCache[layerId]) {\n    functionCache[layerId] = {};\n  }\n  const functions = functionCache[layerId];\n  if (!functions[property]) {\n    let value = (layer[layoutOrPaint] || emptyObj)[property];\n    const propertySpec = spec[`${layoutOrPaint}_${layer.type}`][property];\n    if (value === undefined) {\n      value = propertySpec.default;\n    }\n    let isExpr = isExpression(value);\n    if (!isExpr && isFunction(value)) {\n      value = convertFunction(value, propertySpec);\n      isExpr = true;\n    }\n    if (isExpr) {\n      const compiledExpression = expressionData(value, propertySpec);\n      functions[property] =\n        compiledExpression.evaluate.bind(compiledExpression);\n    } else {\n      if (propertySpec.type == 'color') {\n        value = Color.parse(value);\n      }\n      functions[property] = function () {\n        return value;\n      };\n    }\n  }\n  zoomObj.zoom = zoom;\n  return functions[property](zoomObj, feature, featureState);\n}\n\n/**\n * @private\n * @param {Object} layer Gl object layer.\n * @param {number} zoom Zoom.\n * @param {Object} feature Gl feature.\n * @param {Object} [functionCache] Function cache.\n * @return {\"declutter\"|\"obstacle\"|\"none\"} Value.\n */\nfunction getIconDeclutterMode(layer, zoom, feature, functionCache) {\n  const allowOverlap = getValue(\n    layer,\n    'layout',\n    'icon-allow-overlap',\n    zoom,\n    feature,\n    functionCache\n  );\n  if (!allowOverlap) {\n    return 'declutter';\n  }\n  const ignorePlacement = getValue(\n    layer,\n    'layout',\n    'icon-ignore-placement',\n    zoom,\n    feature,\n    functionCache\n  );\n  if (!ignorePlacement) {\n    return 'obstacle';\n  }\n  return 'none';\n}\n\n/**\n * @private\n * @param {string} layerId Layer id.\n * @param {?} filter Filter.\n * @param {Object} feature Feature.\n * @param {number} zoom Zoom.\n * @param {Object} [filterCache] Filter cache.\n * @return {boolean} Filter result.\n */\nfunction evaluateFilter(layerId, filter, feature, zoom, filterCache) {\n  if (!filterCache) {\n    console.warn('No filterCache provided to evaluateFilter()'); //eslint-disable-line no-console\n  }\n  if (!(layerId in filterCache)) {\n    filterCache[layerId] = createFilter(filter).filter;\n  }\n  zoomObj.zoom = zoom;\n  return filterCache[layerId](zoomObj, feature);\n}\n\nlet renderTransparentEnabled = false;\n\n/**\n * Configure whether features with a transparent style should be rendered. When\n * set to `true`, it will be possible to hit detect content that is not visible,\n * like transparent fills of polygons, using `ol/layer/Layer#getFeatures()` or\n * `ol/Map#getFeaturesAtPixel()`\n * @param {boolean} enabled Rendering of transparent elements is enabled.\n * Default is `false`.\n */\nexport function renderTransparent(enabled) {\n  renderTransparentEnabled = enabled;\n}\n\n/**\n * @private\n * @param {?} color Color.\n * @param {number} [opacity] Opacity.\n * @return {string} Color.\n */\nfunction colorWithOpacity(color, opacity) {\n  if (color) {\n    if (!renderTransparentEnabled && (color.a === 0 || opacity === 0)) {\n      return undefined;\n    }\n    const a = color.a;\n    opacity = opacity === undefined ? 1 : opacity;\n    return a === 0\n      ? 'transparent'\n      : 'rgba(' +\n          Math.round((color.r * 255) / a) +\n          ',' +\n          Math.round((color.g * 255) / a) +\n          ',' +\n          Math.round((color.b * 255) / a) +\n          ',' +\n          a * opacity +\n          ')';\n  }\n  return color;\n}\n\nconst templateRegEx = /\\{[^{}}]*\\}/g;\n\n/**\n * @private\n * @param {string} text Text.\n * @param {Object} properties Properties.\n * @return {string} Text.\n */\nfunction fromTemplate(text, properties) {\n  return text.replace(templateRegEx, function (match) {\n    return properties[match.slice(1, -1)] || '';\n  });\n}\n\nlet recordLayer = false;\n\n/**\n * Turns recording of the Mapbox Style's `layer` on and off. When turned on,\n * the layer that a rendered feature belongs to will be set as the feature's\n * `mapbox-layer` property.\n * @param {boolean} record Recording of the style layer is on.\n */\nexport function recordStyleLayer(record = false) {\n  recordLayer = record;\n}\n\n/**\n * Creates a style function from the `glStyle` object for all layers that use\n * the specified `source`, which needs to be a `\"type\": \"vector\"` or\n * `\"type\": \"geojson\"` source and applies it to the specified OpenLayers layer.\n *\n * Two additional properties will be set on the provided layer:\n *\n *  * `mapbox-source`: The `id` of the Mapbox Style document's source that the\n *    OpenLayers layer was created from. Usually `apply()` creates one\n *    OpenLayers layer per Mapbox Style source, unless the layer stack has\n *    layers from different sources in between.\n *  * `mapbox-layers`: The `id`s of the Mapbox Style document's layers that are\n *    included in the OpenLayers layer.\n *\n * This function also works in a web worker. In worker mode, the main thread needs\n * to listen to messages from the worker and respond with another message to make\n * sure that sprite image loading works:\n *\n * ```js\n *  worker.addEventListener('message', event => {\n *   if (event.data.action === 'loadImage') {\n *     const image = new Image();\n *     image.crossOrigin = 'anonymous';\n *     image.addEventListener('load', function() {\n *       createImageBitmap(image, 0, 0, image.width, image.height).then(imageBitmap => {\n *         worker.postMessage({\n *           action: 'imageLoaded',\n *           image: imageBitmap,\n *           src: event.data.src\n *         }, [imageBitmap]);\n *       });\n *     });\n *     image.src = event.data.src;\n *   }\n * });\n * ```\n *\n * @param {VectorLayer|VectorTileLayer} olLayer OpenLayers layer to\n * apply the style to. In addition to the style, the layer will get two\n * properties: `mapbox-source` will be the `id` of the `glStyle`'s source used\n * for the layer, and `mapbox-layers` will be an array of the `id`s of the\n * `glStyle`'s layers.\n * @param {string|Object} glStyle Mapbox Style object.\n * @param {string|Array<string>} sourceOrLayers `source` key or an array of layer `id`s\n * from the Mapbox Style object. When a `source` key is provided, all layers for\n * the specified source will be included in the style function. When layer `id`s\n * are provided, they must be from layers that use the same source.\n * @param {Array<number>} resolutions\n * Resolutions for mapping resolution to zoom level.\n * @param {Object} spriteData Sprite data from the url specified in\n * the Mapbox Style object's `sprite` property. Only required if a `sprite`\n * property is specified in the Mapbox Style object.\n * @param {string} spriteImageUrl Sprite image url for the sprite\n * specified in the Mapbox Style object's `sprite` property. Only required if a\n * `sprite` property is specified in the Mapbox Style object.\n * @param {function(Array<string>):Array<string>} getFonts Function that\n * receives a font stack as arguments, and returns a (modified) font stack that\n * is available. Font names are the names used in the Mapbox Style object. If\n * not provided, the font stack will be used as-is. This function can also be\n * used for loading web fonts.\n * @param {function(VectorLayer|VectorTileLayer, string):HTMLImageElement|HTMLCanvasElement|string|undefined} [getImage=undefined]\n * Function that returns an image or a URL for an image name. If the result is an HTMLImageElement, it must already be\n * loaded. The layer can be used to call layer.changed() when the loading and processing of the image has finished.\n * This function can be used for icons not in the sprite or to override sprite icons.\n * @return {StyleFunction} Style function for use in\n * `ol.layer.Vector` or `ol.layer.VectorTile`.\n */\nexport function stylefunction(\n  olLayer,\n  glStyle,\n  sourceOrLayers,\n  resolutions = defaultResolutions,\n  spriteData = undefined,\n  spriteImageUrl = undefined,\n  getFonts = undefined,\n  getImage = undefined\n) {\n  if (typeof glStyle == 'string') {\n    glStyle = JSON.parse(glStyle);\n  }\n  if (glStyle.version != 8) {\n    throw new Error('glStyle version 8 required.');\n  }\n\n  let spriteImage, spriteImageSize;\n  if (spriteImageUrl) {\n    if (typeof Image !== 'undefined') {\n      const img = new Image();\n      img.crossOrigin = 'anonymous';\n      img.onload = function () {\n        spriteImage = img;\n        spriteImageSize = [img.width, img.height];\n        olLayer.changed();\n        img.onload = null;\n      };\n      img.src = spriteImageUrl;\n    } else if (typeof WorkerGlobalScope !== 'undefined' && self instanceof WorkerGlobalScope) { //eslint-disable-line\n      const worker = /** @type {*} */ (self);\n      // Main thread needs to handle 'loadImage' and dispatch 'imageLoaded'\n      worker.postMessage({\n        action: 'loadImage',\n        src: spriteImageUrl,\n      });\n      worker.addEventListener('message', function handler(event) {\n        if (\n          event.data.action === 'imageLoaded' &&\n          event.data.src === spriteImageUrl\n        ) {\n          spriteImage = event.data.image;\n          spriteImageSize = [spriteImage.width, spriteImage.height];\n        }\n      });\n    }\n  }\n\n  const allLayers = derefLayers(glStyle.layers);\n\n  const layersBySourceLayer = {};\n  const mapboxLayers = [];\n\n  const iconImageCache = {};\n  const patternCache = {};\n  const functionCache = {};\n  const filterCache = {};\n\n  let mapboxSource;\n  for (let i = 0, ii = allLayers.length; i < ii; ++i) {\n    const layer = allLayers[i];\n    const layerId = layer.id;\n    if (\n      (typeof sourceOrLayers == 'string' && layer.source == sourceOrLayers) ||\n      sourceOrLayers.indexOf(layerId) !== -1\n    ) {\n      const sourceLayer = layer['source-layer'];\n      if (!mapboxSource) {\n        mapboxSource = layer.source;\n        const source = glStyle.sources[mapboxSource];\n        if (!source) {\n          throw new Error(`Source \"${mapboxSource}\" is not defined`);\n        }\n        const type = source.type;\n        if (type !== 'vector' && type !== 'geojson') {\n          throw new Error(\n            `Source \"${mapboxSource}\" is not of type \"vector\" or \"geojson\", but \"${type}\"`\n          );\n        }\n      } else if (layer.source !== mapboxSource) {\n        throw new Error(\n          `Layer \"${layerId}\" does not use source \"${mapboxSource}`\n        );\n      }\n      let layers = layersBySourceLayer[sourceLayer];\n      if (!layers) {\n        layers = [];\n        layersBySourceLayer[sourceLayer] = layers;\n      }\n      layers.push({\n        layer: layer,\n        index: i,\n      });\n      mapboxLayers.push(layerId);\n    }\n  }\n\n  const textHalo = new Stroke();\n  const textColor = new Fill();\n\n  const styles = [];\n\n  const styleFunction = function (feature, resolution) {\n    const properties = feature.getProperties();\n    const layers = layersBySourceLayer[properties.layer];\n    if (!layers) {\n      return;\n    }\n    let zoom = resolutions.indexOf(resolution);\n    if (zoom == -1) {\n      zoom = getZoomForResolution(resolution, resolutions);\n    }\n    const type = types[feature.getGeometry().getType()];\n    const f = {\n      properties: properties,\n      type: type,\n    };\n    const featureState = olLayer.get('mapbox-featurestate')[feature.getId()];\n    let stylesLength = -1;\n    let featureBelongsToLayer;\n    for (let i = 0, ii = layers.length; i < ii; ++i) {\n      const layerData = layers[i];\n      const layer = layerData.layer;\n      const layerId = layer.id;\n\n      const layout = layer.layout || emptyObj;\n      const paint = layer.paint || emptyObj;\n      if (\n        layout.visibility === 'none' ||\n        ('minzoom' in layer && zoom < layer.minzoom) ||\n        ('maxzoom' in layer && zoom >= layer.maxzoom)\n      ) {\n        continue;\n      }\n      const filter = layer.filter;\n      if (!filter || evaluateFilter(layerId, filter, f, zoom, filterCache)) {\n        featureBelongsToLayer = layer;\n        let color, opacity, fill, stroke, strokeColor, style;\n        const index = layerData.index;\n        if (\n          type == 3 &&\n          (layer.type == 'fill' || layer.type == 'fill-extrusion')\n        ) {\n          opacity = getValue(\n            layer,\n            'paint',\n            layer.type + '-opacity',\n            zoom,\n            f,\n            functionCache,\n            featureState\n          );\n          if (layer.type + '-pattern' in paint) {\n            const fillIcon = getValue(\n              layer,\n              'paint',\n              layer.type + '-pattern',\n              zoom,\n              f,\n              functionCache,\n              featureState\n            );\n            if (fillIcon) {\n              const icon =\n                typeof fillIcon === 'string'\n                  ? fromTemplate(fillIcon, properties)\n                  : fillIcon.toString();\n              if (spriteImage && spriteData && spriteData[icon]) {\n                ++stylesLength;\n                style = styles[stylesLength];\n                if (\n                  !style ||\n                  !style.getFill() ||\n                  style.getStroke() ||\n                  style.getText()\n                ) {\n                  style = new Style({\n                    fill: new Fill(),\n                  });\n                  styles[stylesLength] = style;\n                }\n                fill = style.getFill();\n                style.setZIndex(index);\n                const icon_cache_key = icon + '.' + opacity;\n                let pattern = patternCache[icon_cache_key];\n                if (!pattern) {\n                  const spriteImageData = spriteData[icon];\n                  const canvas = createCanvas(\n                    spriteImageData.width,\n                    spriteImageData.height\n                  );\n                  const ctx = /** @type {CanvasRenderingContext2D} */ (\n                    canvas.getContext('2d')\n                  );\n                  ctx.globalAlpha = opacity;\n                  ctx.drawImage(\n                    spriteImage,\n                    spriteImageData.x,\n                    spriteImageData.y,\n                    spriteImageData.width,\n                    spriteImageData.height,\n                    0,\n                    0,\n                    spriteImageData.width,\n                    spriteImageData.height\n                  );\n                  pattern = ctx.createPattern(canvas, 'repeat');\n                  patternCache[icon_cache_key] = pattern;\n                }\n                fill.setColor(pattern);\n              }\n            }\n          } else {\n            color = colorWithOpacity(\n              getValue(\n                layer,\n                'paint',\n                layer.type + '-color',\n                zoom,\n                f,\n                functionCache,\n                featureState\n              ),\n              opacity\n            );\n            if (layer.type + '-outline-color' in paint) {\n              strokeColor = colorWithOpacity(\n                getValue(\n                  layer,\n                  'paint',\n                  layer.type + '-outline-color',\n                  zoom,\n                  f,\n                  functionCache,\n                  featureState\n                ),\n                opacity\n              );\n            }\n            if (!strokeColor) {\n              strokeColor = color;\n            }\n            if (color || strokeColor) {\n              ++stylesLength;\n              style = styles[stylesLength];\n              if (\n                !style ||\n                (color && !style.getFill()) ||\n                (!color && style.getFill()) ||\n                (strokeColor && !style.getStroke()) ||\n                (!strokeColor && style.getStroke()) ||\n                style.getText()\n              ) {\n                style = new Style({\n                  fill: color ? new Fill() : undefined,\n                  stroke: strokeColor ? new Stroke() : undefined,\n                });\n                styles[stylesLength] = style;\n              }\n              if (color) {\n                fill = style.getFill();\n                fill.setColor(color);\n              }\n              if (strokeColor) {\n                stroke = style.getStroke();\n                stroke.setColor(strokeColor);\n                stroke.setWidth(0.5);\n              }\n              style.setZIndex(index);\n            }\n          }\n        }\n        if (type != 1 && layer.type == 'line') {\n          color =\n            !('line-pattern' in paint) && 'line-color' in paint\n              ? colorWithOpacity(\n                  getValue(\n                    layer,\n                    'paint',\n                    'line-color',\n                    zoom,\n                    f,\n                    functionCache,\n                    featureState\n                  ),\n                  getValue(\n                    layer,\n                    'paint',\n                    'line-opacity',\n                    zoom,\n                    f,\n                    functionCache,\n                    featureState\n                  )\n                )\n              : undefined;\n          const width = getValue(\n            layer,\n            'paint',\n            'line-width',\n            zoom,\n            f,\n            functionCache,\n            featureState\n          );\n          if (color && width > 0) {\n            ++stylesLength;\n            style = styles[stylesLength];\n            if (\n              !style ||\n              !style.getStroke() ||\n              style.getFill() ||\n              style.getText()\n            ) {\n              style = new Style({\n                stroke: new Stroke(),\n              });\n              styles[stylesLength] = style;\n            }\n            stroke = style.getStroke();\n            stroke.setLineCap(\n              getValue(\n                layer,\n                'layout',\n                'line-cap',\n                zoom,\n                f,\n                functionCache,\n                featureState\n              )\n            );\n            stroke.setLineJoin(\n              getValue(\n                layer,\n                'layout',\n                'line-join',\n                zoom,\n                f,\n                functionCache,\n                featureState\n              )\n            );\n            stroke.setMiterLimit(\n              getValue(\n                layer,\n                'layout',\n                'line-miter-limit',\n                zoom,\n                f,\n                functionCache,\n                featureState\n              )\n            );\n            stroke.setColor(color);\n            stroke.setWidth(width);\n            stroke.setLineDash(\n              paint['line-dasharray']\n                ? getValue(\n                    layer,\n                    'paint',\n                    'line-dasharray',\n                    zoom,\n                    f,\n                    functionCache,\n                    featureState\n                  ).map(function (x) {\n                    return x * width;\n                  })\n                : null\n            );\n            style.setZIndex(index);\n          }\n        }\n\n        let hasImage = false;\n        let text = null;\n        let placementAngle = 0;\n        let icon, iconImg, skipLabel;\n        if ((type == 1 || type == 2) && 'icon-image' in layout) {\n          const iconImage = getValue(\n            layer,\n            'layout',\n            'icon-image',\n            zoom,\n            f,\n            functionCache,\n            featureState\n          );\n          if (iconImage) {\n            icon =\n              typeof iconImage === 'string'\n                ? fromTemplate(iconImage, properties)\n                : iconImage.toString();\n            let styleGeom = undefined;\n            const imageElement = getImage ? getImage(olLayer, icon) : undefined;\n            if (\n              (spriteImage && spriteData && spriteData[icon]) ||\n              imageElement\n            ) {\n              const iconRotationAlignment = getValue(\n                layer,\n                'layout',\n                'icon-rotation-alignment',\n                zoom,\n                f,\n                functionCache,\n                featureState\n              );\n              if (type == 2) {\n                const geom = feature.getGeometry();\n                // ol package and ol-debug.js only\n                if (geom.getFlatMidpoint || geom.getFlatMidpoints) {\n                  const extent = geom.getExtent();\n                  const size = Math.sqrt(\n                    Math.max(\n                      Math.pow((extent[2] - extent[0]) / resolution, 2),\n                      Math.pow((extent[3] - extent[1]) / resolution, 2)\n                    )\n                  );\n                  if (size > 150) {\n                    //FIXME Do not hard-code a size of 150\n                    const midpoint =\n                      geom.getType() === 'MultiLineString'\n                        ? geom.getFlatMidpoints()\n                        : geom.getFlatMidpoint();\n                    if (!renderFeature) {\n                      renderFeatureCoordinates = [NaN, NaN];\n                      renderFeature = new RenderFeature(\n                        'Point',\n                        renderFeatureCoordinates,\n                        [],\n                        {},\n                        null\n                      );\n                    }\n                    styleGeom = renderFeature;\n                    renderFeatureCoordinates[0] = midpoint[0];\n                    renderFeatureCoordinates[1] = midpoint[1];\n                    const placement = getValue(\n                      layer,\n                      'layout',\n                      'symbol-placement',\n                      zoom,\n                      f,\n                      functionCache,\n                      featureState\n                    );\n                    if (\n                      placement === 'line' &&\n                      iconRotationAlignment === 'map'\n                    ) {\n                      const stride = geom.getStride();\n                      const coordinates = geom.getFlatCoordinates();\n                      for (\n                        let i = 0, ii = coordinates.length - stride;\n                        i < ii;\n                        i += stride\n                      ) {\n                        const x1 = coordinates[i];\n                        const y1 = coordinates[i + 1];\n                        const x2 = coordinates[i + stride];\n                        const y2 = coordinates[i + stride + 1];\n                        const minX = Math.min(x1, x2);\n                        const minY = Math.min(y1, y2);\n                        const maxX = Math.max(x1, x2);\n                        const maxY = Math.max(y1, y2);\n                        if (\n                          midpoint[0] >= minX &&\n                          midpoint[0] <= maxX &&\n                          midpoint[1] >= minY &&\n                          midpoint[1] <= maxY\n                        ) {\n                          placementAngle = Math.atan2(y1 - y2, x2 - x1);\n                          break;\n                        }\n                      }\n                    }\n                  }\n                }\n              }\n              if (type !== 2 || styleGeom) {\n                const iconSize = getValue(\n                  layer,\n                  'layout',\n                  'icon-size',\n                  zoom,\n                  f,\n                  functionCache,\n                  featureState\n                );\n                const iconColor =\n                  paint['icon-color'] !== undefined\n                    ? getValue(\n                        layer,\n                        'paint',\n                        'icon-color',\n                        zoom,\n                        f,\n                        functionCache,\n                        featureState\n                      )\n                    : null;\n                if (!iconColor || iconColor.a !== 0) {\n                  const haloColor = getValue(\n                    layer,\n                    'paint',\n                    'icon-halo-color',\n                    zoom,\n                    f,\n                    functionCache,\n                    featureState\n                  );\n                  const haloWidth = getValue(\n                    layer,\n                    'paint',\n                    'icon-halo-width',\n                    zoom,\n                    f,\n                    functionCache,\n                    featureState\n                  );\n                  let iconCacheKey = `${icon}.${iconSize}.${haloWidth}.${haloColor}`;\n                  if (iconColor !== null) {\n                    iconCacheKey += `.${iconColor}`;\n                  }\n                  iconImg = iconImageCache[iconCacheKey];\n                  if (!iconImg) {\n                    const declutterMode = getIconDeclutterMode(\n                      layer,\n                      zoom,\n                      f,\n                      functionCache\n                    );\n                    let displacement;\n                    if ('icon-offset' in layout) {\n                      displacement = getValue(\n                        layer,\n                        'layout',\n                        'icon-offset',\n                        zoom,\n                        f,\n                        functionCache,\n                        featureState\n                      );\n                      displacement[1] *= -1;\n                    }\n                    const color = iconColor\n                      ? [\n                          iconColor.r * 255,\n                          iconColor.g * 255,\n                          iconColor.b * 255,\n                          iconColor.a,\n                        ]\n                      : undefined;\n                    if (imageElement) {\n                      const iconOptions = {\n                        color: color,\n                        rotateWithView: iconRotationAlignment === 'map',\n                        displacement: displacement,\n                        declutterMode: declutterMode,\n                      };\n                      if (typeof imageElement === 'string') {\n                        // it is a src URL\n                        iconOptions.src = imageElement;\n                      } else {\n                        iconOptions.img = imageElement;\n                        iconOptions.imgSize = [\n                          imageElement.width,\n                          imageElement.height,\n                        ];\n                      }\n                      iconImg = new Icon(iconOptions);\n                    } else {\n                      const spriteImageData = spriteData[icon];\n                      let img, imgSize, size, offset;\n                      if (haloWidth) {\n                        const imageCanvas = document.createElement('canvas');\n                        imgSize = [\n                          2 * haloWidth * spriteImageData.pixelRatio +\n                            spriteImageData.width,\n                          2 * haloWidth * spriteImageData.pixelRatio +\n                            spriteImageData.height,\n                        ];\n                        imageCanvas.width = imgSize[0];\n                        imageCanvas.height = imgSize[1];\n                        const imageContext = imageCanvas.getContext('2d');\n                        imageContext.shadowBlur =\n                          haloWidth * spriteImageData.pixelRatio;\n                        imageContext.shadowColor = `rgba(${haloColor.r * 255},${\n                          haloColor.g * 255\n                        },${haloColor.b * 255},${haloColor.a})`;\n                        imageContext.drawImage(\n                          spriteImage,\n                          spriteImageData.x,\n                          spriteImageData.y,\n                          spriteImageData.width,\n                          spriteImageData.height,\n                          haloWidth * spriteImageData.pixelRatio,\n                          haloWidth * spriteImageData.pixelRatio,\n                          spriteImageData.width,\n                          spriteImageData.height\n                        );\n                        img = imageCanvas;\n                      } else {\n                        img = spriteImage;\n                        imgSize = spriteImageSize;\n                        size = [spriteImageData.width, spriteImageData.height];\n                        offset = [spriteImageData.x, spriteImageData.y];\n                      }\n                      iconImg = new Icon({\n                        color: color,\n                        img: img,\n                        imgSize: imgSize,\n                        size: size,\n                        offset: offset,\n                        rotateWithView: iconRotationAlignment === 'map',\n                        scale: iconSize / spriteImageData.pixelRatio,\n                        displacement: displacement,\n                        declutterMode: declutterMode,\n                      });\n                    }\n                    iconImageCache[iconCacheKey] = iconImg;\n                  }\n                }\n                if (iconImg) {\n                  ++stylesLength;\n                  style = styles[stylesLength];\n                  if (\n                    !style ||\n                    !style.getImage() ||\n                    style.getFill() ||\n                    style.getStroke()\n                  ) {\n                    style = new Style();\n                    styles[stylesLength] = style;\n                  }\n                  style.setGeometry(styleGeom);\n                  iconImg.setRotation(\n                    placementAngle +\n                      deg2rad(\n                        getValue(\n                          layer,\n                          'layout',\n                          'icon-rotate',\n                          zoom,\n                          f,\n                          functionCache,\n                          featureState\n                        )\n                      )\n                  );\n                  iconImg.setOpacity(\n                    getValue(\n                      layer,\n                      'paint',\n                      'icon-opacity',\n                      zoom,\n                      f,\n                      functionCache,\n                      featureState\n                    )\n                  );\n                  iconImg.setAnchor(\n                    anchor[\n                      getValue(\n                        layer,\n                        'layout',\n                        'icon-anchor',\n                        zoom,\n                        f,\n                        functionCache,\n                        featureState\n                      )\n                    ]\n                  );\n                  style.setImage(iconImg);\n                  text = style.getText();\n                  style.setText(undefined);\n                  style.setZIndex(index);\n                  hasImage = true;\n                  skipLabel = false;\n                }\n              } else {\n                skipLabel = true;\n              }\n            }\n          }\n        }\n\n        if (type == 1 && layer.type === 'circle') {\n          ++stylesLength;\n          style = styles[stylesLength];\n          if (\n            !style ||\n            !style.getImage() ||\n            style.getFill() ||\n            style.getStroke()\n          ) {\n            style = new Style();\n            styles[stylesLength] = style;\n          }\n          const circleRadius =\n            'circle-radius' in paint\n              ? getValue(\n                  layer,\n                  'paint',\n                  'circle-radius',\n                  zoom,\n                  f,\n                  functionCache,\n                  featureState\n                )\n              : 5;\n          const circleStrokeColor = colorWithOpacity(\n            getValue(\n              layer,\n              'paint',\n              'circle-stroke-color',\n              zoom,\n              f,\n              functionCache,\n              featureState\n            ),\n            getValue(\n              layer,\n              'paint',\n              'circle-stroke-opacity',\n              zoom,\n              f,\n              functionCache,\n              featureState\n            )\n          );\n          const circleColor = colorWithOpacity(\n            getValue(\n              layer,\n              'paint',\n              'circle-color',\n              zoom,\n              f,\n              functionCache,\n              featureState\n            ),\n            getValue(\n              layer,\n              'paint',\n              'circle-opacity',\n              zoom,\n              f,\n              functionCache,\n              featureState\n            )\n          );\n          const circleStrokeWidth = getValue(\n            layer,\n            'paint',\n            'circle-stroke-width',\n            zoom,\n            f,\n            functionCache,\n            featureState\n          );\n          const cache_key =\n            circleRadius +\n            '.' +\n            circleStrokeColor +\n            '.' +\n            circleColor +\n            '.' +\n            circleStrokeWidth;\n          iconImg = iconImageCache[cache_key];\n          if (!iconImg) {\n            iconImg = new Circle({\n              radius: circleRadius,\n              stroke:\n                circleStrokeColor && circleStrokeWidth > 0\n                  ? new Stroke({\n                      width: circleStrokeWidth,\n                      color: circleStrokeColor,\n                    })\n                  : undefined,\n              fill: circleColor\n                ? new Fill({\n                    color: circleColor,\n                  })\n                : undefined,\n              declutterMode: 'none',\n            });\n            iconImageCache[cache_key] = iconImg;\n          }\n          style.setImage(iconImg);\n          text = style.getText();\n          style.setText(undefined);\n          style.setGeometry(undefined);\n          style.setZIndex(index);\n          hasImage = true;\n        }\n\n        let label, font, textLineHeight, textSize, letterSpacing, maxTextWidth;\n        if ('text-field' in layout) {\n          textSize = Math.round(\n            getValue(\n              layer,\n              'layout',\n              'text-size',\n              zoom,\n              f,\n              functionCache,\n              featureState\n            )\n          );\n          const fontArray = getValue(\n            layer,\n            'layout',\n            'text-font',\n            zoom,\n            f,\n            functionCache,\n            featureState\n          );\n          textLineHeight = getValue(\n            layer,\n            'layout',\n            'text-line-height',\n            zoom,\n            f,\n            functionCache,\n            featureState\n          );\n          font = mb2css(\n            getFonts ? getFonts(fontArray) : fontArray,\n            textSize,\n            textLineHeight\n          );\n          if (!font.includes('sans-serif')) {\n            font += ',sans-serif';\n          }\n          letterSpacing = getValue(\n            layer,\n            'layout',\n            'text-letter-spacing',\n            zoom,\n            f,\n            functionCache,\n            featureState\n          );\n          maxTextWidth = getValue(\n            layer,\n            'layout',\n            'text-max-width',\n            zoom,\n            f,\n            functionCache,\n            featureState\n          );\n          const textField = getValue(\n            layer,\n            'layout',\n            'text-field',\n            zoom,\n            f,\n            functionCache,\n            featureState\n          );\n          if (typeof textField === 'object' && textField.sections) {\n            if (textField.sections.length === 1) {\n              label = textField.toString();\n            } else {\n              label = textField.sections.reduce((acc, chunk, i) => {\n                const fonts = chunk.fontStack\n                  ? chunk.fontStack.split(',')\n                  : fontArray;\n                const chunkFont = mb2css(\n                  getFonts ? getFonts(fonts) : fonts,\n                  textSize * (chunk.scale || 1),\n                  textLineHeight\n                );\n                let text = chunk.text;\n                if (text === '\\n') {\n                  acc.push('\\n', '');\n                  return acc;\n                }\n                if (type == 2) {\n                  acc.push(applyLetterSpacing(text, letterSpacing), chunkFont);\n                  return;\n                }\n                text = wrapText(\n                  text,\n                  chunkFont,\n                  maxTextWidth,\n                  letterSpacing\n                ).split('\\n');\n                for (let i = 0, ii = text.length; i < ii; ++i) {\n                  if (i > 0) {\n                    acc.push('\\n', '');\n                  }\n                  acc.push(text[i], chunkFont);\n                }\n                return acc;\n              }, []);\n            }\n          } else {\n            label = fromTemplate(textField, properties).trim();\n          }\n          opacity = getValue(\n            layer,\n            'paint',\n            'text-opacity',\n            zoom,\n            f,\n            functionCache,\n            featureState\n          );\n        }\n        if (label && opacity && !skipLabel) {\n          if (!hasImage) {\n            ++stylesLength;\n            style = styles[stylesLength];\n            if (\n              !style ||\n              !style.getText() ||\n              style.getFill() ||\n              style.getStroke()\n            ) {\n              style = new Style();\n              styles[stylesLength] = style;\n            }\n            style.setImage(undefined);\n            style.setGeometry(undefined);\n          }\n          if (!style.getText()) {\n            style.setText(\n              text ||\n                new Text({\n                  padding: [2, 2, 2, 2],\n                })\n            );\n          }\n          text = style.getText();\n          const textTransform = layout['text-transform'];\n          if (textTransform == 'uppercase') {\n            label = Array.isArray(label)\n              ? label.map((t, i) => (i % 2 ? t : t.toUpperCase()))\n              : label.toUpperCase();\n          } else if (textTransform == 'lowercase') {\n            label = Array.isArray(label)\n              ? label.map((t, i) => (i % 2 ? t : t.toLowerCase()))\n              : label.toLowerCase();\n          }\n          const wrappedLabel = Array.isArray(label)\n            ? label\n            : type == 2\n            ? applyLetterSpacing(label, letterSpacing)\n            : wrapText(label, font, maxTextWidth, letterSpacing);\n          text.setText(wrappedLabel);\n          text.setFont(font);\n          text.setRotation(\n            deg2rad(\n              getValue(\n                layer,\n                'layout',\n                'text-rotate',\n                zoom,\n                f,\n                functionCache,\n                featureState\n              )\n            )\n          );\n          const textAnchor = getValue(\n            layer,\n            'layout',\n            'text-anchor',\n            zoom,\n            f,\n            functionCache,\n            featureState\n          );\n          const placement =\n            hasImage || type == 1\n              ? 'point'\n              : getValue(\n                  layer,\n                  'layout',\n                  'symbol-placement',\n                  zoom,\n                  f,\n                  functionCache,\n                  featureState\n                );\n          text.setPlacement(placement);\n          if (typeof text.setRepeat === 'function') {\n            const symbolSpacing = getValue(\n              layer,\n              'layout',\n              'symbol-spacing',\n              zoom,\n              f,\n              functionCache,\n              featureState\n            );\n            text.setRepeat(symbolSpacing * 2);\n          }\n          text.setOverflow(placement === 'point');\n          let textHaloWidth = getValue(\n            layer,\n            'paint',\n            'text-halo-width',\n            zoom,\n            f,\n            functionCache,\n            featureState\n          );\n          const textOffset = getValue(\n            layer,\n            'layout',\n            'text-offset',\n            zoom,\n            f,\n            functionCache,\n            featureState\n          );\n          const textTranslate = getValue(\n            layer,\n            'paint',\n            'text-translate',\n            zoom,\n            f,\n            functionCache,\n            featureState\n          );\n          // Text offset has to take halo width and line height into account\n          let vOffset = 0;\n          let hOffset = 0;\n          if (placement == 'point') {\n            let textAlign = 'center';\n            if (textAnchor.indexOf('left') !== -1) {\n              textAlign = 'left';\n              hOffset = textHaloWidth;\n            } else if (textAnchor.indexOf('right') !== -1) {\n              textAlign = 'right';\n              hOffset = -textHaloWidth;\n            }\n            text.setTextAlign(textAlign);\n            const textRotationAlignment = getValue(\n              layer,\n              'layout',\n              'text-rotation-alignment',\n              zoom,\n              f,\n              functionCache,\n              featureState\n            );\n            text.setRotateWithView(textRotationAlignment == 'map');\n          } else {\n            text.setMaxAngle(\n              (deg2rad(\n                getValue(\n                  layer,\n                  'layout',\n                  'text-max-angle',\n                  zoom,\n                  f,\n                  functionCache,\n                  featureState\n                )\n              ) *\n                label.length) /\n                wrappedLabel.length\n            );\n            text.setTextAlign();\n            text.setRotateWithView(false);\n          }\n          let textBaseline = 'middle';\n          if (textAnchor.indexOf('bottom') == 0) {\n            textBaseline = 'bottom';\n            vOffset = -textHaloWidth - 0.5 * (textLineHeight - 1) * textSize;\n          } else if (textAnchor.indexOf('top') == 0) {\n            textBaseline = 'top';\n            vOffset = textHaloWidth + 0.5 * (textLineHeight - 1) * textSize;\n          }\n          text.setTextBaseline(textBaseline);\n          const textJustify = getValue(\n            layer,\n            'layout',\n            'text-justify',\n            zoom,\n            f,\n            functionCache,\n            featureState\n          );\n          text.setJustify(textJustify === 'auto' ? undefined : textJustify);\n          text.setOffsetX(\n            textOffset[0] * textSize + hOffset + textTranslate[0]\n          );\n          text.setOffsetY(\n            textOffset[1] * textSize + vOffset + textTranslate[1]\n          );\n          textColor.setColor(\n            colorWithOpacity(\n              getValue(\n                layer,\n                'paint',\n                'text-color',\n                zoom,\n                f,\n                functionCache,\n                featureState\n              ),\n              opacity\n            )\n          );\n          text.setFill(textColor);\n          const haloColor = colorWithOpacity(\n            getValue(\n              layer,\n              'paint',\n              'text-halo-color',\n              zoom,\n              f,\n              functionCache,\n              featureState\n            ),\n            opacity\n          );\n          if (haloColor) {\n            textHalo.setColor(haloColor);\n            // spec here : https://docs.mapbox.com/mapbox-gl-js/style-spec/#paint-symbol-text-halo-width\n            // Halo width must be doubled because it is applied around the center of the text outline\n            textHaloWidth *= 2;\n            // 1/4 of text size (spec) x 2\n            const halfTextSize = 0.5 * textSize;\n            textHalo.setWidth(\n              textHaloWidth <= halfTextSize ? textHaloWidth : halfTextSize\n            );\n            text.setStroke(textHalo);\n          } else {\n            text.setStroke(undefined);\n          }\n          const textPadding = getValue(\n            layer,\n            'layout',\n            'text-padding',\n            zoom,\n            f,\n            functionCache,\n            featureState\n          );\n          const padding = text.getPadding();\n          if (textPadding !== padding[0]) {\n            padding[0] = textPadding;\n            padding[1] = textPadding;\n            padding[2] = textPadding;\n            padding[3] = textPadding;\n          }\n          style.setZIndex(index);\n        }\n      }\n    }\n\n    if (stylesLength > -1) {\n      styles.length = stylesLength + 1;\n      if (recordLayer) {\n        if (typeof feature.set === 'function') {\n          // ol/Feature\n          feature.set('mapbox-layer', featureBelongsToLayer);\n        } else {\n          // ol/render/Feature\n          feature.getProperties()['mapbox-layer'] = featureBelongsToLayer;\n        }\n      }\n      return styles;\n    }\n  };\n\n  olLayer.setStyle(styleFunction);\n  olLayer.set('mapbox-source', mapboxSource);\n  olLayer.set('mapbox-layers', mapboxLayers);\n  olLayer.set('mapbox-featurestate', {});\n  return styleFunction;\n}\n\nexport {\n  colorWithOpacity as _colorWithOpacity,\n  evaluateFilter as _evaluateFilter,\n  fromTemplate as _fromTemplate,\n  getValue as _getValue,\n};\n","/**\n * @module ol/layer/BaseImage\n */\nimport Layer from './Layer.js';\n\n/**\n * @template {import(\"../source/Image.js\").default} ImageSourceType\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {import(\"../Map.js\").default} [map] Sets the layer as overlay on a map. The map will not manage\n * this layer in its layers collection, and the layer will be rendered on top. This is useful for\n * temporary layers. The standard way to add a layer to a map and have it managed by the map is to\n * use {@link import(\"../Map.js\").default#addLayer map.addLayer()}.\n * @property {ImageSourceType} [source] Source for this layer.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n */\n\n/**\n * @classdesc\n * Server-rendered images that are available for arbitrary extents and\n * resolutions.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @template {import(\"../source/Image.js\").default} ImageSourceType\n * @template {import(\"../renderer/Layer.js\").default} RendererType\n * @extends {Layer<ImageSourceType, RendererType>}\n * @api\n */\nclass BaseImageLayer extends Layer {\n  /**\n   * @param {Options<ImageSourceType>} [options] Layer options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n    super(options);\n  }\n}\n\nexport default BaseImageLayer;\n","/**\n * @module ol/renderer/canvas/ImageLayer\n */\nimport CanvasLayerRenderer from './Layer.js';\nimport ImageState from '../../ImageState.js';\nimport ViewHint from '../../ViewHint.js';\nimport {\n  apply as applyTransform,\n  compose as composeTransform,\n  makeInverse,\n  toString as toTransformString,\n} from '../../transform.js';\nimport {\n  containsCoordinate,\n  containsExtent,\n  getHeight,\n  getIntersection,\n  getWidth,\n  intersects as intersectsExtent,\n  isEmpty,\n} from '../../extent.js';\nimport {fromUserExtent} from '../../proj.js';\n\n/**\n * @classdesc\n * Canvas renderer for image layers.\n * @api\n */\nclass CanvasImageLayerRenderer extends CanvasLayerRenderer {\n  /**\n   * @param {import(\"../../layer/Image.js\").default} imageLayer Image layer.\n   */\n  constructor(imageLayer) {\n    super(imageLayer);\n\n    /**\n     * @protected\n     * @type {?import(\"../../ImageBase.js\").default}\n     */\n    this.image_ = null;\n  }\n\n  /**\n   * @return {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} Image.\n   */\n  getImage() {\n    return this.image_ ? this.image_.getImage() : null;\n  }\n\n  /**\n   * Determine whether render should be called.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @return {boolean} Layer is ready to be rendered.\n   */\n  prepareFrame(frameState) {\n    const layerState = frameState.layerStatesArray[frameState.layerIndex];\n    const pixelRatio = frameState.pixelRatio;\n    const viewState = frameState.viewState;\n    const viewResolution = viewState.resolution;\n\n    const imageSource = this.getLayer().getSource();\n\n    const hints = frameState.viewHints;\n\n    let renderedExtent = frameState.extent;\n    if (layerState.extent !== undefined) {\n      renderedExtent = getIntersection(\n        renderedExtent,\n        fromUserExtent(layerState.extent, viewState.projection)\n      );\n    }\n\n    if (\n      !hints[ViewHint.ANIMATING] &&\n      !hints[ViewHint.INTERACTING] &&\n      !isEmpty(renderedExtent)\n    ) {\n      if (imageSource) {\n        const projection = viewState.projection;\n        const image = imageSource.getImage(\n          renderedExtent,\n          viewResolution,\n          pixelRatio,\n          projection\n        );\n        if (image) {\n          if (this.loadImage(image)) {\n            this.image_ = image;\n          } else if (image.getState() === ImageState.EMPTY) {\n            this.image_ = null;\n          }\n        }\n      } else {\n        this.image_ = null;\n      }\n    }\n\n    return !!this.image_;\n  }\n\n  /**\n   * @param {import(\"../../pixel.js\").Pixel} pixel Pixel.\n   * @return {Uint8ClampedArray} Data at the pixel location.\n   */\n  getData(pixel) {\n    const frameState = this.frameState;\n    if (!frameState) {\n      return null;\n    }\n\n    const layer = this.getLayer();\n    const coordinate = applyTransform(\n      frameState.pixelToCoordinateTransform,\n      pixel.slice()\n    );\n\n    const layerExtent = layer.getExtent();\n    if (layerExtent) {\n      if (!containsCoordinate(layerExtent, coordinate)) {\n        return null;\n      }\n    }\n\n    const imageExtent = this.image_.getExtent();\n    const img = this.getImage();\n\n    const imageMapWidth = getWidth(imageExtent);\n    const col = Math.floor(\n      img.width * ((coordinate[0] - imageExtent[0]) / imageMapWidth)\n    );\n    if (col < 0 || col >= img.width) {\n      return null;\n    }\n\n    const imageMapHeight = getHeight(imageExtent);\n    const row = Math.floor(\n      img.height * ((imageExtent[3] - coordinate[1]) / imageMapHeight)\n    );\n    if (row < 0 || row >= img.height) {\n      return null;\n    }\n\n    return this.getImageData(img, col, row);\n  }\n\n  /**\n   * Render the layer.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {HTMLElement} target Target that may be used to render content to.\n   * @return {HTMLElement} The rendered element.\n   */\n  renderFrame(frameState, target) {\n    const image = this.image_;\n    const imageExtent = image.getExtent();\n    const imageResolution = image.getResolution();\n    const imagePixelRatio = image.getPixelRatio();\n    const layerState = frameState.layerStatesArray[frameState.layerIndex];\n    const pixelRatio = frameState.pixelRatio;\n    const viewState = frameState.viewState;\n    const viewCenter = viewState.center;\n    const viewResolution = viewState.resolution;\n    const scale =\n      (pixelRatio * imageResolution) / (viewResolution * imagePixelRatio);\n\n    const extent = frameState.extent;\n    const resolution = viewState.resolution;\n    const rotation = viewState.rotation;\n    // desired dimensions of the canvas in pixels\n    const width = Math.round((getWidth(extent) / resolution) * pixelRatio);\n    const height = Math.round((getHeight(extent) / resolution) * pixelRatio);\n\n    // set forward and inverse pixel transforms\n    composeTransform(\n      this.pixelTransform,\n      frameState.size[0] / 2,\n      frameState.size[1] / 2,\n      1 / pixelRatio,\n      1 / pixelRatio,\n      rotation,\n      -width / 2,\n      -height / 2\n    );\n    makeInverse(this.inversePixelTransform, this.pixelTransform);\n\n    const canvasTransform = toTransformString(this.pixelTransform);\n\n    this.useContainer(target, canvasTransform, this.getBackground(frameState));\n\n    const context = this.context;\n    const canvas = context.canvas;\n\n    if (canvas.width != width || canvas.height != height) {\n      canvas.width = width;\n      canvas.height = height;\n    } else if (!this.containerReused) {\n      context.clearRect(0, 0, width, height);\n    }\n\n    // clipped rendering if layer extent is set\n    let clipped = false;\n    let render = true;\n    if (layerState.extent) {\n      const layerExtent = fromUserExtent(\n        layerState.extent,\n        viewState.projection\n      );\n      render = intersectsExtent(layerExtent, frameState.extent);\n      clipped = render && !containsExtent(layerExtent, frameState.extent);\n      if (clipped) {\n        this.clipUnrotated(context, frameState, layerExtent);\n      }\n    }\n\n    const img = this.getImage();\n\n    const transform = composeTransform(\n      this.tempTransform,\n      width / 2,\n      height / 2,\n      scale,\n      scale,\n      0,\n      (imagePixelRatio * (imageExtent[0] - viewCenter[0])) / imageResolution,\n      (imagePixelRatio * (viewCenter[1] - imageExtent[3])) / imageResolution\n    );\n\n    this.renderedResolution = (imageResolution * pixelRatio) / imagePixelRatio;\n\n    const dw = img.width * transform[0];\n    const dh = img.height * transform[3];\n\n    if (!this.getLayer().getSource().getInterpolate()) {\n      context.imageSmoothingEnabled = false;\n    }\n\n    this.preRender(context, frameState);\n    if (render && dw >= 0.5 && dh >= 0.5) {\n      const dx = transform[4];\n      const dy = transform[5];\n      const opacity = layerState.opacity;\n      let previousAlpha;\n      if (opacity !== 1) {\n        previousAlpha = context.globalAlpha;\n        context.globalAlpha = opacity;\n      }\n      context.drawImage(img, 0, 0, +img.width, +img.height, dx, dy, dw, dh);\n      if (opacity !== 1) {\n        context.globalAlpha = previousAlpha;\n      }\n    }\n    this.postRender(context, frameState);\n\n    if (clipped) {\n      context.restore();\n    }\n    context.imageSmoothingEnabled = true;\n\n    if (canvasTransform !== canvas.style.transform) {\n      canvas.style.transform = canvasTransform;\n    }\n\n    return this.container;\n  }\n}\n\nexport default CanvasImageLayerRenderer;\n","/**\n * @module ol/layer/Image\n */\nimport BaseImageLayer from './BaseImage.js';\nimport CanvasImageLayerRenderer from '../renderer/canvas/ImageLayer.js';\n\n/**\n * @classdesc\n * Server-rendered images that are available for arbitrary extents and\n * resolutions.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @template {import(\"../source/Image.js\").default} ImageSourceType\n * @extends {BaseImageLayer<ImageSourceType, CanvasImageLayerRenderer>}\n * @api\n */\nclass ImageLayer extends BaseImageLayer {\n  /**\n   * @param {import(\"./BaseImage.js\").Options<ImageSourceType>} [options] Layer options.\n   */\n  constructor(options) {\n    super(options);\n  }\n\n  createRenderer() {\n    return new CanvasImageLayerRenderer(this);\n  }\n\n  /**\n   * Get data for a pixel location.  A four element RGBA array will be returned.  For requests outside the\n   * layer extent, `null` will be returned.  Data for an image can only be retrieved if the\n   * source's `crossOrigin` property is set.\n   *\n   * ```js\n   * // display layer data on every pointer move\n   * map.on('pointermove', (event) => {\n   *   console.log(layer.getData(event.pixel));\n   * });\n   * ```\n   * @param {import(\"../pixel\").Pixel} pixel Pixel.\n   * @return {Uint8ClampedArray|Uint8Array|Float32Array|DataView|null} Pixel data.\n   * @api\n   */\n  getData(pixel) {\n    return super.getData(pixel);\n  }\n}\n\nexport default ImageLayer;\n","/**\n * @module ol/format/MVT\n */\n//FIXME Implement projection handling\n\nimport FeatureFormat, {transformGeometryWithOptions} from './Feature.js';\nimport LineString from '../geom/LineString.js';\nimport MultiLineString from '../geom/MultiLineString.js';\nimport MultiPoint from '../geom/MultiPoint.js';\nimport MultiPolygon from '../geom/MultiPolygon.js';\nimport PBF from 'pbf';\nimport Point from '../geom/Point.js';\nimport Polygon from '../geom/Polygon.js';\nimport Projection from '../proj/Projection.js';\nimport RenderFeature from '../render/Feature.js';\nimport {assert} from '../asserts.js';\nimport {get} from '../proj.js';\nimport {inflateEnds} from '../geom/flat/orient.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../Feature.js\").FeatureClass} [featureClass] Class for features returned by\n * {@link module:ol/format/MVT~MVT#readFeatures}. Set to {@link module:ol/Feature~Feature} to get full editing and geometry\n * support at the cost of decreased rendering performance. The default is\n * {@link module:ol/render/Feature~RenderFeature}, which is optimized for rendering and hit detection.\n * @property {string} [geometryName='geometry'] Geometry name to use when creating features.\n * @property {string} [layerName='layer'] Name of the feature attribute that holds the layer name.\n * @property {Array<string>} [layers] Layers to read features from. If not provided, features will be read from all\n * @property {string} [idProperty] Optional property that will be assigned as the feature id and removed from the properties.\n * layers.\n */\n\n/**\n * @classdesc\n * Feature format for reading data in the Mapbox MVT format.\n *\n * @param {Options} [options] Options.\n * @api\n */\nclass MVT extends FeatureFormat {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    super();\n\n    options = options ? options : {};\n\n    /**\n     * @type {Projection}\n     */\n    this.dataProjection = new Projection({\n      code: '',\n      units: 'tile-pixels',\n    });\n\n    /**\n     * @private\n     * @type {import(\"../Feature.js\").FeatureClass}\n     */\n    this.featureClass_ = options.featureClass\n      ? options.featureClass\n      : RenderFeature;\n\n    /**\n     * @private\n     * @type {string|undefined}\n     */\n    this.geometryName_ = options.geometryName;\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.layerName_ = options.layerName ? options.layerName : 'layer';\n\n    /**\n     * @private\n     * @type {Array<string>|null}\n     */\n    this.layers_ = options.layers ? options.layers : null;\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.idProperty_ = options.idProperty;\n\n    this.supportedMediaTypes = [\n      'application/vnd.mapbox-vector-tile',\n      'application/x-protobuf',\n    ];\n  }\n\n  /**\n   * Read the raw geometry from the pbf offset stored in a raw feature's geometry\n   * property.\n   * @param {PBF} pbf PBF.\n   * @param {Object} feature Raw feature.\n   * @param {Array<number>} flatCoordinates Array to store flat coordinates in.\n   * @param {Array<number>} ends Array to store ends in.\n   * @private\n   */\n  readRawGeometry_(pbf, feature, flatCoordinates, ends) {\n    pbf.pos = feature.geometry;\n\n    const end = pbf.readVarint() + pbf.pos;\n    let cmd = 1;\n    let length = 0;\n    let x = 0;\n    let y = 0;\n    let coordsLen = 0;\n    let currentEnd = 0;\n\n    while (pbf.pos < end) {\n      if (!length) {\n        const cmdLen = pbf.readVarint();\n        cmd = cmdLen & 0x7;\n        length = cmdLen >> 3;\n      }\n\n      length--;\n\n      if (cmd === 1 || cmd === 2) {\n        x += pbf.readSVarint();\n        y += pbf.readSVarint();\n\n        if (cmd === 1) {\n          // moveTo\n          if (coordsLen > currentEnd) {\n            ends.push(coordsLen);\n            currentEnd = coordsLen;\n          }\n        }\n\n        flatCoordinates.push(x, y);\n        coordsLen += 2;\n      } else if (cmd === 7) {\n        if (coordsLen > currentEnd) {\n          // close polygon\n          flatCoordinates.push(\n            flatCoordinates[currentEnd],\n            flatCoordinates[currentEnd + 1]\n          );\n          coordsLen += 2;\n        }\n      } else {\n        assert(false, 59); // Invalid command found in the PBF\n      }\n    }\n\n    if (coordsLen > currentEnd) {\n      ends.push(coordsLen);\n      currentEnd = coordsLen;\n    }\n  }\n\n  /**\n   * @private\n   * @param {PBF} pbf PBF\n   * @param {Object} rawFeature Raw Mapbox feature.\n   * @param {import(\"./Feature.js\").ReadOptions} options Read options.\n   * @return {import(\"../Feature.js\").FeatureLike|null} Feature.\n   */\n  createFeature_(pbf, rawFeature, options) {\n    const type = rawFeature.type;\n    if (type === 0) {\n      return null;\n    }\n\n    let feature;\n    const values = rawFeature.properties;\n\n    let id;\n    if (!this.idProperty_) {\n      id = rawFeature.id;\n    } else {\n      id = values[this.idProperty_];\n      delete values[this.idProperty_];\n    }\n\n    values[this.layerName_] = rawFeature.layer.name;\n\n    const flatCoordinates = /** @type {Array<number>} */ ([]);\n    const ends = /** @type {Array<number>} */ ([]);\n    this.readRawGeometry_(pbf, rawFeature, flatCoordinates, ends);\n\n    const geometryType = getGeometryType(type, ends.length);\n\n    if (this.featureClass_ === RenderFeature) {\n      feature = new this.featureClass_(\n        geometryType,\n        flatCoordinates,\n        ends,\n        values,\n        id\n      );\n      feature.transform(options.dataProjection);\n    } else {\n      let geom;\n      if (geometryType == 'Polygon') {\n        const endss = inflateEnds(flatCoordinates, ends);\n        geom =\n          endss.length > 1\n            ? new MultiPolygon(flatCoordinates, 'XY', endss)\n            : new Polygon(flatCoordinates, 'XY', ends);\n      } else {\n        geom =\n          geometryType === 'Point'\n            ? new Point(flatCoordinates, 'XY')\n            : geometryType === 'LineString'\n            ? new LineString(flatCoordinates, 'XY')\n            : geometryType === 'MultiPoint'\n            ? new MultiPoint(flatCoordinates, 'XY')\n            : geometryType === 'MultiLineString'\n            ? new MultiLineString(flatCoordinates, 'XY', ends)\n            : null;\n      }\n      const ctor = /** @type {typeof import(\"../Feature.js\").default} */ (\n        this.featureClass_\n      );\n      feature = new ctor();\n      if (this.geometryName_) {\n        feature.setGeometryName(this.geometryName_);\n      }\n      const geometry = transformGeometryWithOptions(geom, false, options);\n      feature.setGeometry(geometry);\n      if (id !== undefined) {\n        feature.setId(id);\n      }\n      feature.setProperties(values, true);\n    }\n\n    return feature;\n  }\n\n  /**\n   * @return {import(\"./Feature.js\").Type} Format.\n   */\n  getType() {\n    return 'arraybuffer';\n  }\n\n  /**\n   * Read all features.\n   *\n   * @param {ArrayBuffer} source Source.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n   * @return {Array<import(\"../Feature.js\").FeatureLike>} Features.\n   * @api\n   */\n  readFeatures(source, options) {\n    const layers = this.layers_;\n    options = this.adaptOptions(options);\n    const dataProjection = get(options.dataProjection);\n    dataProjection.setWorldExtent(options.extent);\n    options.dataProjection = dataProjection;\n\n    const pbf = new PBF(/** @type {ArrayBuffer} */ (source));\n    const pbfLayers = pbf.readFields(layersPBFReader, {});\n    const features = [];\n    for (const name in pbfLayers) {\n      if (layers && !layers.includes(name)) {\n        continue;\n      }\n      const pbfLayer = pbfLayers[name];\n\n      const extent = pbfLayer ? [0, 0, pbfLayer.extent, pbfLayer.extent] : null;\n      dataProjection.setExtent(extent);\n\n      for (let i = 0, ii = pbfLayer.length; i < ii; ++i) {\n        const rawFeature = readRawFeature(pbf, pbfLayer, i);\n        const feature = this.createFeature_(pbf, rawFeature, options);\n        if (feature !== null) {\n          features.push(feature);\n        }\n      }\n    }\n\n    return features;\n  }\n\n  /**\n   * Read the projection from the source.\n   *\n   * @param {Document|Element|Object|string} source Source.\n   * @return {import(\"../proj/Projection.js\").default} Projection.\n   * @api\n   */\n  readProjection(source) {\n    return this.dataProjection;\n  }\n\n  /**\n   * Sets the layers that features will be read from.\n   * @param {Array<string>} layers Layers.\n   * @api\n   */\n  setLayers(layers) {\n    this.layers_ = layers;\n  }\n}\n\n/**\n * Reader callback for parsing layers.\n * @param {number} tag The tag.\n * @param {Object} layers The layers object.\n * @param {PBF} pbf The PBF.\n */\nfunction layersPBFReader(tag, layers, pbf) {\n  if (tag === 3) {\n    const layer = {\n      keys: [],\n      values: [],\n      features: [],\n    };\n    const end = pbf.readVarint() + pbf.pos;\n    pbf.readFields(layerPBFReader, layer, end);\n    layer.length = layer.features.length;\n    if (layer.length) {\n      layers[layer.name] = layer;\n    }\n  }\n}\n\n/**\n * Reader callback for parsing layer.\n * @param {number} tag The tag.\n * @param {Object} layer The layer object.\n * @param {PBF} pbf The PBF.\n */\nfunction layerPBFReader(tag, layer, pbf) {\n  if (tag === 15) {\n    layer.version = pbf.readVarint();\n  } else if (tag === 1) {\n    layer.name = pbf.readString();\n  } else if (tag === 5) {\n    layer.extent = pbf.readVarint();\n  } else if (tag === 2) {\n    layer.features.push(pbf.pos);\n  } else if (tag === 3) {\n    layer.keys.push(pbf.readString());\n  } else if (tag === 4) {\n    let value = null;\n    const end = pbf.readVarint() + pbf.pos;\n    while (pbf.pos < end) {\n      tag = pbf.readVarint() >> 3;\n      value =\n        tag === 1\n          ? pbf.readString()\n          : tag === 2\n          ? pbf.readFloat()\n          : tag === 3\n          ? pbf.readDouble()\n          : tag === 4\n          ? pbf.readVarint64()\n          : tag === 5\n          ? pbf.readVarint()\n          : tag === 6\n          ? pbf.readSVarint()\n          : tag === 7\n          ? pbf.readBoolean()\n          : null;\n    }\n    layer.values.push(value);\n  }\n}\n\n/**\n * Reader callback for parsing feature.\n * @param {number} tag The tag.\n * @param {Object} feature The feature object.\n * @param {PBF} pbf The PBF.\n */\nfunction featurePBFReader(tag, feature, pbf) {\n  if (tag == 1) {\n    feature.id = pbf.readVarint();\n  } else if (tag == 2) {\n    const end = pbf.readVarint() + pbf.pos;\n    while (pbf.pos < end) {\n      const key = feature.layer.keys[pbf.readVarint()];\n      const value = feature.layer.values[pbf.readVarint()];\n      feature.properties[key] = value;\n    }\n  } else if (tag == 3) {\n    feature.type = pbf.readVarint();\n  } else if (tag == 4) {\n    feature.geometry = pbf.pos;\n  }\n}\n\n/**\n * Read a raw feature from the pbf offset stored at index `i` in the raw layer.\n * @param {PBF} pbf PBF.\n * @param {Object} layer Raw layer.\n * @param {number} i Index of the feature in the raw layer's `features` array.\n * @return {Object} Raw feature.\n */\nfunction readRawFeature(pbf, layer, i) {\n  pbf.pos = layer.features[i];\n  const end = pbf.readVarint() + pbf.pos;\n\n  const feature = {\n    layer: layer,\n    type: 0,\n    properties: {},\n  };\n  pbf.readFields(featurePBFReader, feature, end);\n  return feature;\n}\n\n/**\n * @param {number} type The raw feature's geometry type\n * @param {number} numEnds Number of ends of the flat coordinates of the\n * geometry.\n * @return {import(\"../geom/Geometry.js\").Type} The geometry type.\n */\nfunction getGeometryType(type, numEnds) {\n  /** @type {import(\"../geom/Geometry.js\").Type} */\n  let geometryType;\n  if (type === 1) {\n    geometryType = numEnds === 1 ? 'Point' : 'MultiPoint';\n  } else if (type === 2) {\n    geometryType = numEnds === 1 ? 'LineString' : 'MultiLineString';\n  } else if (type === 3) {\n    geometryType = 'Polygon';\n    // MultiPolygon not relevant for rendering - winding order determines\n    // outer rings of polygons.\n  }\n  return geometryType;\n}\n\nexport default MVT;\n","/**\n * @module ol/ImageCanvas\n */\nimport ImageBase from './ImageBase.js';\nimport ImageState from './ImageState.js';\n\n/**\n * A function that is called to trigger asynchronous canvas drawing.  It is\n * called with a \"done\" callback that should be called when drawing is done.\n * If any error occurs during drawing, the \"done\" callback should be called with\n * that error.\n *\n * @typedef {function(function(Error=): void): void} Loader\n */\n\nclass ImageCanvas extends ImageBase {\n  /**\n   * @param {import(\"./extent.js\").Extent} extent Extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {HTMLCanvasElement} canvas Canvas.\n   * @param {Loader} [loader] Optional loader function to\n   *     support asynchronous canvas drawing.\n   */\n  constructor(extent, resolution, pixelRatio, canvas, loader) {\n    const state = loader !== undefined ? ImageState.IDLE : ImageState.LOADED;\n\n    super(extent, resolution, pixelRatio, state);\n\n    /**\n     * Optional canvas loader function.\n     * @type {?Loader}\n     * @private\n     */\n    this.loader_ = loader !== undefined ? loader : null;\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement}\n     */\n    this.canvas_ = canvas;\n\n    /**\n     * @private\n     * @type {?Error}\n     */\n    this.error_ = null;\n  }\n\n  /**\n   * Get any error associated with asynchronous rendering.\n   * @return {?Error} Any error that occurred during rendering.\n   */\n  getError() {\n    return this.error_;\n  }\n\n  /**\n   * Handle async drawing complete.\n   * @param {Error} [err] Any error during drawing.\n   * @private\n   */\n  handleLoad_(err) {\n    if (err) {\n      this.error_ = err;\n      this.state = ImageState.ERROR;\n    } else {\n      this.state = ImageState.LOADED;\n    }\n    this.changed();\n  }\n\n  /**\n   * Load not yet loaded URI.\n   */\n  load() {\n    if (this.state == ImageState.IDLE) {\n      this.state = ImageState.LOADING;\n      this.changed();\n      this.loader_(this.handleLoad_.bind(this));\n    }\n  }\n\n  /**\n   * @return {HTMLCanvasElement} Canvas element.\n   */\n  getImage() {\n    return this.canvas_;\n  }\n}\n\nexport default ImageCanvas;\n","/**\n * @module ol/reproj/Image\n */\nimport {ERROR_THRESHOLD} from './common.js';\n\nimport EventType from '../events/EventType.js';\nimport ImageBase from '../ImageBase.js';\nimport ImageState from '../ImageState.js';\nimport Triangulation from './Triangulation.js';\nimport {\n  calculateSourceResolution,\n  render as renderReprojected,\n} from '../reproj.js';\nimport {getCenter, getHeight, getIntersection, getWidth} from '../extent.js';\nimport {listen, unlistenByKey} from '../events.js';\n\n/**\n * @typedef {function(import(\"../extent.js\").Extent, number, number) : import(\"../ImageBase.js\").default} FunctionType\n */\n\n/**\n * @classdesc\n * Class encapsulating single reprojected image.\n * See {@link module:ol/source/Image~ImageSource}.\n */\nclass ReprojImage extends ImageBase {\n  /**\n   * @param {import(\"../proj/Projection.js\").default} sourceProj Source projection (of the data).\n   * @param {import(\"../proj/Projection.js\").default} targetProj Target projection.\n   * @param {import(\"../extent.js\").Extent} targetExtent Target extent.\n   * @param {number} targetResolution Target resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {FunctionType} getImageFunction\n   *     Function returning source images (extent, resolution, pixelRatio).\n   * @param {boolean} interpolate Use linear interpolation when resampling.\n   */\n  constructor(\n    sourceProj,\n    targetProj,\n    targetExtent,\n    targetResolution,\n    pixelRatio,\n    getImageFunction,\n    interpolate\n  ) {\n    const maxSourceExtent = sourceProj.getExtent();\n    const maxTargetExtent = targetProj.getExtent();\n\n    const limitedTargetExtent = maxTargetExtent\n      ? getIntersection(targetExtent, maxTargetExtent)\n      : targetExtent;\n\n    const targetCenter = getCenter(limitedTargetExtent);\n    const sourceResolution = calculateSourceResolution(\n      sourceProj,\n      targetProj,\n      targetCenter,\n      targetResolution\n    );\n\n    const errorThresholdInPixels = ERROR_THRESHOLD;\n\n    const triangulation = new Triangulation(\n      sourceProj,\n      targetProj,\n      limitedTargetExtent,\n      maxSourceExtent,\n      sourceResolution * errorThresholdInPixels,\n      targetResolution\n    );\n\n    const sourceExtent = triangulation.calculateSourceExtent();\n    const sourceImage = getImageFunction(\n      sourceExtent,\n      sourceResolution,\n      pixelRatio\n    );\n    const state = sourceImage ? ImageState.IDLE : ImageState.EMPTY;\n    const sourcePixelRatio = sourceImage ? sourceImage.getPixelRatio() : 1;\n\n    super(targetExtent, targetResolution, sourcePixelRatio, state);\n\n    /**\n     * @private\n     * @type {import(\"../proj/Projection.js\").default}\n     */\n    this.targetProj_ = targetProj;\n\n    /**\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.maxSourceExtent_ = maxSourceExtent;\n\n    /**\n     * @private\n     * @type {!import(\"./Triangulation.js\").default}\n     */\n    this.triangulation_ = triangulation;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.targetResolution_ = targetResolution;\n\n    /**\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.targetExtent_ = targetExtent;\n\n    /**\n     * @private\n     * @type {import(\"../ImageBase.js\").default}\n     */\n    this.sourceImage_ = sourceImage;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.sourcePixelRatio_ = sourcePixelRatio;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.interpolate_ = interpolate;\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement}\n     */\n    this.canvas_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../events.js\").EventsKey}\n     */\n    this.sourceListenerKey_ = null;\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    if (this.state == ImageState.LOADING) {\n      this.unlistenSource_();\n    }\n    super.disposeInternal();\n  }\n\n  /**\n   * @return {HTMLCanvasElement} Image.\n   */\n  getImage() {\n    return this.canvas_;\n  }\n\n  /**\n   * @return {import(\"../proj/Projection.js\").default} Projection.\n   */\n  getProjection() {\n    return this.targetProj_;\n  }\n\n  /**\n   * @private\n   */\n  reproject_() {\n    const sourceState = this.sourceImage_.getState();\n    if (sourceState == ImageState.LOADED) {\n      const width = getWidth(this.targetExtent_) / this.targetResolution_;\n      const height = getHeight(this.targetExtent_) / this.targetResolution_;\n\n      this.canvas_ = renderReprojected(\n        width,\n        height,\n        this.sourcePixelRatio_,\n        this.sourceImage_.getResolution(),\n        this.maxSourceExtent_,\n        this.targetResolution_,\n        this.targetExtent_,\n        this.triangulation_,\n        [\n          {\n            extent: this.sourceImage_.getExtent(),\n            image: this.sourceImage_.getImage(),\n          },\n        ],\n        0,\n        undefined,\n        this.interpolate_\n      );\n    }\n    this.state = sourceState;\n    this.changed();\n  }\n\n  /**\n   * Load not yet loaded URI.\n   */\n  load() {\n    if (this.state == ImageState.IDLE) {\n      this.state = ImageState.LOADING;\n      this.changed();\n\n      const sourceState = this.sourceImage_.getState();\n      if (sourceState == ImageState.LOADED || sourceState == ImageState.ERROR) {\n        this.reproject_();\n      } else {\n        this.sourceListenerKey_ = listen(\n          this.sourceImage_,\n          EventType.CHANGE,\n          function (e) {\n            const sourceState = this.sourceImage_.getState();\n            if (\n              sourceState == ImageState.LOADED ||\n              sourceState == ImageState.ERROR\n            ) {\n              this.unlistenSource_();\n              this.reproject_();\n            }\n          },\n          this\n        );\n        this.sourceImage_.load();\n      }\n    }\n  }\n\n  /**\n   * @private\n   */\n  unlistenSource_() {\n    unlistenByKey(\n      /** @type {!import(\"../events.js\").EventsKey} */ (this.sourceListenerKey_)\n    );\n    this.sourceListenerKey_ = null;\n  }\n}\n\nexport default ReprojImage;\n","/**\n * @module ol/source/Image\n */\nimport Event from '../events/Event.js';\nimport ImageState from '../ImageState.js';\nimport ReprojImage from '../reproj/Image.js';\nimport Source from './Source.js';\nimport {abstract} from '../util.js';\nimport {equals} from '../extent.js';\nimport {equivalent} from '../proj.js';\nimport {linearFindNearest} from '../array.js';\n\n/**\n * @enum {string}\n */\nexport const ImageSourceEventType = {\n  /**\n   * Triggered when an image starts loading.\n   * @event module:ol/source/Image.ImageSourceEvent#imageloadstart\n   * @api\n   */\n  IMAGELOADSTART: 'imageloadstart',\n\n  /**\n   * Triggered when an image finishes loading.\n   * @event module:ol/source/Image.ImageSourceEvent#imageloadend\n   * @api\n   */\n  IMAGELOADEND: 'imageloadend',\n\n  /**\n   * Triggered if image loading results in an error.\n   * @event module:ol/source/Image.ImageSourceEvent#imageloaderror\n   * @api\n   */\n  IMAGELOADERROR: 'imageloaderror',\n};\n\n/**\n * @typedef {'imageloadend'|'imageloaderror'|'imageloadstart'} ImageSourceEventTypes\n */\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/source/Image~ImageSource} instances are instances of this\n * type.\n */\nexport class ImageSourceEvent extends Event {\n  /**\n   * @param {string} type Type.\n   * @param {import(\"../Image.js\").default} image The image.\n   */\n  constructor(type, image) {\n    super(type);\n\n    /**\n     * The image related to the event.\n     * @type {import(\"../Image.js\").default}\n     * @api\n     */\n    this.image = image;\n  }\n}\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types, import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<ImageSourceEventTypes, ImageSourceEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"../ObjectEventType\").Types\n *     |ImageSourceEventTypes, Return>} ImageSourceOnSignature\n */\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {boolean} [interpolate=true] Use interpolated values when resampling.  By default,\n * linear interpolation is used when resampling.  Set to false to use the nearest neighbor instead.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection.\n * @property {Array<number>} [resolutions] Resolutions.\n * @property {import(\"./Source.js\").State} [state] State.\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for sources providing a single image.\n * @abstract\n * @fires module:ol/source/Image.ImageSourceEvent\n * @api\n */\nclass ImageSource extends Source {\n  /**\n   * @param {Options} options Single image source options.\n   */\n  constructor(options) {\n    super({\n      attributions: options.attributions,\n      projection: options.projection,\n      state: options.state,\n      interpolate:\n        options.interpolate !== undefined ? options.interpolate : true,\n    });\n\n    /***\n     * @type {ImageSourceOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {ImageSourceOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {ImageSourceOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @private\n     * @type {Array<number>|null}\n     */\n    this.resolutions_ =\n      options.resolutions !== undefined ? options.resolutions : null;\n\n    /**\n     * @private\n     * @type {import(\"../reproj/Image.js\").default}\n     */\n    this.reprojectedImage_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.reprojectedRevision_ = 0;\n  }\n\n  /**\n   * @return {Array<number>|null} Resolutions.\n   */\n  getResolutions() {\n    return this.resolutions_;\n  }\n\n  /**\n   * @param {Array<number>|null} resolutions Resolutions.\n   */\n  setResolutions(resolutions) {\n    this.resolutions_ = resolutions;\n  }\n\n  /**\n   * @protected\n   * @param {number} resolution Resolution.\n   * @return {number} Resolution.\n   */\n  findNearestResolution(resolution) {\n    const resolutions = this.getResolutions();\n    if (resolutions) {\n      const idx = linearFindNearest(resolutions, resolution, 0);\n      resolution = resolutions[idx];\n    }\n    return resolution;\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {import(\"../ImageBase.js\").default} Single image.\n   */\n  getImage(extent, resolution, pixelRatio, projection) {\n    const sourceProjection = this.getProjection();\n    if (\n      !sourceProjection ||\n      !projection ||\n      equivalent(sourceProjection, projection)\n    ) {\n      if (sourceProjection) {\n        projection = sourceProjection;\n      }\n      return this.getImageInternal(extent, resolution, pixelRatio, projection);\n    }\n    if (this.reprojectedImage_) {\n      if (\n        this.reprojectedRevision_ == this.getRevision() &&\n        equivalent(this.reprojectedImage_.getProjection(), projection) &&\n        this.reprojectedImage_.getResolution() == resolution &&\n        equals(this.reprojectedImage_.getExtent(), extent)\n      ) {\n        return this.reprojectedImage_;\n      }\n      this.reprojectedImage_.dispose();\n      this.reprojectedImage_ = null;\n    }\n\n    this.reprojectedImage_ = new ReprojImage(\n      sourceProjection,\n      projection,\n      extent,\n      resolution,\n      pixelRatio,\n      (extent, resolution, pixelRatio) =>\n        this.getImageInternal(extent, resolution, pixelRatio, sourceProjection),\n      this.getInterpolate()\n    );\n    this.reprojectedRevision_ = this.getRevision();\n\n    return this.reprojectedImage_;\n  }\n\n  /**\n   * @abstract\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {import(\"../ImageBase.js\").default} Single image.\n   * @protected\n   */\n  getImageInternal(extent, resolution, pixelRatio, projection) {\n    return abstract();\n  }\n\n  /**\n   * Handle image change events.\n   * @param {import(\"../events/Event.js\").default} event Event.\n   * @protected\n   */\n  handleImageChange(event) {\n    const image = /** @type {import(\"../Image.js\").default} */ (event.target);\n    let type;\n    switch (image.getState()) {\n      case ImageState.LOADING:\n        this.loading = true;\n        type = ImageSourceEventType.IMAGELOADSTART;\n        break;\n      case ImageState.LOADED:\n        this.loading = false;\n        type = ImageSourceEventType.IMAGELOADEND;\n        break;\n      case ImageState.ERROR:\n        this.loading = false;\n        type = ImageSourceEventType.IMAGELOADERROR;\n        break;\n      default:\n        return;\n    }\n    if (this.hasListener(type)) {\n      this.dispatchEvent(new ImageSourceEvent(type, image));\n    }\n  }\n}\n\n/**\n * Default image load function for image sources that use import(\"../Image.js\").Image image\n * instances.\n * @param {import(\"../Image.js\").default} image Image.\n * @param {string} src Source.\n */\nexport function defaultImageLoadFunction(image, src) {\n  /** @type {HTMLImageElement|HTMLVideoElement} */ (image.getImage()).src = src;\n}\n\nexport default ImageSource;\n","/**\n * @module ol/layer/BaseTile\n */\nimport Layer from './Layer.js';\nimport TileProperty from './TileProperty.js';\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"./Base\").BaseLayerObjectEventTypes|\n *     import(\"./Layer.js\").LayerEventType|'change:preload'|'change:useInterimTilesOnError', import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../render/EventType\").LayerRenderEventTypes, import(\"../render/Event\").default, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"./Base\").BaseLayerObjectEventTypes|\n *   import(\"./Layer.js\").LayerEventType|'change:preload'|'change:useInterimTilesOnError'|import(\"../render/EventType\").LayerRenderEventTypes, Return>} BaseTileLayerOnSignature\n */\n\n/**\n * @template {import(\"../source/Tile.js\").default} TileSourceType\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {number} [preload=0] Preload. Load low-resolution tiles up to `preload` levels. `0`\n * means no preloading.\n * @property {TileSourceType} [source] Source for this layer.\n * @property {import(\"../Map.js\").default} [map] Sets the layer as overlay on a map. The map will not manage\n * this layer in its layers collection, and the layer will be rendered on top. This is useful for\n * temporary layers. The standard way to add a layer to a map and have it managed by the map is to\n * use {@link import(\"../Map.js\").default#addLayer map.addLayer()}.\n * @property {boolean} [useInterimTilesOnError=true] Use interim tiles on error.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n */\n\n/**\n * @classdesc\n * For layer sources that provide pre-rendered, tiled images in grids that are\n * organized by zoom levels for specific resolutions.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @template {import(\"../source/Tile.js\").default} TileSourceType\n * @template {import(\"../renderer/Layer.js\").default} RendererType\n * @extends {Layer<TileSourceType, RendererType>}\n * @api\n */\nclass BaseTileLayer extends Layer {\n  /**\n   * @param {Options<TileSourceType>} [options] Tile layer options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    const baseOptions = Object.assign({}, options);\n\n    delete baseOptions.preload;\n    delete baseOptions.useInterimTilesOnError;\n    super(baseOptions);\n\n    /***\n     * @type {BaseTileLayerOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {BaseTileLayerOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {BaseTileLayerOnSignature<void>}\n     */\n    this.un;\n\n    this.setPreload(options.preload !== undefined ? options.preload : 0);\n    this.setUseInterimTilesOnError(\n      options.useInterimTilesOnError !== undefined\n        ? options.useInterimTilesOnError\n        : true\n    );\n  }\n\n  /**\n   * Return the level as number to which we will preload tiles up to.\n   * @return {number} The level to preload tiles up to.\n   * @observable\n   * @api\n   */\n  getPreload() {\n    return /** @type {number} */ (this.get(TileProperty.PRELOAD));\n  }\n\n  /**\n   * Set the level as number to which we will preload tiles up to.\n   * @param {number} preload The level to preload tiles up to.\n   * @observable\n   * @api\n   */\n  setPreload(preload) {\n    this.set(TileProperty.PRELOAD, preload);\n  }\n\n  /**\n   * Whether we use interim tiles on error.\n   * @return {boolean} Use interim tiles on error.\n   * @observable\n   * @api\n   */\n  getUseInterimTilesOnError() {\n    return /** @type {boolean} */ (\n      this.get(TileProperty.USE_INTERIM_TILES_ON_ERROR)\n    );\n  }\n\n  /**\n   * Set whether we use interim tiles on error.\n   * @param {boolean} useInterimTilesOnError Use interim tiles on error.\n   * @observable\n   * @api\n   */\n  setUseInterimTilesOnError(useInterimTilesOnError) {\n    this.set(TileProperty.USE_INTERIM_TILES_ON_ERROR, useInterimTilesOnError);\n  }\n\n  /**\n   * Get data for a pixel location.  The return type depends on the source data.  For image tiles,\n   * a four element RGBA array will be returned.  For data tiles, the array length will match the\n   * number of bands in the dataset.  For requests outside the layer extent, `null` will be returned.\n   * Data for a image tiles can only be retrieved if the source's `crossOrigin` property is set.\n   *\n   * ```js\n   * // display layer data on every pointer move\n   * map.on('pointermove', (event) => {\n   *   console.log(layer.getData(event.pixel));\n   * });\n   * ```\n   * @param {import(\"../pixel\").Pixel} pixel Pixel.\n   * @return {Uint8ClampedArray|Uint8Array|Float32Array|DataView|null} Pixel data.\n   * @api\n   */\n  getData(pixel) {\n    return super.getData(pixel);\n  }\n}\n\nexport default BaseTileLayer;\n","/**\n * @module ol/layer/Tile\n */\nimport BaseTileLayer from './BaseTile.js';\nimport CanvasTileLayerRenderer from '../renderer/canvas/TileLayer.js';\n\n/**\n * @classdesc\n * For layer sources that provide pre-rendered, tiled images in grids that are\n * organized by zoom levels for specific resolutions.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @template {import(\"../source/Tile.js\").default} TileSourceType\n * @extends BaseTileLayer<TileSourceType, CanvasTileLayerRenderer>\n * @api\n */\nclass TileLayer extends BaseTileLayer {\n  /**\n   * @param {import(\"./BaseTile.js\").Options<TileSourceType>} [options] Tile layer options.\n   */\n  constructor(options) {\n    super(options);\n  }\n\n  createRenderer() {\n    return new CanvasTileLayerRenderer(this);\n  }\n}\n\nexport default TileLayer;\n","/**\n * @module ol/structs/LRUCache\n */\n\nimport {assert} from '../asserts.js';\n\n/**\n * @typedef {Object} Entry\n * @property {string} key_ Key.\n * @property {Object} newer Newer.\n * @property {Object} older Older.\n * @property {*} value_ Value.\n */\n\n/**\n * @classdesc\n * Implements a Least-Recently-Used cache where the keys do not conflict with\n * Object's properties (e.g. 'hasOwnProperty' is not allowed as a key). Expiring\n * items from the cache is the responsibility of the user.\n *\n * @fires import(\"../events/Event.js\").default\n * @template T\n */\nclass LRUCache {\n  /**\n   * @param {number} [highWaterMark] High water mark.\n   */\n  constructor(highWaterMark) {\n    /**\n     * Desired max cache size after expireCache(). If set to 0, no cache entries\n     * will be pruned at all.\n     * @type {number}\n     */\n    this.highWaterMark = highWaterMark !== undefined ? highWaterMark : 2048;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.count_ = 0;\n\n    /**\n     * @private\n     * @type {!Object<string, Entry>}\n     */\n    this.entries_ = {};\n\n    /**\n     * @private\n     * @type {?Entry}\n     */\n    this.oldest_ = null;\n\n    /**\n     * @private\n     * @type {?Entry}\n     */\n    this.newest_ = null;\n  }\n\n  /**\n   * @return {boolean} Can expire cache.\n   */\n  canExpireCache() {\n    return this.highWaterMark > 0 && this.getCount() > this.highWaterMark;\n  }\n\n  /**\n   * Expire the cache.\n   * @param {!Object<string, boolean>} [keep] Keys to keep. To be implemented by subclasses.\n   */\n  expireCache(keep) {\n    while (this.canExpireCache()) {\n      this.pop();\n    }\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  clear() {\n    this.count_ = 0;\n    this.entries_ = {};\n    this.oldest_ = null;\n    this.newest_ = null;\n  }\n\n  /**\n   * @param {string} key Key.\n   * @return {boolean} Contains key.\n   */\n  containsKey(key) {\n    return this.entries_.hasOwnProperty(key);\n  }\n\n  /**\n   * @param {function(T, string, LRUCache<T>): ?} f The function\n   *     to call for every entry from the oldest to the newer. This function takes\n   *     3 arguments (the entry value, the entry key and the LRUCache object).\n   *     The return value is ignored.\n   */\n  forEach(f) {\n    let entry = this.oldest_;\n    while (entry) {\n      f(entry.value_, entry.key_, this);\n      entry = entry.newer;\n    }\n  }\n\n  /**\n   * @param {string} key Key.\n   * @param {*} [options] Options (reserved for subclasses).\n   * @return {T} Value.\n   */\n  get(key, options) {\n    const entry = this.entries_[key];\n    assert(entry !== undefined, 15); // Tried to get a value for a key that does not exist in the cache\n    if (entry === this.newest_) {\n      return entry.value_;\n    } else if (entry === this.oldest_) {\n      this.oldest_ = /** @type {Entry} */ (this.oldest_.newer);\n      this.oldest_.older = null;\n    } else {\n      entry.newer.older = entry.older;\n      entry.older.newer = entry.newer;\n    }\n    entry.newer = null;\n    entry.older = this.newest_;\n    this.newest_.newer = entry;\n    this.newest_ = entry;\n    return entry.value_;\n  }\n\n  /**\n   * Remove an entry from the cache.\n   * @param {string} key The entry key.\n   * @return {T} The removed entry.\n   */\n  remove(key) {\n    const entry = this.entries_[key];\n    assert(entry !== undefined, 15); // Tried to get a value for a key that does not exist in the cache\n    if (entry === this.newest_) {\n      this.newest_ = /** @type {Entry} */ (entry.older);\n      if (this.newest_) {\n        this.newest_.newer = null;\n      }\n    } else if (entry === this.oldest_) {\n      this.oldest_ = /** @type {Entry} */ (entry.newer);\n      if (this.oldest_) {\n        this.oldest_.older = null;\n      }\n    } else {\n      entry.newer.older = entry.older;\n      entry.older.newer = entry.newer;\n    }\n    delete this.entries_[key];\n    --this.count_;\n    return entry.value_;\n  }\n\n  /**\n   * @return {number} Count.\n   */\n  getCount() {\n    return this.count_;\n  }\n\n  /**\n   * @return {Array<string>} Keys.\n   */\n  getKeys() {\n    const keys = new Array(this.count_);\n    let i = 0;\n    let entry;\n    for (entry = this.newest_; entry; entry = entry.older) {\n      keys[i++] = entry.key_;\n    }\n    return keys;\n  }\n\n  /**\n   * @return {Array<T>} Values.\n   */\n  getValues() {\n    const values = new Array(this.count_);\n    let i = 0;\n    let entry;\n    for (entry = this.newest_; entry; entry = entry.older) {\n      values[i++] = entry.value_;\n    }\n    return values;\n  }\n\n  /**\n   * @return {T} Last value.\n   */\n  peekLast() {\n    return this.oldest_.value_;\n  }\n\n  /**\n   * @return {string} Last key.\n   */\n  peekLastKey() {\n    return this.oldest_.key_;\n  }\n\n  /**\n   * Get the key of the newest item in the cache.  Throws if the cache is empty.\n   * @return {string} The newest key.\n   */\n  peekFirstKey() {\n    return this.newest_.key_;\n  }\n\n  /**\n   * Return an entry without updating least recently used time.\n   * @param {string} key Key.\n   * @return {T} Value.\n   */\n  peek(key) {\n    if (!this.containsKey(key)) {\n      return undefined;\n    }\n    return this.entries_[key].value_;\n  }\n\n  /**\n   * @return {T} value Value.\n   */\n  pop() {\n    const entry = this.oldest_;\n    delete this.entries_[entry.key_];\n    if (entry.newer) {\n      entry.newer.older = null;\n    }\n    this.oldest_ = /** @type {Entry} */ (entry.newer);\n    if (!this.oldest_) {\n      this.newest_ = null;\n    }\n    --this.count_;\n    return entry.value_;\n  }\n\n  /**\n   * @param {string} key Key.\n   * @param {T} value Value.\n   */\n  replace(key, value) {\n    this.get(key); // update `newest_`\n    this.entries_[key].value_ = value;\n  }\n\n  /**\n   * @param {string} key Key.\n   * @param {T} value Value.\n   */\n  set(key, value) {\n    assert(!(key in this.entries_), 16); // Tried to set a value for a key that is used already\n    const entry = {\n      key_: key,\n      newer: null,\n      older: this.newest_,\n      value_: value,\n    };\n    if (!this.newest_) {\n      this.oldest_ = entry;\n    } else {\n      this.newest_.newer = entry;\n    }\n    this.newest_ = entry;\n    this.entries_[key] = entry;\n    ++this.count_;\n  }\n\n  /**\n   * Set a maximum number of entries for the cache.\n   * @param {number} size Cache size.\n   * @api\n   */\n  setSize(size) {\n    this.highWaterMark = size;\n  }\n}\n\nexport default LRUCache;\n","/**\n * @module ol/TileCache\n */\nimport LRUCache from './structs/LRUCache.js';\nimport {fromKey, getKey} from './tilecoord.js';\n\nclass TileCache extends LRUCache {\n  clear() {\n    while (this.getCount() > 0) {\n      this.pop().release();\n    }\n    super.clear();\n  }\n\n  /**\n   * @param {!Object<string, boolean>} usedTiles Used tiles.\n   */\n  expireCache(usedTiles) {\n    while (this.canExpireCache()) {\n      const tile = this.peekLast();\n      if (tile.getKey() in usedTiles) {\n        break;\n      } else {\n        this.pop().release();\n      }\n    }\n  }\n\n  /**\n   * Prune all tiles from the cache that don't have the same z as the newest tile.\n   */\n  pruneExceptNewestZ() {\n    if (this.getCount() === 0) {\n      return;\n    }\n    const key = this.peekFirstKey();\n    const tileCoord = fromKey(key);\n    const z = tileCoord[0];\n    this.forEach((tile) => {\n      if (tile.tileCoord[0] !== z) {\n        this.remove(getKey(tile.tileCoord));\n        tile.release();\n      }\n    });\n  }\n}\n\nexport default TileCache;\n","/**\n * @module ol/tilegrid/TileGrid\n */\nimport TileRange, {\n  createOrUpdate as createOrUpdateTileRange,\n} from '../TileRange.js';\nimport {DEFAULT_TILE_SIZE} from './common.js';\nimport {assert} from '../asserts.js';\nimport {ceil, clamp, floor} from '../math.js';\nimport {createOrUpdate, getTopLeft} from '../extent.js';\nimport {createOrUpdate as createOrUpdateTileCoord} from '../tilecoord.js';\nimport {intersectsLinearRing} from '../geom/flat/intersectsextent.js';\nimport {isSorted, linearFindNearest} from '../array.js';\nimport {toSize} from '../size.js';\n\n/**\n * @private\n * @type {import(\"../tilecoord.js\").TileCoord}\n */\nconst tmpTileCoord = [0, 0, 0];\n\n/**\n * Number of decimal digits to consider in integer values when rounding.\n * @type {number}\n */\nconst DECIMALS = 5;\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../extent.js\").Extent} [extent] Extent for the tile grid. No tiles outside this\n * extent will be requested by {@link module:ol/source/Tile~TileSource} sources. When no `origin` or\n * `origins` are configured, the `origin` will be set to the top-left corner of the extent.\n * @property {number} [minZoom=0] Minimum zoom.\n * @property {import(\"../coordinate.js\").Coordinate} [origin] The tile grid origin, i.e. where the `x`\n * and `y` axes meet (`[z, 0, 0]`). Tile coordinates increase left to right and downwards. If not\n * specified, `extent` or `origins` must be provided.\n * @property {Array<import(\"../coordinate.js\").Coordinate>} [origins] Tile grid origins, i.e. where\n * the `x` and `y` axes meet (`[z, 0, 0]`), for each zoom level. If given, the array length\n * should match the length of the `resolutions` array, i.e. each resolution can have a different\n * origin. Tile coordinates increase left to right and downwards. If not specified, `extent` or\n * `origin` must be provided.\n * @property {!Array<number>} resolutions Resolutions. The array index of each resolution needs\n * to match the zoom level. This means that even if a `minZoom` is configured, the resolutions\n * array will have a length of `maxZoom + 1`.\n * @property {Array<import(\"../size.js\").Size>} [sizes] Number of tile rows and columns\n * of the grid for each zoom level. If specified the values\n * define each zoom level's extent together with the `origin` or `origins`.\n * A grid `extent` can be configured in addition, and will further limit the extent\n * for which tile requests are made by sources. If the bottom-left corner of\n * an extent is used as `origin` or `origins`, then the `y` value must be\n * negative because OpenLayers tile coordinates use the top left as the origin.\n * @property {number|import(\"../size.js\").Size} [tileSize] Tile size.\n * Default is `[256, 256]`.\n * @property {Array<number|import(\"../size.js\").Size>} [tileSizes] Tile sizes. If given, the array length\n * should match the length of the `resolutions` array, i.e. each resolution can have a different\n * tile size.\n */\n\n/**\n * @classdesc\n * Base class for setting the grid pattern for sources accessing tiled-image\n * servers.\n * @api\n */\nclass TileGrid {\n  /**\n   * @param {Options} options Tile grid options.\n   */\n  constructor(options) {\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.minZoom = options.minZoom !== undefined ? options.minZoom : 0;\n\n    /**\n     * @private\n     * @type {!Array<number>}\n     */\n    this.resolutions_ = options.resolutions;\n    assert(\n      isSorted(\n        this.resolutions_,\n        function (a, b) {\n          return b - a;\n        },\n        true\n      ),\n      17\n    ); // `resolutions` must be sorted in descending order\n\n    // check if we've got a consistent zoom factor and origin\n    let zoomFactor;\n    if (!options.origins) {\n      for (let i = 0, ii = this.resolutions_.length - 1; i < ii; ++i) {\n        if (!zoomFactor) {\n          zoomFactor = this.resolutions_[i] / this.resolutions_[i + 1];\n        } else {\n          if (this.resolutions_[i] / this.resolutions_[i + 1] !== zoomFactor) {\n            zoomFactor = undefined;\n            break;\n          }\n        }\n      }\n    }\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.zoomFactor_ = zoomFactor;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.maxZoom = this.resolutions_.length - 1;\n\n    /**\n     * @private\n     * @type {import(\"../coordinate.js\").Coordinate|null}\n     */\n    this.origin_ = options.origin !== undefined ? options.origin : null;\n\n    /**\n     * @private\n     * @type {Array<import(\"../coordinate.js\").Coordinate>}\n     */\n    this.origins_ = null;\n    if (options.origins !== undefined) {\n      this.origins_ = options.origins;\n      assert(this.origins_.length == this.resolutions_.length, 20); // Number of `origins` and `resolutions` must be equal\n    }\n\n    const extent = options.extent;\n\n    if (extent !== undefined && !this.origin_ && !this.origins_) {\n      this.origin_ = getTopLeft(extent);\n    }\n\n    assert(\n      (!this.origin_ && this.origins_) || (this.origin_ && !this.origins_),\n      18\n    ); // Either `origin` or `origins` must be configured, never both\n\n    /**\n     * @private\n     * @type {Array<number|import(\"../size.js\").Size>}\n     */\n    this.tileSizes_ = null;\n    if (options.tileSizes !== undefined) {\n      this.tileSizes_ = options.tileSizes;\n      assert(this.tileSizes_.length == this.resolutions_.length, 19); // Number of `tileSizes` and `resolutions` must be equal\n    }\n\n    /**\n     * @private\n     * @type {number|import(\"../size.js\").Size}\n     */\n    this.tileSize_ =\n      options.tileSize !== undefined\n        ? options.tileSize\n        : !this.tileSizes_\n        ? DEFAULT_TILE_SIZE\n        : null;\n    assert(\n      (!this.tileSize_ && this.tileSizes_) ||\n        (this.tileSize_ && !this.tileSizes_),\n      22\n    ); // Either `tileSize` or `tileSizes` must be configured, never both\n\n    /**\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.extent_ = extent !== undefined ? extent : null;\n\n    /**\n     * @private\n     * @type {Array<import(\"../TileRange.js\").default>}\n     */\n    this.fullTileRanges_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.tmpSize_ = [0, 0];\n\n    /**\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.tmpExtent_ = [0, 0, 0, 0];\n\n    if (options.sizes !== undefined) {\n      this.fullTileRanges_ = options.sizes.map(function (size, z) {\n        const tileRange = new TileRange(\n          Math.min(0, size[0]),\n          Math.max(size[0] - 1, -1),\n          Math.min(0, size[1]),\n          Math.max(size[1] - 1, -1)\n        );\n        if (extent) {\n          const restrictedTileRange = this.getTileRangeForExtentAndZ(extent, z);\n          tileRange.minX = Math.max(restrictedTileRange.minX, tileRange.minX);\n          tileRange.maxX = Math.min(restrictedTileRange.maxX, tileRange.maxX);\n          tileRange.minY = Math.max(restrictedTileRange.minY, tileRange.minY);\n          tileRange.maxY = Math.min(restrictedTileRange.maxY, tileRange.maxY);\n        }\n        return tileRange;\n      }, this);\n    } else if (extent) {\n      this.calculateTileRanges_(extent);\n    }\n  }\n\n  /**\n   * Call a function with each tile coordinate for a given extent and zoom level.\n   *\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {number} zoom Integer zoom level.\n   * @param {function(import(\"../tilecoord.js\").TileCoord): void} callback Function called with each tile coordinate.\n   * @api\n   */\n  forEachTileCoord(extent, zoom, callback) {\n    const tileRange = this.getTileRangeForExtentAndZ(extent, zoom);\n    for (let i = tileRange.minX, ii = tileRange.maxX; i <= ii; ++i) {\n      for (let j = tileRange.minY, jj = tileRange.maxY; j <= jj; ++j) {\n        callback([zoom, i, j]);\n      }\n    }\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {function(number, import(\"../TileRange.js\").default): boolean} callback Callback.\n   * @param {import(\"../TileRange.js\").default} [tempTileRange] Temporary import(\"../TileRange.js\").default object.\n   * @param {import(\"../extent.js\").Extent} [tempExtent] Temporary import(\"../extent.js\").Extent object.\n   * @return {boolean} Callback succeeded.\n   */\n  forEachTileCoordParentTileRange(\n    tileCoord,\n    callback,\n    tempTileRange,\n    tempExtent\n  ) {\n    let tileRange, x, y;\n    let tileCoordExtent = null;\n    let z = tileCoord[0] - 1;\n    if (this.zoomFactor_ === 2) {\n      x = tileCoord[1];\n      y = tileCoord[2];\n    } else {\n      tileCoordExtent = this.getTileCoordExtent(tileCoord, tempExtent);\n    }\n    while (z >= this.minZoom) {\n      if (this.zoomFactor_ === 2) {\n        x = Math.floor(x / 2);\n        y = Math.floor(y / 2);\n        tileRange = createOrUpdateTileRange(x, x, y, y, tempTileRange);\n      } else {\n        tileRange = this.getTileRangeForExtentAndZ(\n          tileCoordExtent,\n          z,\n          tempTileRange\n        );\n      }\n      if (callback(z, tileRange)) {\n        return true;\n      }\n      --z;\n    }\n    return false;\n  }\n\n  /**\n   * Get the extent for this tile grid, if it was configured.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   * @api\n   */\n  getExtent() {\n    return this.extent_;\n  }\n\n  /**\n   * Get the maximum zoom level for the grid.\n   * @return {number} Max zoom.\n   * @api\n   */\n  getMaxZoom() {\n    return this.maxZoom;\n  }\n\n  /**\n   * Get the minimum zoom level for the grid.\n   * @return {number} Min zoom.\n   * @api\n   */\n  getMinZoom() {\n    return this.minZoom;\n  }\n\n  /**\n   * Get the origin for the grid at the given zoom level.\n   * @param {number} z Integer zoom level.\n   * @return {import(\"../coordinate.js\").Coordinate} Origin.\n   * @api\n   */\n  getOrigin(z) {\n    if (this.origin_) {\n      return this.origin_;\n    }\n    return this.origins_[z];\n  }\n\n  /**\n   * Get the resolution for the given zoom level.\n   * @param {number} z Integer zoom level.\n   * @return {number} Resolution.\n   * @api\n   */\n  getResolution(z) {\n    return this.resolutions_[z];\n  }\n\n  /**\n   * Get the list of resolutions for the tile grid.\n   * @return {Array<number>} Resolutions.\n   * @api\n   */\n  getResolutions() {\n    return this.resolutions_;\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"../TileRange.js\").default} [tempTileRange] Temporary import(\"../TileRange.js\").default object.\n   * @param {import(\"../extent.js\").Extent} [tempExtent] Temporary import(\"../extent.js\").Extent object.\n   * @return {import(\"../TileRange.js\").default|null} Tile range.\n   */\n  getTileCoordChildTileRange(tileCoord, tempTileRange, tempExtent) {\n    if (tileCoord[0] < this.maxZoom) {\n      if (this.zoomFactor_ === 2) {\n        const minX = tileCoord[1] * 2;\n        const minY = tileCoord[2] * 2;\n        return createOrUpdateTileRange(\n          minX,\n          minX + 1,\n          minY,\n          minY + 1,\n          tempTileRange\n        );\n      }\n      const tileCoordExtent = this.getTileCoordExtent(\n        tileCoord,\n        tempExtent || this.tmpExtent_\n      );\n      return this.getTileRangeForExtentAndZ(\n        tileCoordExtent,\n        tileCoord[0] + 1,\n        tempTileRange\n      );\n    }\n    return null;\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {number} z Integer zoom level.\n   * @param {import(\"../TileRange.js\").default} [tempTileRange] Temporary import(\"../TileRange.js\").default object.\n   * @return {import(\"../TileRange.js\").default|null} Tile range.\n   */\n  getTileRangeForTileCoordAndZ(tileCoord, z, tempTileRange) {\n    if (z > this.maxZoom || z < this.minZoom) {\n      return null;\n    }\n\n    const tileCoordZ = tileCoord[0];\n    const tileCoordX = tileCoord[1];\n    const tileCoordY = tileCoord[2];\n\n    if (z === tileCoordZ) {\n      return createOrUpdateTileRange(\n        tileCoordX,\n        tileCoordY,\n        tileCoordX,\n        tileCoordY,\n        tempTileRange\n      );\n    }\n\n    if (this.zoomFactor_) {\n      const factor = Math.pow(this.zoomFactor_, z - tileCoordZ);\n      const minX = Math.floor(tileCoordX * factor);\n      const minY = Math.floor(tileCoordY * factor);\n      if (z < tileCoordZ) {\n        return createOrUpdateTileRange(minX, minX, minY, minY, tempTileRange);\n      }\n\n      const maxX = Math.floor(factor * (tileCoordX + 1)) - 1;\n      const maxY = Math.floor(factor * (tileCoordY + 1)) - 1;\n      return createOrUpdateTileRange(minX, maxX, minY, maxY, tempTileRange);\n    }\n\n    const tileCoordExtent = this.getTileCoordExtent(tileCoord, this.tmpExtent_);\n    return this.getTileRangeForExtentAndZ(tileCoordExtent, z, tempTileRange);\n  }\n\n  /**\n   * Get the extent for a tile range.\n   * @param {number} z Integer zoom level.\n   * @param {import(\"../TileRange.js\").default} tileRange Tile range.\n   * @param {import(\"../extent.js\").Extent} [tempExtent] Temporary import(\"../extent.js\").Extent object.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   */\n  getTileRangeExtent(z, tileRange, tempExtent) {\n    const origin = this.getOrigin(z);\n    const resolution = this.getResolution(z);\n    const tileSize = toSize(this.getTileSize(z), this.tmpSize_);\n    const minX = origin[0] + tileRange.minX * tileSize[0] * resolution;\n    const maxX = origin[0] + (tileRange.maxX + 1) * tileSize[0] * resolution;\n    const minY = origin[1] + tileRange.minY * tileSize[1] * resolution;\n    const maxY = origin[1] + (tileRange.maxY + 1) * tileSize[1] * resolution;\n    return createOrUpdate(minX, minY, maxX, maxY, tempExtent);\n  }\n\n  /**\n   * Get a tile range for the given extent and integer zoom level.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {number} z Integer zoom level.\n   * @param {import(\"../TileRange.js\").default} [tempTileRange] Temporary tile range object.\n   * @return {import(\"../TileRange.js\").default} Tile range.\n   */\n  getTileRangeForExtentAndZ(extent, z, tempTileRange) {\n    this.getTileCoordForXYAndZ_(extent[0], extent[3], z, false, tmpTileCoord);\n    const minX = tmpTileCoord[1];\n    const minY = tmpTileCoord[2];\n    this.getTileCoordForXYAndZ_(extent[2], extent[1], z, true, tmpTileCoord);\n    const maxX = tmpTileCoord[1];\n    const maxY = tmpTileCoord[2];\n    return createOrUpdateTileRange(minX, maxX, minY, maxY, tempTileRange);\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @return {import(\"../coordinate.js\").Coordinate} Tile center.\n   */\n  getTileCoordCenter(tileCoord) {\n    const origin = this.getOrigin(tileCoord[0]);\n    const resolution = this.getResolution(tileCoord[0]);\n    const tileSize = toSize(this.getTileSize(tileCoord[0]), this.tmpSize_);\n    return [\n      origin[0] + (tileCoord[1] + 0.5) * tileSize[0] * resolution,\n      origin[1] - (tileCoord[2] + 0.5) * tileSize[1] * resolution,\n    ];\n  }\n\n  /**\n   * Get the extent of a tile coordinate.\n   *\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"../extent.js\").Extent} [tempExtent] Temporary extent object.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   * @api\n   */\n  getTileCoordExtent(tileCoord, tempExtent) {\n    const origin = this.getOrigin(tileCoord[0]);\n    const resolution = this.getResolution(tileCoord[0]);\n    const tileSize = toSize(this.getTileSize(tileCoord[0]), this.tmpSize_);\n    const minX = origin[0] + tileCoord[1] * tileSize[0] * resolution;\n    const minY = origin[1] - (tileCoord[2] + 1) * tileSize[1] * resolution;\n    const maxX = minX + tileSize[0] * resolution;\n    const maxY = minY + tileSize[1] * resolution;\n    return createOrUpdate(minX, minY, maxX, maxY, tempExtent);\n  }\n\n  /**\n   * Get the tile coordinate for the given map coordinate and resolution.  This\n   * method considers that coordinates that intersect tile boundaries should be\n   * assigned the higher tile coordinate.\n   *\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {number} resolution Resolution.\n   * @param {import(\"../tilecoord.js\").TileCoord} [opt_tileCoord] Destination import(\"../tilecoord.js\").TileCoord object.\n   * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate.\n   * @api\n   */\n  getTileCoordForCoordAndResolution(coordinate, resolution, opt_tileCoord) {\n    return this.getTileCoordForXYAndResolution_(\n      coordinate[0],\n      coordinate[1],\n      resolution,\n      false,\n      opt_tileCoord\n    );\n  }\n\n  /**\n   * Note that this method should not be called for resolutions that correspond\n   * to an integer zoom level.  Instead call the `getTileCoordForXYAndZ_` method.\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {number} resolution Resolution (for a non-integer zoom level).\n   * @param {boolean} reverseIntersectionPolicy Instead of letting edge\n   *     intersections go to the higher tile coordinate, let edge intersections\n   *     go to the lower tile coordinate.\n   * @param {import(\"../tilecoord.js\").TileCoord} [opt_tileCoord] Temporary import(\"../tilecoord.js\").TileCoord object.\n   * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate.\n   * @private\n   */\n  getTileCoordForXYAndResolution_(\n    x,\n    y,\n    resolution,\n    reverseIntersectionPolicy,\n    opt_tileCoord\n  ) {\n    const z = this.getZForResolution(resolution);\n    const scale = resolution / this.getResolution(z);\n    const origin = this.getOrigin(z);\n    const tileSize = toSize(this.getTileSize(z), this.tmpSize_);\n\n    let tileCoordX = (scale * (x - origin[0])) / resolution / tileSize[0];\n    let tileCoordY = (scale * (origin[1] - y)) / resolution / tileSize[1];\n\n    if (reverseIntersectionPolicy) {\n      tileCoordX = ceil(tileCoordX, DECIMALS) - 1;\n      tileCoordY = ceil(tileCoordY, DECIMALS) - 1;\n    } else {\n      tileCoordX = floor(tileCoordX, DECIMALS);\n      tileCoordY = floor(tileCoordY, DECIMALS);\n    }\n\n    return createOrUpdateTileCoord(z, tileCoordX, tileCoordY, opt_tileCoord);\n  }\n\n  /**\n   * Although there is repetition between this method and `getTileCoordForXYAndResolution_`,\n   * they should have separate implementations.  This method is for integer zoom\n   * levels.  The other method should only be called for resolutions corresponding\n   * to non-integer zoom levels.\n   * @param {number} x Map x coordinate.\n   * @param {number} y Map y coordinate.\n   * @param {number} z Integer zoom level.\n   * @param {boolean} reverseIntersectionPolicy Instead of letting edge\n   *     intersections go to the higher tile coordinate, let edge intersections\n   *     go to the lower tile coordinate.\n   * @param {import(\"../tilecoord.js\").TileCoord} [opt_tileCoord] Temporary import(\"../tilecoord.js\").TileCoord object.\n   * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate.\n   * @private\n   */\n  getTileCoordForXYAndZ_(x, y, z, reverseIntersectionPolicy, opt_tileCoord) {\n    const origin = this.getOrigin(z);\n    const resolution = this.getResolution(z);\n    const tileSize = toSize(this.getTileSize(z), this.tmpSize_);\n\n    let tileCoordX = (x - origin[0]) / resolution / tileSize[0];\n    let tileCoordY = (origin[1] - y) / resolution / tileSize[1];\n\n    if (reverseIntersectionPolicy) {\n      tileCoordX = ceil(tileCoordX, DECIMALS) - 1;\n      tileCoordY = ceil(tileCoordY, DECIMALS) - 1;\n    } else {\n      tileCoordX = floor(tileCoordX, DECIMALS);\n      tileCoordY = floor(tileCoordY, DECIMALS);\n    }\n\n    return createOrUpdateTileCoord(z, tileCoordX, tileCoordY, opt_tileCoord);\n  }\n\n  /**\n   * Get a tile coordinate given a map coordinate and zoom level.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {number} z Zoom level.\n   * @param {import(\"../tilecoord.js\").TileCoord} [opt_tileCoord] Destination import(\"../tilecoord.js\").TileCoord object.\n   * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate.\n   * @api\n   */\n  getTileCoordForCoordAndZ(coordinate, z, opt_tileCoord) {\n    return this.getTileCoordForXYAndZ_(\n      coordinate[0],\n      coordinate[1],\n      z,\n      false,\n      opt_tileCoord\n    );\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @return {number} Tile resolution.\n   */\n  getTileCoordResolution(tileCoord) {\n    return this.resolutions_[tileCoord[0]];\n  }\n\n  /**\n   * Get the tile size for a zoom level. The type of the return value matches the\n   * `tileSize` or `tileSizes` that the tile grid was configured with. To always\n   * get an {@link import(\"../size.js\").Size}, run the result through {@link module:ol/size.toSize}.\n   * @param {number} z Z.\n   * @return {number|import(\"../size.js\").Size} Tile size.\n   * @api\n   */\n  getTileSize(z) {\n    if (this.tileSize_) {\n      return this.tileSize_;\n    }\n    return this.tileSizes_[z];\n  }\n\n  /**\n   * @param {number} z Zoom level.\n   * @return {import(\"../TileRange.js\").default} Extent tile range for the specified zoom level.\n   */\n  getFullTileRange(z) {\n    if (!this.fullTileRanges_) {\n      return this.extent_\n        ? this.getTileRangeForExtentAndZ(this.extent_, z)\n        : null;\n    }\n    return this.fullTileRanges_[z];\n  }\n\n  /**\n   * @param {number} resolution Resolution.\n   * @param {number|import(\"../array.js\").NearestDirectionFunction} [opt_direction]\n   *     If 0, the nearest resolution will be used.\n   *     If 1, the nearest higher resolution (lower Z) will be used. If -1, the\n   *     nearest lower resolution (higher Z) will be used. Default is 0.\n   *     Use a {@link module:ol/array~NearestDirectionFunction} for more precise control.\n   *\n   * For example to change tile Z at the midpoint of zoom levels\n   * ```js\n   * function(value, high, low) {\n   *   return value - low * Math.sqrt(high / low);\n   * }\n   * ```\n   * @return {number} Z.\n   * @api\n   */\n  getZForResolution(resolution, opt_direction) {\n    const z = linearFindNearest(\n      this.resolutions_,\n      resolution,\n      opt_direction || 0\n    );\n    return clamp(z, this.minZoom, this.maxZoom);\n  }\n\n  /**\n   * The tile with the provided tile coordinate intersects the given viewport.\n   * @param {import('../tilecoord.js').TileCoord} tileCoord Tile coordinate.\n   * @param {Array<number>} viewport Viewport as returned from {@link module:ol/extent.getRotatedViewport}.\n   * @return {boolean} The tile with the provided tile coordinate intersects the given viewport.\n   */\n  tileCoordIntersectsViewport(tileCoord, viewport) {\n    return intersectsLinearRing(\n      viewport,\n      0,\n      viewport.length,\n      2,\n      this.getTileCoordExtent(tileCoord)\n    );\n  }\n\n  /**\n   * @param {!import(\"../extent.js\").Extent} extent Extent for this tile grid.\n   * @private\n   */\n  calculateTileRanges_(extent) {\n    const length = this.resolutions_.length;\n    const fullTileRanges = new Array(length);\n    for (let z = this.minZoom; z < length; ++z) {\n      fullTileRanges[z] = this.getTileRangeForExtentAndZ(extent, z);\n    }\n    this.fullTileRanges_ = fullTileRanges;\n  }\n}\n\nexport default TileGrid;\n","/**\n * @module ol/tilegrid\n */\nimport TileGrid from './tilegrid/TileGrid.js';\nimport {DEFAULT_MAX_ZOOM, DEFAULT_TILE_SIZE} from './tilegrid/common.js';\nimport {METERS_PER_UNIT, get as getProjection} from './proj.js';\nimport {\n  containsCoordinate,\n  createOrUpdate,\n  getCorner,\n  getHeight,\n  getWidth,\n} from './extent.js';\nimport {toSize} from './size.js';\n\n/**\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @return {!TileGrid} Default tile grid for the\n * passed projection.\n */\nexport function getForProjection(projection) {\n  let tileGrid = projection.getDefaultTileGrid();\n  if (!tileGrid) {\n    tileGrid = createForProjection(projection);\n    projection.setDefaultTileGrid(tileGrid);\n  }\n  return tileGrid;\n}\n\n/**\n * @param {TileGrid} tileGrid Tile grid.\n * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @return {import(\"./tilecoord.js\").TileCoord} Tile coordinate.\n */\nexport function wrapX(tileGrid, tileCoord, projection) {\n  const z = tileCoord[0];\n  const center = tileGrid.getTileCoordCenter(tileCoord);\n  const projectionExtent = extentFromProjection(projection);\n  if (!containsCoordinate(projectionExtent, center)) {\n    const worldWidth = getWidth(projectionExtent);\n    const worldsAway = Math.ceil(\n      (projectionExtent[0] - center[0]) / worldWidth\n    );\n    center[0] += worldWidth * worldsAway;\n    return tileGrid.getTileCoordForCoordAndZ(center, z);\n  }\n  return tileCoord;\n}\n\n/**\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number} [maxZoom] Maximum zoom level (default is\n *     DEFAULT_MAX_ZOOM).\n * @param {number|import(\"./size.js\").Size} [tileSize] Tile size (default uses\n *     DEFAULT_TILE_SIZE).\n * @param {import(\"./extent.js\").Corner} [corner] Extent corner (default is `'top-left'`).\n * @return {!TileGrid} TileGrid instance.\n */\nexport function createForExtent(extent, maxZoom, tileSize, corner) {\n  corner = corner !== undefined ? corner : 'top-left';\n\n  const resolutions = resolutionsFromExtent(extent, maxZoom, tileSize);\n\n  return new TileGrid({\n    extent: extent,\n    origin: getCorner(extent, corner),\n    resolutions: resolutions,\n    tileSize: tileSize,\n  });\n}\n\n/**\n * @typedef {Object} XYZOptions\n * @property {import(\"./extent.js\").Extent} [extent] Extent for the tile grid. The origin for an XYZ tile grid is the\n * top-left corner of the extent. If `maxResolution` is not provided the zero level of the grid is defined by the resolution\n * at which one tile fits in the provided extent. If not provided, the extent of the EPSG:3857 projection is used.\n * @property {number} [maxResolution] Resolution at level zero.\n * @property {number} [maxZoom] Maximum zoom. The default is `42`. This determines the number of levels\n * in the grid set. For example, a `maxZoom` of 21 means there are 22 levels in the grid set.\n * @property {number} [minZoom=0] Minimum zoom.\n * @property {number|import(\"./size.js\").Size} [tileSize=[256, 256]] Tile size in pixels.\n */\n\n/**\n * Creates a tile grid with a standard XYZ tiling scheme.\n * @param {XYZOptions} [options] Tile grid options.\n * @return {!TileGrid} Tile grid instance.\n * @api\n */\nexport function createXYZ(options) {\n  const xyzOptions = options || {};\n\n  const extent = xyzOptions.extent || getProjection('EPSG:3857').getExtent();\n\n  const gridOptions = {\n    extent: extent,\n    minZoom: xyzOptions.minZoom,\n    tileSize: xyzOptions.tileSize,\n    resolutions: resolutionsFromExtent(\n      extent,\n      xyzOptions.maxZoom,\n      xyzOptions.tileSize,\n      xyzOptions.maxResolution\n    ),\n  };\n  return new TileGrid(gridOptions);\n}\n\n/**\n * Create a resolutions array from an extent.  A zoom factor of 2 is assumed.\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number} [maxZoom] Maximum zoom level (default is\n *     DEFAULT_MAX_ZOOM).\n * @param {number|import(\"./size.js\").Size} [tileSize] Tile size (default uses\n *     DEFAULT_TILE_SIZE).\n * @param {number} [maxResolution] Resolution at level zero.\n * @return {!Array<number>} Resolutions array.\n */\nfunction resolutionsFromExtent(extent, maxZoom, tileSize, maxResolution) {\n  maxZoom = maxZoom !== undefined ? maxZoom : DEFAULT_MAX_ZOOM;\n  tileSize = toSize(tileSize !== undefined ? tileSize : DEFAULT_TILE_SIZE);\n\n  const height = getHeight(extent);\n  const width = getWidth(extent);\n\n  maxResolution =\n    maxResolution > 0\n      ? maxResolution\n      : Math.max(width / tileSize[0], height / tileSize[1]);\n\n  const length = maxZoom + 1;\n  const resolutions = new Array(length);\n  for (let z = 0; z < length; ++z) {\n    resolutions[z] = maxResolution / Math.pow(2, z);\n  }\n  return resolutions;\n}\n\n/**\n * @param {import(\"./proj.js\").ProjectionLike} projection Projection.\n * @param {number} [maxZoom] Maximum zoom level (default is\n *     DEFAULT_MAX_ZOOM).\n * @param {number|import(\"./size.js\").Size} [tileSize] Tile size (default uses\n *     DEFAULT_TILE_SIZE).\n * @param {import(\"./extent.js\").Corner} [corner] Extent corner (default is `'top-left'`).\n * @return {!TileGrid} TileGrid instance.\n */\nexport function createForProjection(projection, maxZoom, tileSize, corner) {\n  const extent = extentFromProjection(projection);\n  return createForExtent(extent, maxZoom, tileSize, corner);\n}\n\n/**\n * Generate a tile grid extent from a projection.  If the projection has an\n * extent, it is used.  If not, a global extent is assumed.\n * @param {import(\"./proj.js\").ProjectionLike} projection Projection.\n * @return {import(\"./extent.js\").Extent} Extent.\n */\nexport function extentFromProjection(projection) {\n  projection = getProjection(projection);\n  let extent = projection.getExtent();\n  if (!extent) {\n    const half =\n      (180 * METERS_PER_UNIT.degrees) / projection.getMetersPerUnit();\n    extent = createOrUpdate(-half, -half, half, half);\n  }\n  return extent;\n}\n","/**\n * @module ol/source/Tile\n */\nimport Event from '../events/Event.js';\nimport Source from './Source.js';\nimport TileCache from '../TileCache.js';\nimport TileState from '../TileState.js';\nimport {abstract} from '../util.js';\nimport {assert} from '../asserts.js';\nimport {equivalent} from '../proj.js';\nimport {getKeyZXY, withinExtentAndZ} from '../tilecoord.js';\nimport {\n  getForProjection as getTileGridForProjection,\n  wrapX,\n} from '../tilegrid.js';\nimport {scale as scaleSize, toSize} from '../size.js';\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types, import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<import(\"./TileEventType\").TileSourceEventTypes, TileSourceEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"../ObjectEventType\").Types|\n *     import(\"./TileEventType\").TileSourceEventTypes, Return>} TileSourceOnSignature\n */\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize] CacheSize.\n * @property {boolean} [opaque=false] Whether the layer is opaque.\n * @property {number} [tilePixelRatio] TilePixelRatio.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection.\n * @property {import(\"./Source.js\").State} [state] State.\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid] TileGrid.\n * @property {boolean} [wrapX=false] WrapX.\n * @property {number} [transition] Transition.\n * @property {string} [key] Key.\n * @property {number|import(\"../array.js\").NearestDirectionFunction} [zDirection=0] ZDirection.\n * @property {boolean} [interpolate=false] Use interpolated values when resampling.  By default,\n * the nearest neighbor is used when resampling.\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for sources providing images divided into a tile grid.\n * @abstract\n * @api\n */\nclass TileSource extends Source {\n  /**\n   * @param {Options} options SourceTile source options.\n   */\n  constructor(options) {\n    super({\n      attributions: options.attributions,\n      attributionsCollapsible: options.attributionsCollapsible,\n      projection: options.projection,\n      state: options.state,\n      wrapX: options.wrapX,\n      interpolate: options.interpolate,\n    });\n\n    /***\n     * @type {TileSourceOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {TileSourceOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {TileSourceOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.opaque_ = options.opaque !== undefined ? options.opaque : false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.tilePixelRatio_ =\n      options.tilePixelRatio !== undefined ? options.tilePixelRatio : 1;\n\n    /**\n     * @type {import(\"../tilegrid/TileGrid.js\").default|null}\n     */\n    this.tileGrid = options.tileGrid !== undefined ? options.tileGrid : null;\n\n    const tileSize = [256, 256];\n    if (this.tileGrid) {\n      toSize(this.tileGrid.getTileSize(this.tileGrid.getMinZoom()), tileSize);\n    }\n\n    /**\n     * @protected\n     * @type {import(\"../TileCache.js\").default}\n     */\n    this.tileCache = new TileCache(options.cacheSize || 0);\n\n    /**\n     * @protected\n     * @type {import(\"../size.js\").Size}\n     */\n    this.tmpSize = [0, 0];\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.key_ = options.key || '';\n\n    /**\n     * @protected\n     * @type {import(\"../Tile.js\").Options}\n     */\n    this.tileOptions = {\n      transition: options.transition,\n      interpolate: options.interpolate,\n    };\n\n    /**\n     * zDirection hint, read by the renderer. Indicates which resolution should be used\n     * by a renderer if the views resolution does not match any resolution of the tile source.\n     * If 0, the nearest resolution will be used. If 1, the nearest lower resolution\n     * will be used. If -1, the nearest higher resolution will be used.\n     * @type {number|import(\"../array.js\").NearestDirectionFunction}\n     */\n    this.zDirection = options.zDirection ? options.zDirection : 0;\n  }\n\n  /**\n   * @return {boolean} Can expire cache.\n   */\n  canExpireCache() {\n    return this.tileCache.canExpireCache();\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @param {!Object<string, boolean>} usedTiles Used tiles.\n   */\n  expireCache(projection, usedTiles) {\n    const tileCache = this.getTileCacheForProjection(projection);\n    if (tileCache) {\n      tileCache.expireCache(usedTiles);\n    }\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @param {number} z Zoom level.\n   * @param {import(\"../TileRange.js\").default} tileRange Tile range.\n   * @param {function(import(\"../Tile.js\").default):(boolean|void)} callback Called with each\n   *     loaded tile.  If the callback returns `false`, the tile will not be\n   *     considered loaded.\n   * @return {boolean} The tile range is fully covered with loaded tiles.\n   */\n  forEachLoadedTile(projection, z, tileRange, callback) {\n    const tileCache = this.getTileCacheForProjection(projection);\n    if (!tileCache) {\n      return false;\n    }\n\n    let covered = true;\n    let tile, tileCoordKey, loaded;\n    for (let x = tileRange.minX; x <= tileRange.maxX; ++x) {\n      for (let y = tileRange.minY; y <= tileRange.maxY; ++y) {\n        tileCoordKey = getKeyZXY(z, x, y);\n        loaded = false;\n        if (tileCache.containsKey(tileCoordKey)) {\n          tile = /** @type {!import(\"../Tile.js\").default} */ (\n            tileCache.get(tileCoordKey)\n          );\n          loaded = tile.getState() === TileState.LOADED;\n          if (loaded) {\n            loaded = callback(tile) !== false;\n          }\n        }\n        if (!loaded) {\n          covered = false;\n        }\n      }\n    }\n    return covered;\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {number} Gutter.\n   */\n  getGutterForProjection(projection) {\n    return 0;\n  }\n\n  /**\n   * Return the key to be used for all tiles in the source.\n   * @return {string} The key for all tiles.\n   */\n  getKey() {\n    return this.key_;\n  }\n\n  /**\n   * Set the value to be used as the key for all tiles in the source.\n   * @param {string} key The key for tiles.\n   * @protected\n   */\n  setKey(key) {\n    if (this.key_ !== key) {\n      this.key_ = key;\n      this.changed();\n    }\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {boolean} Opaque.\n   */\n  getOpaque(projection) {\n    return this.opaque_;\n  }\n\n  /**\n   * @param {import(\"../proj/Projection\").default} [projection] Projection.\n   * @return {Array<number>|null} Resolutions.\n   */\n  getResolutions(projection) {\n    const tileGrid = projection\n      ? this.getTileGridForProjection(projection)\n      : this.tileGrid;\n    if (!tileGrid) {\n      return null;\n    }\n    return tileGrid.getResolutions();\n  }\n\n  /**\n   * @abstract\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {!import(\"../Tile.js\").default} Tile.\n   */\n  getTile(z, x, y, pixelRatio, projection) {\n    return abstract();\n  }\n\n  /**\n   * Return the tile grid of the tile source.\n   * @return {import(\"../tilegrid/TileGrid.js\").default|null} Tile grid.\n   * @api\n   */\n  getTileGrid() {\n    return this.tileGrid;\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {!import(\"../tilegrid/TileGrid.js\").default} Tile grid.\n   */\n  getTileGridForProjection(projection) {\n    if (!this.tileGrid) {\n      return getTileGridForProjection(projection);\n    }\n    return this.tileGrid;\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {import(\"../TileCache.js\").default} Tile cache.\n   * @protected\n   */\n  getTileCacheForProjection(projection) {\n    const sourceProjection = this.getProjection();\n    assert(\n      sourceProjection === null || equivalent(sourceProjection, projection),\n      68 // A VectorTile source can only be rendered if it has a projection compatible with the view projection.\n    );\n    return this.tileCache;\n  }\n\n  /**\n   * Get the tile pixel ratio for this source. Subclasses may override this\n   * method, which is meant to return a supported pixel ratio that matches the\n   * provided `pixelRatio` as close as possible.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {number} Tile pixel ratio.\n   */\n  getTilePixelRatio(pixelRatio) {\n    return this.tilePixelRatio_;\n  }\n\n  /**\n   * @param {number} z Z.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {import(\"../size.js\").Size} Tile size.\n   */\n  getTilePixelSize(z, pixelRatio, projection) {\n    const tileGrid = this.getTileGridForProjection(projection);\n    const tilePixelRatio = this.getTilePixelRatio(pixelRatio);\n    const tileSize = toSize(tileGrid.getTileSize(z), this.tmpSize);\n    if (tilePixelRatio == 1) {\n      return tileSize;\n    }\n    return scaleSize(tileSize, tilePixelRatio, this.tmpSize);\n  }\n\n  /**\n   * Returns a tile coordinate wrapped around the x-axis. When the tile coordinate\n   * is outside the resolution and extent range of the tile grid, `null` will be\n   * returned.\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"../proj/Projection.js\").default} [projection] Projection.\n   * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate to be passed to the tileUrlFunction or\n   *     null if no tile URL should be created for the passed `tileCoord`.\n   */\n  getTileCoordForTileUrlFunction(tileCoord, projection) {\n    projection = projection !== undefined ? projection : this.getProjection();\n    const tileGrid = this.getTileGridForProjection(projection);\n    if (this.getWrapX() && projection.isGlobal()) {\n      tileCoord = wrapX(tileGrid, tileCoord, projection);\n    }\n    return withinExtentAndZ(tileCoord, tileGrid) ? tileCoord : null;\n  }\n\n  /**\n   * Remove all cached tiles from the source. The next render cycle will fetch new tiles.\n   * @api\n   */\n  clear() {\n    this.tileCache.clear();\n  }\n\n  refresh() {\n    this.clear();\n    super.refresh();\n  }\n\n  /**\n   * Increases the cache size if needed\n   * @param {number} tileCount Minimum number of tiles needed.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   */\n  updateCacheSize(tileCount, projection) {\n    const tileCache = this.getTileCacheForProjection(projection);\n    if (tileCount > tileCache.highWaterMark) {\n      tileCache.highWaterMark = tileCount;\n    }\n  }\n\n  /**\n   * Marks a tile coord as being used, without triggering a load.\n   * @abstract\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   */\n  useTile(z, x, y, projection) {}\n}\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/source/Tile~TileSource} instances are instances of this\n * type.\n */\nexport class TileSourceEvent extends Event {\n  /**\n   * @param {string} type Type.\n   * @param {import(\"../Tile.js\").default} tile The tile.\n   */\n  constructor(type, tile) {\n    super(type);\n\n    /**\n     * The tile related to the event.\n     * @type {import(\"../Tile.js\").default}\n     * @api\n     */\n    this.tile = tile;\n  }\n}\n\nexport default TileSource;\n","/**\n * @module ol/source/Raster\n */\nimport Disposable from '../Disposable.js';\nimport Event from '../events/Event.js';\nimport EventType from '../events/EventType.js';\nimport ImageCanvas from '../ImageCanvas.js';\nimport ImageLayer from '../layer/Image.js';\nimport ImageSource from './Image.js';\nimport Source from './Source.js';\nimport TileLayer from '../layer/Tile.js';\nimport TileQueue from '../TileQueue.js';\nimport TileSource from './Tile.js';\nimport {createCanvasContext2D} from '../dom.js';\nimport {create as createTransform} from '../transform.js';\nimport {equals, getCenter, getHeight, getWidth} from '../extent.js';\nimport {getUid} from '../util.js';\n\nlet hasImageData = true;\ntry {\n  new ImageData(10, 10);\n} catch (_) {\n  hasImageData = false;\n}\n\n/** @type {CanvasRenderingContext2D} */\nlet context;\n\n/**\n * @param {Uint8ClampedArray} data Image data.\n * @param {number} width Number of columns.\n * @param {number} height Number of rows.\n * @return {ImageData} Image data.\n */\nexport function newImageData(data, width, height) {\n  if (hasImageData) {\n    return new ImageData(data, width, height);\n  }\n\n  if (!context) {\n    context = document.createElement('canvas').getContext('2d');\n  }\n  const imageData = context.createImageData(width, height);\n  imageData.data.set(data);\n  return imageData;\n}\n\n/**\n * @typedef {Object} MinionData\n * @property {Array<ArrayBuffer>} buffers Array of buffers.\n * @property {Object} meta Operation metadata.\n * @property {boolean} imageOps The operation is an image operation.\n * @property {number} width The width of the image.\n * @property {number} height The height of the image.\n */\n\n/* istanbul ignore next */\n/**\n * Create a function for running operations.  This function is serialized for\n * use in a worker.\n * @param {function(Array, Object):*} operation The operation.\n * @return {function(MinionData):ArrayBuffer} A function that takes an object with\n * buffers, meta, imageOps, width, and height properties and returns an array\n * buffer.\n */\nfunction createMinion(operation) {\n  let workerHasImageData = true;\n  try {\n    new ImageData(10, 10);\n  } catch (_) {\n    workerHasImageData = false;\n  }\n\n  function newWorkerImageData(data, width, height) {\n    if (workerHasImageData) {\n      return new ImageData(data, width, height);\n    }\n    return {data: data, width: width, height: height};\n  }\n\n  return function (data) {\n    // bracket notation for minification support\n    const buffers = data['buffers'];\n    const meta = data['meta'];\n    const imageOps = data['imageOps'];\n    const width = data['width'];\n    const height = data['height'];\n\n    const numBuffers = buffers.length;\n    const numBytes = buffers[0].byteLength;\n\n    if (imageOps) {\n      const images = new Array(numBuffers);\n      for (let b = 0; b < numBuffers; ++b) {\n        images[b] = newWorkerImageData(\n          new Uint8ClampedArray(buffers[b]),\n          width,\n          height\n        );\n      }\n      const output = operation(images, meta).data;\n      return output.buffer;\n    }\n\n    const output = new Uint8ClampedArray(numBytes);\n    const arrays = new Array(numBuffers);\n    const pixels = new Array(numBuffers);\n    for (let b = 0; b < numBuffers; ++b) {\n      arrays[b] = new Uint8ClampedArray(buffers[b]);\n      pixels[b] = [0, 0, 0, 0];\n    }\n    for (let i = 0; i < numBytes; i += 4) {\n      for (let j = 0; j < numBuffers; ++j) {\n        const array = arrays[j];\n        pixels[j][0] = array[i];\n        pixels[j][1] = array[i + 1];\n        pixels[j][2] = array[i + 2];\n        pixels[j][3] = array[i + 3];\n      }\n      const pixel = operation(pixels, meta);\n      output[i] = pixel[0];\n      output[i + 1] = pixel[1];\n      output[i + 2] = pixel[2];\n      output[i + 3] = pixel[3];\n    }\n    return output.buffer;\n  };\n}\n\n/**\n * Create a worker for running operations.\n * @param {ProcessorOptions} config Processor options.\n * @param {function(MessageEvent): void} onMessage Called with a message event.\n * @return {Worker} The worker.\n */\nfunction createWorker(config, onMessage) {\n  const lib = Object.keys(config.lib || {}).map(function (name) {\n    return 'const ' + name + ' = ' + config.lib[name].toString() + ';';\n  });\n\n  const lines = lib.concat([\n    'const __minion__ = (' + createMinion.toString() + ')(',\n    config.operation.toString(),\n    ');',\n    'self.addEventListener(\"message\", function(event) {',\n    '  const buffer = __minion__(event.data);',\n    '  self.postMessage({buffer: buffer, meta: event.data.meta}, [buffer]);',\n    '});',\n  ]);\n\n  const worker = new Worker(\n    typeof Blob === 'undefined'\n      ? 'data:text/javascript;base64,' +\n        Buffer.from(lines.join('\\n'), 'binary').toString('base64')\n      : URL.createObjectURL(new Blob(lines, {type: 'text/javascript'}))\n  );\n  worker.addEventListener('message', onMessage);\n  return worker;\n}\n\n/**\n * @typedef {Object} FauxMessageEvent\n * @property {Object} data Message data.\n */\n\n/**\n * Create a faux worker for running operations.\n * @param {ProcessorOptions} config Configuration.\n * @param {function(FauxMessageEvent): void} onMessage Called with a message event.\n * @return {Object} The faux worker.\n */\nfunction createFauxWorker(config, onMessage) {\n  const minion = createMinion(config.operation);\n  let terminated = false;\n  return {\n    postMessage: function (data) {\n      setTimeout(function () {\n        if (terminated) {\n          return;\n        }\n        onMessage({data: {buffer: minion(data), meta: data['meta']}});\n      }, 0);\n    },\n    terminate: function () {\n      terminated = true;\n    },\n  };\n}\n\n/**\n * @typedef {function(Error, ImageData, (Object|Array<Object>)): void} JobCallback\n */\n\n/**\n * @typedef {Object} Job\n * @property {Object} meta Job metadata.\n * @property {Array<ImageData>} inputs Array of input data.\n * @property {JobCallback} callback Called when the job is complete.\n */\n\n/**\n * @typedef {Object} ProcessorOptions\n * @property {number} threads Number of workers to spawn.\n * @property {Operation} operation The operation.\n * @property {Object<string, Function>} [lib] Functions that will be made available to operations run in a worker.\n * @property {number} queue The number of queued jobs to allow.\n * @property {boolean} [imageOps=false] Pass all the image data to the operation instead of a single pixel.\n */\n\n/**\n * @classdesc\n * A processor runs pixel or image operations in workers.\n */\nexport class Processor extends Disposable {\n  /**\n   * @param {ProcessorOptions} config Configuration.\n   */\n  constructor(config) {\n    super();\n\n    this._imageOps = !!config.imageOps;\n    let threads;\n    if (config.threads === 0) {\n      threads = 0;\n    } else if (this._imageOps) {\n      threads = 1;\n    } else {\n      threads = config.threads || 1;\n    }\n\n    /**\n     * @type {Array<Worker>}\n     */\n    const workers = new Array(threads);\n    if (threads) {\n      for (let i = 0; i < threads; ++i) {\n        workers[i] = createWorker(config, this._onWorkerMessage.bind(this, i));\n      }\n    } else {\n      workers[0] = createFauxWorker(\n        config,\n        this._onWorkerMessage.bind(this, 0)\n      );\n    }\n    this._workers = workers;\n\n    /**\n     * @type {Array<Job>}\n     * @private\n     */\n    this._queue = [];\n\n    this._maxQueueLength = config.queue || Infinity;\n    this._running = 0;\n\n    /**\n     * @type {Object<number, any>}\n     * @private\n     */\n    this._dataLookup = {};\n\n    /**\n     * @type {Job}\n     * @private\n     */\n    this._job = null;\n  }\n\n  /**\n   * Run operation on input data.\n   * @param {Array<ImageData>} inputs Array of image data.\n   * @param {Object} meta A user data object.  This is passed to all operations\n   *     and must be serializable.\n   * @param {function(Error, ImageData, Object): void} callback Called when work\n   *     completes.  The first argument is any error.  The second is the ImageData\n   *     generated by operations.  The third is the user data object.\n   */\n  process(inputs, meta, callback) {\n    this._enqueue({\n      inputs: inputs,\n      meta: meta,\n      callback: callback,\n    });\n    this._dispatch();\n  }\n\n  /**\n   * Add a job to the queue.\n   * @param {Job} job The job.\n   */\n  _enqueue(job) {\n    this._queue.push(job);\n    while (this._queue.length > this._maxQueueLength) {\n      this._queue.shift().callback(null, null);\n    }\n  }\n\n  /**\n   * Dispatch a job.\n   */\n  _dispatch() {\n    if (this._running || this._queue.length === 0) {\n      return;\n    }\n\n    const job = this._queue.shift();\n    this._job = job;\n    const width = job.inputs[0].width;\n    const height = job.inputs[0].height;\n    const buffers = job.inputs.map(function (input) {\n      return input.data.buffer;\n    });\n    const threads = this._workers.length;\n    this._running = threads;\n    if (threads === 1) {\n      this._workers[0].postMessage(\n        {\n          buffers: buffers,\n          meta: job.meta,\n          imageOps: this._imageOps,\n          width: width,\n          height: height,\n        },\n        buffers\n      );\n      return;\n    }\n\n    const length = job.inputs[0].data.length;\n    const segmentLength = 4 * Math.ceil(length / 4 / threads);\n    for (let i = 0; i < threads; ++i) {\n      const offset = i * segmentLength;\n      const slices = [];\n      for (let j = 0, jj = buffers.length; j < jj; ++j) {\n        slices.push(buffers[j].slice(offset, offset + segmentLength));\n      }\n      this._workers[i].postMessage(\n        {\n          buffers: slices,\n          meta: job.meta,\n          imageOps: this._imageOps,\n          width: width,\n          height: height,\n        },\n        slices\n      );\n    }\n  }\n\n  /**\n   * Handle messages from the worker.\n   * @param {number} index The worker index.\n   * @param {MessageEvent} event The message event.\n   */\n  _onWorkerMessage(index, event) {\n    if (this.disposed) {\n      return;\n    }\n    this._dataLookup[index] = event.data;\n    --this._running;\n    if (this._running === 0) {\n      this._resolveJob();\n    }\n  }\n\n  /**\n   * Resolve a job.  If there are no more worker threads, the processor callback\n   * will be called.\n   */\n  _resolveJob() {\n    const job = this._job;\n    const threads = this._workers.length;\n    let data, meta;\n    if (threads === 1) {\n      data = new Uint8ClampedArray(this._dataLookup[0]['buffer']);\n      meta = this._dataLookup[0]['meta'];\n    } else {\n      const length = job.inputs[0].data.length;\n      data = new Uint8ClampedArray(length);\n      meta = new Array(threads);\n      const segmentLength = 4 * Math.ceil(length / 4 / threads);\n      for (let i = 0; i < threads; ++i) {\n        const buffer = this._dataLookup[i]['buffer'];\n        const offset = i * segmentLength;\n        data.set(new Uint8ClampedArray(buffer), offset);\n        meta[i] = this._dataLookup[i]['meta'];\n      }\n    }\n    this._job = null;\n    this._dataLookup = {};\n    job.callback(\n      null,\n      newImageData(data, job.inputs[0].width, job.inputs[0].height),\n      meta\n    );\n    this._dispatch();\n  }\n\n  /**\n   * Terminate all workers associated with the processor.\n   */\n  disposeInternal() {\n    for (let i = 0; i < this._workers.length; ++i) {\n      this._workers[i].terminate();\n    }\n    this._workers.length = 0;\n  }\n}\n\n/**\n * A function that takes an array of input data, performs some operation, and\n * returns an array of output data.\n * For `pixel` type operations, the function will be called with an array of\n * pixels, where each pixel is an array of four numbers (`[r, g, b, a]`) in the\n * range of 0 - 255. It should return a single pixel array.\n * For `'image'` type operations, functions will be called with an array of\n * [ImageData](https://developer.mozilla.org/en-US/docs/Web/API/ImageData)\n * and should return a single\n * [ImageData](https://developer.mozilla.org/en-US/docs/Web/API/ImageData).\n * The operations\n * are called with a second \"data\" argument, which can be used for storage.  The\n * data object is accessible from raster events, where it can be initialized in\n * \"beforeoperations\" and accessed again in \"afteroperations\".\n *\n * @typedef {function((Array<Array<number>>|Array<ImageData>), Object):\n *     (Array<number>|ImageData)} Operation\n */\n\n/**\n * @enum {string}\n */\nconst RasterEventType = {\n  /**\n   * Triggered before operations are run.  Listeners will receive an event object with\n   * a `data` property that can be used to make data available to operations.\n   * @event module:ol/source/Raster.RasterSourceEvent#beforeoperations\n   * @api\n   */\n  BEFOREOPERATIONS: 'beforeoperations',\n\n  /**\n   * Triggered after operations are run.  Listeners will receive an event object with\n   * a `data` property.  If more than one thread is used, `data` will be an array of\n   * objects.  If a single thread is used, `data` will be a single object.\n   * @event module:ol/source/Raster.RasterSourceEvent#afteroperations\n   * @api\n   */\n  AFTEROPERATIONS: 'afteroperations',\n};\n\n/**\n * @typedef {'pixel' | 'image'} RasterOperationType\n * Raster operation type. Supported values are `'pixel'` and `'image'`.\n */\n\n/**\n * @typedef {import(\"./Image.js\").ImageSourceEventTypes|'beforeoperations'|'afteroperations'} RasterSourceEventTypes\n */\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/source/Raster~RasterSource} instances are instances of this\n * type.\n */\nexport class RasterSourceEvent extends Event {\n  /**\n   * @param {string} type Type.\n   * @param {import(\"../Map.js\").FrameState} frameState The frame state.\n   * @param {Object|Array<Object>} data An object made available to operations.  For \"afteroperations\" evenets\n   * this will be an array of objects if more than one thread is used.\n   */\n  constructor(type, frameState, data) {\n    super(type);\n\n    /**\n     * The raster extent.\n     * @type {import(\"../extent.js\").Extent}\n     * @api\n     */\n    this.extent = frameState.extent;\n\n    /**\n     * The pixel resolution (map units per pixel).\n     * @type {number}\n     * @api\n     */\n    this.resolution = frameState.viewState.resolution / frameState.pixelRatio;\n\n    /**\n     * An object made available to all operations.  This can be used by operations\n     * as a storage object (e.g. for calculating statistics).\n     * @type {Object}\n     * @api\n     */\n    this.data = data;\n  }\n}\n\n/**\n * @typedef {Object} Options\n * @property {Array<import(\"./Source.js\").default|import(\"../layer/Layer.js\").default>} sources Input\n * sources or layers.  For vector data, use an VectorImage layer.\n * @property {Operation} [operation] Raster operation.\n * The operation will be called with data from input sources\n * and the output will be assigned to the raster source.\n * @property {Object} [lib] Functions that will be made available to operations run in a worker.\n * @property {number} [threads] By default, operations will be run in a single worker thread.\n * To avoid using workers altogether, set `threads: 0`.  For pixel operations, operations can\n * be run in multiple worker threads.  Note that there is additional overhead in\n * transferring data to multiple workers, and that depending on the user's\n * system, it may not be possible to parallelize the work.\n * @property {RasterOperationType} [operationType='pixel'] Operation type.\n * Supported values are `'pixel'` and `'image'`.  By default,\n * `'pixel'` operations are assumed, and operations will be called with an\n * array of pixels from input sources.  If set to `'image'`, operations will\n * be called with an array of ImageData objects from input sources.\n * @property {Array<number>|null} [resolutions] Resolutions. If specified, raster operations will only\n * be run at the given resolutions.  By default, the resolutions of the first source with resolutions\n * specified will be used, if any. Set to `null` to use any view resolution instead.\n */\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types, import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<import(\"./Image.js\").ImageSourceEventTypes, import(\"./Image.js\").ImageSourceEvent, Return> &\n *   import(\"../Observable\").OnSignature<RasterSourceEventTypes, RasterSourceEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"../ObjectEventType\").Types\n *     |RasterSourceEventTypes, Return>} RasterSourceOnSignature\n */\n\n/**\n * @classdesc\n * A source that transforms data from any number of input sources using an\n * {@link module:ol/source/Raster~Operation} function to transform input pixel values into\n * output pixel values.\n *\n * @fires module:ol/source/Raster.RasterSourceEvent\n * @api\n */\nclass RasterSource extends ImageSource {\n  /**\n   * @param {Options} options Options.\n   */\n  constructor(options) {\n    super({\n      projection: null,\n    });\n\n    /***\n     * @type {RasterSourceOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {RasterSourceOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {RasterSourceOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @private\n     * @type {Processor}\n     */\n    this.processor_ = null;\n\n    /**\n     * @private\n     * @type {RasterOperationType}\n     */\n    this.operationType_ =\n      options.operationType !== undefined ? options.operationType : 'pixel';\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.threads_ = options.threads !== undefined ? options.threads : 1;\n\n    /**\n     * @private\n     * @type {Array<import(\"../layer/Layer.js\").default>}\n     */\n    this.layers_ = createLayers(options.sources);\n\n    const changed = this.changed.bind(this);\n    for (let i = 0, ii = this.layers_.length; i < ii; ++i) {\n      this.layers_[i].addEventListener(EventType.CHANGE, changed);\n    }\n\n    /** @type {boolean} */\n    this.useResolutions_ = options.resolutions !== null;\n\n    /**\n     * @private\n     * @type {import(\"../TileQueue.js\").default}\n     */\n    this.tileQueue_ = new TileQueue(function () {\n      return 1;\n    }, this.changed.bind(this));\n\n    /**\n     * The most recently requested frame state.\n     * @type {import(\"../Map.js\").FrameState}\n     * @private\n     */\n    this.requestedFrameState_;\n\n    /**\n     * The most recently rendered image canvas.\n     * @type {import(\"../ImageCanvas.js\").default}\n     * @private\n     */\n    this.renderedImageCanvas_ = null;\n\n    /**\n     * The most recently rendered revision.\n     * @type {number}\n     */\n    this.renderedRevision_;\n\n    /**\n     * @private\n     * @type {import(\"../Map.js\").FrameState}\n     */\n    this.frameState_ = {\n      animate: false,\n      coordinateToPixelTransform: createTransform(),\n      declutterTree: null,\n      extent: null,\n      index: 0,\n      layerIndex: 0,\n      layerStatesArray: getLayerStatesArray(this.layers_),\n      pixelRatio: 1,\n      pixelToCoordinateTransform: createTransform(),\n      postRenderFunctions: [],\n      size: [0, 0],\n      tileQueue: this.tileQueue_,\n      time: Date.now(),\n      usedTiles: {},\n      viewState: /** @type {import(\"../View.js\").State} */ ({\n        rotation: 0,\n      }),\n      viewHints: [],\n      wantedTiles: {},\n      mapId: getUid(this),\n      renderTargets: {},\n    };\n\n    this.setAttributions(function (frameState) {\n      const attributions = [];\n      for (\n        let index = 0, iMax = options.sources.length;\n        index < iMax;\n        ++index\n      ) {\n        const sourceOrLayer = options.sources[index];\n        const source =\n          sourceOrLayer instanceof Source\n            ? sourceOrLayer\n            : sourceOrLayer.getSource();\n        if (!source) {\n          continue;\n        }\n        const attributionGetter = source.getAttributions();\n        if (typeof attributionGetter === 'function') {\n          const sourceAttribution = attributionGetter(frameState);\n          attributions.push.apply(attributions, sourceAttribution);\n        }\n      }\n      return attributions.length !== 0 ? attributions : null;\n    });\n\n    if (options.operation !== undefined) {\n      this.setOperation(options.operation, options.lib);\n    }\n  }\n\n  /**\n   * Set the operation.\n   * @param {Operation} operation New operation.\n   * @param {Object} [lib] Functions that will be available to operations run\n   *     in a worker.\n   * @api\n   */\n  setOperation(operation, lib) {\n    if (this.processor_) {\n      this.processor_.dispose();\n    }\n\n    this.processor_ = new Processor({\n      operation: operation,\n      imageOps: this.operationType_ === 'image',\n      queue: 1,\n      lib: lib,\n      threads: this.threads_,\n    });\n    this.changed();\n  }\n\n  /**\n   * Update the stored frame state.\n   * @param {import(\"../extent.js\").Extent} extent The view extent (in map units).\n   * @param {number} resolution The view resolution.\n   * @param {import(\"../proj/Projection.js\").default} projection The view projection.\n   * @return {import(\"../Map.js\").FrameState} The updated frame state.\n   * @private\n   */\n  updateFrameState_(extent, resolution, projection) {\n    const frameState = /** @type {import(\"../Map.js\").FrameState} */ (\n      Object.assign({}, this.frameState_)\n    );\n\n    frameState.viewState = /** @type {import(\"../View.js\").State} */ (\n      Object.assign({}, frameState.viewState)\n    );\n\n    const center = getCenter(extent);\n\n    frameState.size[0] = Math.ceil(getWidth(extent) / resolution);\n    frameState.size[1] = Math.ceil(getHeight(extent) / resolution);\n    frameState.extent = [\n      center[0] - (frameState.size[0] * resolution) / 2,\n      center[1] - (frameState.size[1] * resolution) / 2,\n      center[0] + (frameState.size[0] * resolution) / 2,\n      center[1] + (frameState.size[1] * resolution) / 2,\n    ];\n    frameState.time = Date.now();\n\n    const viewState = frameState.viewState;\n    viewState.center = center;\n    viewState.projection = projection;\n    viewState.resolution = resolution;\n    return frameState;\n  }\n\n  /**\n   * Determine if all sources are ready.\n   * @return {boolean} All sources are ready.\n   * @private\n   */\n  allSourcesReady_() {\n    let ready = true;\n    let source;\n    for (let i = 0, ii = this.layers_.length; i < ii; ++i) {\n      source = this.layers_[i].getSource();\n      if (!source || source.getState() !== 'ready') {\n        ready = false;\n        break;\n      }\n    }\n    return ready;\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {import(\"../ImageCanvas.js\").default} Single image.\n   */\n  getImage(extent, resolution, pixelRatio, projection) {\n    if (!this.allSourcesReady_()) {\n      return null;\n    }\n\n    resolution = this.findNearestResolution(resolution);\n    const frameState = this.updateFrameState_(extent, resolution, projection);\n    this.requestedFrameState_ = frameState;\n\n    // check if we can't reuse the existing ol/ImageCanvas\n    if (this.renderedImageCanvas_) {\n      const renderedResolution = this.renderedImageCanvas_.getResolution();\n      const renderedExtent = this.renderedImageCanvas_.getExtent();\n      if (\n        resolution !== renderedResolution ||\n        !equals(frameState.extent, renderedExtent)\n      ) {\n        this.renderedImageCanvas_ = null;\n      }\n    }\n\n    if (\n      !this.renderedImageCanvas_ ||\n      this.getRevision() !== this.renderedRevision_\n    ) {\n      this.processSources_();\n    }\n\n    frameState.tileQueue.loadMoreTiles(16, 16);\n\n    if (frameState.animate) {\n      requestAnimationFrame(this.changed.bind(this));\n    }\n\n    return this.renderedImageCanvas_;\n  }\n\n  /**\n   * Start processing source data.\n   * @private\n   */\n  processSources_() {\n    const frameState = this.requestedFrameState_;\n    const len = this.layers_.length;\n    const imageDatas = new Array(len);\n    for (let i = 0; i < len; ++i) {\n      frameState.layerIndex = i;\n      frameState.renderTargets = {};\n      const imageData = getImageData(this.layers_[i], frameState);\n      if (imageData) {\n        imageDatas[i] = imageData;\n      } else {\n        return;\n      }\n    }\n\n    const data = {};\n    this.dispatchEvent(\n      new RasterSourceEvent(RasterEventType.BEFOREOPERATIONS, frameState, data)\n    );\n    this.processor_.process(\n      imageDatas,\n      data,\n      this.onWorkerComplete_.bind(this, frameState)\n    );\n  }\n\n  /**\n   * Called when pixel processing is complete.\n   * @param {import(\"../Map.js\").FrameState} frameState The frame state.\n   * @param {Error} err Any error during processing.\n   * @param {ImageData} output The output image data.\n   * @param {Object|Array<Object>} data The user data (or an array if more than one thread).\n   * @private\n   */\n  onWorkerComplete_(frameState, err, output, data) {\n    if (err || !output) {\n      return;\n    }\n\n    // do nothing if extent or resolution changed\n    const extent = frameState.extent;\n    const resolution = frameState.viewState.resolution;\n    if (\n      resolution !== this.requestedFrameState_.viewState.resolution ||\n      !equals(extent, this.requestedFrameState_.extent)\n    ) {\n      return;\n    }\n\n    let context;\n    if (this.renderedImageCanvas_) {\n      context = this.renderedImageCanvas_.getImage().getContext('2d');\n    } else {\n      const width = Math.round(getWidth(extent) / resolution);\n      const height = Math.round(getHeight(extent) / resolution);\n      context = createCanvasContext2D(width, height);\n      this.renderedImageCanvas_ = new ImageCanvas(\n        extent,\n        resolution,\n        1,\n        context.canvas\n      );\n    }\n    context.putImageData(output, 0, 0);\n\n    this.changed();\n    this.renderedRevision_ = this.getRevision();\n\n    this.dispatchEvent(\n      new RasterSourceEvent(RasterEventType.AFTEROPERATIONS, frameState, data)\n    );\n    if (frameState.animate) {\n      requestAnimationFrame(this.changed.bind(this));\n    }\n  }\n\n  /**\n   * @param {import(\"../proj/Projection\").default} [projection] Projection.\n   * @return {Array<number>|null} Resolutions.\n   */\n  getResolutions(projection) {\n    if (!this.useResolutions_) {\n      return null;\n    }\n    let resolutions = super.getResolutions();\n    if (!resolutions) {\n      for (let i = 0, ii = this.layers_.length; i < ii; ++i) {\n        const source = this.layers_[i].getSource();\n        resolutions = source.getResolutions(projection);\n        if (resolutions) {\n          break;\n        }\n      }\n    }\n    return resolutions;\n  }\n\n  disposeInternal() {\n    if (this.processor_) {\n      this.processor_.dispose();\n    }\n    super.disposeInternal();\n  }\n}\n\n/**\n * Clean up and unregister the worker.\n * @function\n * @api\n */\nRasterSource.prototype.dispose;\n\n/**\n * A reusable canvas context.\n * @type {CanvasRenderingContext2D}\n * @private\n */\nlet sharedContext = null;\n\n/**\n * Get image data from a layer.\n * @param {import(\"../layer/Layer.js\").default} layer Layer to render.\n * @param {import(\"../Map.js\").FrameState} frameState The frame state.\n * @return {ImageData} The image data.\n */\nfunction getImageData(layer, frameState) {\n  const renderer = layer.getRenderer();\n  if (!renderer) {\n    throw new Error('Unsupported layer type: ' + layer);\n  }\n\n  if (!renderer.prepareFrame(frameState)) {\n    return null;\n  }\n  const width = frameState.size[0];\n  const height = frameState.size[1];\n  if (width === 0 || height === 0) {\n    return null;\n  }\n  const container = renderer.renderFrame(frameState, null);\n  let element;\n  if (container instanceof HTMLCanvasElement) {\n    element = container;\n  } else {\n    if (container) {\n      element = container.firstElementChild;\n    }\n    if (!(element instanceof HTMLCanvasElement)) {\n      throw new Error('Unsupported rendered element: ' + element);\n    }\n    if (element.width === width && element.height === height) {\n      const context = element.getContext('2d');\n      return context.getImageData(0, 0, width, height);\n    }\n  }\n\n  if (!sharedContext) {\n    sharedContext = createCanvasContext2D(width, height, undefined, {\n      willReadFrequently: true,\n    });\n  } else {\n    const canvas = sharedContext.canvas;\n    if (canvas.width !== width || canvas.height !== height) {\n      sharedContext = createCanvasContext2D(width, height, undefined, {\n        willReadFrequently: true,\n      });\n    } else {\n      sharedContext.clearRect(0, 0, width, height);\n    }\n  }\n  sharedContext.drawImage(element, 0, 0, width, height);\n  return sharedContext.getImageData(0, 0, width, height);\n}\n\n/**\n * Get a list of layer states from a list of layers.\n * @param {Array<import(\"../layer/Layer.js\").default>} layers Layers.\n * @return {Array<import(\"../layer/Layer.js\").State>} The layer states.\n */\nfunction getLayerStatesArray(layers) {\n  return layers.map(function (layer) {\n    return layer.getLayerState();\n  });\n}\n\n/**\n * Create layers for all sources.\n * @param {Array<import(\"./Source.js\").default|import(\"../layer/Layer.js\").default>} sources The sources.\n * @return {Array<import(\"../layer/Layer.js\").default>} Array of layers.\n */\nfunction createLayers(sources) {\n  const len = sources.length;\n  const layers = new Array(len);\n  for (let i = 0; i < len; ++i) {\n    layers[i] = createLayer(sources[i]);\n  }\n  return layers;\n}\n\n/**\n * Create a layer for the provided source.\n * @param {import(\"./Source.js\").default|import(\"../layer/Layer.js\").default} layerOrSource The layer or source.\n * @return {import(\"../layer/Layer.js\").default} The layer.\n */\nfunction createLayer(layerOrSource) {\n  // @type {import(\"../layer/Layer.js\").default}\n  let layer;\n  if (layerOrSource instanceof Source) {\n    if (layerOrSource instanceof TileSource) {\n      layer = new TileLayer({source: layerOrSource});\n    } else if (layerOrSource instanceof ImageSource) {\n      layer = new ImageLayer({source: layerOrSource});\n    }\n  } else {\n    layer = layerOrSource;\n  }\n  return layer;\n}\n\nexport default RasterSource;\n","/**\n * @module ol/source/UrlTile\n */\nimport TileEventType from './TileEventType.js';\nimport TileSource, {TileSourceEvent} from './Tile.js';\nimport TileState from '../TileState.js';\nimport {createFromTemplates, expandUrl} from '../tileurlfunction.js';\nimport {getKeyZXY} from '../tilecoord.js';\nimport {getUid} from '../util.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize] Cache size.\n * @property {boolean} [opaque=false] Whether the layer is opaque.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection.\n * @property {import(\"./Source.js\").State} [state] State.\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid] TileGrid.\n * @property {import(\"../Tile.js\").LoadFunction} tileLoadFunction TileLoadFunction.\n * @property {number} [tilePixelRatio] TilePixelRatio.\n * @property {import(\"../Tile.js\").UrlFunction} [tileUrlFunction] TileUrlFunction.\n * @property {string} [url] Url.\n * @property {Array<string>} [urls] Urls.\n * @property {boolean} [wrapX=true] WrapX.\n * @property {number} [transition] Transition.\n * @property {string} [key] Key.\n * @property {number|import(\"../array.js\").NearestDirectionFunction} [zDirection=0] ZDirection.\n * @property {boolean} [interpolate=false] Use interpolated values when resampling.  By default,\n * the nearest neighbor is used when resampling.\n */\n\n/**\n * @classdesc\n * Base class for sources providing tiles divided into a tile grid over http.\n *\n * @fires import(\"./Tile.js\").TileSourceEvent\n */\nclass UrlTile extends TileSource {\n  /**\n   * @param {Options} options Image tile options.\n   */\n  constructor(options) {\n    super({\n      attributions: options.attributions,\n      cacheSize: options.cacheSize,\n      opaque: options.opaque,\n      projection: options.projection,\n      state: options.state,\n      tileGrid: options.tileGrid,\n      tilePixelRatio: options.tilePixelRatio,\n      wrapX: options.wrapX,\n      transition: options.transition,\n      interpolate: options.interpolate,\n      key: options.key,\n      attributionsCollapsible: options.attributionsCollapsible,\n      zDirection: options.zDirection,\n    });\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.generateTileUrlFunction_ =\n      this.tileUrlFunction === UrlTile.prototype.tileUrlFunction;\n\n    /**\n     * @protected\n     * @type {import(\"../Tile.js\").LoadFunction}\n     */\n    this.tileLoadFunction = options.tileLoadFunction;\n\n    if (options.tileUrlFunction) {\n      this.tileUrlFunction = options.tileUrlFunction;\n    }\n\n    /**\n     * @protected\n     * @type {!Array<string>|null}\n     */\n    this.urls = null;\n\n    if (options.urls) {\n      this.setUrls(options.urls);\n    } else if (options.url) {\n      this.setUrl(options.url);\n    }\n\n    /**\n     * @private\n     * @type {!Object<string, boolean>}\n     */\n    this.tileLoadingKeys_ = {};\n  }\n\n  /**\n   * Return the tile load function of the source.\n   * @return {import(\"../Tile.js\").LoadFunction} TileLoadFunction\n   * @api\n   */\n  getTileLoadFunction() {\n    return this.tileLoadFunction;\n  }\n\n  /**\n   * Return the tile URL function of the source.\n   * @return {import(\"../Tile.js\").UrlFunction} TileUrlFunction\n   * @api\n   */\n  getTileUrlFunction() {\n    return Object.getPrototypeOf(this).tileUrlFunction === this.tileUrlFunction\n      ? this.tileUrlFunction.bind(this)\n      : this.tileUrlFunction;\n  }\n\n  /**\n   * Return the URLs used for this source.\n   * When a tileUrlFunction is used instead of url or urls,\n   * null will be returned.\n   * @return {!Array<string>|null} URLs.\n   * @api\n   */\n  getUrls() {\n    return this.urls;\n  }\n\n  /**\n   * Handle tile change events.\n   * @param {import(\"../events/Event.js\").default} event Event.\n   * @protected\n   */\n  handleTileChange(event) {\n    const tile = /** @type {import(\"../Tile.js\").default} */ (event.target);\n    const uid = getUid(tile);\n    const tileState = tile.getState();\n    let type;\n    if (tileState == TileState.LOADING) {\n      this.tileLoadingKeys_[uid] = true;\n      type = TileEventType.TILELOADSTART;\n    } else if (uid in this.tileLoadingKeys_) {\n      delete this.tileLoadingKeys_[uid];\n      type =\n        tileState == TileState.ERROR\n          ? TileEventType.TILELOADERROR\n          : tileState == TileState.LOADED\n          ? TileEventType.TILELOADEND\n          : undefined;\n    }\n    if (type != undefined) {\n      this.dispatchEvent(new TileSourceEvent(type, tile));\n    }\n  }\n\n  /**\n   * Set the tile load function of the source.\n   * @param {import(\"../Tile.js\").LoadFunction} tileLoadFunction Tile load function.\n   * @api\n   */\n  setTileLoadFunction(tileLoadFunction) {\n    this.tileCache.clear();\n    this.tileLoadFunction = tileLoadFunction;\n    this.changed();\n  }\n\n  /**\n   * Set the tile URL function of the source.\n   * @param {import(\"../Tile.js\").UrlFunction} tileUrlFunction Tile URL function.\n   * @param {string} [key] Optional new tile key for the source.\n   * @api\n   */\n  setTileUrlFunction(tileUrlFunction, key) {\n    this.tileUrlFunction = tileUrlFunction;\n    this.tileCache.pruneExceptNewestZ();\n    if (typeof key !== 'undefined') {\n      this.setKey(key);\n    } else {\n      this.changed();\n    }\n  }\n\n  /**\n   * Set the URL to use for requests.\n   * @param {string} url URL.\n   * @api\n   */\n  setUrl(url) {\n    const urls = expandUrl(url);\n    this.urls = urls;\n    this.setUrls(urls);\n  }\n\n  /**\n   * Set the URLs to use for requests.\n   * @param {Array<string>} urls URLs.\n   * @api\n   */\n  setUrls(urls) {\n    this.urls = urls;\n    const key = urls.join('\\n');\n    if (this.generateTileUrlFunction_) {\n      this.setTileUrlFunction(createFromTemplates(urls, this.tileGrid), key);\n    } else {\n      this.setKey(key);\n    }\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {string|undefined} Tile URL.\n   */\n  tileUrlFunction(tileCoord, pixelRatio, projection) {\n    return undefined;\n  }\n\n  /**\n   * Marks a tile coord as being used, without triggering a load.\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   */\n  useTile(z, x, y) {\n    const tileCoordKey = getKeyZXY(z, x, y);\n    if (this.tileCache.containsKey(tileCoordKey)) {\n      this.tileCache.get(tileCoordKey);\n    }\n  }\n}\n\nexport default UrlTile;\n","/**\n * @module ol/source/TileEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered when a tile starts loading.\n   * @event module:ol/source/Tile.TileSourceEvent#tileloadstart\n   * @api\n   */\n  TILELOADSTART: 'tileloadstart',\n\n  /**\n   * Triggered when a tile finishes loading, either when its data is loaded,\n   * or when loading was aborted because the tile is no longer needed.\n   * @event module:ol/source/Tile.TileSourceEvent#tileloadend\n   * @api\n   */\n  TILELOADEND: 'tileloadend',\n\n  /**\n   * Triggered if tile loading results in an error. Note that this is not the\n   * right place to re-fetch tiles. See {@link module:ol/ImageTile~ImageTile#load}\n   * for details.\n   * @event module:ol/source/Tile.TileSourceEvent#tileloaderror\n   * @api\n   */\n  TILELOADERROR: 'tileloaderror',\n};\n\n/**\n * @typedef {'tileloadstart'|'tileloadend'|'tileloaderror'} TileSourceEventTypes\n */\n","/**\n * @module ol/source/TileImage\n */\nimport EventType from '../events/EventType.js';\nimport ImageTile from '../ImageTile.js';\nimport ReprojTile from '../reproj/Tile.js';\nimport TileCache from '../TileCache.js';\nimport TileState from '../TileState.js';\nimport UrlTile from './UrlTile.js';\nimport {equivalent, get as getProjection} from '../proj.js';\nimport {getKey, getKeyZXY} from '../tilecoord.js';\nimport {getForProjection as getTileGridForProjection} from '../tilegrid.js';\nimport {getUid} from '../util.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize] Initial tile cache size. Will auto-grow to hold at least the number of tiles in the viewport.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {boolean} [interpolate=true] Use interpolated values when resampling.  By default,\n * linear interpolation is used when resampling.  Set to false to use the nearest neighbor instead.\n * @property {boolean} [opaque=false] Whether the layer is opaque.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection. Default is the view projection.\n * @property {number} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {import(\"./Source.js\").State} [state] Source state.\n * @property {typeof import(\"../ImageTile.js\").default} [tileClass] Class used to instantiate image tiles.\n * Default is {@link module:ol/ImageTile~ImageTile}.\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid] Tile grid.\n * @property {import(\"../Tile.js\").LoadFunction} [tileLoadFunction] Optional function to load a tile given a URL. The default is\n * ```js\n * function(imageTile, src) {\n *   imageTile.getImage().src = src;\n * };\n * ```\n * @property {number} [tilePixelRatio=1] The pixel ratio used by the tile service. For example, if the tile\n * service advertizes 256px by 256px tiles but actually sends 512px\n * by 512px images (for retina/hidpi devices) then `tilePixelRatio`\n * should be set to `2`.\n * @property {import(\"../Tile.js\").UrlFunction} [tileUrlFunction] Optional function to get tile URL given a tile coordinate and the projection.\n * @property {string} [url] URL template. Must include `{x}`, `{y}` or `{-y}`, and `{z}` placeholders.\n * A `{?-?}` template pattern, for example `subdomain{a-f}.domain.com`, may be\n * used instead of defining each one separately in the `urls` option.\n * @property {Array<string>} [urls] An array of URL templates.\n * @property {boolean} [wrapX] Whether to wrap the world horizontally. The default, is to\n * request out-of-bounds tiles from the server. When set to `false`, only one\n * world will be rendered. When set to `true`, tiles will be requested for one\n * world only, but they will be wrapped horizontally to render multiple worlds.\n * @property {number} [transition] Duration of the opacity transition for rendering.\n * To disable the opacity transition, pass `transition: 0`.\n * @property {string} [key] Optional tile key for proper cache fetching\n * @property {number|import(\"../array.js\").NearestDirectionFunction} [zDirection=0]\n * Choose whether to use tiles with a higher or lower zoom level when between integer\n * zoom levels. See {@link module:ol/tilegrid/TileGrid~TileGrid#getZForResolution}.\n */\n\n/**\n * @classdesc\n * Base class for sources providing images divided into a tile grid.\n *\n * @fires import(\"./Tile.js\").TileSourceEvent\n * @api\n */\nclass TileImage extends UrlTile {\n  /**\n   * @param {!Options} options Image tile options.\n   */\n  constructor(options) {\n    super({\n      attributions: options.attributions,\n      cacheSize: options.cacheSize,\n      opaque: options.opaque,\n      projection: options.projection,\n      state: options.state,\n      tileGrid: options.tileGrid,\n      tileLoadFunction: options.tileLoadFunction\n        ? options.tileLoadFunction\n        : defaultTileLoadFunction,\n      tilePixelRatio: options.tilePixelRatio,\n      tileUrlFunction: options.tileUrlFunction,\n      url: options.url,\n      urls: options.urls,\n      wrapX: options.wrapX,\n      transition: options.transition,\n      interpolate:\n        options.interpolate !== undefined ? options.interpolate : true,\n      key: options.key,\n      attributionsCollapsible: options.attributionsCollapsible,\n      zDirection: options.zDirection,\n    });\n\n    /**\n     * @protected\n     * @type {?string}\n     */\n    this.crossOrigin =\n      options.crossOrigin !== undefined ? options.crossOrigin : null;\n\n    /**\n     * @protected\n     * @type {typeof ImageTile}\n     */\n    this.tileClass =\n      options.tileClass !== undefined ? options.tileClass : ImageTile;\n\n    /**\n     * @protected\n     * @type {!Object<string, TileCache>}\n     */\n    this.tileCacheForProjection = {};\n\n    /**\n     * @protected\n     * @type {!Object<string, import(\"../tilegrid/TileGrid.js\").default>}\n     */\n    this.tileGridForProjection = {};\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.reprojectionErrorThreshold_ = options.reprojectionErrorThreshold;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.renderReprojectionEdges_ = false;\n  }\n\n  /**\n   * @return {boolean} Can expire cache.\n   */\n  canExpireCache() {\n    if (this.tileCache.canExpireCache()) {\n      return true;\n    }\n    for (const key in this.tileCacheForProjection) {\n      if (this.tileCacheForProjection[key].canExpireCache()) {\n        return true;\n      }\n    }\n\n    return false;\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @param {!Object<string, boolean>} usedTiles Used tiles.\n   */\n  expireCache(projection, usedTiles) {\n    const usedTileCache = this.getTileCacheForProjection(projection);\n\n    this.tileCache.expireCache(\n      this.tileCache == usedTileCache ? usedTiles : {}\n    );\n    for (const id in this.tileCacheForProjection) {\n      const tileCache = this.tileCacheForProjection[id];\n      tileCache.expireCache(tileCache == usedTileCache ? usedTiles : {});\n    }\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {number} Gutter.\n   */\n  getGutterForProjection(projection) {\n    if (\n      this.getProjection() &&\n      projection &&\n      !equivalent(this.getProjection(), projection)\n    ) {\n      return 0;\n    }\n    return this.getGutter();\n  }\n\n  /**\n   * @return {number} Gutter.\n   */\n  getGutter() {\n    return 0;\n  }\n\n  /**\n   * Return the key to be used for all tiles in the source.\n   * @return {string} The key for all tiles.\n   */\n  getKey() {\n    let key = super.getKey();\n    if (!this.getInterpolate()) {\n      key += ':disable-interpolation';\n    }\n    return key;\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {boolean} Opaque.\n   */\n  getOpaque(projection) {\n    if (\n      this.getProjection() &&\n      projection &&\n      !equivalent(this.getProjection(), projection)\n    ) {\n      return false;\n    }\n    return super.getOpaque(projection);\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {!import(\"../tilegrid/TileGrid.js\").default} Tile grid.\n   */\n  getTileGridForProjection(projection) {\n    const thisProj = this.getProjection();\n    if (this.tileGrid && (!thisProj || equivalent(thisProj, projection))) {\n      return this.tileGrid;\n    }\n    const projKey = getUid(projection);\n    if (!(projKey in this.tileGridForProjection)) {\n      this.tileGridForProjection[projKey] =\n        getTileGridForProjection(projection);\n    }\n    return this.tileGridForProjection[projKey];\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {import(\"../TileCache.js\").default} Tile cache.\n   */\n  getTileCacheForProjection(projection) {\n    const thisProj = this.getProjection();\n    if (!thisProj || equivalent(thisProj, projection)) {\n      return this.tileCache;\n    }\n    const projKey = getUid(projection);\n    if (!(projKey in this.tileCacheForProjection)) {\n      this.tileCacheForProjection[projKey] = new TileCache(\n        this.tileCache.highWaterMark\n      );\n    }\n    return this.tileCacheForProjection[projKey];\n  }\n\n  /**\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @param {string} key The key set on the tile.\n   * @return {!ImageTile} Tile.\n   * @private\n   */\n  createTile_(z, x, y, pixelRatio, projection, key) {\n    const tileCoord = [z, x, y];\n    const urlTileCoord = this.getTileCoordForTileUrlFunction(\n      tileCoord,\n      projection\n    );\n    const tileUrl = urlTileCoord\n      ? this.tileUrlFunction(urlTileCoord, pixelRatio, projection)\n      : undefined;\n    const tile = new this.tileClass(\n      tileCoord,\n      tileUrl !== undefined ? TileState.IDLE : TileState.EMPTY,\n      tileUrl !== undefined ? tileUrl : '',\n      this.crossOrigin,\n      this.tileLoadFunction,\n      this.tileOptions\n    );\n    tile.key = key;\n    tile.addEventListener(EventType.CHANGE, this.handleTileChange.bind(this));\n    return tile;\n  }\n\n  /**\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {!(ImageTile|ReprojTile)} Tile.\n   */\n  getTile(z, x, y, pixelRatio, projection) {\n    const sourceProjection = this.getProjection();\n    if (\n      !sourceProjection ||\n      !projection ||\n      equivalent(sourceProjection, projection)\n    ) {\n      return this.getTileInternal(\n        z,\n        x,\n        y,\n        pixelRatio,\n        sourceProjection || projection\n      );\n    }\n    const cache = this.getTileCacheForProjection(projection);\n    const tileCoord = [z, x, y];\n    let tile;\n    const tileCoordKey = getKey(tileCoord);\n    if (cache.containsKey(tileCoordKey)) {\n      tile = cache.get(tileCoordKey);\n    }\n    const key = this.getKey();\n    if (tile && tile.key == key) {\n      return tile;\n    }\n    const sourceTileGrid = this.getTileGridForProjection(sourceProjection);\n    const targetTileGrid = this.getTileGridForProjection(projection);\n    const wrappedTileCoord = this.getTileCoordForTileUrlFunction(\n      tileCoord,\n      projection\n    );\n    const newTile = new ReprojTile(\n      sourceProjection,\n      sourceTileGrid,\n      projection,\n      targetTileGrid,\n      tileCoord,\n      wrappedTileCoord,\n      this.getTilePixelRatio(pixelRatio),\n      this.getGutter(),\n      (z, x, y, pixelRatio) =>\n        this.getTileInternal(z, x, y, pixelRatio, sourceProjection),\n      this.reprojectionErrorThreshold_,\n      this.renderReprojectionEdges_,\n      this.getInterpolate()\n    );\n    newTile.key = key;\n\n    if (tile) {\n      newTile.interimTile = tile;\n      newTile.refreshInterimChain();\n      cache.replace(tileCoordKey, newTile);\n    } else {\n      cache.set(tileCoordKey, newTile);\n    }\n    return newTile;\n  }\n\n  /**\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {!import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {!ImageTile} Tile.\n   * @protected\n   */\n  getTileInternal(z, x, y, pixelRatio, projection) {\n    let tile = null;\n    const tileCoordKey = getKeyZXY(z, x, y);\n    const key = this.getKey();\n    if (!this.tileCache.containsKey(tileCoordKey)) {\n      tile = this.createTile_(z, x, y, pixelRatio, projection, key);\n      this.tileCache.set(tileCoordKey, tile);\n    } else {\n      tile = this.tileCache.get(tileCoordKey);\n      if (tile.key != key) {\n        // The source's params changed. If the tile has an interim tile and if we\n        // can use it then we use it. Otherwise we create a new tile.  In both\n        // cases we attempt to assign an interim tile to the new tile.\n        const interimTile = tile;\n        tile = this.createTile_(z, x, y, pixelRatio, projection, key);\n\n        //make the new tile the head of the list,\n        if (interimTile.getState() == TileState.IDLE) {\n          //the old tile hasn't begun loading yet, and is now outdated, so we can simply discard it\n          tile.interimTile = interimTile.interimTile;\n        } else {\n          tile.interimTile = interimTile;\n        }\n        tile.refreshInterimChain();\n        this.tileCache.replace(tileCoordKey, tile);\n      }\n    }\n    return tile;\n  }\n\n  /**\n   * Sets whether to render reprojection edges or not (usually for debugging).\n   * @param {boolean} render Render the edges.\n   * @api\n   */\n  setRenderReprojectionEdges(render) {\n    if (this.renderReprojectionEdges_ == render) {\n      return;\n    }\n    this.renderReprojectionEdges_ = render;\n    for (const id in this.tileCacheForProjection) {\n      this.tileCacheForProjection[id].clear();\n    }\n    this.changed();\n  }\n\n  /**\n   * Sets the tile grid to use when reprojecting the tiles to the given\n   * projection instead of the default tile grid for the projection.\n   *\n   * This can be useful when the default tile grid cannot be created\n   * (e.g. projection has no extent defined) or\n   * for optimization reasons (custom tile size, resolutions, ...).\n   *\n   * @param {import(\"../proj.js\").ProjectionLike} projection Projection.\n   * @param {import(\"../tilegrid/TileGrid.js\").default} tilegrid Tile grid to use for the projection.\n   * @api\n   */\n  setTileGridForProjection(projection, tilegrid) {\n    const proj = getProjection(projection);\n    if (proj) {\n      const projKey = getUid(proj);\n      if (!(projKey in this.tileGridForProjection)) {\n        this.tileGridForProjection[projKey] = tilegrid;\n      }\n    }\n  }\n\n  clear() {\n    super.clear();\n    for (const id in this.tileCacheForProjection) {\n      this.tileCacheForProjection[id].clear();\n    }\n  }\n}\n\n/**\n * @param {ImageTile} imageTile Image tile.\n * @param {string} src Source.\n */\nfunction defaultTileLoadFunction(imageTile, src) {\n  /** @type {HTMLImageElement|HTMLVideoElement} */ (imageTile.getImage()).src =\n    src;\n}\n\nexport default TileImage;\n","/**\n * @module ol/net\n */\nimport {getUid} from './util.js';\n\n/**\n * Simple JSONP helper. Supports error callbacks and a custom callback param.\n * The error callback will be called when no JSONP is executed after 10 seconds.\n *\n * @param {string} url Request url. A 'callback' query parameter will be\n *     appended.\n * @param {Function} callback Callback on success.\n * @param {Function} [errback] Callback on error.\n * @param {string} [callbackParam] Custom query parameter for the JSONP\n *     callback. Default is 'callback'.\n */\nexport function jsonp(url, callback, errback, callbackParam) {\n  const script = document.createElement('script');\n  const key = 'olc_' + getUid(callback);\n  function cleanup() {\n    delete window[key];\n    script.parentNode.removeChild(script);\n  }\n  script.async = true;\n  script.src =\n    url +\n    (url.includes('?') ? '&' : '?') +\n    (callbackParam || 'callback') +\n    '=' +\n    key;\n  const timer = setTimeout(function () {\n    cleanup();\n    if (errback) {\n      errback();\n    }\n  }, 10000);\n  window[key] = function (data) {\n    clearTimeout(timer);\n    cleanup();\n    callback(data);\n  };\n  document.head.appendChild(script);\n}\n\nexport class ResponseError extends Error {\n  /**\n   * @param {XMLHttpRequest} response The XHR object.\n   */\n  constructor(response) {\n    const message = 'Unexpected response status: ' + response.status;\n    super(message);\n\n    /**\n     * @type {string}\n     */\n    this.name = 'ResponseError';\n\n    /**\n     * @type {XMLHttpRequest}\n     */\n    this.response = response;\n  }\n}\n\nexport class ClientError extends Error {\n  /**\n   * @param {XMLHttpRequest} client The XHR object.\n   */\n  constructor(client) {\n    super('Failed to issue request');\n\n    /**\n     * @type {string}\n     */\n    this.name = 'ClientError';\n\n    /**\n     * @type {XMLHttpRequest}\n     */\n    this.client = client;\n  }\n}\n\n/**\n * @param {string} url The URL.\n * @return {Promise<Object>} A promise that resolves to the JSON response.\n */\nexport function getJSON(url) {\n  return new Promise(function (resolve, reject) {\n    /**\n     * @param {ProgressEvent<XMLHttpRequest>} event The load event.\n     */\n    function onLoad(event) {\n      const client = event.target;\n      // status will be 0 for file:// urls\n      if (!client.status || (client.status >= 200 && client.status < 300)) {\n        let data;\n        try {\n          data = JSON.parse(client.responseText);\n        } catch (err) {\n          const message = 'Error parsing response text as JSON: ' + err.message;\n          reject(new Error(message));\n          return;\n        }\n        resolve(data);\n        return;\n      }\n\n      reject(new ResponseError(client));\n    }\n\n    /**\n     * @param {ProgressEvent<XMLHttpRequest>} event The error event.\n     */\n    function onError(event) {\n      reject(new ClientError(event.target));\n    }\n\n    const client = new XMLHttpRequest();\n    client.addEventListener('load', onLoad);\n    client.addEventListener('error', onError);\n    client.open('GET', url);\n    client.setRequestHeader('Accept', 'application/json');\n    client.send();\n  });\n}\n\n/**\n * @param {string} base The base URL.\n * @param {string} url The potentially relative URL.\n * @return {string} The full URL.\n */\nexport function resolveUrl(base, url) {\n  if (url.includes('://')) {\n    return url;\n  }\n  return new URL(url, base).href;\n}\n\nlet originalXHR;\nexport function overrideXHR(xhr) {\n  if (typeof XMLHttpRequest !== 'undefined') {\n    originalXHR = XMLHttpRequest;\n  }\n  global.XMLHttpRequest = xhr;\n}\n\nexport function restoreXHR() {\n  global.XMLHttpRequest = originalXHR;\n}\n","/**\n * @module ol/source/TileJSON\n */\n// FIXME check order of async callbacks\n\n/**\n * See https://mapbox.com/developers/api/.\n */\n\nimport TileImage from './TileImage.js';\nimport {applyTransform, intersects} from '../extent.js';\nimport {assert} from '../asserts.js';\nimport {createFromTemplates} from '../tileurlfunction.js';\nimport {createXYZ, extentFromProjection} from '../tilegrid.js';\nimport {get as getProjection, getTransformFromProjections} from '../proj.js';\nimport {jsonp as requestJSONP} from '../net.js';\n\n/**\n * @typedef {Object} Config\n * @property {string} [name] The name.\n * @property {string} [description] The description.\n * @property {string} [version] The version.\n * @property {string} [attribution] The attribution.\n * @property {string} [template] The template.\n * @property {string} [legend] The legend.\n * @property {string} [scheme] The scheme.\n * @property {Array<string>} tiles The tile URL templates.\n * @property {Array<string>} [grids] Optional grids.\n * @property {number} [minzoom] Minimum zoom level.\n * @property {number} [maxzoom] Maximum zoom level.\n * @property {Array<number>} [bounds] Optional bounds.\n * @property {Array<number>} [center] Optional center.\n */\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {number} [cacheSize] Initial tile cache size. Will auto-grow to hold at least the number of tiles in the viewport.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {boolean} [interpolate=true] Use interpolated values when resampling.  By default,\n * linear interpolation is used when resampling.  Set to false to use the nearest neighbor instead.\n * @property {boolean} [jsonp=false] Use JSONP with callback to load the TileJSON.\n * Useful when the server does not support CORS..\n * @property {number} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {Config} [tileJSON] TileJSON configuration for this source.\n * If not provided, `url` must be configured.\n * @property {import(\"../Tile.js\").LoadFunction} [tileLoadFunction] Optional function to load a tile given a URL. The default is\n * ```js\n * function(imageTile, src) {\n *   imageTile.getImage().src = src;\n * };\n * ```\n * @property {number|import(\"../size.js\").Size} [tileSize=[256, 256]] The tile size used by the tile service.\n * Note: `tileSize` and other non-standard TileJSON properties are currently ignored.\n * @property {string} [url] URL to the TileJSON file. If not provided, `tileJSON` must be configured.\n * @property {boolean} [wrapX=true] Whether to wrap the world horizontally.\n * @property {number} [transition] Duration of the opacity transition for rendering.\n * To disable the opacity transition, pass `transition: 0`.\n * @property {number|import(\"../array.js\").NearestDirectionFunction} [zDirection=0]\n * Choose whether to use tiles with a higher or lower zoom level when between integer\n * zoom levels. See {@link module:ol/tilegrid/TileGrid~TileGrid#getZForResolution}.\n */\n\n/**\n * @classdesc\n * Layer source for tile data in TileJSON format.\n * @api\n */\nclass TileJSON extends TileImage {\n  /**\n   * @param {Options} options TileJSON options.\n   */\n  constructor(options) {\n    super({\n      attributions: options.attributions,\n      cacheSize: options.cacheSize,\n      crossOrigin: options.crossOrigin,\n      interpolate: options.interpolate,\n      projection: getProjection('EPSG:3857'),\n      reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n      state: 'loading',\n      tileLoadFunction: options.tileLoadFunction,\n      wrapX: options.wrapX !== undefined ? options.wrapX : true,\n      transition: options.transition,\n      zDirection: options.zDirection,\n    });\n\n    /**\n     * @type {Config}\n     * @private\n     */\n    this.tileJSON_ = null;\n\n    /**\n     * @type {number|import(\"../size.js\").Size}\n     * @private\n     */\n    this.tileSize_ = options.tileSize;\n\n    if (options.url) {\n      if (options.jsonp) {\n        requestJSONP(\n          options.url,\n          this.handleTileJSONResponse.bind(this),\n          this.handleTileJSONError.bind(this)\n        );\n      } else {\n        const client = new XMLHttpRequest();\n        client.addEventListener('load', this.onXHRLoad_.bind(this));\n        client.addEventListener('error', this.onXHRError_.bind(this));\n        client.open('GET', options.url);\n        client.send();\n      }\n    } else if (options.tileJSON) {\n      this.handleTileJSONResponse(options.tileJSON);\n    } else {\n      assert(false, 51); // Either `url` or `tileJSON` options must be provided\n    }\n  }\n\n  /**\n   * @private\n   * @param {Event} event The load event.\n   */\n  onXHRLoad_(event) {\n    const client = /** @type {XMLHttpRequest} */ (event.target);\n    // status will be 0 for file:// urls\n    if (!client.status || (client.status >= 200 && client.status < 300)) {\n      let response;\n      try {\n        response = /** @type {Config} */ (JSON.parse(client.responseText));\n      } catch (err) {\n        this.handleTileJSONError();\n        return;\n      }\n      this.handleTileJSONResponse(response);\n    } else {\n      this.handleTileJSONError();\n    }\n  }\n\n  /**\n   * @private\n   * @param {Event} event The error event.\n   */\n  onXHRError_(event) {\n    this.handleTileJSONError();\n  }\n\n  /**\n   * @return {Config} The tilejson object.\n   * @api\n   */\n  getTileJSON() {\n    return this.tileJSON_;\n  }\n\n  /**\n   * @protected\n   * @param {Config} tileJSON Tile JSON.\n   */\n  handleTileJSONResponse(tileJSON) {\n    const epsg4326Projection = getProjection('EPSG:4326');\n\n    const sourceProjection = this.getProjection();\n    let extent;\n    if (tileJSON['bounds'] !== undefined) {\n      const transform = getTransformFromProjections(\n        epsg4326Projection,\n        sourceProjection\n      );\n      extent = applyTransform(tileJSON['bounds'], transform);\n    }\n\n    const gridExtent = extentFromProjection(sourceProjection);\n    const minZoom = tileJSON['minzoom'] || 0;\n    const maxZoom = tileJSON['maxzoom'] || 22;\n    const tileGrid = createXYZ({\n      extent: gridExtent,\n      maxZoom: maxZoom,\n      minZoom: minZoom,\n      tileSize: this.tileSize_,\n    });\n    this.tileGrid = tileGrid;\n\n    this.tileUrlFunction = createFromTemplates(tileJSON['tiles'], tileGrid);\n\n    if (tileJSON['attribution'] && !this.getAttributions()) {\n      const attributionExtent = extent !== undefined ? extent : gridExtent;\n      this.setAttributions(function (frameState) {\n        if (intersects(attributionExtent, frameState.extent)) {\n          return [tileJSON['attribution']];\n        }\n        return null;\n      });\n    }\n    this.tileJSON_ = tileJSON;\n    this.setState('ready');\n  }\n\n  /**\n   * @protected\n   */\n  handleTileJSONError() {\n    this.setState('error');\n  }\n}\n\nexport default TileJSON;\n","/**\n * @module ol/VectorTile\n */\nimport Tile from './Tile.js';\nimport TileState from './TileState.js';\n\nclass VectorTile extends Tile {\n  /**\n   * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"./TileState.js\").default} state State.\n   * @param {string} src Data source url.\n   * @param {import(\"./format/Feature.js\").default} format Feature format.\n   * @param {import(\"./Tile.js\").LoadFunction} tileLoadFunction Tile load function.\n   * @param {import(\"./Tile.js\").Options} [options] Tile options.\n   */\n  constructor(tileCoord, state, src, format, tileLoadFunction, options) {\n    super(tileCoord, state, options);\n\n    /**\n     * Extent of this tile; set by the source.\n     * @type {import(\"./extent.js\").Extent}\n     */\n    this.extent = null;\n\n    /**\n     * @private\n     * @type {import(\"./format/Feature.js\").default}\n     */\n    this.format_ = format;\n\n    /**\n     * @private\n     * @type {Array<import(\"./Feature.js\").default>}\n     */\n    this.features_ = null;\n\n    /**\n     * @private\n     * @type {import(\"./featureloader.js\").FeatureLoader}\n     */\n    this.loader_;\n\n    /**\n     * Feature projection of this tile; set by the source.\n     * @type {import(\"./proj/Projection.js\").default}\n     */\n    this.projection = null;\n\n    /**\n     * Resolution of this tile; set by the source.\n     * @type {number}\n     */\n    this.resolution;\n\n    /**\n     * @private\n     * @type {import(\"./Tile.js\").LoadFunction}\n     */\n    this.tileLoadFunction_ = tileLoadFunction;\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.url_ = src;\n\n    this.key = src;\n  }\n\n  /**\n   * Get the feature format assigned for reading this tile's features.\n   * @return {import(\"./format/Feature.js\").default} Feature format.\n   * @api\n   */\n  getFormat() {\n    return this.format_;\n  }\n\n  /**\n   * Get the features for this tile. Geometries will be in the view projection.\n   * @return {Array<import(\"./Feature.js\").FeatureLike>} Features.\n   * @api\n   */\n  getFeatures() {\n    return this.features_;\n  }\n\n  /**\n   * Load not yet loaded URI.\n   */\n  load() {\n    if (this.state == TileState.IDLE) {\n      this.setState(TileState.LOADING);\n      this.tileLoadFunction_(this, this.url_);\n      if (this.loader_) {\n        this.loader_(this.extent, this.resolution, this.projection);\n      }\n    }\n  }\n\n  /**\n   * Handler for successful tile load.\n   * @param {Array<import(\"./Feature.js\").default>} features The loaded features.\n   * @param {import(\"./proj/Projection.js\").default} dataProjection Data projection.\n   */\n  onLoad(features, dataProjection) {\n    this.setFeatures(features);\n  }\n\n  /**\n   * Handler for tile load errors.\n   */\n  onError() {\n    this.setState(TileState.ERROR);\n  }\n\n  /**\n   * Function for use in an {@link module:ol/source/VectorTile~VectorTile}'s `tileLoadFunction`.\n   * Sets the features for the tile.\n   * @param {Array<import(\"./Feature.js\").default>} features Features.\n   * @api\n   */\n  setFeatures(features) {\n    this.features_ = features;\n    this.setState(TileState.LOADED);\n  }\n\n  /**\n   * Set the feature loader for reading this tile's features.\n   * @param {import(\"./featureloader.js\").FeatureLoader} loader Feature loader.\n   * @api\n   */\n  setLoader(loader) {\n    this.loader_ = loader;\n  }\n}\n\nexport default VectorTile;\n","/**\n * @module ol/VectorRenderTile\n */\nimport Tile from './Tile.js';\nimport {createCanvasContext2D, releaseCanvas} from './dom.js';\nimport {getUid} from './util.js';\n\n/**\n * @typedef {Object} ReplayState\n * @property {boolean} dirty Dirty.\n * @property {null|import(\"./render.js\").OrderFunction} renderedRenderOrder RenderedRenderOrder.\n * @property {number} renderedTileRevision RenderedTileRevision.\n * @property {number} renderedResolution RenderedResolution.\n * @property {number} renderedRevision RenderedRevision.\n * @property {number} renderedTileResolution RenderedTileResolution.\n * @property {number} renderedTileZ RenderedTileZ.\n */\n\n/**\n * @type {Array<HTMLCanvasElement>}\n */\nconst canvasPool = [];\n\nclass VectorRenderTile extends Tile {\n  /**\n   * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"./TileState.js\").default} state State.\n   * @param {import(\"./tilecoord.js\").TileCoord} urlTileCoord Wrapped tile coordinate for source urls.\n   * @param {function(VectorRenderTile):Array<import(\"./VectorTile\").default>} getSourceTiles Function\n   * to get source tiles for this tile.\n   */\n  constructor(tileCoord, state, urlTileCoord, getSourceTiles) {\n    super(tileCoord, state, {transition: 0});\n\n    /**\n     * @private\n     * @type {!Object<string, CanvasRenderingContext2D>}\n     */\n    this.context_ = {};\n\n    /**\n     * Executor groups by layer uid. Entries are read/written by the renderer.\n     * @type {Object<string, Array<import(\"./render/canvas/ExecutorGroup.js\").default>>}\n     */\n    this.executorGroups = {};\n\n    /**\n     * Executor groups for decluttering, by layer uid. Entries are read/written by the renderer.\n     * @type {Object<string, Array<import(\"./render/canvas/ExecutorGroup.js\").default>>}\n     */\n    this.declutterExecutorGroups = {};\n\n    /**\n     * Number of loading source tiles. Read/written by the source.\n     * @type {number}\n     */\n    this.loadingSourceTiles = 0;\n\n    /**\n     * @type {Object<number, ImageData>}\n     */\n    this.hitDetectionImageData = {};\n\n    /**\n     * @private\n     * @type {!Object<string, ReplayState>}\n     */\n    this.replayState_ = {};\n\n    /**\n     * @type {Array<import(\"./VectorTile.js\").default>}\n     */\n    this.sourceTiles = [];\n\n    /**\n     * @type {Object<string, boolean>}\n     */\n    this.errorTileKeys = {};\n\n    /**\n     * @type {number}\n     */\n    this.wantedResolution;\n\n    /**\n     * @type {!function():Array<import(\"./VectorTile.js\").default>}\n     */\n    this.getSourceTiles = getSourceTiles.bind(undefined, this);\n\n    /**\n     * @type {import(\"./tilecoord.js\").TileCoord}\n     */\n    this.wrappedTileCoord = urlTileCoord;\n  }\n\n  /**\n   * @param {import(\"./layer/Layer.js\").default} layer Layer.\n   * @return {CanvasRenderingContext2D} The rendering context.\n   */\n  getContext(layer) {\n    const key = getUid(layer);\n    if (!(key in this.context_)) {\n      this.context_[key] = createCanvasContext2D(1, 1, canvasPool);\n    }\n    return this.context_[key];\n  }\n\n  /**\n   * @param {import(\"./layer/Layer.js\").default} layer Layer.\n   * @return {boolean} Tile has a rendering context for the given layer.\n   */\n  hasContext(layer) {\n    return getUid(layer) in this.context_;\n  }\n\n  /**\n   * Get the Canvas for this tile.\n   * @param {import(\"./layer/Layer.js\").default} layer Layer.\n   * @return {HTMLCanvasElement} Canvas.\n   */\n  getImage(layer) {\n    return this.hasContext(layer) ? this.getContext(layer).canvas : null;\n  }\n\n  /**\n   * @param {import(\"./layer/Layer.js\").default} layer Layer.\n   * @return {ReplayState} The replay state.\n   */\n  getReplayState(layer) {\n    const key = getUid(layer);\n    if (!(key in this.replayState_)) {\n      this.replayState_[key] = {\n        dirty: false,\n        renderedRenderOrder: null,\n        renderedResolution: NaN,\n        renderedRevision: -1,\n        renderedTileResolution: NaN,\n        renderedTileRevision: -1,\n        renderedTileZ: -1,\n      };\n    }\n    return this.replayState_[key];\n  }\n\n  /**\n   * Load the tile.\n   */\n  load() {\n    this.getSourceTiles();\n  }\n\n  /**\n   * Remove from the cache due to expiry\n   */\n  release() {\n    for (const key in this.context_) {\n      const context = this.context_[key];\n      releaseCanvas(context);\n      canvasPool.push(context.canvas);\n      delete this.context_[key];\n    }\n    super.release();\n  }\n}\n\nexport default VectorRenderTile;\n","/**\n * @module ol/source/VectorTile\n */\n\nimport EventType from '../events/EventType.js';\nimport Tile from '../VectorTile.js';\nimport TileCache from '../TileCache.js';\nimport TileGrid from '../tilegrid/TileGrid.js';\nimport TileState from '../TileState.js';\nimport UrlTile from './UrlTile.js';\nimport VectorRenderTile from '../VectorRenderTile.js';\nimport {DEFAULT_MAX_ZOOM} from '../tilegrid/common.js';\nimport {\n  buffer as bufferExtent,\n  getIntersection,\n  intersects,\n} from '../extent.js';\nimport {createXYZ, extentFromProjection} from '../tilegrid.js';\nimport {fromKey, getCacheKeyForTileKey, getKeyZXY} from '../tilecoord.js';\nimport {isEmpty} from '../obj.js';\nimport {loadFeaturesXhr} from '../featureloader.js';\nimport {toSize} from '../size.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize] Initial tile cache size. Will auto-grow to hold at least twice the number of tiles in the viewport.\n * @property {import(\"../extent.js\").Extent} [extent] Extent.\n * @property {import(\"../format/Feature.js\").default} [format] Feature format for tiles. Used and required by the default.\n * @property {boolean} [overlaps=true] This source may have overlapping geometries. Setting this\n * to `false` (e.g. for sources with polygons that represent administrative\n * boundaries or TopoJSON sources) allows the renderer to optimise fill and\n * stroke operations.\n * @property {import(\"../proj.js\").ProjectionLike} [projection='EPSG:3857'] Projection of the tile grid.\n * @property {import(\"./Source.js\").State} [state] Source state.\n * @property {typeof import(\"../VectorTile.js\").default} [tileClass] Class used to instantiate image tiles.\n * Default is {@link module:ol/VectorTile~VectorTile}.\n * @property {number} [maxZoom=22] Optional max zoom level. Not used if `tileGrid` is provided.\n * @property {number} [minZoom] Optional min zoom level. Not used if `tileGrid` is provided.\n * @property {number|import(\"../size.js\").Size} [tileSize=512] Optional tile size. Not used if `tileGrid` is provided.\n * @property {number} [maxResolution] Optional tile grid resolution at level zero. Not used if `tileGrid` is provided.\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid] Tile grid.\n * @property {import(\"../Tile.js\").LoadFunction} [tileLoadFunction]\n * Optional function to load a tile given a URL. Could look like this for pbf tiles:\n * ```js\n * function(tile, url) {\n *   tile.setLoader(function(extent, resolution, projection) {\n *     fetch(url).then(function(response) {\n *       response.arrayBuffer().then(function(data) {\n *         const format = tile.getFormat() // ol/format/MVT configured as source format\n *         const features = format.readFeatures(data, {\n *           extent: extent,\n *           featureProjection: projection\n *         });\n *         tile.setFeatures(features);\n *       });\n *     });\n *   });\n * }\n * ```\n * If you do not need extent, resolution and projection to get the features for a tile (e.g.\n * for GeoJSON tiles), your `tileLoadFunction` does not need a `setLoader()` call. Only make sure\n * to call `setFeatures()` on the tile:\n * ```js\n * const format = new GeoJSON({featureProjection: map.getView().getProjection()});\n * async function tileLoadFunction(tile, url) {\n *   const response = await fetch(url);\n *   const data = await response.json();\n *   tile.setFeatures(format.readFeatures(data));\n * }\n * ```\n * @property {import(\"../Tile.js\").UrlFunction} [tileUrlFunction] Optional function to get tile URL given a tile coordinate and the projection.\n * @property {string} [url] URL template. Must include `{x}`, `{y}` or `{-y}`, and `{z}` placeholders.\n * A `{?-?}` template pattern, for example `subdomain{a-f}.domain.com`, may be\n * used instead of defining each one separately in the `urls` option.\n * @property {number} [transition] A duration for tile opacity\n * transitions in milliseconds. A duration of 0 disables the opacity transition.\n * @property {Array<string>} [urls] An array of URL templates.\n * @property {boolean} [wrapX=true] Whether to wrap the world horizontally.\n * When set to `false`, only one world\n * will be rendered. When set to `true`, tiles will be wrapped horizontally to\n * render multiple worlds.\n * @property {number|import(\"../array.js\").NearestDirectionFunction} [zDirection=1]\n * Choose whether to use tiles with a higher or lower zoom level when between integer\n * zoom levels. See {@link module:ol/tilegrid/TileGrid~TileGrid#getZForResolution}.\n */\n\n/**\n * @classdesc\n * Class for layer sources providing vector data divided into a tile grid, to be\n * used with {@link module:ol/layer/VectorTile~VectorTileLayer}. Although this source receives tiles\n * with vector features from the server, it is not meant for feature editing.\n * Features are optimized for rendering, their geometries are clipped at or near\n * tile boundaries and simplified for a view resolution. See\n * {@link module:ol/source/Vector~VectorSource} for vector sources that are suitable for feature\n * editing.\n *\n * @fires import(\"./Tile.js\").TileSourceEvent\n * @api\n */\nclass VectorTile extends UrlTile {\n  /**\n   * @param {!Options} options Vector tile options.\n   */\n  constructor(options) {\n    const projection = options.projection || 'EPSG:3857';\n\n    const extent = options.extent || extentFromProjection(projection);\n\n    const tileGrid =\n      options.tileGrid ||\n      createXYZ({\n        extent: extent,\n        maxResolution: options.maxResolution,\n        maxZoom: options.maxZoom !== undefined ? options.maxZoom : 22,\n        minZoom: options.minZoom,\n        tileSize: options.tileSize || 512,\n      });\n\n    super({\n      attributions: options.attributions,\n      attributionsCollapsible: options.attributionsCollapsible,\n      cacheSize: options.cacheSize,\n      interpolate: true,\n      opaque: false,\n      projection: projection,\n      state: options.state,\n      tileGrid: tileGrid,\n      tileLoadFunction: options.tileLoadFunction\n        ? options.tileLoadFunction\n        : defaultLoadFunction,\n      tileUrlFunction: options.tileUrlFunction,\n      url: options.url,\n      urls: options.urls,\n      wrapX: options.wrapX === undefined ? true : options.wrapX,\n      transition: options.transition,\n      zDirection: options.zDirection === undefined ? 1 : options.zDirection,\n    });\n\n    /**\n     * @private\n     * @type {import(\"../format/Feature.js\").default|null}\n     */\n    this.format_ = options.format ? options.format : null;\n\n    /**\n     * @private\n     * @type {TileCache}\n     */\n    this.sourceTileCache = new TileCache(this.tileCache.highWaterMark);\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.overlaps_ = options.overlaps == undefined ? true : options.overlaps;\n\n    /**\n     * @protected\n     * @type {typeof import(\"../VectorTile.js\").default}\n     */\n    this.tileClass = options.tileClass ? options.tileClass : Tile;\n\n    /**\n     * @private\n     * @type {Object<string, import(\"../tilegrid/TileGrid.js\").default>}\n     */\n    this.tileGrids_ = {};\n  }\n\n  /**\n   * Get features whose bounding box intersects the provided extent. Only features for cached\n   * tiles for the last rendered zoom level are available in the source. So this method is only\n   * suitable for requesting tiles for extents that are currently rendered.\n   *\n   * Features are returned in random tile order and as they are included in the tiles. This means\n   * they can be clipped, duplicated across tiles, and simplified to the render resolution.\n   *\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {Array<import(\"../Feature.js\").FeatureLike>} Features.\n   * @api\n   */\n  getFeaturesInExtent(extent) {\n    const features = [];\n    const tileCache = this.tileCache;\n    if (tileCache.getCount() === 0) {\n      return features;\n    }\n    const z = fromKey(tileCache.peekFirstKey())[0];\n    const tileGrid = this.tileGrid;\n    tileCache.forEach(function (tile) {\n      if (tile.tileCoord[0] !== z || tile.getState() !== TileState.LOADED) {\n        return;\n      }\n      const sourceTiles = tile.getSourceTiles();\n      for (let i = 0, ii = sourceTiles.length; i < ii; ++i) {\n        const sourceTile = sourceTiles[i];\n        const tileCoord = sourceTile.tileCoord;\n        if (intersects(extent, tileGrid.getTileCoordExtent(tileCoord))) {\n          const tileFeatures = sourceTile.getFeatures();\n          if (tileFeatures) {\n            for (let j = 0, jj = tileFeatures.length; j < jj; ++j) {\n              const candidate = tileFeatures[j];\n              const geometry = candidate.getGeometry();\n              if (intersects(extent, geometry.getExtent())) {\n                features.push(candidate);\n              }\n            }\n          }\n        }\n      }\n    });\n    return features;\n  }\n\n  /**\n   * @return {boolean} The source can have overlapping geometries.\n   */\n  getOverlaps() {\n    return this.overlaps_;\n  }\n\n  /**\n   * clear {@link module:ol/TileCache~TileCache} and delete all source tiles\n   * @api\n   */\n  clear() {\n    this.tileCache.clear();\n    this.sourceTileCache.clear();\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @param {!Object<string, boolean>} usedTiles Used tiles.\n   */\n  expireCache(projection, usedTiles) {\n    const tileCache = this.getTileCacheForProjection(projection);\n    const usedSourceTiles = Object.keys(usedTiles).reduce((acc, key) => {\n      const cacheKey = getCacheKeyForTileKey(key);\n      const tile = tileCache.peek(cacheKey);\n      if (tile) {\n        const sourceTiles = tile.sourceTiles;\n        for (let i = 0, ii = sourceTiles.length; i < ii; ++i) {\n          acc[sourceTiles[i].getKey()] = true;\n        }\n      }\n      return acc;\n    }, {});\n    super.expireCache(projection, usedTiles);\n    this.sourceTileCache.expireCache(usedSourceTiles);\n  }\n\n  /**\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection\").default} projection Projection.\n   * @param {VectorRenderTile} tile Vector image tile.\n   * @return {Array<import(\"../VectorTile\").default>} Tile keys.\n   */\n  getSourceTiles(pixelRatio, projection, tile) {\n    if (tile.getState() === TileState.IDLE) {\n      tile.setState(TileState.LOADING);\n      const urlTileCoord = tile.wrappedTileCoord;\n      const tileGrid = this.getTileGridForProjection(projection);\n      const extent = tileGrid.getTileCoordExtent(urlTileCoord);\n      const z = urlTileCoord[0];\n      const resolution = tileGrid.getResolution(z);\n      // make extent 1 pixel smaller so we don't load tiles for < 0.5 pixel render space\n      bufferExtent(extent, -resolution, extent);\n      const sourceTileGrid = this.tileGrid;\n      const sourceExtent = sourceTileGrid.getExtent();\n      if (sourceExtent) {\n        getIntersection(extent, sourceExtent, extent);\n      }\n      const sourceZ = sourceTileGrid.getZForResolution(\n        resolution,\n        this.zDirection\n      );\n\n      sourceTileGrid.forEachTileCoord(extent, sourceZ, (sourceTileCoord) => {\n        const tileUrl = this.tileUrlFunction(\n          sourceTileCoord,\n          pixelRatio,\n          projection\n        );\n        const sourceTile = this.sourceTileCache.containsKey(tileUrl)\n          ? this.sourceTileCache.get(tileUrl)\n          : new this.tileClass(\n              sourceTileCoord,\n              tileUrl ? TileState.IDLE : TileState.EMPTY,\n              tileUrl,\n              this.format_,\n              this.tileLoadFunction\n            );\n        tile.sourceTiles.push(sourceTile);\n        const sourceTileState = sourceTile.getState();\n        if (sourceTileState < TileState.LOADED) {\n          const listenChange = (event) => {\n            this.handleTileChange(event);\n            const state = sourceTile.getState();\n            if (state === TileState.LOADED || state === TileState.ERROR) {\n              const sourceTileKey = sourceTile.getKey();\n              if (sourceTileKey in tile.errorTileKeys) {\n                if (sourceTile.getState() === TileState.LOADED) {\n                  delete tile.errorTileKeys[sourceTileKey];\n                }\n              } else {\n                tile.loadingSourceTiles--;\n              }\n              if (state === TileState.ERROR) {\n                tile.errorTileKeys[sourceTileKey] = true;\n              } else {\n                sourceTile.removeEventListener(EventType.CHANGE, listenChange);\n              }\n              if (tile.loadingSourceTiles === 0) {\n                tile.setState(\n                  isEmpty(tile.errorTileKeys)\n                    ? TileState.LOADED\n                    : TileState.ERROR\n                );\n              }\n            }\n          };\n          sourceTile.addEventListener(EventType.CHANGE, listenChange);\n          tile.loadingSourceTiles++;\n        }\n        if (sourceTileState === TileState.IDLE) {\n          sourceTile.extent =\n            sourceTileGrid.getTileCoordExtent(sourceTileCoord);\n          sourceTile.projection = projection;\n          sourceTile.resolution = sourceTileGrid.getResolution(\n            sourceTileCoord[0]\n          );\n          this.sourceTileCache.set(tileUrl, sourceTile);\n          sourceTile.load();\n        }\n      });\n      if (!tile.loadingSourceTiles) {\n        tile.setState(\n          tile.sourceTiles.some(\n            (sourceTile) => sourceTile.getState() === TileState.ERROR\n          )\n            ? TileState.ERROR\n            : TileState.LOADED\n        );\n      }\n    }\n\n    return tile.sourceTiles;\n  }\n\n  /**\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {!VectorRenderTile} Tile.\n   */\n  getTile(z, x, y, pixelRatio, projection) {\n    const coordKey = getKeyZXY(z, x, y);\n    const key = this.getKey();\n    let tile;\n    if (this.tileCache.containsKey(coordKey)) {\n      tile = this.tileCache.get(coordKey);\n      if (tile.key === key) {\n        return tile;\n      }\n    }\n    const tileCoord = [z, x, y];\n    let urlTileCoord = this.getTileCoordForTileUrlFunction(\n      tileCoord,\n      projection\n    );\n    const sourceExtent = this.getTileGrid().getExtent();\n    const tileGrid = this.getTileGridForProjection(projection);\n    if (urlTileCoord && sourceExtent) {\n      const tileExtent = tileGrid.getTileCoordExtent(urlTileCoord);\n      // make extent 1 pixel smaller so we don't load tiles for < 0.5 pixel render space\n      bufferExtent(tileExtent, -tileGrid.getResolution(z), tileExtent);\n      if (!intersects(sourceExtent, tileExtent)) {\n        urlTileCoord = null;\n      }\n    }\n    let empty = true;\n    if (urlTileCoord !== null) {\n      const sourceTileGrid = this.tileGrid;\n      const resolution = tileGrid.getResolution(z);\n      const sourceZ = sourceTileGrid.getZForResolution(resolution, 1);\n      // make extent 1 pixel smaller so we don't load tiles for < 0.5 pixel render space\n      const extent = tileGrid.getTileCoordExtent(urlTileCoord);\n      bufferExtent(extent, -resolution, extent);\n      sourceTileGrid.forEachTileCoord(extent, sourceZ, (sourceTileCoord) => {\n        empty =\n          empty &&\n          !this.tileUrlFunction(sourceTileCoord, pixelRatio, projection);\n      });\n    }\n    const newTile = new VectorRenderTile(\n      tileCoord,\n      empty ? TileState.EMPTY : TileState.IDLE,\n      urlTileCoord,\n      this.getSourceTiles.bind(this, pixelRatio, projection)\n    );\n\n    newTile.key = key;\n    if (tile) {\n      newTile.interimTile = tile;\n      newTile.refreshInterimChain();\n      this.tileCache.replace(coordKey, newTile);\n    } else {\n      this.tileCache.set(coordKey, newTile);\n    }\n    return newTile;\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {!import(\"../tilegrid/TileGrid.js\").default} Tile grid.\n   */\n  getTileGridForProjection(projection) {\n    const code = projection.getCode();\n    let tileGrid = this.tileGrids_[code];\n    if (!tileGrid) {\n      // A tile grid that matches the tile size of the source tile grid is more\n      // likely to have 1:1 relationships between source tiles and rendered tiles.\n      const sourceTileGrid = this.tileGrid;\n      const resolutions = sourceTileGrid.getResolutions().slice();\n      const origins = resolutions.map(function (resolution, z) {\n        return sourceTileGrid.getOrigin(z);\n      });\n      const tileSizes = resolutions.map(function (resolution, z) {\n        return sourceTileGrid.getTileSize(z);\n      });\n      const length = DEFAULT_MAX_ZOOM + 1;\n      for (let z = resolutions.length; z < length; ++z) {\n        resolutions.push(resolutions[z - 1] / 2);\n        origins.push(origins[z - 1]);\n        tileSizes.push(tileSizes[z - 1]);\n      }\n      tileGrid = new TileGrid({\n        extent: sourceTileGrid.getExtent(),\n        origins: origins,\n        resolutions: resolutions,\n        tileSizes: tileSizes,\n      });\n      this.tileGrids_[code] = tileGrid;\n    }\n    return tileGrid;\n  }\n\n  /**\n   * Get the tile pixel ratio for this source.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {number} Tile pixel ratio.\n   */\n  getTilePixelRatio(pixelRatio) {\n    return pixelRatio;\n  }\n\n  /**\n   * @param {number} z Z.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {import(\"../size.js\").Size} Tile size.\n   */\n  getTilePixelSize(z, pixelRatio, projection) {\n    const tileGrid = this.getTileGridForProjection(projection);\n    const tileSize = toSize(tileGrid.getTileSize(z), this.tmpSize);\n    return [\n      Math.round(tileSize[0] * pixelRatio),\n      Math.round(tileSize[1] * pixelRatio),\n    ];\n  }\n\n  /**\n   * Increases the cache size if needed\n   * @param {number} tileCount Minimum number of tiles needed.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   */\n  updateCacheSize(tileCount, projection) {\n    super.updateCacheSize(tileCount * 2, projection);\n    this.sourceTileCache.highWaterMark =\n      this.getTileCacheForProjection(projection).highWaterMark;\n  }\n}\n\nexport default VectorTile;\n\n/**\n * Sets the loader for a tile.\n * @param {import(\"../VectorTile.js\").default} tile Vector tile.\n * @param {string} url URL.\n */\nexport function defaultLoadFunction(tile, url) {\n  tile.setLoader(\n    /**\n     * @param {import(\"../extent.js\").Extent} extent Extent.\n     * @param {number} resolution Resolution.\n     * @param {import(\"../proj/Projection.js\").default} projection Projection.\n     */\n    function (extent, resolution, projection) {\n      loadFeaturesXhr(\n        url,\n        tile.getFormat(),\n        extent,\n        resolution,\n        projection,\n        tile.onLoad.bind(tile),\n        tile.onError.bind(tile)\n      );\n    }\n  );\n}\n","/**\n * Generates a shaded relief image given elevation data.  Uses a 3x3\n * neighborhood for determining slope and aspect.\n * @param {Array<ImageData>} inputs Array of input images.\n * @param {Object} data Data added in the \"beforeoperations\" event.\n * @return {ImageData} Output image.\n */\nexport function hillshade(inputs, data) {\n  const elevationImage = inputs[0];\n  const width = elevationImage.width;\n  const height = elevationImage.height;\n  const elevationData = elevationImage.data;\n  const shadeData = new Uint8ClampedArray(elevationData.length);\n  const dp = data.resolution * 2;\n  const maxX = width - 1;\n  const maxY = height - 1;\n  const pixel = [0, 0, 0, 0];\n  const twoPi = 2 * Math.PI;\n  const halfPi = Math.PI / 2;\n  const sunEl = (Math.PI * data.sunEl) / 180;\n  const sunAz = (Math.PI * data.sunAz) / 180;\n  const cosSunEl = Math.cos(sunEl);\n  const sinSunEl = Math.sin(sunEl);\n  const highlightColor = data.highlightColor;\n  const shadowColor = data.shadowColor;\n  const accentColor = data.accentColor;\n\n  let pixelX,\n    pixelY,\n    x0,\n    x1,\n    y0,\n    y1,\n    offset,\n    z0,\n    z1,\n    dzdx,\n    dzdy,\n    slope,\n    aspect,\n    accent,\n    scaled,\n    shade,\n    scaledAccentColor,\n    compositeShadeColor,\n    clamp,\n    slopeScaleBase,\n    scaledSlope,\n    cosIncidence;\n\n  function calculateElevation(pixel) {\n    // The method used to extract elevations from the DEM.\n    // In this case the format used is\n    // red + green * 2 + blue * 3\n    //\n    // Other frequently used methods include the Mapbox format\n    // (red * 256 * 256 + green * 256 + blue) * 0.1 - 10000\n    // and the Terrarium format\n    // (red * 256 + green + blue / 256) - 32768\n    //\n    return (pixel[0] * 256 * 256 + pixel[1] * 256 + pixel[2]) * 0.1 - 10000;\n  }\n  for (pixelY = 0; pixelY <= maxY; ++pixelY) {\n    y0 = pixelY === 0 ? 0 : pixelY - 1;\n    y1 = pixelY === maxY ? maxY : pixelY + 1;\n    for (pixelX = 0; pixelX <= maxX; ++pixelX) {\n      x0 = pixelX === 0 ? 0 : pixelX - 1;\n      x1 = pixelX === maxX ? maxX : pixelX + 1;\n\n      // determine elevation for (x0, pixelY)\n      offset = (pixelY * width + x0) * 4;\n      pixel[0] = elevationData[offset];\n      pixel[1] = elevationData[offset + 1];\n      pixel[2] = elevationData[offset + 2];\n      pixel[3] = elevationData[offset + 3];\n      z0 = data.vert * calculateElevation(pixel);\n\n      // determine elevation for (x1, pixelY)\n      offset = (pixelY * width + x1) * 4;\n      pixel[0] = elevationData[offset];\n      pixel[1] = elevationData[offset + 1];\n      pixel[2] = elevationData[offset + 2];\n      pixel[3] = elevationData[offset + 3];\n      z1 = data.vert * calculateElevation(pixel);\n\n      dzdx = (z1 - z0) / dp;\n\n      // determine elevation for (pixelX, y0)\n      offset = (y0 * width + pixelX) * 4;\n      pixel[0] = elevationData[offset];\n      pixel[1] = elevationData[offset + 1];\n      pixel[2] = elevationData[offset + 2];\n      pixel[3] = elevationData[offset + 3];\n      z0 = data.vert * calculateElevation(pixel);\n\n      // determine elevation for (pixelX, y1)\n      offset = (y1 * width + pixelX) * 4;\n      pixel[0] = elevationData[offset];\n      pixel[1] = elevationData[offset + 1];\n      pixel[2] = elevationData[offset + 2];\n      pixel[3] = elevationData[offset + 3];\n      z1 = data.vert * calculateElevation(pixel);\n\n      dzdy = (z1 - z0) / dp;\n\n      aspect = Math.atan2(dzdy, -dzdx);\n      if (aspect < 0) {\n        aspect = halfPi - aspect;\n      } else if (aspect > halfPi) {\n        aspect = twoPi - aspect + halfPi;\n      } else {\n        aspect = halfPi - aspect;\n      }\n\n      // Bootstrap slope and corresponding incident values\n      slope = Math.atan(Math.sqrt(dzdx * dzdx + dzdy * dzdy));\n      cosIncidence =\n        sinSunEl * Math.cos(slope) +\n        cosSunEl * Math.sin(slope) * Math.cos(sunAz - aspect);\n      accent = Math.cos(slope);\n      // 255 for Hex colors\n      scaled = 255 * cosIncidence;\n\n      /*\n       * The following is heavily inspired\n       * by [Maplibre's equivalent WebGL shader](https://github.com/maplibre/maplibre-gl-js/blob/main/src/shaders/hillshade.fragment.glsl)\n       */\n\n      // Forces given value to stay between two given extremes\n      clamp = Math.min(Math.max(2 * data.sunEl, 0), 1);\n\n      // Intensity basis for hillshade opacity\n      slopeScaleBase = 1.875 - data.opacity * 1.75;\n      // Intensity interpolation so that higher intensity values create more opaque hillshading\n      scaledSlope =\n        data.opacity !== 0.5\n          ? halfPi *\n            ((Math.pow(slopeScaleBase, slope) - 1) /\n              (Math.pow(slopeScaleBase, halfPi) - 1))\n          : slope;\n\n      // Accent hillshade color with given accentColor to emphasize rougher terrain\n      scaledAccentColor = {\n        r: (1 - accent) * accentColor.r * clamp * 255,\n        g: (1 - accent) * accentColor.g * clamp * 255,\n        b: (1 - accent) * accentColor.b * clamp * 255,\n        a: (1 - accent) * accentColor.a * clamp * 255,\n      };\n\n      // Allows highlight vs shadow discrimination\n      shade = Math.abs((((aspect + sunAz) / Math.PI + 0.5) % 2) - 1);\n      // Creates a composite color mix between highlight & shadow colors to emphasize slopes\n      compositeShadeColor = {\n        r: (highlightColor.r * (1 - shade) + shadowColor.r * shade) * scaled,\n        g: (highlightColor.g * (1 - shade) + shadowColor.g * shade) * scaled,\n        b: (highlightColor.b * (1 - shade) + shadowColor.b * shade) * scaled,\n        a: (highlightColor.a * (1 - shade) + shadowColor.a * shade) * scaled,\n      };\n\n      // Fill in result color value\n      offset = (pixelY * width + pixelX) * 4;\n      shadeData[offset] =\n        scaledAccentColor.r * (1 - shade) + compositeShadeColor.r;\n      shadeData[offset + 1] =\n        scaledAccentColor.g * (1 - shade) + compositeShadeColor.g;\n      shadeData[offset + 2] =\n        scaledAccentColor.b * (1 - shade) + compositeShadeColor.b;\n      // Key opacity on the scaledSlope to improve legibility by increasing higher elevation rates' contrast\n      shadeData[offset + 3] =\n        elevationData[offset + 3] *\n        data.opacity *\n        clamp *\n        Math.sin(scaledSlope);\n    }\n  }\n\n  return new ImageData(shadeData, width, height);\n}\n","/*\nol-mapbox-style - Use Mapbox Style objects with OpenLayers\nCopyright 2016-present ol-mapbox-style contributors\nLicense: https://raw.githubusercontent.com/openlayers/ol-mapbox-style/master/LICENSE\n*/\n\nimport GeoJSON from 'ol/format/GeoJSON.js';\nimport ImageLayer from 'ol/layer/Image.js';\nimport Layer from 'ol/layer/Layer.js';\nimport LayerGroup from 'ol/layer/Group.js';\nimport MVT from 'ol/format/MVT.js';\nimport Map from 'ol/Map.js';\nimport Raster from 'ol/source/Raster.js';\nimport Source from 'ol/source/Source.js';\nimport TileGrid from 'ol/tilegrid/TileGrid.js';\nimport TileJSON from 'ol/source/TileJSON.js';\nimport TileLayer from 'ol/layer/Tile.js';\nimport VectorLayer from 'ol/layer/Vector.js';\nimport VectorSource from 'ol/source/Vector.js';\nimport VectorTileLayer from 'ol/layer/VectorTile.js';\nimport VectorTileSource, {defaultLoadFunction} from 'ol/source/VectorTile.js';\nimport View from 'ol/View.js';\nimport {\n  METERS_PER_UNIT,\n  equivalent,\n  fromLonLat,\n  get as getProjection,\n  getUserProjection,\n} from 'ol/proj.js';\nimport {\n  _colorWithOpacity,\n  stylefunction as applyStyleFunction,\n  getValue,\n} from './stylefunction.js';\nimport {bbox as bboxStrategy} from 'ol/loadingstrategy.js';\nimport {createXYZ} from 'ol/tilegrid.js';\nimport {\n  defaultResolutions,\n  fetchResource,\n  getGlStyle,\n  getTileJson,\n  getZoomForResolution,\n} from './util.js';\nimport {getFonts} from './text.js';\nimport {getTopLeft} from 'ol/extent.js';\nimport {hillshade} from './shaders.js';\nimport {\n  normalizeSourceUrl,\n  normalizeSpriteUrl,\n  normalizeStyleUrl,\n} from './mapbox.js';\n\n/**\n * @typedef {Object} FeatureIdentifier\n * @property {string|number} id The feature id.\n * @property {string} source The source id.\n */\n\n/**\n * @typedef {Object} Options\n * @property {string} [accessToken] Access token for 'mapbox://' urls.\n * @property {function(string, ResourceType): (Request|void)} [transformRequest]\n * Function for controlling how `ol-mapbox-style` fetches resources. Can be used for modifying\n * the url, adding headers or setting credentials options. Called with the url and the resource\n * type as arguments, this function is supposed to return a `Request` object. Without a return value,\n * the original request will not be modified. For `Tiles` and `GeoJSON` resources, only the `url` of\n * the returned request will be respected.\n * @property {string} [projection='EPSG:3857'] Only useful when working with non-standard projections.\n * Code of a projection registered with OpenLayers. All sources of the style must be provided in this\n * projection. The projection must also have a valid extent defined, which will be used to determine the\n * origin and resolutions of the tile grid for all tiled sources of the style. When provided, the bbox\n * placeholder in tile and geojson urls changes: the default is `{bbox-epsg-3857}`, when projection is e.g.\n * set to `EPSG:4326`, the bbox placeholder will be `{bbox-epsg-4326}`.\n * @property {Array<number>} [resolutions] Only useful when working with non-standard projections.\n * Resolutions for mapping resolution to the `zoom` used in the Mapbox style.\n * @property {string} [styleUrl] URL of the Mapbox GL style. Required for styles that were provided\n * as object, when they contain a relative sprite url, or sources referencing data by relative url.\n * @property {string} [accessTokenParam='access_token'] Access token param. For internal use.\n * @property {function(VectorLayer|VectorTileLayer, string):HTMLImageElement|HTMLCanvasElement|string|undefined} [getImage=undefined]\n * Function that returns an image for an icon name. If the result is an HTMLImageElement, it must already be\n * loaded. The layer can be used to call layer.changed() when the loading and processing of the image has finished.\n * This function be used for icons not in the sprite or to override sprite icons.\n */\n\n/**\n * @typedef {Object} ApplyStyleOptions\n * @property {string} [source=''] Source. Default is `''`, which causes the first source in the\n * style to be used.\n * @property {Array<string>} [layers] Layers. If no source is provided, the layers with the\n * provided ids will be used from the style's `layers` array. All layers need to use the same source.\n * @property {boolean} [updateSource=true] Update or create vector (tile) layer source with parameters\n * specified for the source in the mapbox style definition.\n */\n\n/** @typedef {'Style'|'Source'|'Sprite'|'SpriteImage'|'Tiles'|'GeoJSON'} ResourceType */\n\n/**\n * @param {import(\"ol/proj/Projection.js\").default} projection Projection.\n * @param {number} [tileSize=512] Tile size.\n * @return {Array<number>} Resolutions.\n */\nfunction getTileResolutions(projection, tileSize = 512) {\n  return projection.getExtent()\n    ? createXYZ({\n        extent: projection.getExtent(),\n        tileSize: tileSize,\n        maxZoom: 22,\n      }).getResolutions()\n    : defaultResolutions;\n}\n\n/**\n * @param {string} styleUrl Style URL.\n * @param {Options} options Options.\n * @return {Options} Completed options with accessToken and accessTokenParam.\n */\nfunction completeOptions(styleUrl, options) {\n  if (!options.accessToken) {\n    options = Object.assign({}, options);\n    const searchParams = new URL(styleUrl).searchParams;\n    // The last search parameter is the access token\n    searchParams.forEach((value, key) => {\n      options.accessToken = value;\n      options.accessTokenParam = key;\n    });\n  }\n  return options;\n}\n\n/**\n * Applies a style function to an `ol/layer/VectorTile` or `ol/layer/Vector`\n * with an `ol/source/VectorTile` or an `ol/source/Vector`. If the layer does not have a source\n * yet, it will be created and populated from the information in the `glStyle` (unless `updateSource` is\n * set to `false`).\n *\n * **Example:**\n * ```js\n * import {applyStyle} from 'ol-mapbox-style';\n * import {VectorTile} from 'ol/layer.js';\n *\n * const layer = new VectorTile({declutter: true});\n * applyStyle(layer, 'https://api.maptiler.com/maps/basic/style.json?key=YOUR_OPENMAPTILES_TOKEN');\n * ```\n *\n * The style function will render all layers from the `glStyle` object that use the source\n * of the first layer, the specified `source`, or a subset of layers from the same source. The\n * source needs to be a `\"type\": \"vector\"` or `\"type\": \"geojson\"` source.\n *\n * Two additional properties will be set on the provided layer:\n *\n *  * `mapbox-source`: The `id` of the Mapbox Style document's source that the\n *    OpenLayers layer was created from. Usually `apply()` creates one\n *    OpenLayers layer per Mapbox Style source, unless the layer stack has\n *    layers from different sources in between.\n *  * `mapbox-layers`: The `id`s of the Mapbox Style document's layers that are\n *    included in the OpenLayers layer.\n *\n * @param {VectorTileLayer|VectorLayer} layer OpenLayers layer. When the layer has a source configured,\n * it will be modified to use the configuration from the glStyle's `source`. Options specified on the\n * layer's source will override those from the glStyle's `source`, except for `url`,\n * `tileUrlFunction` and `tileGrid` (exception: when the source projection is not `EPSG:3857`).\n * @param {string|Object} glStyle Mapbox Style object.\n * @param {string|Array<string>|Options&ApplyStyleOptions} [sourceOrLayersOrOptions] Options or\n * `source` key or an array of layer `id`s from the Mapbox Style object. When a `source` key is\n * provided, all layers for the specified source will be included in the style function. When layer\n * `id`s are provided, they must be from layers that use the same source. When not provided or a falsey\n * value, all layers using the first source specified in the glStyle will be rendered.\n * @param {Options|string} [optionsOrPath] **Deprecated**. Options. Alternatively the path of the style file\n * (only required when a relative path is used for the `\"sprite\"` property of the style).\n * @param {Array<number>} [resolutions] **Deprecated**. Resolutions for mapping resolution to zoom level.\n * Only needed when working with non-standard tile grids or projections, can also be supplied with\n * options.\n * @return {Promise} Promise which will be resolved when the style can be used\n * for rendering.\n */\nexport function applyStyle(\n  layer,\n  glStyle,\n  sourceOrLayersOrOptions = '',\n  optionsOrPath = {},\n  resolutions = undefined\n) {\n  let styleUrl, sourceId;\n  /** @type {Options&ApplyStyleOptions} */\n  let options;\n  let sourceOrLayers;\n  let updateSource = true;\n  if (\n    typeof sourceOrLayersOrOptions !== 'string' &&\n    !Array.isArray(sourceOrLayersOrOptions)\n  ) {\n    options = sourceOrLayersOrOptions;\n    sourceOrLayers = options.source || options.layers;\n    optionsOrPath = options;\n  } else {\n    sourceOrLayers = sourceOrLayersOrOptions;\n  }\n  if (typeof optionsOrPath === 'string') {\n    styleUrl = optionsOrPath;\n    options = {};\n  } else {\n    styleUrl = optionsOrPath.styleUrl;\n    options = optionsOrPath;\n  }\n  if (options.updateSource === false) {\n    updateSource = false;\n  }\n  if (!resolutions) {\n    resolutions = options.resolutions;\n  }\n  if (\n    !styleUrl &&\n    typeof glStyle === 'string' &&\n    !glStyle.trim().startsWith('{')\n  ) {\n    styleUrl = glStyle;\n  }\n  if (styleUrl) {\n    styleUrl = styleUrl.startsWith('data:')\n      ? location.href\n      : normalizeStyleUrl(styleUrl, options.accessToken);\n    options = completeOptions(styleUrl, options);\n  }\n\n  return new Promise(function (resolve, reject) {\n    // TODO: figure out where best place to check source type is\n    // Note that the source arg is an array of gl layer ids and each must be\n    // dereferenced to get source type to validate\n    getGlStyle(glStyle, options)\n      .then(function (glStyle) {\n        if (glStyle.version != 8) {\n          return reject(new Error('glStyle version 8 required.'));\n        }\n        if (\n          !(layer instanceof VectorLayer || layer instanceof VectorTileLayer)\n        ) {\n          return reject(\n            new Error('Can only apply to VectorLayer or VectorTileLayer')\n          );\n        }\n\n        const type = layer instanceof VectorTileLayer ? 'vector' : 'geojson';\n        if (!sourceOrLayers) {\n          sourceId = Object.keys(glStyle.sources).find(function (key) {\n            return glStyle.sources[key].type === type;\n          });\n          sourceOrLayers = sourceId;\n        } else if (Array.isArray(sourceOrLayers)) {\n          sourceId = glStyle.layers.find(function (layer) {\n            return layer.id === sourceOrLayers[0];\n          }).source;\n        } else {\n          sourceId = sourceOrLayers;\n        }\n        if (!sourceId) {\n          return reject(new Error(`No ${type} source found in the glStyle.`));\n        }\n\n        function assignSource() {\n          if (!updateSource) {\n            return Promise.resolve();\n          }\n          if (layer instanceof VectorTileLayer) {\n            return setupVectorSource(\n              glStyle.sources[sourceId],\n              styleUrl,\n              options\n            ).then(function (source) {\n              const targetSource = layer.getSource();\n              if (!targetSource) {\n                layer.setSource(source);\n              } else if (source !== targetSource) {\n                targetSource.setTileUrlFunction(source.getTileUrlFunction());\n                //@ts-ignore\n                if (!targetSource.format_) {\n                  //@ts-ignore\n                  targetSource.format_ = source.format_;\n                }\n                if (!targetSource.getAttributions()) {\n                  targetSource.setAttributions(source.getAttributions());\n                }\n                if (\n                  targetSource.getTileLoadFunction() === defaultLoadFunction\n                ) {\n                  targetSource.setTileLoadFunction(\n                    source.getTileLoadFunction()\n                  );\n                }\n                if (\n                  equivalent(\n                    targetSource.getProjection(),\n                    source.getProjection()\n                  )\n                ) {\n                  targetSource.tileGrid = source.getTileGrid();\n                }\n              }\n              if (\n                !isFinite(layer.getMaxResolution()) &&\n                !isFinite(layer.getMinZoom())\n              ) {\n                const tileGrid = layer.getSource().getTileGrid();\n                layer.setMaxResolution(\n                  tileGrid.getResolution(tileGrid.getMinZoom())\n                );\n              }\n            });\n          }\n          const glSource = glStyle.sources[sourceId];\n          let source = layer.getSource();\n          if (!source || source.get('mapbox-source') !== glSource) {\n            source = setupGeoJSONSource(glSource, styleUrl, options);\n          }\n          const targetSource = /** @type {VectorSource} */ (layer.getSource());\n          if (!targetSource) {\n            layer.setSource(source);\n          } else if (source !== targetSource) {\n            if (!targetSource.getAttributions()) {\n              targetSource.setAttributions(source.getAttributions());\n            }\n            //@ts-ignore\n            if (!targetSource.format_) {\n              //@ts-ignore\n              targetSource.format_ = source.getFormat();\n            }\n            //@ts-ignore\n            targetSource.url_ = source.getUrl();\n          }\n          return Promise.resolve();\n        }\n\n        let spriteScale, spriteData, spriteImageUrl, style;\n        function onChange() {\n          if (!style && (!glStyle.sprite || spriteData)) {\n            if (options.projection && !resolutions) {\n              const projection = getProjection(options.projection);\n              const units = projection.getUnits();\n              if (units !== 'm') {\n                resolutions = defaultResolutions.map(\n                  (resolution) => resolution / METERS_PER_UNIT[units]\n                );\n              }\n            }\n            style = applyStyleFunction(\n              layer,\n              glStyle,\n              sourceOrLayers,\n              resolutions,\n              spriteData,\n              spriteImageUrl,\n              getFonts,\n              options.getImage\n            );\n            if (!layer.getStyle()) {\n              reject(new Error(`Nothing to show for source [${sourceId}]`));\n            } else {\n              assignSource().then(resolve).catch(reject);\n            }\n          } else if (style) {\n            layer.setStyle(style);\n            assignSource().then(resolve).catch(reject);\n          } else {\n            reject(new Error('Something went wrong trying to apply style.'));\n          }\n        }\n\n        if (glStyle.sprite) {\n          const sprite = new URL(\n            normalizeSpriteUrl(\n              glStyle.sprite,\n              options.accessToken,\n              styleUrl || location.href\n            )\n          );\n          spriteScale = window.devicePixelRatio >= 1.5 ? 0.5 : 1;\n          const sizeFactor = spriteScale == 0.5 ? '@2x' : '';\n          let spriteUrl =\n            sprite.origin +\n            sprite.pathname +\n            sizeFactor +\n            '.json' +\n            sprite.search;\n\n          new Promise(function (resolve, reject) {\n            fetchResource('Sprite', spriteUrl, options)\n              .then(resolve)\n              .catch(function (error) {\n                spriteUrl =\n                  sprite.origin + sprite.pathname + '.json' + sprite.search;\n                fetchResource('Sprite', spriteUrl, options)\n                  .then(resolve)\n                  .catch(reject);\n              });\n          })\n            .then(function (spritesJson) {\n              if (spritesJson === undefined) {\n                reject(new Error('No sprites found.'));\n              }\n              spriteData = spritesJson;\n              spriteImageUrl =\n                sprite.origin +\n                sprite.pathname +\n                sizeFactor +\n                '.png' +\n                sprite.search;\n              if (options.transformRequest) {\n                const transformed = options.transformRequest(\n                  spriteImageUrl,\n                  'SpriteImage'\n                );\n                if (transformed instanceof Request) {\n                  spriteImageUrl = encodeURI(transformed.url);\n                }\n              }\n              onChange();\n            })\n            .catch(function (err) {\n              reject(\n                new Error(\n                  `Sprites cannot be loaded: ${spriteUrl}: ${err.message}`\n                )\n              );\n            });\n        } else {\n          onChange();\n        }\n      })\n      .catch(reject);\n  });\n}\n\nconst emptyObj = {};\n\nfunction setFirstBackground(mapOrLayer, glStyle, options) {\n  glStyle.layers.some(function (layer) {\n    if (layer.type === 'background') {\n      if (mapOrLayer instanceof Layer) {\n        mapOrLayer.setBackground(function (resolution) {\n          return getBackgroundColor(layer, resolution, options, {});\n        });\n        return true;\n      } else if (\n        mapOrLayer instanceof Map ||\n        mapOrLayer instanceof LayerGroup\n      ) {\n        mapOrLayer.getLayers().push(setupBackgroundLayer(layer, options, {}));\n        return true;\n      }\n    }\n  });\n}\n\n/**\n * Applies properties of the Mapbox Style's first `background` layer to the\n * provided map or VectorTile layer.\n *\n * **Example:**\n * ```js\n * import {applyBackground} from 'ol-mapbox-style';\n * import {Map} from 'ol';\n *\n * const map = new Map({target: 'map'});\n * applyBackground(map, 'https://api.maptiler.com/maps/basic/style.json?key=YOUR_OPENMAPTILES_TOKEN');\n * ```\n * @param {Map|VectorTileLayer} mapOrLayer OpenLayers Map or VectorTile layer.\n * @param {Object|string} glStyle Mapbox Style object or url.\n * @param {Options} options Options.\n * @return {Promise} Promise that resolves when the background is applied.\n */\nexport function applyBackground(mapOrLayer, glStyle, options = {}) {\n  return getGlStyle(glStyle, options).then(function (glStyle) {\n    setFirstBackground(mapOrLayer, glStyle, options);\n  });\n}\n\nfunction getSourceIdByRef(layers, ref) {\n  let sourceId;\n  layers.some(function (layer) {\n    if (layer.id == ref) {\n      sourceId = layer.source;\n      return true;\n    }\n  });\n  return sourceId;\n}\n\nfunction extentFromTileJSON(tileJSON, projection) {\n  const bounds = tileJSON.bounds;\n  if (bounds) {\n    const ll = fromLonLat([bounds[0], bounds[1]], projection);\n    const tr = fromLonLat([bounds[2], bounds[3]], projection);\n    return [ll[0], ll[1], tr[0], tr[1]];\n  }\n  return getProjection(projection).getExtent();\n}\n\nfunction sourceOptionsFromTileJSON(glSource, tileJSON, options) {\n  const tileJSONSource = new TileJSON({\n    tileJSON: tileJSON,\n    tileSize: glSource.tileSize || tileJSON.tileSize || 512,\n  });\n  const tileJSONDoc = tileJSONSource.getTileJSON();\n  const tileGrid = tileJSONSource.getTileGrid();\n  const projection = getProjection(options.projection || 'EPSG:3857');\n  const extent = extentFromTileJSON(tileJSONDoc, projection);\n  const projectionExtent = projection.getExtent();\n  const minZoom = tileJSONDoc.minzoom || 0;\n  const maxZoom = tileJSONDoc.maxzoom || 22;\n  /** @type {import(\"ol/source/VectorTile.js\").Options} */\n  const sourceOptions = {\n    attributions: tileJSONSource.getAttributions(),\n    projection: projection,\n    tileGrid: new TileGrid({\n      origin: projectionExtent\n        ? getTopLeft(projectionExtent)\n        : tileGrid.getOrigin(0),\n      extent: extent || tileGrid.getExtent(),\n      minZoom: minZoom,\n      resolutions: getTileResolutions(projection, tileJSON.tileSize).slice(\n        0,\n        maxZoom + 1\n      ),\n      tileSize: tileGrid.getTileSize(0),\n    }),\n  };\n  if (Array.isArray(tileJSONDoc.tiles)) {\n    sourceOptions.urls = tileJSONDoc.tiles;\n  } else {\n    sourceOptions.url = tileJSONDoc.tiles;\n  }\n  return sourceOptions;\n}\n\nfunction getBackgroundColor(glLayer, resolution, options, functionCache) {\n  const background = {\n    id: glLayer.id,\n    type: glLayer.type,\n  };\n  const layout = glLayer.layout || {};\n  const paint = glLayer.paint || {};\n  background['paint'] = paint;\n  const zoom = getZoomForResolution(\n    resolution,\n    options.resolutions || defaultResolutions\n  );\n  let bg, opacity;\n  if (paint['background-color'] !== undefined) {\n    bg = getValue(\n      background,\n      'paint',\n      'background-color',\n      zoom,\n      emptyObj,\n      functionCache\n    );\n  }\n  if (paint['background-opacity'] !== undefined) {\n    opacity = getValue(\n      background,\n      'paint',\n      'background-opacity',\n      zoom,\n      emptyObj,\n      functionCache\n    );\n  }\n  return layout.visibility == 'none'\n    ? undefined\n    : _colorWithOpacity(bg, opacity);\n}\n\n/**\n * @param {Object} glLayer Mapbox Style layer object.\n * @param {Options} options Options.\n * @param {Object} functionCache Cache for functions.\n * @return {Layer} OpenLayers layer.\n */\nfunction setupBackgroundLayer(glLayer, options, functionCache) {\n  const div = document.createElement('div');\n  div.className = 'ol-mapbox-style-background';\n  div.style.position = 'absolute';\n  div.style.width = '100%';\n  div.style.height = '100%';\n  return new Layer({\n    source: new Source({}),\n    render(frameState) {\n      const color = getBackgroundColor(\n        glLayer,\n        frameState.viewState.resolution,\n        options,\n        functionCache\n      );\n      div.style.backgroundColor = color;\n      return div;\n    },\n  });\n}\n\n/**\n * Creates an OpenLayers VectorTile source for a gl source entry.\n * @param {Object} glSource \"source\" entry from a Mapbox Style object.\n * @param {string|undefined} styleUrl URL to use for the source. This is expected to be the complete http(s) url,\n * with access key applied.\n * @param {Options} options Options.\n * @return {Promise<import(\"ol/source/VectorTile\").default>} Promise resolving to a VectorTile source.\n * @private\n */\nexport function setupVectorSource(glSource, styleUrl, options) {\n  return new Promise(function (resolve, reject) {\n    getTileJson(glSource, styleUrl, options)\n      .then(function (tileJSON) {\n        const sourceOptions = sourceOptionsFromTileJSON(\n          glSource,\n          tileJSON,\n          options\n        );\n        sourceOptions.format = new MVT();\n\n        if (Array.isArray(tileJSON.tiles)) {\n          sourceOptions.urls = tileJSON.tiles;\n        } else {\n          sourceOptions.url = tileJSON.tiles;\n        }\n        resolve(new VectorTileSource(sourceOptions));\n      })\n      .catch(reject);\n  });\n}\n\nfunction setupVectorLayer(glSource, styleUrl, options) {\n  const layer = new VectorTileLayer({\n    declutter: true,\n    visible: false,\n  });\n  setupVectorSource(glSource, styleUrl, options)\n    .then(function (source) {\n      source.set('mapbox-source', glSource);\n      layer.setSource(source);\n    })\n    .catch(function (error) {\n      layer.setSource(undefined);\n    });\n  return layer;\n}\n\nfunction getBboxTemplate(projection) {\n  const projCode = projection ? projection.getCode() : 'EPSG:3857';\n  return `{bbox-${projCode.toLowerCase().replace(/[^a-z0-9]/g, '-')}}`;\n}\n\nfunction setupRasterLayer(glSource, styleUrl, options) {\n  const layer = new TileLayer();\n  getTileJson(glSource, styleUrl, options)\n    .then(function (tileJson) {\n      const source = new TileJSON({\n        interpolate:\n          options.interpolate === undefined ? true : options.interpolate,\n        transition: 0,\n        crossOrigin: 'anonymous',\n        tileJSON: tileJson,\n      });\n      source.tileGrid = sourceOptionsFromTileJSON(\n        glSource,\n        tileJson,\n        options\n      ).tileGrid;\n      if (options.projection) {\n        //@ts-ignore\n        source.projection = getProjection(options.projection);\n      }\n      const getTileUrl = source.getTileUrlFunction();\n      source.setTileUrlFunction(function (tileCoord, pixelRatio, projection) {\n        const bboxTemplate = getBboxTemplate(projection);\n        let src = getTileUrl(tileCoord, pixelRatio, projection);\n        if (src.indexOf(bboxTemplate) != -1) {\n          const bbox = source.getTileGrid().getTileCoordExtent(tileCoord);\n          src = src.replace(bboxTemplate, bbox.toString());\n        }\n        return src;\n      });\n      source.set('mapbox-source', glSource);\n      layer.setSource(source);\n    })\n    .catch(function (error) {\n      layer.setSource(undefined);\n    });\n  return layer;\n}\n\n/**\n *\n * @param {Object} glSource \"source\" entry from a Mapbox Style object.\n * @param {string} styleUrl Style url\n * @param {Options} options ol-mapbox-style options.\n * @return {ImageLayer<Raster>} The raster layer\n */\nfunction setupHillshadeLayer(glSource, styleUrl, options) {\n  const tileLayer = setupRasterLayer(glSource, styleUrl, options);\n  /** @type {ImageLayer<Raster>} */\n  const layer = new ImageLayer({\n    source: new Raster({\n      operationType: 'image',\n      operation: hillshade,\n      sources: [tileLayer],\n    }),\n  });\n  return layer;\n}\n\nconst geoJsonFormat = new GeoJSON();\n/**\n * @param {Object} glSource glStyle source.\n * @param {string} styleUrl Style URL.\n * @param {Options} options Options.\n * @return {VectorSource} Configured vector source.\n */\nfunction setupGeoJSONSource(glSource, styleUrl, options) {\n  const data = glSource.data;\n  const sourceOptions = {};\n  if (typeof data == 'string') {\n    let geoJsonUrl = normalizeSourceUrl(\n      data,\n      options.accessToken,\n      options.accessTokenParam || 'access_token',\n      styleUrl || location.href\n    );\n    if (options.transformRequest) {\n      const transformed = options.transformRequest(geoJsonUrl, 'GeoJSON');\n      if (transformed instanceof Request) {\n        geoJsonUrl = decodeURI(transformed.url);\n      }\n    }\n    if (/\\{bbox-[0-9a-z-]+\\}/.test(geoJsonUrl)) {\n      const extentUrl = (extent, resolution, projection) => {\n        const bboxTemplate = getBboxTemplate(projection);\n        return geoJsonUrl.replace(\n          bboxTemplate,\n          `${extent.join(',')},${projection.getCode()}`\n        );\n      };\n      const source = new VectorSource({\n        attributions: glSource.attribution,\n        format: geoJsonFormat,\n        url: extentUrl,\n        strategy: bboxStrategy,\n      });\n      source.set('mapbox-source', glSource);\n      return source;\n    }\n    return new VectorSource({\n      attributions: glSource.attribution,\n      format: geoJsonFormat,\n      url: geoJsonUrl,\n    });\n  }\n  sourceOptions.features = geoJsonFormat.readFeatures(data, {\n    featureProjection: getUserProjection() || 'EPSG:3857',\n  });\n\n  const source = new VectorSource(\n    Object.assign(\n      {\n        attributions: glSource.attribution,\n        format: geoJsonFormat,\n      },\n      sourceOptions\n    )\n  );\n  source.set('mapbox-source', glSource);\n  return source;\n}\n\nfunction setupGeoJSONLayer(glSource, styleUrl, options) {\n  return new VectorLayer({\n    declutter: true,\n    source: setupGeoJSONSource(glSource, styleUrl, options),\n    visible: false,\n  });\n}\n\nfunction prerenderRasterLayer(glLayer, layer, functionCache) {\n  let zoom = null;\n  return function (event) {\n    if (\n      glLayer.paint &&\n      'raster-opacity' in glLayer.paint &&\n      event.frameState.viewState.zoom !== zoom\n    ) {\n      zoom = event.frameState.viewState.zoom;\n      delete functionCache[glLayer.id];\n      updateRasterLayerProperties(glLayer, layer, zoom, functionCache);\n    }\n  };\n}\n\nfunction updateRasterLayerProperties(glLayer, layer, zoom, functionCache) {\n  const opacity = getValue(\n    glLayer,\n    'paint',\n    'raster-opacity',\n    zoom,\n    emptyObj,\n    functionCache\n  );\n  layer.setOpacity(opacity);\n}\n\n/**\n * @param {*} glStyle Mapbox Style.\n * @param {Map|LayerGroup} mapOrGroup Map or layer group.\n * @param {string} styleUrl Style URL.\n * @param {Options} options Options.\n * @return {Promise} Promise that resolves when the style is loaded.\n */\nfunction processStyle(glStyle, mapOrGroup, styleUrl, options) {\n  const promises = [];\n\n  let view = null;\n  if (mapOrGroup instanceof Map) {\n    view = mapOrGroup.getView();\n    if (!view.isDef() && !view.getRotation() && !view.getResolutions()) {\n      const projection = options.projection\n        ? getProjection(options.projection)\n        : view.getProjection();\n      view = new View(\n        Object.assign(view.getProperties(), {\n          maxResolution:\n            defaultResolutions[0] / METERS_PER_UNIT[projection.getUnits()],\n          projection: options.projection || view.getProjection(),\n        })\n      );\n      mapOrGroup.setView(view);\n    }\n\n    if ('center' in glStyle && !view.getCenter()) {\n      view.setCenter(fromLonLat(glStyle.center, view.getProjection()));\n    }\n    if ('zoom' in glStyle && view.getZoom() === undefined) {\n      view.setResolution(\n        defaultResolutions[0] /\n          METERS_PER_UNIT[view.getProjection().getUnits()] /\n          Math.pow(2, glStyle.zoom)\n      );\n    }\n    if (!view.getCenter() || view.getZoom() === undefined) {\n      view.fit(view.getProjection().getExtent(), {\n        nearest: true,\n        size: mapOrGroup.getSize(),\n      });\n    }\n  }\n\n  const glLayers = glStyle.layers;\n  let layerIds = [];\n\n  let layer, glSource, glSourceId, id;\n  for (let i = 0, ii = glLayers.length; i < ii; ++i) {\n    const glLayer = glLayers[i];\n    const type = glLayer.type;\n    if (type == 'heatmap') {\n      //FIXME Unsupported layer type\n      throw new Error(`${type} layers are not supported`);\n    } else {\n      id = glLayer.source || getSourceIdByRef(glLayers, glLayer.ref);\n      // this technique assumes gl layers will be in a particular order\n      if (!id || id != glSourceId) {\n        if (layerIds.length) {\n          promises.push(\n            finalizeLayer(\n              layer,\n              layerIds,\n              glStyle,\n              styleUrl,\n              mapOrGroup,\n              options\n            )\n          );\n          layerIds = [];\n        }\n        glSource = glStyle.sources[id];\n        const functionCache = {};\n        if (type == 'background') {\n          layer = setupBackgroundLayer(glLayer, options, functionCache);\n        } else if (glSource.type == 'vector') {\n          layer = setupVectorLayer(glSource, styleUrl, options);\n        } else if (glSource.type == 'raster') {\n          layerIds = [];\n          layer = setupRasterLayer(glSource, styleUrl, options);\n          layer.setVisible(\n            glLayer.layout ? glLayer.layout.visibility !== 'none' : true\n          );\n          layer.on(\n            'prerender',\n            prerenderRasterLayer(glLayer, layer, functionCache)\n          );\n        } else if (glSource.type == 'geojson') {\n          layer = setupGeoJSONLayer(glSource, styleUrl, options);\n        } else if (\n          glSource.type == 'raster-dem' &&\n          glLayer.type == 'hillshade'\n        ) {\n          layerIds = [];\n          const hillshadeLayer = setupHillshadeLayer(\n            glSource,\n            styleUrl,\n            options\n          );\n          layer = hillshadeLayer;\n          hillshadeLayer.getSource().on('beforeoperations', function (event) {\n            const data = event.data;\n            data.resolution = event.resolution;\n            const zoom = getZoomForResolution(\n              event.resolution,\n              options.resolutions || defaultResolutions\n            );\n            data.vert =\n              5 *\n              getValue(\n                glLayer,\n                'paint',\n                'hillshade-exaggeration',\n                zoom,\n                emptyObj,\n                functionCache\n              );\n            data.sunAz = getValue(\n              glLayer,\n              'paint',\n              'hillshade-illumination-direction',\n              zoom,\n              emptyObj,\n              functionCache\n            );\n            data.sunEl = 35;\n            data.opacity = 0.3;\n            data.highlightColor = getValue(\n              glLayer,\n              'paint',\n              'hillshade-highlight-color',\n              zoom,\n              emptyObj,\n              functionCache\n            );\n            data.shadowColor = getValue(\n              glLayer,\n              'paint',\n              'hillshade-shadow-color',\n              zoom,\n              emptyObj,\n              functionCache\n            );\n            data.accentColor = getValue(\n              glLayer,\n              'paint',\n              'hillshade-accent-color',\n              zoom,\n              emptyObj,\n              functionCache\n            );\n          });\n          layer.setVisible(\n            glLayer.layout ? glLayer.layout.visibility !== 'none' : true\n          );\n        }\n        glSourceId = id;\n        if (layer) {\n          layer.set('mapbox-source', glSourceId);\n        }\n      }\n      layerIds.push(glLayer.id);\n    }\n  }\n  promises.push(\n    finalizeLayer(layer, layerIds, glStyle, styleUrl, mapOrGroup, options)\n  );\n  mapOrGroup.set('mapbox-style', glStyle);\n  return Promise.all(promises);\n}\n\n/**\n * Loads and applies a Mapbox Style object into an OpenLayers Map or LayerGroup.\n * This includes the map background, the layers, and for Map instances that did not\n * have a View defined yet also the center and the zoom.\n *\n * **Example:**\n * ```js\n * import apply from 'ol-mapbox-style';\n *\n * apply('map', 'mapbox://styles/mapbox/bright-v9', {accessToken: 'YOUR_MAPBOX_TOKEN'});\n * ```\n *\n * The center and zoom will only be set if present in the Mapbox Style document,\n * and if not already set on the OpenLayers map.\n *\n * Layers will be added to the OpenLayers map, without affecting any layers that\n * might already be set on the map.\n *\n * Layers added by `apply()` will have two additional properties:\n *\n *  * `mapbox-source`: The `id` of the Mapbox Style document's source that the\n *    OpenLayers layer was created from. Usually `apply()` creates one\n *    OpenLayers layer per Mapbox Style source, unless the layer stack has\n *    layers from different sources in between.\n *  * `mapbox-layers`: The `id`s of the Mapbox Style document's layers that are\n *    included in the OpenLayers layer.\n *\n * This function sets an additional `mapbox-style` property on the OpenLayers\n * Map or LayerGroup instance, which holds the Mapbox Style object.\n *\n * @param {Map|HTMLElement|string|LayerGroup} mapOrGroupOrElement Either an existing\n * OpenLayers Map instance, or a HTML element, or the id of a HTML element that will be\n * the target of a new OpenLayers Map, or a layer group. If layer group, styles\n * releated to the map and view will be ignored.\n * @param {string|Object} style JSON style object or style url pointing to a\n * Mapbox Style object. When using Mapbox APIs, the url is the `styleUrl`\n * shown in Mapbox Studio's \"share\" panel. In addition, the `accessToken` option\n * (see below) must be set.\n * When passed as JSON style object, all OpenLayers layers created by `apply()`\n * will be immediately available, but they may not have a source yet (i.e. when\n * they are defined by a TileJSON url in the Mapbox Style document). When passed\n * as style url, layers will be added to the map when the Mapbox Style document\n * is loaded and parsed.\n * @param {Options} options Options.\n * @return {Promise<Map|LayerGroup>} A promise that resolves after all layers have been added to\n * the OpenLayers Map instance or LayerGroup, their sources set, and their styles applied. The\n * `resolve` callback will be called with the OpenLayers Map instance or LayerGroup as\n * argument.\n */\nexport function apply(mapOrGroupOrElement, style, options = {}) {\n  let promise;\n  /** @type {Map|LayerGroup} */\n  let mapOrGroup;\n  if (\n    typeof mapOrGroupOrElement === 'string' ||\n    mapOrGroupOrElement instanceof HTMLElement\n  ) {\n    mapOrGroup = new Map({\n      target: mapOrGroupOrElement,\n    });\n  } else {\n    mapOrGroup = mapOrGroupOrElement;\n  }\n\n  if (typeof style === 'string') {\n    const styleUrl = style.startsWith('data:')\n      ? location.href\n      : normalizeStyleUrl(style, options.accessToken);\n    options = completeOptions(styleUrl, options);\n\n    promise = new Promise(function (resolve, reject) {\n      getGlStyle(style, options)\n        .then(function (glStyle) {\n          processStyle(glStyle, mapOrGroup, styleUrl, options)\n            .then(function () {\n              resolve(mapOrGroup);\n            })\n            .catch(reject);\n        })\n        .catch(function (err) {\n          reject(new Error(`Could not load ${style}: ${err.message}`));\n        });\n    });\n  } else {\n    promise = new Promise(function (resolve, reject) {\n      processStyle(\n        style,\n        mapOrGroup,\n        !options.styleUrl || options.styleUrl.startsWith('data:')\n          ? location.href\n          : normalizeStyleUrl(options.styleUrl, options.accessToken),\n        options\n      )\n        .then(function () {\n          resolve(mapOrGroup);\n        })\n        .catch(reject);\n    });\n  }\n\n  return promise;\n}\n\n/**\n * If layerIds is not empty, applies the style specified in glStyle to the layer,\n * and adds the layer to the map.\n *\n * The layer may not yet have a source when the function is called.  If so, the style\n * is applied to the layer via a once listener on the 'change:source' event.\n *\n * @param {Layer} layer An OpenLayers layer instance.\n * @param {Array<string>} layerIds Array containing layer ids of already-processed layers.\n * @param {Object} glStyle Style as a JSON object.\n * @param {string|undefined} styleUrl The original style URL. Only required\n * when a relative path is used with the `\"sprite\"` property of the style.\n * @param {Map|LayerGroup} mapOrGroup OpenLayers Map.\n * @param {Options} options Options.\n * @return {Promise} Returns a promise that resolves after the source has\n * been set on the specified layer, and the style has been applied.\n * @private\n */\nfunction finalizeLayer(\n  layer,\n  layerIds,\n  glStyle,\n  styleUrl,\n  mapOrGroup,\n  options = {}\n) {\n  let minZoom = 24;\n  let maxZoom = 0;\n  const glLayers = glStyle.layers;\n  for (let i = 0, ii = glLayers.length; i < ii; ++i) {\n    const glLayer = glLayers[i];\n    if (layerIds.indexOf(glLayer.id) !== -1) {\n      minZoom = Math.min('minzoom' in glLayer ? glLayer.minzoom : 0, minZoom);\n      maxZoom = Math.max('maxzoom' in glLayer ? glLayer.maxzoom : 24, maxZoom);\n    }\n  }\n  return new Promise(function (resolve, reject) {\n    const setStyle = function () {\n      const source = layer.getSource();\n      if (!source || source.getState() === 'error') {\n        reject(\n          new Error(\n            'Error accessing data for source ' + layer.get('mapbox-source')\n          )\n        );\n        return;\n      }\n      if ('getTileGrid' in source) {\n        const tileGrid =\n          /** @type {import(\"ol/source/Tile.js\").default|import(\"ol/source/VectorTile.js\").default} */ (\n            source\n          ).getTileGrid();\n        if (tileGrid) {\n          const sourceMinZoom = tileGrid.getMinZoom();\n          if (minZoom > 0 || sourceMinZoom > 0) {\n            layer.setMaxResolution(\n              Math.min(\n                defaultResolutions[minZoom],\n                tileGrid.getResolution(sourceMinZoom)\n              ) + 1e-9\n            );\n          }\n          if (maxZoom < 24) {\n            layer.setMinResolution(defaultResolutions[maxZoom] + 1e-9);\n          }\n        }\n      } else {\n        if (minZoom > 0) {\n          layer.setMaxResolution(defaultResolutions[minZoom] + 1e-9);\n        }\n      }\n      if (\n        source instanceof VectorSource ||\n        source instanceof VectorTileSource\n      ) {\n        applyStyle(\n          /** @type {import(\"ol/layer/Vector\").default|import(\"ol/layer/VectorTile\").default} */ (\n            layer\n          ),\n          glStyle,\n          layerIds,\n          Object.assign({styleUrl: styleUrl}, options)\n        )\n          .then(function () {\n            layer.setVisible(true);\n            resolve();\n          })\n          .catch(reject);\n      } else {\n        resolve();\n      }\n    };\n\n    layer.set('mapbox-layers', layerIds);\n    const layers = mapOrGroup.getLayers();\n    if (layers.getArray().indexOf(layer) === -1) {\n      layers.push(layer);\n    }\n\n    if (layer.getSource()) {\n      setStyle();\n    } else {\n      layer.once('change:source', setStyle);\n    }\n  });\n}\n\n/**\n * Get the OpenLayers layer instance that contains the provided Mapbox Style\n * `layer`. Note that multiple Mapbox Style layers are combined in a single\n * OpenLayers layer instance when they use the same Mapbox Style `source`.\n * @param {Map|LayerGroup} map OpenLayers Map or LayerGroup.\n * @param {string} layerId Mapbox Style layer id.\n * @return {Layer} OpenLayers layer instance.\n */\nexport function getLayer(map, layerId) {\n  const layers = map.getLayers().getArray();\n  for (let i = 0, ii = layers.length; i < ii; ++i) {\n    const mapboxLayers = layers[i].get('mapbox-layers');\n    if (mapboxLayers && mapboxLayers.indexOf(layerId) !== -1) {\n      return /** @type {Layer} */ (layers[i]);\n    }\n  }\n}\n\n/**\n * Get the OpenLayers layer instances for the provided Mapbox Style `source`.\n * @param {Map|LayerGroup} map OpenLayers Map or LayerGroup.\n * @param {string} sourceId Mapbox Style source id.\n * @return {Array<Layer>} OpenLayers layer instances.\n */\nexport function getLayers(map, sourceId) {\n  const result = [];\n  const layers = map.getLayers().getArray();\n  for (let i = 0, ii = layers.length; i < ii; ++i) {\n    if (layers[i].get('mapbox-source') === sourceId) {\n      result.push(/** @type {Layer} */ (layers[i]));\n    }\n  }\n  return result;\n}\n\n/**\n * Get the OpenLayers source instance for the provided Mapbox Style `source`.\n * @param {Map|LayerGroup} map OpenLayers Map or LayerGroup.\n * @param {string} sourceId Mapbox Style source id.\n * @return {Source} OpenLayers source instance.\n */\nexport function getSource(map, sourceId) {\n  const layers = map.getLayers().getArray();\n  for (let i = 0, ii = layers.length; i < ii; ++i) {\n    const source = /** @type {Layer} */ (layers[i]).getSource();\n    if (layers[i].get('mapbox-source') === sourceId) {\n      return source;\n    }\n  }\n}\n\n/**\n * Sets or removes a feature state. The feature state is taken into account for styling,\n * just like the feature's properties, and can be used e.g. to conditionally render selected\n * features differently.\n *\n * The feature state will be stored on the OpenLayers layer matching the feature identifier, in the\n * `mapbox-featurestate` property.\n * @param {Map|VectorLayer|VectorTileLayer} mapOrLayer OpenLayers Map or layer to set the feature\n * state on.\n * @param {FeatureIdentifier} feature Feature identifier.\n * @param {Object|null} state Feature state. Set to `null` to remove the feature state.\n */\nexport function setFeatureState(mapOrLayer, feature, state) {\n  const layers =\n    'getLayers' in mapOrLayer\n      ? getLayers(mapOrLayer, feature.source)\n      : [mapOrLayer];\n  for (let i = 0, ii = layers.length; i < ii; ++i) {\n    const featureState = layers[i].get('mapbox-featurestate');\n    if (featureState) {\n      if (state) {\n        featureState[feature.id] = state;\n      } else {\n        delete featureState[feature.id];\n      }\n      layers[i].changed();\n    } else {\n      throw new Error(`Map or layer for source \"${feature.source}\" not found.`);\n    }\n  }\n}\n\n/**\n * Sets or removes a feature state. The feature state is taken into account for styling,\n * just like the feature's properties, and can be used e.g. to conditionally render selected\n * features differently.\n * @param {Map|VectorLayer|VectorTileLayer} mapOrLayer Map or layer to set the feature state on.\n * @param {FeatureIdentifier} feature Feature identifier.\n * @return {Object|null} Feature state or `null` when no feature state is set for the given\n * feature identifier.\n */\nexport function getFeatureState(mapOrLayer, feature) {\n  const layers =\n    'getLayers' in mapOrLayer\n      ? getLayers(mapOrLayer, feature.source)\n      : [mapOrLayer];\n  for (let i = 0, ii = layers.length; i < ii; ++i) {\n    const featureState = layers[i].get('mapbox-featurestate');\n    if (featureState && featureState[feature.id]) {\n      return featureState[feature.id];\n    }\n  }\n  return null;\n}\n\nexport {finalizeLayer as _finalizeLayer};\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t592: 0\n};\n\n// no chunk on demand loading\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n__webpack_require__.O.j = (chunkId) => (installedChunks[chunkId] === 0);\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = (parentChunkLoadingFunction, data) => {\n\tvar [chunkIds, moreModules, runtime] = data;\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some((id) => (installedChunks[id] !== 0))) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkId] = 0;\n\t}\n\treturn __webpack_require__.O(result);\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunkol_mapbox_style\"] = self[\"webpackChunkol_mapbox_style\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));"],"names":["deferred","Point","x","y","this","module","exports","prototype","clone","add","p","_add","sub","_sub","multByPoint","_multByPoint","divByPoint","_divByPoint","mult","k","_mult","div","_div","rotate","a","_rotate","rotateAround","_rotateAround","matMult","m","_matMult","unit","_unit","perp","_perp","round","_round","mag","Math","sqrt","equals","other","dist","distSqr","dx","dy","angle","atan2","angleTo","b","angleWith","angleWithSep","cos","sin","convert","Array","isArray","UnitBezier","p1x","p1y","p2x","p2y","cx","bx","ax","cy","by","ay","sampleCurveX","t","sampleCurveY","sampleCurveDerivativeX","solveCurveX","epsilon","t0","t1","t2","x2","i","abs","d2","solve","kCSSColorTable","clamp_css_byte","clamp_css_float","f","parse_css_int","str","length","parseFloat","parseInt","parse_css_float","css_hue_to_rgb","m1","m2","h","css_str","iv","replace","toLowerCase","slice","substr","op","indexOf","ep","fname","params","split","alpha","pop","s","l","e","read","buffer","offset","isLE","mLen","nBytes","eLen","eMax","eBias","nBits","d","NaN","Infinity","pow","write","value","c","rt","isNaN","floor","log","LN2","fontWeights","thin","hairline","light","book","regular","normal","plain","roman","standard","medium","bold","heavy","black","fat","poster","sp","italicRE","fontCache","fonts","size","lineHeight","cssData","weight","style","fontFamilies","ii","parts","maybeWeight","w","test","previousPart","startsWith","fontFamily","join","push","assert","err","AssertionError","Error","captureStackTrace","name","Pbf","ieee754","buf","ArrayBuffer","isView","Uint8Array","pos","type","Varint","Fixed64","Bytes","Fixed32","SHIFT_LEFT_32","SHIFT_RIGHT_32","utf8TextDecoder","TextDecoder","readPackedEnd","pbf","readVarint","toNum","low","high","isSigned","makeRoomForExtraLength","startPos","len","extraLen","realloc","writePackedVarint","arr","writeVarint","writePackedSVarint","writeSVarint","writePackedFloat","writeFloat","writePackedDouble","writeDouble","writePackedBoolean","writeBoolean","writePackedFixed32","writeFixed32","writePackedSFixed32","writeSFixed32","writePackedFixed64","writeFixed64","writePackedSFixed64","writeSFixed64","readUInt32","writeInt32","val","readInt32","destroy","readFields","readField","result","end","tag","skip","readMessage","readFixed32","readSFixed32","readFixed64","readSFixed64","readFloat","readDouble","readVarintRemainder","readVarint64","readSVarint","num","readBoolean","Boolean","readString","decode","subarray","readUtf8TextDecoder","b1","b2","b3","b0","bytesPerSequence","String","fromCharCode","readUtf8","readBytes","readPackedVarint","readPackedSVarint","readPackedBoolean","readPackedFloat","readPackedDouble","readPackedFixed32","readPackedSFixed32","readPackedFixed64","readPackedSFixed64","writeTag","min","set","finish","writeBigVarintLow","lsb","writeBigVarintHigh","writeBigVarint","writeString","lead","charCodeAt","writeUtf8","writeBytes","writeRawMessage","fn","obj","writeMessage","writeBytesField","writeFixed32Field","writeSFixed32Field","writeFixed64Field","writeSFixed64Field","writeVarintField","writeSVarintField","writeStringField","writeFloatField","writeDoubleField","writeBooleanField","r","n","o","exp","u","max","_maxEntries","_minEntries","ceil","clear","children","minX","minY","maxX","maxY","leaf","height","all","_all","data","search","toBBox","collides","load","insert","_build","_splitRoot","_insert","remove","splice","_condense","compareMinX","compareMinY","toJSON","fromJSON","apply","_chooseSubtree","_split","_adjustParentBBoxes","_chooseSplitAxis","_chooseSplitIndex","v","M","_allDistMargin","sort","const","messages","code","message","super","Property","CollectionEvent","element","index","array","options","on","once","un","unique_","unique","array_","let","assertUnique_","updateLength_","getLength","extend","forEach","getArray","item","get","insertAt","elem","dispatchEvent","removeAt","prev","setAt","except","ADD","REMOVE","Disposable","disposed","dispose","disposeInternal","listenImage","image","loadHandler","errorHandler","img","listening","decoding","loaded","listenerKeys","src","then","catch","error","extent","resolution","pixelRatio","state","pixelRatio_","changed","getExtent","getImage","getPixelRatio","getResolution","getState","IDLE","LOADING","LOADED","ERROR","EMPTY","tileCoord","crossOrigin","tileLoadFunction","crossOrigin_","src_","key","image_","Image","unlisten_","tileLoadFunction_","setImage","unlistenImage_","handleImageError_","ctx","fillStyle","fillRect","canvas","handleImageLoad_","naturalWidth","naturalHeight","bind","MapRenderer","map","map_","dispatchRenderEvent","frameState","calculateMatrices2D","viewState","coordinateToPixelTransform","pixelToCoordinateTransform","rotation","center","forEachFeatureAtCoordinate","coordinate","hitTolerance","checkWrapped","callback","thisArg","layerFilter","thisArg2","managed","feature","layer","geometry","call","projection","translatedCoordinate","offsets","canWrapX","projectionExtent","worldWidth","layerStates","layerStatesArray","numLayers","matches","tmpCoord","j","layerState","hasRenderer","layerRenderer","getRenderer","source","getSource","coordinates","getWrapX","order","distanceSq","some","hasFeatureAtCoordinate","undefined","getMap","renderFrame","scheduleExpireIconCache","postRenderFunctions","expireIconCache","CompositeMapRenderer","fontChangeListenerKey_","ObjectEventType","redrawText","element_","document","createElement","position","width","zIndex","className","container","getViewport","insertBefore","firstChild","children_","renderedVisible_","hasListener","event","parentNode","removeChild","declutterLayers","previousElement","layerIndex","sourceState","getSourceState","unrender","render","renderDeclutter","display","Map","MapEvent","MapBrowserEvent","originalEvent","dragging","activePointers","pixel_","coordinate_","pixel","getEventPixel","getCoordinateFromPixel","preventDefault","stopPropagation","SINGLECLICK","CLICK","DBLCLICK","POINTERDRAG","POINTERMOVE","POINTERDOWN","POINTERUP","POINTEROVER","POINTEROUT","POINTERENTER","POINTERLEAVE","POINTERCANCEL","MapBrowserEventHandler","moveTolerance","clickTimeoutId_","emulateClicks_","dragging_","dragListenerKeys_","moveTolerance_","down_","activePointers_","trackedTouches_","pointerdownListenerKey_","handlePointerDown_","originalPointerMoveEvent_","relayedListenerKey_","relayMoveEvent_","boundHandleTouchMove_","handleTouchMove_","addEventListener","passive","emulateClick_","pointerEvent","newEvent","clearTimeout","setTimeout","updateActivePointers_","id","pointerId","target","Object","values","handlePointerUp_","defaultPrevented","isMouseActionButton_","button","PointerEvent","defineProperty","writable","doc","getOwnerDocument","handlePointerMove_","getRootNode","isMoving_","cancelable","clientX","clientY","removeEventListener","Target","pointerEvents","target_","setTarget","setMap","getOverlayContainerStopEvent","appendChild","MapEventType","mapEvent","getElementById","ulElement_","collapsed_","collapsed","userCollapsed_","overrideCollapsible_","collapsible","collapsible_","tipLabel","expandClassName","collapseLabel","collapseClassName","collapseLabel_","textContent","label","label_","activeLabel","toggleButton_","setAttribute","title","handleClick_","cssClasses","renderedAttributions_","collectSourceAttributions_","lookup","visibleAttributions","attributionGetter","getAttributions","attributions","getAttributionsCollapsible","jj","setCollapsible","updateElement_","visible","innerHTML","handleToggle_","classList","toggle","getCollapsible","setCollapsed","getCollapsed","Rotate","compassClassName","callResetNorth_","resetNorth","duration_","duration","autoHide_","autoHide","rotation_","resetNorth_","view","getView","getRotation","PI","animate","easing","setRotation","transform","contains","delta","zoomInClassName","zoomOutClassName","zoomInLabel","zoomOutLabel","zoomInTipLabel","zoomOutTipLabel","inElement","createTextNode","outElement","zoomByDelta_","currentZoom","getZoom","newZoom","getConstrainedZoom","getAnimating","cancelAnimations","zoom","setZoom","zoomByDelta","anchor","newResolution","getResolutionForZoom","handleEvent","setActive","getActive","mapBrowserEvent","active","delta_","stopEvent","browserEvent","shiftKey","handleDownEvent","handleDragEvent","handleMoveEvent","handleUpEvent","stopDown","handlingDownUpSequence","targetPointers","getPointerCount","updateTrackedPointers_","handledUp","handled","var_args","conditions","arguments","pass","altShiftKeysOnly","altKey","metaKey","ctrlKey","focusWithTabindex","getTargetElement","hasAttribute","targetElement","activeElement","always","mouseActionButton","noModifierKeys","shiftKeyOnly","targetNotEditable","tagName","isContentEditable","mouseOnly","pointerType","primaryAction","isPrimary","DragPan","kinetic_","kinetic","lastCentroid","lastPointersCount_","panning_","condition","condition_","onFocusOnly","noKinetic_","beginInteraction","centroid","update","adjustCenterInternal","begin","distance","getDistance","getAngle","getCenterInternal","centerpx","getPixelFromCoordinateInternal","dest","getCoordinateFromPixelInternal","animateInternal","getConstrainedCenter","endInteraction","Pointer","DragRotate","lastAngle_","getConstraints","getSize","theta","adjustRotationInternal","RenderBox","geometry_","startPixel_","endPixel_","render_","startPixel","endPixel","px","left","top","getOverlayContainer","setPixels","createOrUpdateGeometry","setCoordinates","Polygon","getGeometry","DragBoxEvent","DragBox","box_","minArea_","minArea","onBoxEnd","boxEndCondition_","boxEndCondition","defaultBoxEndCondition","completeBox","DragZoom","out_","out","rotatedExtent","rotatedExtentForGeometry","getResolutionForExtentInternal","factor","scale","fitInternal","defaultCondition_","pixelDelta_","pixelDelta","keyEvent","keyCode","mapUnitsDelta","deltaX","deltaY","currentCenter","pan","charCode","Kinetic","decay","minVelocity","delay","decay_","minVelocity_","delay_","points_","angle_","initialVelocity_","Date","now","lastIndex","firstIndex","totalDelta_","lastDelta_","maxDelta_","maxDelta","timeout_","timeout","useAnchor_","useAnchor","constrainResolution_","constrainResolution","lastAnchor_","startTime_","timeoutId_","mode_","trackpadEventGap_","trackpadTimeoutId_","deltaPerZoom_","endInteraction_","wheelEvent","deltaMode","WheelEvent","DOM_DELTA_PIXEL","DOM_DELTA_LINE","getConstrainResolution","adjustZoom","timeLeft","handleWheelZoom_","setMouseAnchor","PinchRotate","pointerOptions","anchor_","rotating_","rotationDelta_","threshold_","threshold","rotationDelta","touch0","touch1","PinchZoom","lastDistance_","lastScaleDelta_","scaleDelta","adjustResolutionInternal","direction","removeLayerMapProperty","Layer","setMapInternal","getLayers","setLayerMapProperty","layers","optionsInternal","keyboardEventTarget","controls","interactions","overlays","layerGroup","View","Collection","createOptionsInternal","renderComplete_","loaded_","boundHandleBrowserEvent_","handleBrowserEvent","maxTilesLoading_","maxTilesLoading","postRenderTimeoutHandle_","animationDelayKey_","animationDelay_","coordinateToPixelTransform_","pixelToCoordinateTransform_","frameIndex_","frameState_","previousExtent_","viewPropertyListenerKey_","viewChangeListenerKey_","layerGroupPropertyListenerKeys_","viewport_","window","overflow","overlayContainer_","overlayContainerStopEvent_","mapBrowserEventHandler_","keyboardEventTarget_","targetChangeHandlerKeys_","targetElement_","resizeObserver_","ResizeObserver","updateSize","zoomOptions","rotateOptions","attribution","attributionOptions","altShiftDragRotate","doubleClickZoom","zoomDelta","zoomDuration","dragPan","pinchRotate","pinchZoom","keyboard","mouseWheelZoom","shiftDragZoom","overlays_","overlayIdIndex_","renderer_","postRenderFunctions_","tileQueue_","TileQueue","getTilePriority","handleTileChange_","addChangeListener","MapProperty","handleLayerGroupChanged_","handleViewChanged_","handleSizeChanged_","handleTargetChanged_","setProperties","viewOptions","setView","CollectionEventType","addOverlayInternal_","getId","toString","control","interaction","addControl","getControls","addInteraction","getInteractions","addLayer","getLayerGroup","handleLayerAdd_","addOverlay","overlay","getOverlays","disconnect","forEachFeatureAtPixel","getFeaturesAtPixel","features","getAllLayers","addLayersFrom","hasFeatureAtPixel","getEventCoordinate","getEventCoordinateInternal","viewportPosition","getBoundingClientRect","viewportSize","scaleX","scaleY","eventPosition","changedTouches","getTarget","getProjection","getOverlayById","setLayers","group","collection","getLoadingOrNotReady","getLayerStatesArray","renderer","ready","loading","getPixelFromCoordinate","viewCoordinate","ownerDocument","tile","tileSourceKey","tileCenter","tileResolution","handleMapBrowserEvent","eventType","rootNode","documentElement","interactionsArray","propagationStopped","handlePostRender","tileQueue","isEmpty","maxTotalLoading","maxNewLoads","hints","viewHints","ViewHint","lowOnFrameBudget","time","getTilesLoading","reprioritize","loadMoreTiles","resolveConstraints","unobserve","ShadowRoot","host","Composite","observe","cancelAnimationFrame","handleViewPropertyChanged_","updateViewportSize_","Group","handleLayerRemove_","isRendered","renderFrame_","renderSync","handleFontsChanged","requestAnimationFrame","removeControl","removeInteraction","removeLayer","removeOverlay","previousFrameState","isDef","getHints","declutterTree","usedTiles","wantedTiles","mapId","renderTargets","nextCenter","nextResolution","nextRotation","nextExtent","getCount","setLayerGroup","oldLayerGroup","setSize","computedStyle","getComputedStyle","offsetWidth","offsetHeight","getClientRects","oldSize","setViewportSize","ObjectEvent","oldValue","values_","hasOwnProperty","getKeys","keys","getProperties","assign","hasProperties","notify","listener","removeChangeListener","silent","applyProperties","unset","PROPERTYCHANGE","Observable","revision_","getRevision","onInternal","onceInternal","ol_key","unInternal","unByKey","interimTile","transition_","transition","transitionStarts_","interpolate","release","setState","getKey","getInterimTile","refreshInterimChain","getTileCoord","getAlpha","start","inTransition","endTransition","DROP","PriorityQueue","priorityFunction","keyFunction","priorityFunction_","keyFunction_","elements_","priorities_","queuedElements_","dequeue","elements","priorities","siftUp_","elementKey","enqueue","priority","siftDown_","getLeftChildIndex_","getRightChildIndex_","getParentIndex_","heapify_","isKeyQueued","isQueued","count","startIndex","lIndex","rIndex","smallerChildIndex","parentIndex","tilePriorityFunction","tileChangeCallback","boundHandleTileChange_","handleTileChange","tileChangeCallback_","tilesLoading_","tilesLoadingKeys_","added","EventType","TileState","tileKey","newLoads","TileRange","createOrUpdate","tileRange","containsXY","containsTileRange","getHeight","getWidth","intersects","CENTER","RESOLUTION","ROTATION","createExtent","onlyCenter","smooth","isMoving","centerShift","viewWidth","viewHeight","shiftX","shiftY","ratio","none","getViewportClampedResolution","maxExtent","showFullExtent","xResolution","yResolution","getSmoothClampedResolution","maxResolution","minResolution","createMinMaxResolution","cappedMaxRes","animationCallback","returnValue","isNoopAnimation","animation","sourceCenter","targetCenter","sourceResolution","targetResolution","sourceRotation","targetRotation","calculateCenterOn","cosAngle","sinAngle","rotX","rotY","hints_","animations_","updateAnimationKey_","projection_","viewportSize_","targetCenter_","targetResolution_","targetRotation_","nextCenter_","nextResolution_","nextRotation_","cancelAnchor_","applyOptions_","properties","ViewProperty","resolutionConstraintInfo","resolutionConstraint","minZoom","maxZoom","zoomFactor","multiWorld","smoothResolutionConstraint","projExtent","constrainOnlyCenter","isGlobal","resolutions","capped","z","createSnapToResolutions","defaultMaxResolution","getMetersPerUnit","defaultMinResolution","defaultMaxZoom","power","minZoomLevel","cappedZoomLevel","zoomLevel","createSnapToPower","constraint","createResolutionConstraint","maxResolution_","minResolution_","zoomFactor_","resolutions_","padding_","padding","minZoom_","centerConstraint","smoothExtentConstraint","createCenterConstraint","rotationConstraint","enableRotation","constrainRotation","createRotationConstraint","constraints_","setCenterInternal","setResolution","oldPadding","getCenter","newPadding","offsetX","offsetY","getUpdatedOptions_","newOptions","args","animationCount","series","complete","setHint","updateAnimations_","getInteracting","more","seriesComplete","elapsed","fraction","progress","x0","y0","x1","y1","getViewportSize_","constrainedResolution","calculateCenterZoom","applyTargetState_","constrainedRotation","calculateCenterRotate","filter","currentResolution","calculateExtent","calculateExtentInternal","getViewportSizeMinusPadding_","getMaxResolution","getMinResolution","getMaxZoom","getZoomForResolution","setMaxZoom","getMinZoom","setMinZoom","setConstrainResolution","enabled","getResolutions","getResolutionForExtent","getResolutionForValueFunction","getConstrainedResolution","getValueForResolutionFunction","logPower","reducedSize","nearest","baseLevel","fit","geometryOrExtent","getType","userProjection","coords","getFlatCoordinates","stride","getStride","minRotX","minRotY","maxRotX","maxRotY","centerRot","centerX","centerY","centerOn","centerOnInternal","calculateCenterShift","shiftedCenter","adjustCenter","deltaCoordinates","setCenter","adjustResolution","adjustRotation","newRotation","hint","doNotCancelAnims","forceMoving","newCenter","resolutionDirection","endInteractionInternal","targetZoom","targetRes","ANIMATING","INTERACTING","binarySearch","haystack","needle","comparator","mid","cmp","ascending","found","linearFindNearest","reverseSubArray","tmp","extension","arr1","arr2","len1","isSorted","func","strict","compare","every","currentVal","res","assertion","errorCode","HEX_COLOR_RE_","NAMED_COLOR_RE_","asString","color","cache","cacheSize","fromString","g","exec","el","body","rgb","fromNamed","hasAlpha","normalize","Number","fromStringInternal_","asArray","asColorLike","levels","level","warn","console","coordinate1","coordinate2","wrapX","worldsAway","sourceExtentWidth","getWorldsAway","CLASS_HIDDEN","CLASS_UNSELECTABLE","CLASS_CONTROL","CLASS_COLLAPSED","fontRegEx","RegExp","fontRegExMatchIndex","getFontParameters","fontSpec","match","variant","families","family","createCanvasContext2D","canvasPool","settings","shift","OffscreenCanvas","getContext","releaseCanvas","context","clearRect","replaceNode","newNode","oldNode","parent","replaceChild","removeNode","node","removeChildren","lastChild","replaceChildren","oldChildren","childNodes","oldChild","newChild","easeIn","easeOut","inAndOut","linear","listen","originalListener","eventsKey","listenOnce","unlistenByKey","BaseEvent","CHANGE","BLUR","CLEAR","CONTEXTMENU","DRAGENTER","DRAGOVER","FOCUS","KEYDOWN","KEYPRESS","LOAD","RESIZE","TOUCHMOVE","WHEEL","eventTarget_","pendingRemovals_","dispatching_","listeners_","listeners","listenersForType","includes","isString","evt","propagate","dispatching","pendingRemovals","pr","getListeners","boundingExtent","extendCoordinate","closestSquaredDistanceXY","containsCoordinate","containsExtent","extent1","extent2","coordinateRelationship","relationship","createEmpty","createOrUpdateEmpty","createOrUpdateFromCoordinate","createOrUpdateFromFlatCoordinates","flatCoordinates","extendFlatCoordinates","extendXY","forEachCorner","getBottomLeft","getBottomRight","getTopRight","getTopLeft","getArea","area","getCorner","corner","getForViewAndSize","getRotatedViewport","y2","x3","y3","cosRotation","sinRotation","xCos","xSin","yCos","ySin","getIntersection","intersection","returnOrUpdate","intersectsSegment","startRel","endRel","startX","startY","endX","endY","slope","applyTransform","transformFn","stops","xs","ys","_boundingExtentXYs","wrapAndSliceX","isFinite","UNKNOWN","INTERSECTING","ABOVE","RIGHT","BELOW","LEFT","loadFeaturesXhr","url","format","success","failure","xhr","XMLHttpRequest","open","responseType","withCredentials","onload","status","responseText","responseXML","DOMParser","parseFromString","readFeatures","featureProjection","readProjection","onerror","send","dataProjection","addFeatures","FeatureFormat","defaultFeatureProjection","supportedMediaTypes","getReadOptions","getUnits","setWorldExtent","adaptOptions","readFeature","readGeometry","writeFeature","writeFeatures","writeGeometry","transformGeometryWithOptions","transformed","decimals","Feature","geometryOrProperties","id_","geometryName_","style_","styleFunction_","geometryChangeKey_","handleGeometryChanged_","setGeometry","setGeometryName","getGeometryName","getStyle","setStyle","getStyleFunction","handleGeometryChange_","styles","createStyleFunction","setId","GeometryCollection","geometries","geometries_","changeEventsKeys_","listenGeometriesChange_","unlistenGeometriesChange_","geometryCollection","setGeometries","closestPointXY","closestPoint","minSquaredDistance","computeExtent","getGeometries","cloneGeometries","getGeometriesArray","getGeometriesArrayRecursive","geometriesArray","concat","getSimplifiedGeometry","squaredTolerance","simplifiedGeometryRevision","simplifiedGeometryMaxMinSquaredTolerance","simplifiedGeometries","simplified","simplifiedGeometry","simplifiedGeometryCollection","setGeometriesArray","intersectsExtent","sx","sy","translate","Geometry","clonedGeometries","getObject","JSON","parse","readFeatureFromObject","readFeaturesFromObject","object","readGeometryFromObject","readProjectionFromObject","stringify","writeFeatureObject","writeFeaturesObject","writeGeometryObject","readPointGeometry","LineString","readLineStringGeometry","readPolygonGeometry","MultiPoint","readMultiPointGeometry","MultiLineString","readMultiLineStringGeometry","MultiPolygon","readMultiPolygonGeometry","readGeometryCollectionGeometry","geoJSON","getCoordinates","writePointGeometry","writeLineStringGeometry","right","rightHanded","writePolygonGeometry","writeMultiPointGeometry","writeMultiLineStringGeometry","writeMultiPolygonGeometry","writeGeometryCollectionGeometry","geometryName","extractGeometryName_","extractGeometryName","geoJSONFeature","geoJSONFeatures","crs","objects","TRUE","FALSE","VOID","memoizeOne","lastResult","lastArgs","lastThis","called","nextArgs","tmpTransform","extent_","extentRevision_","simplifyTransformedInternal","revision","simplifyTransformed","coord","getClosestPoint","point","intersectsCoordinate","simplify","tolerance","destination","sourceProj","inCoordinates","outCoordinates","pixelExtent","projectedExtent","getWorldExtent","layout","flatMidpoint_","flatMidpointRevision_","maxDeltaRevision_","setFlatCoordinates","appendCoordinate","lineString","forEachSegment","getCoordinateAtM","extrapolate","getCoordinateAt","getFlatMidpoint","getSimplifiedGeometryInternal","simplifiedFlatCoordinates","setLayout","ends","ends_","getLayout","lineStrings","appendLineString","multiLineString","getEnds","getLineString","getLineStrings","getFlatMidpoints","midpoints","midpoint","simplifiedEnds","appendPoint","multiPoint","squaredDistance","getPoint","getPoints","points","endss","endss_","flatInteriorPointsRevision_","flatInteriorPoints_","orientedRevision_","orientedFlatCoordinates_","thisLayout","polygons","thisEndss","polygon","appendPolygon","newEndss","multiPolygon","getOrientedFlatCoordinates","getEndss","getFlatInteriorPoints","flatCenters","getInteriorPoints","simplifiedEndss","getPolygon","prevEnds","getPolygons","lastEnds","LinearRing","inflate","deflate","SimpleGeometry","flatInteriorPointRevision_","flatInteriorPoint_","appendLinearRing","linearRing","orient","getFlatInteriorPoint","flatCenter","getInteriorPoint","getLinearRingCount","getLinearRing","getLinearRings","linearRings","fromExtent","getStrideForLayout","transformGeom2D","simpleGeometry","getFirstCoordinate","getLastCoordinate","nesting","getLayoutForStride","twiceArea","linearRingss","assignClosest","offset1","offset2","maxSquaredDelta","squaredDelta","arrayMaxSquaredDelta","multiArrayMaxSquaredDelta","assignClosestPoint","isRing","tmpPoint","assignClosestArrayPoint","assignClosestMultiArrayPoint","linearRingContainsExtent","linearRingContainsXY","wn","linearRingsContainsXY","linearRingssContainsXY","deflateCoordinate","deflateCoordinates","deflateCoordinatesArray","coordinatess","deflateMultiCoordinatesArray","coordinatesss","inflateCoordinates","inflateCoordinatesArray","inflateMultiCoordinatesArray","getInteriorPointOfArray","flatCentersOffset","intersections","rr","pointX","maxSegmentLength","segmentLength","getInteriorPointsOfMultiArray","interiorPoints","interpolatePoint","dimension","cumulativeLengths","lineStringCoordinateAtM","lo","hi","m0","lineStringsCoordinateAtM","intersectsLineString","coordinatesExtent","point1","point2","intersectsLineStringArray","intersectsLinearRing","intersectsLinearRingArray","intersectsLinearRingMultiArray","lineStringLength","linearRingIsClockwise","edge","linearRingsAreOriented","isClockwise","linearRingssAreOriented","orientLinearRings","orientLinearRingsArray","inflateEnds","prevEndIndex","ret","douglasPeucker","simplifiedOffset","markers","stack","last","first","maxSquaredDistance","douglasPeuckerArray","snap","quantize","dx1","dy1","dx2","dy2","quantizeArray","quantizeMultiArray","transform2D","anchorX","anchorY","ua","navigator","userAgent","FIREFOX","WEBKIT","MAC","DEVICE_PIXEL_RATIO","devicePixelRatio","WORKER_OFFSCREEN_CANVAS","WorkerGlobalScope","self","IMAGE_DECODE","PASSIVE_EVENT_LISTENERS","background_","background","opacity","className_","state_","getBackground","getClassName","getLayerState","getZIndex","getOpacity","getVisible","getLayersArray","states","setBackground","setExtent","setMaxResolution","setMinResolution","setOpacity","setVisible","setZIndex","zindex","toStyle","flatStyle","Style","fill","getFill","stroke","getStroke","text","getText","prefix","Fill","Stroke","lineCap","lineJoin","lineDash","lineDashOffset","miterLimit","Text","font","maxAngle","placement","repeat","rotateWithView","textAlign","justify","textBaseline","backgroundFill","backgroundStroke","iconSrc","iconImg","Icon","imgSize","anchorOrigin","anchorXUnits","anchorYUnits","displacement","declutterMode","shapePoints","RegularShape","radius","radius1","radius2","circleRadius","Circle","BaseVectorLayer","baseOptions","renderBuffer","updateWhileAnimating","updateWhileInteracting","declutter_","declutter","renderBuffer_","updateWhileAnimating_","updateWhileInteracting_","getDeclutter","getFeatures","getRenderBuffer","getRenderOrder","getUpdateWhileAnimating","getUpdateWhileInteracting","setRenderOrder","renderOrder","styleLike","GroupEvent","layersListenerKeys_","listenerKeys_","handleLayersChanged_","handleLayerChange_","handleLayersAdd_","handleLayersRemove_","layersArray","registerLayerListeners_","LayerGroup","handleLayerGroupAdd_","handleLayerGroupRemove_","collectionEvent","currentLayers","ownLayerState","defaultZIndex","inView","mapPrecomposeKey_","mapRenderKey_","sourceChangeKey_","sourceReady_","rendered","handleSourcePropertyChange_","setSource","getRenderSource","handleSourceChange_","Promise","resolve","getData","prepareFrame","getMapInternal","arrayLayerState","createRenderer","OPACITY","VISIBLE","EXTENT","Z_INDEX","MAX_RESOLUTION","MIN_RESOLUTION","MAX_ZOOM","MIN_ZOOM","SOURCE","MAP","PRELOAD","USE_INTERIM_TILES_ON_ERROR","CanvasVectorLayerRenderer","vectorLayer","boundHandleStyleImageChange_","handleStyleImageChange_","animatingOrInteracting_","hitDetectionImageData_","renderedFeatures_","renderedRevision_","renderedResolution_","renderedExtent_","wrappedRenderedExtent_","renderedRotation_","renderedCenter_","renderedProjection_","renderedRenderOrder_","replayGroup_","replayGroupChanged","declutterExecutorGroup","clipping","compositionContext_","opacity_","renderWorlds","executorGroup","vectorSource","getLayer","snapToPixel","endWorld","world","getRenderTransform","execute","setupCompositionContext_","compositionContext","releaseCompositionContext_","globalAlpha","drawImage","pixelTransform","inversePixelTransform","canvasTransform","useContainer","replayGroup","containerReused","preRender","clipped","layerExtent","clipUnrotated","restore","postRender","transforms","featureCallback","lastIndexOf","executorGroups","renderIfReadyAndVisible","animating","interacting","frameStateExtent","vectorLayerRevision","vectorLayerRenderBuffer","vectorLayerRenderOrder","renderedExtent","loadExtents","gutter","loadExtent","declutterBuilderGroup","userTransform","userExtent","loadFeatures","styleFunction","dirty","renderFeature","getFeaturesInExtent","replayGroupInstructions","ExecutorGroup","getOverlaps","builderGroup","BaseVector","IMAGE_REPLAYS","VECTOR_REPLAYS","CanvasVectorTileLayerRenderer","renderedLayerRevision_","renderedPixelToCoordinateTransform_","tmpTransform_","prepareTile","updateExecutorGroup_","tileImageNeedsRender_","getTile","hifi","wantedResolution","getRenderMode","renderTileImage_","isDrawableTile","hasContext","getTileImage","layerRevision","renderedTiles","builderState","getReplayState","renderedResolution","renderedRevision","renderedRenderOrder","sourceTileGrid","getTileGrid","tileExtent","getTileGridForProjection","getTileCoordExtent","wrappedTileCoord","sourceTiles","getSourceTiles","layerUid","hitDetectionImageData","declutterExecutorGroups","sourceTile","sourceTileCoord","sourceTileExtent","sharedExtent","builderExtent","tmpExtent","bufferedExtent","executorGroupInstructions","replayExtent","renderingReplayGroup","tt","tileGrid","hitExtent","declutteredFeatures","reject","renderedProjection","getTileCoordForCoordAndResolution","loadingSourceTiles","tilePixel","reduce","accumulator","tileSize","getTileSize","getZForResolution","zDirection","getTileCoordCenter","tiles","getTileRenderTransform","worldOffset","renderMode","replayTypes","tileSource","clips","clipZs","hasExecutors","currentZ","contextSaved","currentClip","getClipCoords","clip","save","beginPath","moveTo","lineTo","replayState","renderedTileResolution","renderedTileRevision","renderPixelRatio","getTilePixelSize","renderScale","setTransform","pixelScale","preload","useInterimTilesOnError","renderMode_","setPreload","setUseInterimTilesOnError","getPreload","TileProperty","getUseInterimTilesOnError","bbox","clamp","squaredSegmentDistance","solveLinearSystem","mat","maxRow","maxEl","absValue","coef","toRadians","angleInDegrees","modulo","lerp","toFixed","property","RADIUS","HALF_SIZE","WORLD_EXTENT","MAX_SAFE_Y","tan","EPSG3857Projection","units","global","worldExtent","getPointResolution","cosh","Projection","PROJECTIONS","EPSG4326Projection","axisOrientation","metersPerUnit","sourceCode","getCode","destinationCode","c1","c2","lat1","lat2","deltaLatBy2","deltaLonBy2","showCoordinateWarning","disableCoordinateWarning","disable","cloneTransform","input","output","identityTransform","addProjection","projectionLike","pointResolution","getter","getPointResolutionFunc","projUnits","toEPSG4326","getTransformFromProjections","vertices","addEquivalentProjections","projections","addProjections","createProjection","defaultCode","fromLonLat","equivalent","projection1","projection2","equalUnits","sourceProjection","destinationProjection","transformFunc","getTransform","projections2","forwardTransform","inverseTransform","getUserProjection","toUserCoordinate","fromUserCoordinate","destProjection","toUserExtent","fromUserExtent","toUserResolution","atan","code_","units_","worldExtent_","axisOrientation_","global_","canWrapX_","getPointResolutionFunc_","defaultTileGrid_","metersPerUnit_","getAxisOrientation","setGlobal","getDefaultTileGrid","setDefaultTileGrid","setGetPointResolution","METERS_PER_UNIT","PRERENDER","POSTRENDER","PRECOMPOSE","POSTCOMPOSE","RENDERCOMPLETE","VectorContext","drawCustom","hitDetectionRenderer","drawGeometry","drawCircle","circleGeometry","drawFeature","drawGeometryCollection","geometryCollectionGeometry","drawLineString","lineStringGeometry","drawMultiLineString","multiLineStringGeometry","drawMultiPoint","multiPointGeometry","drawMultiPolygon","multiPolygonGeometry","drawPoint","pointGeometry","drawPolygon","polygonGeometry","drawText","setFillStrokeStyle","strokeStyle","setImageStyle","imageStyle","declutterImageWithText","setTextStyle","textStyle","measureFont","measureElement","defaultFont","defaultFillStyle","defaultLineCap","defaultLineDash","defaultLineDashOffset","defaultLineJoin","defaultMiterLimit","defaultStrokeStyle","defaultTextAlign","defaultTextBaseline","defaultPadding","defaultLineWidth","checkedFonts","measureContext","textHeights","registerFont","interval","referenceWidth","referenceFonts","isAvailable","fontStyle","fontWeight","available","referenceFont","measureTextWidth","check","done","clearInterval","setInterval","measureTextHeight","metrics","measureText","actualBoundingBoxAscent","actualBoundingBoxDescent","minHeight","maxHeight","border","measureAndCacheTextWidth","curr","getTextDimensions","baseStyle","chunks","widths","heights","lineWidths","lineWidth","currentWidth","currentHeight","drawImageOrLabel","labelOrImage","originX","originY","contextInstructions","executeLabelInstructions","maxLineWidth","beginGeometryInstruction1_","beginGeometryInstruction2_","bufferedMaxExtent_","instructions","tmpCoordinate_","hitDetectionInstructions","applyPixelRatio","dashArray","dash","appendFlatPointCoordinates","getBufferedMaxExtent","myEnd","appendFlatLineCoordinates","closed","skipFirst","lastRel","nextRel","lastXCoord","lastYCoord","nextCoord","skipped","drawCustomCoordinates_","builderEnds","builderEnd","beginGeometry","builderEndss","builderBegin","myEnds","endGeometry","reverseHitDetectionInstructions","reverse","instruction","fillStyleColor","getColor","strokeStyleColor","strokeStyleLineCap","getLineCap","strokeStyleLineDash","getLineDash","strokeStyleLineDashOffset","getLineDashOffset","strokeStyleLineJoin","getLineJoin","strokeStyleWidth","strokeStyleMiterLimit","getMiterLimit","createFill","fillInstruction","applyStroke","createStroke","updateFillStyle","currentFillStyle","updateStrokeStyle","currentStrokeStyle","currentLineCap","currentLineDash","currentLineDashOffset","currentLineJoin","currentLineWidth","currentMiterLimit","endGeometryInstruction","hitDetectionImage_","imagePixelRatio_","anchorX_","anchorY_","height_","originX_","originY_","rotateWithView_","scale_","width_","declutterMode_","declutterImageWithText_","myBegin","sharedData","getAnchor","origin","getOrigin","getHitDetectionImage","getRotateWithView","getScaleArray","getDeclutterMode","drawFlatCoordinates_","moveToLineToInstruction","lastStroke","drawFlatCoordinatess_","numEnds","setFillStrokeStyles_","circleInstruction","BATCH_CONSTRUCTORS","PolygonBuilder","Builder","ImageBuilder","LineStringBuilder","TextBuilder","BuilderGroup","tolerance_","maxExtent_","resolution_","buildersByZIndex_","builderInstructions","zKey","builders","builderKey","builderInstruction","getBuilder","builderType","zIndexKey","replays","replay","Constructor","drawTextOnPath","startM","segmentM","advance","beginX","beginY","startOffset","startLength","endM","flat","previousAngle","singleSegment","iStart","charLength","chars","substring","p1","p2","p3","p4","getDeclutterBox","replayImageOrLabelArgs","declutterBox","rtlRegEx","horizontalTextAlign","align","createTextChunks","acc","line","Executor","overlaps","alignFill_","coordinateCache_","renderedTransform_","pixelCoordinates_","viewRotation_","fillStates","strokeStates","textStates","widths_","labels_","createLabel","textKey","fillKey","strokeKey","strokeState","fillState","textState","textIsArray","strokeWidth","renderWidth","previousFont","leftRight","strokeInstructions","fillInstructions","lineOffset","widthHeightIndex","lineWidthIndex","fillStrokeArgs","replayTextBackground_","strokeInstruction","fill_","setStrokeStyle_","calculateImageOrLabelDimensions_","sheetWidth","sheetHeight","fillStroke","boxW","boxH","boxX","boxY","drawImageX","drawImageY","drawImageW","drawImageH","replayImageOrLabel_","contextScale","imageOrLabel","dimensions","box","strokePadding","repeatSize","setLineDash","drawLabelWithPointPlacement_","baseline","execute_","pixelCoordinates","dd","prevX","prevY","roundX","roundY","currentGeometry","pendingFill","pendingStroke","lastFillInstruction","lastStrokeInstruction","coordinateCache","viewRotation","viewRotationFromTransform","batchSize","arc","closePath","labelWithAnchor","textOffsetX","textOffsetY","geometryWidths","widthIndex","imageArgs","imageDeclutterBox","measurePixelRatio","pixelRatioScale","textScale","cachedWidths","pathLength","textLength","drawChars","cc","part","executeHitDetection","ORDER","allInstructions","overlaps_","executorsByZIndex_","hitDetectionContext_","hitDetectionTransform_","createExecutors_","flatClipCoords","executors","instructionByZindex","candidates","contextSize","newContext","willReadFrequently","indexes","circlePixelIndexArrayCache","maxDistanceSq","distances","pixelIndex","getPixelIndexArray","imageData","getImageData","idx","executor","zs","builderTypes","Instruction","BEGIN_GEOMETRY","BEGIN_PATH","CIRCLE","CLOSE_PATH","CUSTOM","DRAW_CHARS","DRAW_IMAGE","END_GEOMETRY","FILL","MOVE_TO_LINE_TO","SET_FILL_STYLE","SET_STROKE_STYLE","STROKE","beginPathInstruction","closePathInstruction","lineChunk","chunkLength","cursor","chunkM","currentChunk","missing","matchingChunk","m12","m23","x12","y12","x23","y23","chunkStart","chunkEnd","acos","TEXT_ALIGN","text_","textOffsetX_","textOffsetY_","textRotateWithView_","textRotation_","textFillState_","textStrokeState_","textState_","textKey_","fillKey_","strokeKey_","geometryType","beg","keep","saveTextStates_","p0","flatOffset","oo","chunk","chunkBegin","range","drawChars_","textFillStyle","textStrokeStyle","getFont","getOverflow","getMaxAngle","getPlacement","getTextAlign","getRepeat","getJustify","getTextBaseline","getBackgroundFill","getBackgroundStroke","getPadding","getOffsetX","getOffsetY","textRotateWithView","textRotation","CanvasImmediateRenderer","context_","transform_","transformRotation_","squaredTolerance_","userTransform_","contextFillState_","contextStrokeState_","contextTextState_","fillState_","strokeState_","imageAnchorX_","imageAnchorY_","imageHeight_","imageOpacity_","imageOriginX_","imageOriginY_","imageRotateWithView_","imageRotation_","imageScale_","imageWidth_","textScale_","tmpLocalTransform_","drawImages_","localTransform","drawText_","setContextFillState_","setContextStrokeState_","setContextTextState_","strokeText","fillText","moveToLineTo_","close","drawRings_","getGeometryFunction","flatMidpoint","geometryExtent","flatMidpoints","flatInteriorPoint","flatInteriorPoints","contextFillState","contextStrokeState","contextTextState","imageSize","imagePixelRatio","imageAnchor","imageOrigin","imageScale","textFillStyleColor","textStrokeStyleColor","textStrokeStyleLineCap","textStrokeStyleLineDash","textStrokeStyleLineDashOffset","textStrokeStyleLineJoin","textStrokeStyleWidth","textStrokeStyleMiterLimit","textFont","textText","textTextAlign","textTextBaseline","HIT_DETECT_RESOLUTION","createHitDetectionImageData","imageSmoothingEnabled","featureCount","indexFactor","featuresByZIndex","featureStyleFunction","padStart","originalStyle","setColor","setText","getImageSize","imgContext","getScale","byGeometryType","zIndexKeys","geomAndStyle","kk","hitDetect","resultFeatures","LayerRenderer","boundHandleImageChange_","handleImageChange_","layer_","loadedTileCallback","createLoadedTileFinder","forEachLoadedTile","ImageState","loadImage","imageState","pixelContext","CanvasLayerRenderer","tempTransform","pixelContext_","col","row","backgroundColor","layerClassName","firstElementChild","HTMLCanvasElement","transformOrigin","topLeft","topRight","bottomRight","bottomLeft","inverted","dispatchRenderEvent_","tileLayer","extentChanged","renderedPixelRatio","newTiles_","tmpTileRange_","tileState","tilePixelRatio","getTilePixelRatio","getTileCoordForCoordAndZ","tileOrigin","getGutterForProjection","viewResolution","viewCenter","sourceRevision","canvasExtent","getTileRangeForExtentAndZ","tilesToDrawByZ","findLoadedTiles","tmpTileRange","viewport","tileCoordIntersectsViewport","uid","childTileRange","getTileCoordChildTileRange","covered","forEachTileCoordParentTileRange","canvasScale","getInterpolate","getOpaque","currentTilePixelSize","currentScale","originTileCoord","originTileExtent","tileGutter","tilesToDraw","tileCoordKey","xIndex","nextX","yIndex","nextY","drawTileImage","unshift","updateUsedTiles","manageTilePyramid","scheduleExpireCache","alphaChanged","canExpireCache","postRenderFunction","expireCache","tileCallback","tileCount","useTile","updateCacheSize","GEOMETRY_RENDERERS","getImageState","imageBuilderGroup","imageReplay","textBuilderGroup","textReplay","lineStringReplay","polygonReplay","geometryRenderer","circleReplay","defaultOrder","feature1","feature2","getSquaredTolerance","getTolerance","unlistenImageChange","listenImageChange","renderGeometry","renderFeatureInternal","getHitDetectionRenderer","brokenDiagonalRendering_","drawTestTriangle","u1","v1","u2","v2","verifyBrokenDiagonalRendering","calculateSourceResolution","targetProj","targetMetersPerUnit","sourceMetersPerUnit","sourceExtent","compensationFactor","calculateSourceExtentResolution","targetExtent","triangulation","sources","renderEdges","pixelRound","globalCompositeOperation","sourceDataExtent","canvasWidthInUnits","canvasHeightInUnits","stitchContext","stitchScale","xPos","yPos","srcWidth","srcHeight","targetTopLeft","getTriangles","triangle","u0","v0","sourceNumericalShiftX","sourceNumericalShiftY","augmentedMatrix","affineCoefs","isBrokenDiagonalRendering","ud","vd","step","steps","targetTileGrid","getTileFunction","errorThreshold","renderEdges_","gutter_","canvas_","sourceTileGrid_","targetTileGrid_","wrappedTileCoord_","sourceTiles_","sourcesListenerKeys_","sourceZ_","maxTargetExtent","maxSourceExtent","limitedTargetExtent","sourceProjExtent","errorThresholdInPixels","triangulation_","calculateSourceExtent","sourceRange","srcX","srcY","reproject_","leftToLoad","sourceListenKey","unlistenSources_","Triangulation","destinationResolution","sourceProj_","targetProj_","transformInvCache","transformInv","transformInv_","maxSourceExtent_","errorThresholdSquared_","triangles_","wrapsXInSource_","canWrapXInSource_","sourceWorldWidth_","targetWorldWidth_","destinationTopLeft","destinationTopRight","destinationBottomRight","destinationBottomLeft","sourceTopLeft","sourceTopRight","sourceBottomRight","sourceBottomLeft","maxSubdivision","log2","addQuad_","leftBound","newTriangle","addTriangle_","aSrc","bSrc","cSrc","dSrc","sourceQuadExtent","sourceCoverageX","sourceWorldWidth","wrapsX","needsSubdivision","targetQuadExtent","isNotFinite","centerSrc","bc","bcSrc","da","daSrc","ab","abSrc","cd","cdSrc","ERROR_THRESHOLD","createSnapToN","createSnapToZero","hasArea","toSize","adaptAttributions","attributionLike","attributions_","attributionsCollapsible_","attributionsCollapsible","wrapX_","interpolate_","viewResolver","viewRejector","viewPromise_","refresh","setAttributions","RBush","maxEntries","rbush_","items_","extents","items","getAll","getInExtent","forEach_","forEachInExtent","rbush","VectorSourceEvent","Event","VectorSource","loader_","format_","url_","loader","strategy_","strategy","useSpatialIndex","featuresRtree_","loadedExtentsRtree_","loadingExtentsCount_","nullGeometryFeatures_","idIndex_","uidIndex_","featureChangeKeys_","featuresCollection_","addFeaturesInternal","bindFeaturesCollection_","addFeature","addFeatureInternal","featureKey","addToIndex_","setupChangeEvents_","VectorEventType","handleFeatureChange_","valid","newFeatures","geometryFeatures","modifyingCollection","removeFeature","fast","featureId","removeFeatureInternal","clearEvent","forEachFeature","forEachFeatureAtCoordinateDirect","forEachFeatureInExtent","forEachFeatureIntersectingExtent","getFeaturesCollection","getFeaturesAtCoordinate","anExtent","getClosestFeatureToCoordinate","closestFeature","previousMinSquaredDistance","minDistance","getFeatureById","getFeatureByUid","getFormat","getUrl","sid","removeFromIdIndex_","hasFeature","loadedExtentsRtree","extentsToLoad","extentToLoad","removeLoadedExtent","featureChangeKeys","removed","setLoader","setUrl","Source","CircleStyle","getRadius","getDisplacement","setRadius","radius_","color_","taintedTestContext","IconImage","imageState_","size_","tainted_","initializeImage_","isTainted_","dispatchChangeEvent_","replaceColor_","getSrc","normalizedAnchor_","anchorOrigin_","anchorXUnits_","anchorYUnits_","imgSize_","iconImage_","iconImage","offset_","offsetOrigin_","offsetOrigin","origin_","updateScaleFromWidthAndHeight","setScale","setAnchor","iconImageSize","setWidth","setHeight","widthScale","heightScale","IconImageCache","cache_","cacheSize_","maxCacheSize_","expire","maxCacheSize","shared","ImageStyle","scaleArray_","displacement_","setDisplacement","setRotateWithView","hitDetectionCanvas_","radius2_","stroke_","renderOptions_","getRadius2","setFill","createHitDetectionCanvas_","renderOptions","draw_","setStroke","calculateLineJoinSize_","r1","r2","miterRatio","bevelAdd","aa","innerMiterRatio","innerLength","createRenderOptions","maxRadius","createPath_","drawHitDetectionCanvas_","startAngle","angle0","radiusC","lineCap_","lineDash_","lineDashOffset_","lineJoin_","miterLimit_","setLineCap","setLineDashOffset","setLineJoin","setMiterLimit","geometryFunction_","defaultGeometryFunction","hitDetectionRenderer_","zIndex_","toFunction","setRenderer","setHitDetectionRenderer","defaultStyles","createDefaultStyle","font_","textAlign_","justify_","repeat_","textBaseline_","maxAngle_","placement_","overflow_","offsetX_","offsetY_","backgroundFill_","backgroundStroke_","setOverflow","setFont","setMaxAngle","setOffsetX","setOffsetY","setPlacement","setRepeat","setTextAlign","setJustify","setTextBaseline","setBackgroundFill","setBackgroundStroke","setPadding","DEFAULT_MAX_ZOOM","DEFAULT_TILE_SIZE","transformStringDiv","tmp_","create","reset","multiply","transform1","transform2","a1","d1","e1","f1","a2","e2","f2","setFromArray","makeScale","compose","makeInverse","det","transformString","abstract","uidCounter_","getUid","ol_uid","RenderFeature","type_","flatCoordinates_","flatMidpoints_","properties_","rgba","toArray","toArray01","toArray01PremultipliedAlpha","white","transparent","red","blue","convertLiteral","getInterpolateOperator","parameters","colorSpace","getFallback","propertySpec","defaultValue","default","convertPropertyFunction","getFunctionType","expression","stop","appendStopPair","fixupDegenerateStepCurve","base","curve","isStep","interpolated","convertTokenString","re","literal","inputs","Scope","bindings","has","NullType","kind","NumberType","StringType","BooleanType","ColorType","ObjectType","ValueType","CollatorType","FormattedType","ResolvedImageType","itemType","N","valueMemberTypes","checkSubtype","expected","isValidType","provided","allowedTypes","isValidNativeType","Collator","caseSensitive","diacriticSensitive","locale","sensitivity","collator","Intl","usage","lhs","rhs","resolvedLocale","resolvedOptions","FormattedSection","fontStack","textColor","Formatted","sections","unformatted","section","factory","serialize","serialized","ResolvedImage","validateRGBA","isValue","mixed","typeOf","Literal","expectedType","evaluate","eachChild","outputDefined","RuntimeError","types","string","number","boolean","Assertion","parsed","arg","FormatExpression","firstArg","nextTokenMayBeObject","lastExpression","content","evaluatedContent","ImageExpression","evaluatedImageName","availableImages","Coercion","parseColor","child","geometryTypes","EvaluationContext","globals","featureState","formattedSection","_parseColorCache","canonical","featureTileCoord","featureDistanceData","canonicalID","distanceFromCenter","dX","dY","bearing","cached","CompoundExpression","_evaluate","definition","definitions","availableOverloads","overloads","signature","signatureContext","registry","path","scope","parsedArgs","argParseFailed","errors","signatures","actualTypes","register","CollatorExpression","updateBBox","boxWithinBox","bbox1","bbox2","getTileCoordinates","lat","tilesAtZoom","rayIntersect","pointWithinPolygon","rings","inside","ring","len2","pointWithinPolygons","twoSided","q1","q2","det1","det2","lineIntersectPolygon","vectorP","vectorQ","lineStringWithinPolygon","lineStringWithinPolygons","getTilePolygon","getTilePolygons","updatePoint","polyBBox","worldSize","halfWorldSize","getTilePoints","pointBBox","shifts","tilePoints","getTileLines","lineBBox","tileLines","tileLine","Within","geojson","tilePolygon","tilePolygons","pointsWithinPolygons","linesWithinPolygons","isStateConstant","isGlobalPropertyConstant","Var","boundExpression","ParsingContext","expr","_parse","annotate","typeAnnotation","Expr","actual","isConstant","ec","isTypeAnnotation","childrenConstant","findStopLessThanOrEqualTo","currentValue","nextValue","lowerIndex","upperIndex","currentIndex","Step","labels","outputs","outputType","labelKey","valueKey","stopCount","from","to","Xn","Zn","deg2rad","rad2deg","xyz2lab","lab2xyz","xyz2rgb","rgb2xyz","rgbToLab","rgbColor","labToRgb","labColor","interpolateHue","lab","forward","hcl","hclColor","Interpolate","operator","interpolation","exponentialInterpolation","lowerValue","upperValue","difference","interpolationFactor","lower","upper","controlPoints","rest","outputLower","outputUpper","Coalesce","needsAnnotation","firstImage","argCount","Let","At","In","IndexOf","fromIndex","Match","inputType","cases","otherwise","labelContext","MAX_SAFE_INTEGER","groupedByOutput","outputLookup","outputIndex","coerceLabel","Case","branches","Slice","beginIndex","endIndex","isComparableType","eqCollate","makeComparison","compareBasic","compareWithCollator","isOrderComparison","hasUntypedArgument","Comparison","lt","Equals","NotEquals","LessThan","GreaterThan","LessThanOrEqual","GreaterThanOrEqual","NumberFormat","currency","minFractionDigits","maxFractionDigits","minimumFractionDigits","maximumFractionDigits","Length","expressions","varargs","pitch","heatmapDensity","lineProgress","skyRadialProgress","accumulated","E","LN10","asin","isSupportedScript","toUpperCase","supportsInterpolation","spec","identityFunction","createFunction","innerFun","hashedStops","categoricalKeyType","isColor","zoomAndFeatureDependent","featureDependent","zoomDependent","evaluateExponentialFunction","evaluateIntervalFunction","evaluateCategoricalFunction","evaluateIdentityFunction","featureFunctions","zoomStops","featureFunctionStops","interpolationType","_","keyType","interp","colorspace","evaluatedLower","evaluatedUpper","StyleExpression","_warningHistory","_evaluator","_defaultValue","_enumValues","createExpression","parser","enum","formatted","resolvedImage","getExpectedType","evaluateWithoutErrorHandling","ZoomConstantExpression","_styleExpression","isStateDependent","ZoomDependentExpression","createPropertyExpression","isFeatureConstant","isZoomConstant","supportsZoomExpression","zoomCurve","findZoomCurve","StylePropertyFunction","specification","_parameters","_specification","childResult","deepUnbundle","unbundledValue","valueOf","unbundle","deserialize","layerType","needGeometry","needFeature","isExpressionFilter","convertFilter","filterExp","staticFilter","isDynamicFilter","unionDynamicBranches","collapseDynamicBooleanExpressions","extractStaticFilter","filterFunc","filterSpec","latest","compiledStaticFilter","globalProperties","dynamicFilterFunc","compiledDynamicFilter","dynamicFilter","geometryNeeded","dynamicConditionExpressions","collapsedExpression","subExpression","isBranchingDynamically","Set","filters","convertComparisonOp","convertNegation","convertInOp","convertHasOp","deref","getKeyZXY","fromKey","createFromTemplate","template","zRegEx","xRegEx","yRegEx","dashYRegEx","getFullTileRange","createFromTemplates","templates","tileUrlFunctions","createFromTileUrlFunctions","expandUrl","urls","startCharCode","stopCharCode","mapboxBaseUrl","getMapboxPath","normalizeStyleUrl","token","mapboxPath","decodeURI","URL","location","href","normalizeSourceUrl","tokenParam","styleUrl","urlObject","searchParams","degrees","defaultResolutions","createCanvas","pendingRequests","fetchResource","resourceType","metadata","request","transformRequest","Request","headers","pendingRequest","fetch","response","ok","json","getGlStyle","glStyleOrUrl","trim","accessToken","glStyle","getTransformedTilesUrl","tilesUrl","transformedRequest","tilejsonCache","getTileJson","glSource","cacheKey","promise","normalizedSourceUrl","accessTokenParam","tileJson","tileUrl","hairSpacePool","applyLetterSpacing","letterSpacing","textWithLetterSpacing","lines","joinSpaceString","ll","getMeasureContext","measureCache","wrapText","em","hardLines","wrappedText","words","maxWidth","word","testLine","prevWidth","nextWidth","next","lineWords","lastWord","loadedFontFamilies","fontFamilyRegEx","stripQuotesRegEx","hasFontFamily","styleSheets","styleSheet","cssRules","rules","cssRule","cssText","processedFontFamilies","getFonts","fontsKey","googleFontDescriptions","cssFont","googleFontDescription","fontUrl","querySelector","markup","rel","head","renderFeatureCoordinates","emptyObj","zoomObj","getValue","layoutOrPaint","functionCache","layerId","functions","isExpr","convertIdentityFunction","tokens","featureFunctionParameters","convertZoomAndPropertyFunction","convertZoomFunction","convertFunction","compiledExpression","rawExpression","expressionData","getIconDeclutterMode","evaluateFilter","filterCache","colorWithOpacity","templateRegEx","fromTemplate","stylefunction","olLayer","sourceOrLayers","spriteData","spriteImageUrl","version","spriteImage","spriteImageSize","worker","postMessage","action","mapboxSource","allLayers","ref","derefLayers","layersBySourceLayer","mapboxLayers","iconImageCache","patternCache","sourceLayer","textHalo","stylesLength","layerData","paint","visibility","minzoom","maxzoom","strokeColor","fillIcon","icon","icon_cache_key","pattern","spriteImageData","createPattern","hasImage","placementAngle","skipLabel","styleGeom","imageElement","iconRotationAlignment","geom","iconSize","iconColor","haloColor","haloWidth","iconCacheKey","iconOptions","imageCanvas","imageContext","shadowBlur","shadowColor","circleStrokeColor","circleColor","circleStrokeWidth","cache_key","textLineHeight","textSize","maxTextWidth","fontArray","textField","chunkFont","textTransform","wrappedLabel","textAnchor","symbolSpacing","textHaloWidth","textOffset","textTranslate","vOffset","hOffset","textRotationAlignment","textJustify","halfTextSize","textPadding","BaseImageLayer","CanvasImageLayerRenderer","imageLayer","imageSource","imageExtent","imageMapWidth","imageMapHeight","imageResolution","dw","dh","previousAlpha","ImageLayer","BaseImage","layersPBFReader","layerPBFReader","featurePBFReader","readRawFeature","featureClass_","featureClass","layerName_","layerName","layers_","idProperty_","idProperty","readRawGeometry_","cmd","coordsLen","currentEnd","cmdLen","createFeature_","rawFeature","getGeometryType","ctor","pbfLayers","pbfLayer","ImageCanvas","error_","getError","handleLoad_","ImageBase","ReprojImage","getImageFunction","sourceImage","sourcePixelRatio","targetExtent_","sourceImage_","sourcePixelRatio_","sourceListenerKey_","unlistenSource_","ImageSourceEvent","ImageSource","reprojectedImage_","reprojectedRevision_","setResolutions","findNearestResolution","getImageInternal","handleImageChange","BaseTileLayer","TileLayer","BaseTile","LRUCache","highWaterMark","count_","entries_","oldest_","newest_","containsKey","entry","value_","key_","newer","older","getValues","peekLast","peekLastKey","peekFirstKey","peek","TileCache","pruneExceptNewestZ","tmpTileCoord","TileGrid","origins","origins_","tileSizes_","tileSizes","tileSize_","fullTileRanges_","tmpSize_","tmpExtent_","sizes","restrictedTileRange","calculateTileRanges_","forEachTileCoord","tempTileRange","tempExtent","tileCoordExtent","getTileRangeForTileCoordAndZ","tileCoordZ","tileCoordX","tileCoordY","getTileRangeExtent","getTileCoordForXYAndZ_","opt_tileCoord","getTileCoordForXYAndResolution_","reverseIntersectionPolicy","getTileCoordResolution","opt_direction","fullTileRanges","getForProjection","resolutionsFromExtent","createForExtent","extentFromProjection","createForProjection","createXYZ","xyzOptions","gridOptions","half","TileSource","opaque_","opaque","tilePixelRatio_","tileCache","tmpSize","tileOptions","getTileCacheForProjection","setKey","getTileCoordForTileUrlFunction","withinExtentAndZ","TileSourceEvent","hasImageData","ImageData","createMinion","operation","workerHasImageData","newWorkerImageData","buffers","meta","imageOps","numBuffers","numBytes","byteLength","images","Uint8ClampedArray","arrays","pixels","createWorker","config","onMessage","lib","Worker","Blob","Buffer","createObjectURL","Processor","threads","_imageOps","workers","_onWorkerMessage","minion","terminated","terminate","createFauxWorker","_workers","_queue","_maxQueueLength","queue","_running","_dataLookup","_job","process","_enqueue","_dispatch","job","slices","_resolveJob","createImageData","newImageData","RasterSourceEvent","RasterSource","processor_","operationType_","operationType","threads_","layerOrSource","Tile","createLayers","useResolutions_","requestedFrameState_","renderedImageCanvas_","iMax","sourceOrLayer","sourceAttribution","setOperation","updateFrameState_","allSourcesReady_","processSources_","imageDatas","onWorkerComplete_","putImageData","sharedContext","UrlTile","generateTileUrlFunction_","tileUrlFunction","setUrls","tileLoadingKeys_","getTileLoadFunction","getTileUrlFunction","getPrototypeOf","getUrls","setTileLoadFunction","setTileUrlFunction","TileImage","defaultTileLoadFunction","tileClass","ImageTile","tileCacheForProjection","tileGridForProjection","reprojectionErrorThreshold_","reprojectionErrorThreshold","renderReprojectionEdges_","usedTileCache","getGutter","thisProj","projKey","createTile_","urlTileCoord","getTileInternal","newTile","setRenderReprojectionEdges","setTileGridForProjection","tilegrid","proj","imageTile","TileJSON","tileJSON_","jsonp","errback","callbackParam","script","cleanup","async","timer","handleTileJSONResponse","handleTileJSONError","client","onXHRLoad_","onXHRError_","tileJSON","getTileJSON","epsg4326Projection","gridExtent","attributionExtent","features_","onLoad","setFeatures","onError","VectorRenderTile","replayState_","errorTileKeys","renderedTileZ","defaultLoadFunction","sourceTileCache","tileGrids_","tileFeatures","candidate","usedSourceTiles","sourceZ","sourceTileState","listenChange","sourceTileKey","coordKey","empty","hillshade","pixelX","pixelY","z0","dzdx","dzdy","aspect","accent","scaled","shade","scaledAccentColor","compositeShadeColor","slopeScaleBase","scaledSlope","cosIncidence","elevationImage","elevationData","shadeData","dp","twoPi","halfPi","sunEl","sunAz","cosSunEl","sinSunEl","highlightColor","accentColor","calculateElevation","vert","getTileResolutions","completeOptions","applyStyle","sourceOrLayersOrOptions","optionsOrPath","sourceId","updateSource","Vector","VectorTile","find","assignSource","setupVectorSource","targetSource","setupGeoJSONSource","onChange","sprite","normalizeSpriteUrl","sizeFactor","spriteUrl","pathname","spritesJson","encodeURI","applyBackground","mapOrLayer","getBackgroundColor","setupBackgroundLayer","setFirstBackground","sourceOptionsFromTileJSON","tileJSONSource","tileJSONDoc","bounds","tr","extentFromTileJSON","sourceOptions","glLayer","bg","getBboxTemplate","setupRasterLayer","getTileUrl","bboxTemplate","geoJsonFormat","GeoJSON","geoJsonUrl","processStyle","mapOrGroup","promises","glSourceId","glLayers","layerIds","finalizeLayer","setupVectorLayer","updateRasterLayerProperties","prerenderRasterLayer","setupGeoJSONLayer","hillshadeLayer","Raster","setupHillshadeLayer","mapOrGroupOrElement","HTMLElement","sourceMinZoom","setFeatureState","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","__webpack_modules__","O","chunkIds","notFulfilled","fulfilled","enumerable","prop","Symbol","toStringTag","installedChunks","chunkId","webpackJsonpCallback","parentChunkLoadingFunction","moreModules","runtime","chunkLoadingGlobal"],"sourceRoot":""}